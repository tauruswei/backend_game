{
	"id": "19bf55f46024edf1d0e83fde9d06e624",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.1",
	"solcLongVersion": "0.8.1+commit.df193b15",
	"input": {
		"language": "Solidity",
		"sources": {
			"SLStaking.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\n\ncontract SLStakingPool is Ownable, ReentrancyGuard {\n  using SafeMath for uint256;\n\n  IERC20 public token;\n\n  uint256 public totalStakeAmount;\n  uint256 public lockupPeriod; //锁定期，初步设为 90 天\n\n  mapping(address => uint256) public stakingTime; // 各个用户质押的时间\n\n  uint256 public minStakeAmount; // 最小质押数量，初步设为400 COSD\n  mapping(address => uint256) public balances;\n\n  event Stake(address indexed user, uint256 amount);\n  event UnStake(address indexed user, uint256 amount);\n\n  constructor(address _tokenAddress, uint256 _minStakeAmount, uint256 _lockupPeriod) {\n    token = IERC20(_tokenAddress);\n    minStakeAmount = _minStakeAmount;\n    lockupPeriod = _lockupPeriod;\n  }\n\n  function stake(uint256 _amount) external nonReentrant {\n    require(balances[msg.sender].add(_amount) >= minStakeAmount, \"Amount should be greater than or equal to minStakeAmount\");\n    require(token.transferFrom(msg.sender, address(this), _amount), \"Token transfer failed\");\n\n    balances[msg.sender] = balances[msg.sender].add(_amount);\n\n    if(stakingTime[msg.sender] == 0){\n      stakingTime[msg.sender] = block.timestamp;\n    }\n\n    emit Stake(msg.sender, _amount);\n  }\n\n  function unStake(uint256 _amount) external nonReentrant {\n    require(block.timestamp >= (stakingTime[msg.sender].add(lockupPeriod)), \"Locked\");\n    require(balances[msg.sender] >= _amount, \"Insufficient balance\");\n    require(token.transfer(msg.sender, _amount), \"Token transfer failed\");\n\n    balances[msg.sender] = balances[msg.sender].sub(_amount);\n\n    emit UnStake(msg.sender, _amount);\n  }\n\n  // 修改最小的质押数量\n  function setMinStakeAmount(uint256 _amount) external onlyOwner {\n    require(_amount >= 0, \"Amount should be greater than zero\");\n    minStakeAmount = _amount;\n  }\n  //获取合约中所有用户的总质押量\n  function totalStaked() external view returns (uint256) {\n      return token.balanceOf(address(this));\n  }\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 123,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205d1bbcbbf69e764909250610d6fe0759ba92f17f2e3cc1e35d6d5af642f0f8f364736f6c63430008010033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205d1bbcbbf69e764909250610d6fe0759ba92f17f2e3cc1e35d6d5af642f0f8f364736f6c63430008010033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5D SHL 0xBC 0xBB 0xF6 SWAP15 PUSH23 0x4909250610D6FE0759BA92F17F2E3CC1E35D6D5AF642F0 0xF8 RETURN PUSH5 0x736F6C6343 STOP ADDMOD ADD STOP CALLER ",
							"sourceMap": "482:6300:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205d1bbcbbf69e764909250610d6fe0759ba92f17f2e3cc1e35d6d5af642f0f8f364736f6c63430008010033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5D SHL 0xBC 0xBB 0xF6 SWAP15 PUSH23 0x4909250610D6FE0759BA92F17F2E3CC1E35D6D5AF642F0 0xF8 RETURN PUSH5 0x736F6C6343 STOP ADDMOD ADD STOP CALLER ",
							"sourceMap": "482:6300:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205d1bbcbbf69e764909250610d6fe0759ba92f17f2e3cc1e35d6d5af642f0f8f364736f6c63430008010033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"SLStaking.sol": {
				"SLStakingPool": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_minStakeAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_lockupPeriod",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Stake",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "UnStake",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lockupPeriod",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "minStakeAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "setMinStakeAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakingTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalStakeAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalStaked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "unStake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"SLStaking.sol\":290:2248  contract SLStakingPool is Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"SLStaking.sol\":818:1013  constructor(address _tokenAddress, uint256 _minStakeAmount, uint256 _lockupPeriod) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_9\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_10)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  dup1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"SLStaking.sol\":922:935  _tokenAddress */\n  dup3\n    /* \"SLStaking.sol\":907:912  token */\n  0x02\n  0x00\n    /* \"SLStaking.sol\":907:936  token = IERC20(_tokenAddress) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"SLStaking.sol\":959:974  _minStakeAmount */\n  dup2\n    /* \"SLStaking.sol\":942:956  minStakeAmount */\n  0x06\n    /* \"SLStaking.sol\":942:974  minStakeAmount = _minStakeAmount */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"SLStaking.sol\":995:1008  _lockupPeriod */\n  dup1\n    /* \"SLStaking.sol\":980:992  lockupPeriod */\n  0x04\n    /* \"SLStaking.sol\":980:1008  lockupPeriod = _lockupPeriod */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"SLStaking.sol\":818:1013  constructor(address _tokenAddress, uint256 _minStakeAmount, uint256 _lockupPeriod) {... */\n  pop\n  pop\n  pop\n    /* \"SLStaking.sol\":290:2248  contract SLStakingPool is Ownable, ReentrancyGuard {... */\n  jump(tag_14)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_10:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:150   */\ntag_18:\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_20\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_21\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":70:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:299   */\ntag_22:\n  0x00\n    /* \"#utility.yul\":244:250   */\n  dup2\n    /* \"#utility.yul\":238:251   */\n  mload\n    /* \"#utility.yul\":229:251   */\n  swap1\n  pop\n    /* \"#utility.yul\":260:293   */\n  tag_24\n    /* \"#utility.yul\":287:292   */\n  dup2\n    /* \"#utility.yul\":260:293   */\n  tag_25\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":219:299   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":305:901   */\ntag_3:\n  0x00\n  dup1\n  0x00\n    /* \"#utility.yul\":458:460   */\n  0x60\n    /* \"#utility.yul\":446:455   */\n  dup5\n    /* \"#utility.yul\":437:444   */\n  dup7\n    /* \"#utility.yul\":433:456   */\n  sub\n    /* \"#utility.yul\":429:461   */\n  slt\n    /* \"#utility.yul\":426:428   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":474:475   */\n  0x00\n    /* \"#utility.yul\":471:472   */\n  dup1\n    /* \"#utility.yul\":464:476   */\n  revert\n    /* \"#utility.yul\":426:428   */\ntag_27:\n    /* \"#utility.yul\":517:518   */\n  0x00\n    /* \"#utility.yul\":542:606   */\n  tag_28\n    /* \"#utility.yul\":598:605   */\n  dup7\n    /* \"#utility.yul\":589:595   */\n  dup3\n    /* \"#utility.yul\":578:587   */\n  dup8\n    /* \"#utility.yul\":574:596   */\n  add\n    /* \"#utility.yul\":542:606   */\n  tag_18\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":532:606   */\n  swap4\n  pop\n    /* \"#utility.yul\":488:616   */\n  pop\n    /* \"#utility.yul\":655:657   */\n  0x20\n    /* \"#utility.yul\":681:745   */\n  tag_29\n    /* \"#utility.yul\":737:744   */\n  dup7\n    /* \"#utility.yul\":728:734   */\n  dup3\n    /* \"#utility.yul\":717:726   */\n  dup8\n    /* \"#utility.yul\":713:735   */\n  add\n    /* \"#utility.yul\":681:745   */\n  tag_22\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":671:745   */\n  swap3\n  pop\n    /* \"#utility.yul\":626:755   */\n  pop\n    /* \"#utility.yul\":794:796   */\n  0x40\n    /* \"#utility.yul\":820:884   */\n  tag_30\n    /* \"#utility.yul\":876:883   */\n  dup7\n    /* \"#utility.yul\":867:873   */\n  dup3\n    /* \"#utility.yul\":856:865   */\n  dup8\n    /* \"#utility.yul\":852:874   */\n  add\n    /* \"#utility.yul\":820:884   */\n  tag_22\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":810:884   */\n  swap2\n  pop\n    /* \"#utility.yul\":765:894   */\n  pop\n    /* \"#utility.yul\":416:901   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":907:1003   */\ntag_31:\n  0x00\n    /* \"#utility.yul\":973:997   */\n  tag_33\n    /* \"#utility.yul\":991:996   */\n  dup3\n    /* \"#utility.yul\":973:997   */\n  tag_34\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":962:997   */\n  swap1\n  pop\n    /* \"#utility.yul\":952:1003   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1009:1135   */\ntag_34:\n  0x00\n    /* \"#utility.yul\":1086:1128   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1079:1084   */\n  dup3\n    /* \"#utility.yul\":1075:1129   */\n  and\n    /* \"#utility.yul\":1064:1129   */\n  swap1\n  pop\n    /* \"#utility.yul\":1054:1135   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1141:1218   */\ntag_36:\n  0x00\n    /* \"#utility.yul\":1207:1212   */\n  dup2\n    /* \"#utility.yul\":1196:1212   */\n  swap1\n  pop\n    /* \"#utility.yul\":1186:1218   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1224:1346   */\ntag_21:\n    /* \"#utility.yul\":1297:1321   */\n  tag_39\n    /* \"#utility.yul\":1315:1320   */\n  dup2\n    /* \"#utility.yul\":1297:1321   */\n  tag_31\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1290:1295   */\n  dup2\n    /* \"#utility.yul\":1287:1322   */\n  eq\n    /* \"#utility.yul\":1277:1279   */\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1336:1337   */\n  0x00\n    /* \"#utility.yul\":1333:1334   */\n  dup1\n    /* \"#utility.yul\":1326:1338   */\n  revert\n    /* \"#utility.yul\":1277:1279   */\ntag_40:\n    /* \"#utility.yul\":1267:1346   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1352:1474   */\ntag_25:\n    /* \"#utility.yul\":1425:1449   */\n  tag_42\n    /* \"#utility.yul\":1443:1448   */\n  dup2\n    /* \"#utility.yul\":1425:1449   */\n  tag_36\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1418:1423   */\n  dup2\n    /* \"#utility.yul\":1415:1450   */\n  eq\n    /* \"#utility.yul\":1405:1407   */\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1464:1465   */\n  0x00\n    /* \"#utility.yul\":1461:1462   */\n  dup1\n    /* \"#utility.yul\":1454:1466   */\n  revert\n    /* \"#utility.yul\":1405:1407   */\ntag_43:\n    /* \"#utility.yul\":1395:1474   */\n  pop\n  jump\t// out\n    /* \"SLStaking.sol\":290:2248  contract SLStakingPool is Ownable, ReentrancyGuard {... */\ntag_14:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"SLStaking.sol\":290:2248  contract SLStakingPool is Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x94409a56\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xee947a7c\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xee947a7c\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf1887684\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x94409a56\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xeb4af045\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0x27e235e3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x583d42fd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x5d3eea91\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x817b1cd2\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"SLStaking.sol\":661:704  mapping(address => uint256) public balances */\n    tag_3:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SLStaking.sol\":501:547  mapping(address => uint256) public stakingTime */\n    tag_4:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_25:\n      tag_26\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SLStaking.sol\":1495:1891  function unStake(uint256 _amount) external nonReentrant {... */\n    tag_5:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_6:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      stop\n        /* \"SLStaking.sol\":2141:2246  function totalStaked() external view returns (uint256) {... */\n    tag_7:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_8:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SLStaking.sol\":400:431  uint256 public totalStakeAmount */\n    tag_9:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SLStaking.sol\":1017:1491  function stake(uint256 _amount) external nonReentrant {... */\n    tag_10:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n    tag_44:\n      stop\n        /* \"SLStaking.sol\":1928:2091  function setMinStakeAmount(uint256 _amount) external onlyOwner {... */\n    tag_11:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_48:\n      tag_49\n      jump\t// in\n    tag_47:\n      stop\n        /* \"SLStaking.sol\":435:462  uint256 public lockupPeriod */\n    tag_12:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SLStaking.sol\":583:612  uint256 public minStakeAmount */\n    tag_13:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_14:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n    tag_56:\n      stop\n        /* \"SLStaking.sol\":376:395  IERC20 public token */\n    tag_15:\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SLStaking.sol\":661:704  mapping(address => uint256) public balances */\n    tag_21:\n      mstore(0x20, 0x07)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"SLStaking.sol\":501:547  mapping(address => uint256) public stakingTime */\n    tag_26:\n      mstore(0x20, 0x05)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"SLStaking.sol\":1495:1891  function unStake(uint256 _amount) external nonReentrant {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_64\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_65\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_64:\n        /* \"SLStaking.sol\":1585:1626  stakingTime[msg.sender].add(lockupPeriod) */\n      tag_67\n        /* \"SLStaking.sol\":1613:1625  lockupPeriod */\n      sload(0x04)\n        /* \"SLStaking.sol\":1585:1596  stakingTime */\n      0x05\n        /* \"SLStaking.sol\":1585:1608  stakingTime[msg.sender] */\n      0x00\n        /* \"SLStaking.sol\":1597:1607  msg.sender */\n      caller\n        /* \"SLStaking.sol\":1585:1608  stakingTime[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"SLStaking.sol\":1585:1612  stakingTime[msg.sender].add */\n      tag_68\n      swap1\n        /* \"SLStaking.sol\":1585:1626  stakingTime[msg.sender].add(lockupPeriod) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_67:\n        /* \"SLStaking.sol\":1565:1580  block.timestamp */\n      timestamp\n        /* \"SLStaking.sol\":1565:1627  block.timestamp >= (stakingTime[msg.sender].add(lockupPeriod)) */\n      lt\n      iszero\n        /* \"SLStaking.sol\":1557:1638  require(block.timestamp >= (stakingTime[msg.sender].add(lockupPeriod)), \"Locked\") */\n      tag_69\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_70\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_69:\n        /* \"SLStaking.sol\":1676:1683  _amount */\n      dup1\n        /* \"SLStaking.sol\":1652:1660  balances */\n      0x07\n        /* \"SLStaking.sol\":1652:1672  balances[msg.sender] */\n      0x00\n        /* \"SLStaking.sol\":1661:1671  msg.sender */\n      caller\n        /* \"SLStaking.sol\":1652:1672  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"SLStaking.sol\":1652:1683  balances[msg.sender] >= _amount */\n      lt\n      iszero\n        /* \"SLStaking.sol\":1644:1708  require(balances[msg.sender] >= _amount, \"Insufficient balance\") */\n      tag_72\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_73\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_72:\n        /* \"SLStaking.sol\":1722:1727  token */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SLStaking.sol\":1722:1736  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"SLStaking.sol\":1737:1747  msg.sender */\n      caller\n        /* \"SLStaking.sol\":1749:1756  _amount */\n      dup4\n        /* \"SLStaking.sol\":1722:1757  token.transfer(msg.sender, _amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_75\n      swap3\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_79\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_79:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n        /* \"SLStaking.sol\":1714:1783  require(token.transfer(msg.sender, _amount), \"Token transfer failed\") */\n      tag_82\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_83\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_82:\n        /* \"SLStaking.sol\":1813:1846  balances[msg.sender].sub(_amount) */\n      tag_85\n        /* \"SLStaking.sol\":1838:1845  _amount */\n      dup2\n        /* \"SLStaking.sol\":1813:1821  balances */\n      0x07\n        /* \"SLStaking.sol\":1813:1833  balances[msg.sender] */\n      0x00\n        /* \"SLStaking.sol\":1822:1832  msg.sender */\n      caller\n        /* \"SLStaking.sol\":1813:1833  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"SLStaking.sol\":1813:1837  balances[msg.sender].sub */\n      tag_86\n      swap1\n        /* \"SLStaking.sol\":1813:1846  balances[msg.sender].sub(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_85:\n        /* \"SLStaking.sol\":1790:1798  balances */\n      0x07\n        /* \"SLStaking.sol\":1790:1810  balances[msg.sender] */\n      0x00\n        /* \"SLStaking.sol\":1799:1809  msg.sender */\n      caller\n        /* \"SLStaking.sol\":1790:1810  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"SLStaking.sol\":1790:1846  balances[msg.sender] = balances[msg.sender].sub(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"SLStaking.sol\":1866:1876  msg.sender */\n      caller\n        /* \"SLStaking.sol\":1858:1886  UnStake(msg.sender, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xb24546d975e2628748efc9aced80665e0fad66272033e5c0ea25fd3afac99795\n        /* \"SLStaking.sol\":1878:1885  _amount */\n      dup3\n        /* \"SLStaking.sol\":1858:1886  UnStake(msg.sender, _amount) */\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_88\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_89\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_88:\n        /* \"SLStaking.sol\":1495:1891  function unStake(uint256 _amount) external nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_91\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_92\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_91:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_94\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_95\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_94:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"SLStaking.sol\":2141:2246  function totalStaked() external view returns (uint256) {... */\n    tag_35:\n        /* \"SLStaking.sol\":2187:2194  uint256 */\n      0x00\n        /* \"SLStaking.sol\":2211:2216  token */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SLStaking.sol\":2211:2226  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"SLStaking.sol\":2235:2239  this */\n      address\n        /* \"SLStaking.sol\":2211:2241  token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_97\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_97:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_98\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_98:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_100\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_100:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_101\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n        /* \"SLStaking.sol\":2204:2241  return token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"SLStaking.sol\":2141:2246  function totalStaked() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"SLStaking.sol\":400:431  uint256 public totalStakeAmount */\n    tag_42:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"SLStaking.sol\":1017:1491  function stake(uint256 _amount) external nonReentrant {... */\n    tag_46:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_105\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_65\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_105:\n        /* \"SLStaking.sol\":1122:1136  minStakeAmount */\n      sload(0x06)\n        /* \"SLStaking.sol\":1085:1118  balances[msg.sender].add(_amount) */\n      tag_107\n        /* \"SLStaking.sol\":1110:1117  _amount */\n      dup3\n        /* \"SLStaking.sol\":1085:1093  balances */\n      0x07\n        /* \"SLStaking.sol\":1085:1105  balances[msg.sender] */\n      0x00\n        /* \"SLStaking.sol\":1094:1104  msg.sender */\n      caller\n        /* \"SLStaking.sol\":1085:1105  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"SLStaking.sol\":1085:1109  balances[msg.sender].add */\n      tag_68\n      swap1\n        /* \"SLStaking.sol\":1085:1118  balances[msg.sender].add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_107:\n        /* \"SLStaking.sol\":1085:1136  balances[msg.sender].add(_amount) >= minStakeAmount */\n      lt\n      iszero\n        /* \"SLStaking.sol\":1077:1197  require(balances[msg.sender].add(_amount) >= minStakeAmount, \"Amount should be greater than or equal to minStakeAmount\") */\n      tag_108\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_108:\n        /* \"SLStaking.sol\":1211:1216  token */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SLStaking.sol\":1211:1229  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"SLStaking.sol\":1230:1240  msg.sender */\n      caller\n        /* \"SLStaking.sol\":1250:1254  this */\n      address\n        /* \"SLStaking.sol\":1257:1264  _amount */\n      dup5\n        /* \"SLStaking.sol\":1211:1265  token.transferFrom(msg.sender, address(this), _amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_111\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_113\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_113:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_115\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_115:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_116\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_116:\n        /* \"SLStaking.sol\":1203:1291  require(token.transferFrom(msg.sender, address(this), _amount), \"Token transfer failed\") */\n      tag_117\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_118\n      swap1\n      tag_84\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_117:\n        /* \"SLStaking.sol\":1321:1354  balances[msg.sender].add(_amount) */\n      tag_119\n        /* \"SLStaking.sol\":1346:1353  _amount */\n      dup2\n        /* \"SLStaking.sol\":1321:1329  balances */\n      0x07\n        /* \"SLStaking.sol\":1321:1341  balances[msg.sender] */\n      0x00\n        /* \"SLStaking.sol\":1330:1340  msg.sender */\n      caller\n        /* \"SLStaking.sol\":1321:1341  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"SLStaking.sol\":1321:1345  balances[msg.sender].add */\n      tag_68\n      swap1\n        /* \"SLStaking.sol\":1321:1354  balances[msg.sender].add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_119:\n        /* \"SLStaking.sol\":1298:1306  balances */\n      0x07\n        /* \"SLStaking.sol\":1298:1318  balances[msg.sender] */\n      0x00\n        /* \"SLStaking.sol\":1307:1317  msg.sender */\n      caller\n        /* \"SLStaking.sol\":1298:1318  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"SLStaking.sol\":1298:1354  balances[msg.sender] = balances[msg.sender].add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"SLStaking.sol\":1391:1392  0 */\n      0x00\n        /* \"SLStaking.sol\":1364:1375  stakingTime */\n      0x05\n        /* \"SLStaking.sol\":1364:1387  stakingTime[msg.sender] */\n      0x00\n        /* \"SLStaking.sol\":1376:1386  msg.sender */\n      caller\n        /* \"SLStaking.sol\":1364:1387  stakingTime[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"SLStaking.sol\":1364:1392  stakingTime[msg.sender] == 0 */\n      eq\n        /* \"SLStaking.sol\":1361:1449  if(stakingTime[msg.sender] == 0){... */\n      iszero\n      tag_120\n      jumpi\n        /* \"SLStaking.sol\":1427:1442  block.timestamp */\n      timestamp\n        /* \"SLStaking.sol\":1401:1412  stakingTime */\n      0x05\n        /* \"SLStaking.sol\":1401:1424  stakingTime[msg.sender] */\n      0x00\n        /* \"SLStaking.sol\":1413:1423  msg.sender */\n      caller\n        /* \"SLStaking.sol\":1401:1424  stakingTime[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"SLStaking.sol\":1401:1442  stakingTime[msg.sender] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"SLStaking.sol\":1361:1449  if(stakingTime[msg.sender] == 0){... */\n    tag_120:\n        /* \"SLStaking.sol\":1466:1476  msg.sender */\n      caller\n        /* \"SLStaking.sol\":1460:1486  Stake(msg.sender, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xebedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a\n        /* \"SLStaking.sol\":1478:1485  _amount */\n      dup3\n        /* \"SLStaking.sol\":1460:1486  Stake(msg.sender, _amount) */\n      mload(0x40)\n      tag_121\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_122\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_89\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_122:\n        /* \"SLStaking.sol\":1017:1491  function stake(uint256 _amount) external nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"SLStaking.sol\":1928:2091  function setMinStakeAmount(uint256 _amount) external onlyOwner {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_124\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_92\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_124:\n        /* \"SLStaking.sol\":2016:2017  0 */\n      0x00\n        /* \"SLStaking.sol\":2005:2012  _amount */\n      dup2\n        /* \"SLStaking.sol\":2005:2017  _amount >= 0 */\n      lt\n      iszero\n        /* \"SLStaking.sol\":1997:2056  require(_amount >= 0, \"Amount should be greater than zero\") */\n      tag_126\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_127\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_126:\n        /* \"SLStaking.sol\":2079:2086  _amount */\n      dup1\n        /* \"SLStaking.sol\":2062:2076  minStakeAmount */\n      0x06\n        /* \"SLStaking.sol\":2062:2086  minStakeAmount = _amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"SLStaking.sol\":1928:2091  function setMinStakeAmount(uint256 _amount) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"SLStaking.sol\":435:462  uint256 public lockupPeriod */\n    tag_51:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"SLStaking.sol\":583:612  uint256 public minStakeAmount */\n    tag_54:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_130\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_92\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2189:2190  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2177  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_132:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_135\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_95\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_135:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"SLStaking.sol\":376:395  IERC20 public token */\n    tag_60:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_137\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_138\n      swap1\n      tag_139\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_137:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_141\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_86:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_144\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_144:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      dup1\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_92:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_148\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_149\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_148:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      tag_150\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1427  owner */\n      tag_38\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_150:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_151\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_152\n      swap1\n      tag_153\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_151:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_149:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_157:\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_159\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_160\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":59:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:289   */\n    tag_161:\n      0x00\n        /* \"#utility.yul\":237:243   */\n      dup2\n        /* \"#utility.yul\":231:244   */\n      mload\n        /* \"#utility.yul\":222:244   */\n      swap1\n      pop\n        /* \"#utility.yul\":253:283   */\n      tag_163\n        /* \"#utility.yul\":277:282   */\n      dup2\n        /* \"#utility.yul\":253:283   */\n      tag_164\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":212:289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":295:434   */\n    tag_165:\n      0x00\n        /* \"#utility.yul\":379:385   */\n      dup2\n        /* \"#utility.yul\":366:386   */\n      calldataload\n        /* \"#utility.yul\":357:386   */\n      swap1\n      pop\n        /* \"#utility.yul\":395:428   */\n      tag_167\n        /* \"#utility.yul\":422:427   */\n      dup2\n        /* \"#utility.yul\":395:428   */\n      tag_168\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":347:434   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":440:583   */\n    tag_169:\n      0x00\n        /* \"#utility.yul\":528:534   */\n      dup2\n        /* \"#utility.yul\":522:535   */\n      mload\n        /* \"#utility.yul\":513:535   */\n      swap1\n      pop\n        /* \"#utility.yul\":544:577   */\n      tag_171\n        /* \"#utility.yul\":571:576   */\n      dup2\n        /* \"#utility.yul\":544:577   */\n      tag_168\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":503:583   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":589:851   */\n    tag_20:\n      0x00\n        /* \"#utility.yul\":697:699   */\n      0x20\n        /* \"#utility.yul\":685:694   */\n      dup3\n        /* \"#utility.yul\":676:683   */\n      dup5\n        /* \"#utility.yul\":672:695   */\n      sub\n        /* \"#utility.yul\":668:700   */\n      slt\n        /* \"#utility.yul\":665:667   */\n      iszero\n      tag_173\n      jumpi\n        /* \"#utility.yul\":713:714   */\n      0x00\n        /* \"#utility.yul\":710:711   */\n      dup1\n        /* \"#utility.yul\":703:715   */\n      revert\n        /* \"#utility.yul\":665:667   */\n    tag_173:\n        /* \"#utility.yul\":756:757   */\n      0x00\n        /* \"#utility.yul\":781:834   */\n      tag_174\n        /* \"#utility.yul\":826:833   */\n      dup5\n        /* \"#utility.yul\":817:823   */\n      dup3\n        /* \"#utility.yul\":806:815   */\n      dup6\n        /* \"#utility.yul\":802:824   */\n      add\n        /* \"#utility.yul\":781:834   */\n      tag_157\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":771:834   */\n      swap2\n      pop\n        /* \"#utility.yul\":727:844   */\n      pop\n        /* \"#utility.yul\":655:851   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":857:1135   */\n    tag_81:\n      0x00\n        /* \"#utility.yul\":973:975   */\n      0x20\n        /* \"#utility.yul\":961:970   */\n      dup3\n        /* \"#utility.yul\":952:959   */\n      dup5\n        /* \"#utility.yul\":948:971   */\n      sub\n        /* \"#utility.yul\":944:976   */\n      slt\n        /* \"#utility.yul\":941:943   */\n      iszero\n      tag_176\n      jumpi\n        /* \"#utility.yul\":989:990   */\n      0x00\n        /* \"#utility.yul\":986:987   */\n      dup1\n        /* \"#utility.yul\":979:991   */\n      revert\n        /* \"#utility.yul\":941:943   */\n    tag_176:\n        /* \"#utility.yul\":1032:1033   */\n      0x00\n        /* \"#utility.yul\":1057:1118   */\n      tag_177\n        /* \"#utility.yul\":1110:1117   */\n      dup5\n        /* \"#utility.yul\":1101:1107   */\n      dup3\n        /* \"#utility.yul\":1090:1099   */\n      dup6\n        /* \"#utility.yul\":1086:1108   */\n      add\n        /* \"#utility.yul\":1057:1118   */\n      tag_161\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":1047:1118   */\n      swap2\n      pop\n        /* \"#utility.yul\":1003:1128   */\n      pop\n        /* \"#utility.yul\":931:1135   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1141:1403   */\n    tag_30:\n      0x00\n        /* \"#utility.yul\":1249:1251   */\n      0x20\n        /* \"#utility.yul\":1237:1246   */\n      dup3\n        /* \"#utility.yul\":1228:1235   */\n      dup5\n        /* \"#utility.yul\":1224:1247   */\n      sub\n        /* \"#utility.yul\":1220:1252   */\n      slt\n        /* \"#utility.yul\":1217:1219   */\n      iszero\n      tag_179\n      jumpi\n        /* \"#utility.yul\":1265:1266   */\n      0x00\n        /* \"#utility.yul\":1262:1263   */\n      dup1\n        /* \"#utility.yul\":1255:1267   */\n      revert\n        /* \"#utility.yul\":1217:1219   */\n    tag_179:\n        /* \"#utility.yul\":1308:1309   */\n      0x00\n        /* \"#utility.yul\":1333:1386   */\n      tag_180\n        /* \"#utility.yul\":1378:1385   */\n      dup5\n        /* \"#utility.yul\":1369:1375   */\n      dup3\n        /* \"#utility.yul\":1358:1367   */\n      dup6\n        /* \"#utility.yul\":1354:1376   */\n      add\n        /* \"#utility.yul\":1333:1386   */\n      tag_165\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":1323:1386   */\n      swap2\n      pop\n        /* \"#utility.yul\":1279:1396   */\n      pop\n        /* \"#utility.yul\":1207:1403   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1409:1693   */\n    tag_102:\n      0x00\n        /* \"#utility.yul\":1528:1530   */\n      0x20\n        /* \"#utility.yul\":1516:1525   */\n      dup3\n        /* \"#utility.yul\":1507:1514   */\n      dup5\n        /* \"#utility.yul\":1503:1526   */\n      sub\n        /* \"#utility.yul\":1499:1531   */\n      slt\n        /* \"#utility.yul\":1496:1498   */\n      iszero\n      tag_182\n      jumpi\n        /* \"#utility.yul\":1544:1545   */\n      0x00\n        /* \"#utility.yul\":1541:1542   */\n      dup1\n        /* \"#utility.yul\":1534:1546   */\n      revert\n        /* \"#utility.yul\":1496:1498   */\n    tag_182:\n        /* \"#utility.yul\":1587:1588   */\n      0x00\n        /* \"#utility.yul\":1612:1676   */\n      tag_183\n        /* \"#utility.yul\":1668:1675   */\n      dup5\n        /* \"#utility.yul\":1659:1665   */\n      dup3\n        /* \"#utility.yul\":1648:1657   */\n      dup6\n        /* \"#utility.yul\":1644:1666   */\n      add\n        /* \"#utility.yul\":1612:1676   */\n      tag_169\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":1602:1676   */\n      swap2\n      pop\n        /* \"#utility.yul\":1558:1686   */\n      pop\n        /* \"#utility.yul\":1486:1693   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1699:1817   */\n    tag_184:\n        /* \"#utility.yul\":1786:1810   */\n      tag_186\n        /* \"#utility.yul\":1804:1809   */\n      dup2\n        /* \"#utility.yul\":1786:1810   */\n      tag_187\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":1781:1784   */\n      dup3\n        /* \"#utility.yul\":1774:1811   */\n      mstore\n        /* \"#utility.yul\":1764:1817   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1823:1982   */\n    tag_188:\n        /* \"#utility.yul\":1924:1975   */\n      tag_190\n        /* \"#utility.yul\":1969:1974   */\n      dup2\n        /* \"#utility.yul\":1924:1975   */\n      tag_191\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":1919:1922   */\n      dup3\n        /* \"#utility.yul\":1912:1976   */\n      mstore\n        /* \"#utility.yul\":1902:1982   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1988:2353   */\n    tag_192:\n      0x00\n        /* \"#utility.yul\":2151:2217   */\n      tag_194\n        /* \"#utility.yul\":2215:2216   */\n      0x06\n        /* \"#utility.yul\":2210:2213   */\n      dup4\n        /* \"#utility.yul\":2151:2217   */\n      tag_195\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":2144:2217   */\n      swap2\n      pop\n        /* \"#utility.yul\":2226:2319   */\n      tag_196\n        /* \"#utility.yul\":2315:2318   */\n      dup3\n        /* \"#utility.yul\":2226:2319   */\n      tag_197\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":2344:2346   */\n      0x20\n        /* \"#utility.yul\":2339:2342   */\n      dup3\n        /* \"#utility.yul\":2335:2347   */\n      add\n        /* \"#utility.yul\":2328:2347   */\n      swap1\n      pop\n        /* \"#utility.yul\":2134:2353   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2359:2725   */\n    tag_198:\n      0x00\n        /* \"#utility.yul\":2522:2589   */\n      tag_200\n        /* \"#utility.yul\":2586:2588   */\n      0x26\n        /* \"#utility.yul\":2581:2584   */\n      dup4\n        /* \"#utility.yul\":2522:2589   */\n      tag_195\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":2515:2589   */\n      swap2\n      pop\n        /* \"#utility.yul\":2598:2691   */\n      tag_201\n        /* \"#utility.yul\":2687:2690   */\n      dup3\n        /* \"#utility.yul\":2598:2691   */\n      tag_202\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":2716:2718   */\n      0x40\n        /* \"#utility.yul\":2711:2714   */\n      dup3\n        /* \"#utility.yul\":2707:2719   */\n      add\n        /* \"#utility.yul\":2700:2719   */\n      swap1\n      pop\n        /* \"#utility.yul\":2505:2725   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2731:3097   */\n    tag_203:\n      0x00\n        /* \"#utility.yul\":2894:2961   */\n      tag_205\n        /* \"#utility.yul\":2958:2960   */\n      0x14\n        /* \"#utility.yul\":2953:2956   */\n      dup4\n        /* \"#utility.yul\":2894:2961   */\n      tag_195\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":2887:2961   */\n      swap2\n      pop\n        /* \"#utility.yul\":2970:3063   */\n      tag_206\n        /* \"#utility.yul\":3059:3062   */\n      dup3\n        /* \"#utility.yul\":2970:3063   */\n      tag_207\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":3088:3090   */\n      0x20\n        /* \"#utility.yul\":3083:3086   */\n      dup3\n        /* \"#utility.yul\":3079:3091   */\n      add\n        /* \"#utility.yul\":3072:3091   */\n      swap1\n      pop\n        /* \"#utility.yul\":2877:3097   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3103:3469   */\n    tag_208:\n      0x00\n        /* \"#utility.yul\":3266:3333   */\n      tag_210\n        /* \"#utility.yul\":3330:3332   */\n      0x15\n        /* \"#utility.yul\":3325:3328   */\n      dup4\n        /* \"#utility.yul\":3266:3333   */\n      tag_195\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":3259:3333   */\n      swap2\n      pop\n        /* \"#utility.yul\":3342:3435   */\n      tag_211\n        /* \"#utility.yul\":3431:3434   */\n      dup3\n        /* \"#utility.yul\":3342:3435   */\n      tag_212\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":3460:3462   */\n      0x20\n        /* \"#utility.yul\":3455:3458   */\n      dup3\n        /* \"#utility.yul\":3451:3463   */\n      add\n        /* \"#utility.yul\":3444:3463   */\n      swap1\n      pop\n        /* \"#utility.yul\":3249:3469   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3475:3841   */\n    tag_213:\n      0x00\n        /* \"#utility.yul\":3638:3705   */\n      tag_215\n        /* \"#utility.yul\":3702:3704   */\n      0x22\n        /* \"#utility.yul\":3697:3700   */\n      dup4\n        /* \"#utility.yul\":3638:3705   */\n      tag_195\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":3631:3705   */\n      swap2\n      pop\n        /* \"#utility.yul\":3714:3807   */\n      tag_216\n        /* \"#utility.yul\":3803:3806   */\n      dup3\n        /* \"#utility.yul\":3714:3807   */\n      tag_217\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":3832:3834   */\n      0x40\n        /* \"#utility.yul\":3827:3830   */\n      dup3\n        /* \"#utility.yul\":3823:3835   */\n      add\n        /* \"#utility.yul\":3816:3835   */\n      swap1\n      pop\n        /* \"#utility.yul\":3621:3841   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3847:4213   */\n    tag_218:\n      0x00\n        /* \"#utility.yul\":4010:4077   */\n      tag_220\n        /* \"#utility.yul\":4074:4076   */\n      0x20\n        /* \"#utility.yul\":4069:4072   */\n      dup4\n        /* \"#utility.yul\":4010:4077   */\n      tag_195\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":4003:4077   */\n      swap2\n      pop\n        /* \"#utility.yul\":4086:4179   */\n      tag_221\n        /* \"#utility.yul\":4175:4178   */\n      dup3\n        /* \"#utility.yul\":4086:4179   */\n      tag_222\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":4204:4206   */\n      0x20\n        /* \"#utility.yul\":4199:4202   */\n      dup3\n        /* \"#utility.yul\":4195:4207   */\n      add\n        /* \"#utility.yul\":4188:4207   */\n      swap1\n      pop\n        /* \"#utility.yul\":3993:4213   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4219:4585   */\n    tag_223:\n      0x00\n        /* \"#utility.yul\":4382:4449   */\n      tag_225\n        /* \"#utility.yul\":4446:4448   */\n      0x38\n        /* \"#utility.yul\":4441:4444   */\n      dup4\n        /* \"#utility.yul\":4382:4449   */\n      tag_195\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":4375:4449   */\n      swap2\n      pop\n        /* \"#utility.yul\":4458:4551   */\n      tag_226\n        /* \"#utility.yul\":4547:4550   */\n      dup3\n        /* \"#utility.yul\":4458:4551   */\n      tag_227\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":4576:4578   */\n      0x40\n        /* \"#utility.yul\":4571:4574   */\n      dup3\n        /* \"#utility.yul\":4567:4579   */\n      add\n        /* \"#utility.yul\":4560:4579   */\n      swap1\n      pop\n        /* \"#utility.yul\":4365:4585   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4591:4957   */\n    tag_228:\n      0x00\n        /* \"#utility.yul\":4754:4821   */\n      tag_230\n        /* \"#utility.yul\":4818:4820   */\n      0x1f\n        /* \"#utility.yul\":4813:4816   */\n      dup4\n        /* \"#utility.yul\":4754:4821   */\n      tag_195\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":4747:4821   */\n      swap2\n      pop\n        /* \"#utility.yul\":4830:4923   */\n      tag_231\n        /* \"#utility.yul\":4919:4922   */\n      dup3\n        /* \"#utility.yul\":4830:4923   */\n      tag_232\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":4948:4950   */\n      0x20\n        /* \"#utility.yul\":4943:4946   */\n      dup3\n        /* \"#utility.yul\":4939:4951   */\n      add\n        /* \"#utility.yul\":4932:4951   */\n      swap1\n      pop\n        /* \"#utility.yul\":4737:4957   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4963:5081   */\n    tag_233:\n        /* \"#utility.yul\":5050:5074   */\n      tag_235\n        /* \"#utility.yul\":5068:5073   */\n      dup2\n        /* \"#utility.yul\":5050:5074   */\n      tag_236\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":5045:5048   */\n      dup3\n        /* \"#utility.yul\":5038:5075   */\n      mstore\n        /* \"#utility.yul\":5028:5081   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5087:5309   */\n    tag_40:\n      0x00\n        /* \"#utility.yul\":5218:5220   */\n      0x20\n        /* \"#utility.yul\":5207:5216   */\n      dup3\n        /* \"#utility.yul\":5203:5221   */\n      add\n        /* \"#utility.yul\":5195:5221   */\n      swap1\n      pop\n        /* \"#utility.yul\":5231:5302   */\n      tag_238\n        /* \"#utility.yul\":5299:5300   */\n      0x00\n        /* \"#utility.yul\":5288:5297   */\n      dup4\n        /* \"#utility.yul\":5284:5301   */\n      add\n        /* \"#utility.yul\":5275:5281   */\n      dup5\n        /* \"#utility.yul\":5231:5302   */\n      tag_184\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":5185:5309   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5315:5757   */\n    tag_112:\n      0x00\n        /* \"#utility.yul\":5502:5504   */\n      0x60\n        /* \"#utility.yul\":5491:5500   */\n      dup3\n        /* \"#utility.yul\":5487:5505   */\n      add\n        /* \"#utility.yul\":5479:5505   */\n      swap1\n      pop\n        /* \"#utility.yul\":5515:5586   */\n      tag_240\n        /* \"#utility.yul\":5583:5584   */\n      0x00\n        /* \"#utility.yul\":5572:5581   */\n      dup4\n        /* \"#utility.yul\":5568:5585   */\n      add\n        /* \"#utility.yul\":5559:5565   */\n      dup7\n        /* \"#utility.yul\":5515:5586   */\n      tag_184\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":5596:5668   */\n      tag_241\n        /* \"#utility.yul\":5664:5666   */\n      0x20\n        /* \"#utility.yul\":5653:5662   */\n      dup4\n        /* \"#utility.yul\":5649:5667   */\n      add\n        /* \"#utility.yul\":5640:5646   */\n      dup6\n        /* \"#utility.yul\":5596:5668   */\n      tag_184\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":5678:5750   */\n      tag_242\n        /* \"#utility.yul\":5746:5748   */\n      0x40\n        /* \"#utility.yul\":5735:5744   */\n      dup4\n        /* \"#utility.yul\":5731:5749   */\n      add\n        /* \"#utility.yul\":5722:5728   */\n      dup5\n        /* \"#utility.yul\":5678:5750   */\n      tag_233\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":5469:5757   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5763:6095   */\n    tag_76:\n      0x00\n        /* \"#utility.yul\":5922:5924   */\n      0x40\n        /* \"#utility.yul\":5911:5920   */\n      dup3\n        /* \"#utility.yul\":5907:5925   */\n      add\n        /* \"#utility.yul\":5899:5925   */\n      swap1\n      pop\n        /* \"#utility.yul\":5935:6006   */\n      tag_244\n        /* \"#utility.yul\":6003:6004   */\n      0x00\n        /* \"#utility.yul\":5992:6001   */\n      dup4\n        /* \"#utility.yul\":5988:6005   */\n      add\n        /* \"#utility.yul\":5979:5985   */\n      dup6\n        /* \"#utility.yul\":5935:6006   */\n      tag_184\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":6016:6088   */\n      tag_245\n        /* \"#utility.yul\":6084:6086   */\n      0x20\n        /* \"#utility.yul\":6073:6082   */\n      dup4\n        /* \"#utility.yul\":6069:6087   */\n      add\n        /* \"#utility.yul\":6060:6066   */\n      dup5\n        /* \"#utility.yul\":6016:6088   */\n      tag_233\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":5889:6095   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6101:6351   */\n    tag_62:\n      0x00\n        /* \"#utility.yul\":6246:6248   */\n      0x20\n        /* \"#utility.yul\":6235:6244   */\n      dup3\n        /* \"#utility.yul\":6231:6249   */\n      add\n        /* \"#utility.yul\":6223:6249   */\n      swap1\n      pop\n        /* \"#utility.yul\":6259:6344   */\n      tag_247\n        /* \"#utility.yul\":6341:6342   */\n      0x00\n        /* \"#utility.yul\":6330:6339   */\n      dup4\n        /* \"#utility.yul\":6326:6343   */\n      add\n        /* \"#utility.yul\":6317:6323   */\n      dup5\n        /* \"#utility.yul\":6259:6344   */\n      tag_188\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":6213:6351   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6357:6776   */\n    tag_71:\n      0x00\n        /* \"#utility.yul\":6561:6563   */\n      0x20\n        /* \"#utility.yul\":6550:6559   */\n      dup3\n        /* \"#utility.yul\":6546:6564   */\n      add\n        /* \"#utility.yul\":6538:6564   */\n      swap1\n      pop\n        /* \"#utility.yul\":6610:6619   */\n      dup2\n        /* \"#utility.yul\":6604:6608   */\n      dup2\n        /* \"#utility.yul\":6600:6620   */\n      sub\n        /* \"#utility.yul\":6596:6597   */\n      0x00\n        /* \"#utility.yul\":6585:6594   */\n      dup4\n        /* \"#utility.yul\":6581:6598   */\n      add\n        /* \"#utility.yul\":6574:6621   */\n      mstore\n        /* \"#utility.yul\":6638:6769   */\n      tag_249\n        /* \"#utility.yul\":6764:6768   */\n      dup2\n        /* \"#utility.yul\":6638:6769   */\n      tag_192\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":6630:6769   */\n      swap1\n      pop\n        /* \"#utility.yul\":6528:6776   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6782:7201   */\n    tag_134:\n      0x00\n        /* \"#utility.yul\":6986:6988   */\n      0x20\n        /* \"#utility.yul\":6975:6984   */\n      dup3\n        /* \"#utility.yul\":6971:6989   */\n      add\n        /* \"#utility.yul\":6963:6989   */\n      swap1\n      pop\n        /* \"#utility.yul\":7035:7044   */\n      dup2\n        /* \"#utility.yul\":7029:7033   */\n      dup2\n        /* \"#utility.yul\":7025:7045   */\n      sub\n        /* \"#utility.yul\":7021:7022   */\n      0x00\n        /* \"#utility.yul\":7010:7019   */\n      dup4\n        /* \"#utility.yul\":7006:7023   */\n      add\n        /* \"#utility.yul\":6999:7046   */\n      mstore\n        /* \"#utility.yul\":7063:7194   */\n      tag_251\n        /* \"#utility.yul\":7189:7193   */\n      dup2\n        /* \"#utility.yul\":7063:7194   */\n      tag_198\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":7055:7194   */\n      swap1\n      pop\n        /* \"#utility.yul\":6953:7201   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7207:7626   */\n    tag_74:\n      0x00\n        /* \"#utility.yul\":7411:7413   */\n      0x20\n        /* \"#utility.yul\":7400:7409   */\n      dup3\n        /* \"#utility.yul\":7396:7414   */\n      add\n        /* \"#utility.yul\":7388:7414   */\n      swap1\n      pop\n        /* \"#utility.yul\":7460:7469   */\n      dup2\n        /* \"#utility.yul\":7454:7458   */\n      dup2\n        /* \"#utility.yul\":7450:7470   */\n      sub\n        /* \"#utility.yul\":7446:7447   */\n      0x00\n        /* \"#utility.yul\":7435:7444   */\n      dup4\n        /* \"#utility.yul\":7431:7448   */\n      add\n        /* \"#utility.yul\":7424:7471   */\n      mstore\n        /* \"#utility.yul\":7488:7619   */\n      tag_253\n        /* \"#utility.yul\":7614:7618   */\n      dup2\n        /* \"#utility.yul\":7488:7619   */\n      tag_203\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":7480:7619   */\n      swap1\n      pop\n        /* \"#utility.yul\":7378:7626   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7632:8051   */\n    tag_84:\n      0x00\n        /* \"#utility.yul\":7836:7838   */\n      0x20\n        /* \"#utility.yul\":7825:7834   */\n      dup3\n        /* \"#utility.yul\":7821:7839   */\n      add\n        /* \"#utility.yul\":7813:7839   */\n      swap1\n      pop\n        /* \"#utility.yul\":7885:7894   */\n      dup2\n        /* \"#utility.yul\":7879:7883   */\n      dup2\n        /* \"#utility.yul\":7875:7895   */\n      sub\n        /* \"#utility.yul\":7871:7872   */\n      0x00\n        /* \"#utility.yul\":7860:7869   */\n      dup4\n        /* \"#utility.yul\":7856:7873   */\n      add\n        /* \"#utility.yul\":7849:7896   */\n      mstore\n        /* \"#utility.yul\":7913:8044   */\n      tag_255\n        /* \"#utility.yul\":8039:8043   */\n      dup2\n        /* \"#utility.yul\":7913:8044   */\n      tag_208\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":7905:8044   */\n      swap1\n      pop\n        /* \"#utility.yul\":7803:8051   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8057:8476   */\n    tag_128:\n      0x00\n        /* \"#utility.yul\":8261:8263   */\n      0x20\n        /* \"#utility.yul\":8250:8259   */\n      dup3\n        /* \"#utility.yul\":8246:8264   */\n      add\n        /* \"#utility.yul\":8238:8264   */\n      swap1\n      pop\n        /* \"#utility.yul\":8310:8319   */\n      dup2\n        /* \"#utility.yul\":8304:8308   */\n      dup2\n        /* \"#utility.yul\":8300:8320   */\n      sub\n        /* \"#utility.yul\":8296:8297   */\n      0x00\n        /* \"#utility.yul\":8285:8294   */\n      dup4\n        /* \"#utility.yul\":8281:8298   */\n      add\n        /* \"#utility.yul\":8274:8321   */\n      mstore\n        /* \"#utility.yul\":8338:8469   */\n      tag_257\n        /* \"#utility.yul\":8464:8468   */\n      dup2\n        /* \"#utility.yul\":8338:8469   */\n      tag_213\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":8330:8469   */\n      swap1\n      pop\n        /* \"#utility.yul\":8228:8476   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8482:8901   */\n    tag_153:\n      0x00\n        /* \"#utility.yul\":8686:8688   */\n      0x20\n        /* \"#utility.yul\":8675:8684   */\n      dup3\n        /* \"#utility.yul\":8671:8689   */\n      add\n        /* \"#utility.yul\":8663:8689   */\n      swap1\n      pop\n        /* \"#utility.yul\":8735:8744   */\n      dup2\n        /* \"#utility.yul\":8729:8733   */\n      dup2\n        /* \"#utility.yul\":8725:8745   */\n      sub\n        /* \"#utility.yul\":8721:8722   */\n      0x00\n        /* \"#utility.yul\":8710:8719   */\n      dup4\n        /* \"#utility.yul\":8706:8723   */\n      add\n        /* \"#utility.yul\":8699:8746   */\n      mstore\n        /* \"#utility.yul\":8763:8894   */\n      tag_259\n        /* \"#utility.yul\":8889:8893   */\n      dup2\n        /* \"#utility.yul\":8763:8894   */\n      tag_218\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":8755:8894   */\n      swap1\n      pop\n        /* \"#utility.yul\":8653:8901   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8907:9326   */\n    tag_110:\n      0x00\n        /* \"#utility.yul\":9111:9113   */\n      0x20\n        /* \"#utility.yul\":9100:9109   */\n      dup3\n        /* \"#utility.yul\":9096:9114   */\n      add\n        /* \"#utility.yul\":9088:9114   */\n      swap1\n      pop\n        /* \"#utility.yul\":9160:9169   */\n      dup2\n        /* \"#utility.yul\":9154:9158   */\n      dup2\n        /* \"#utility.yul\":9150:9170   */\n      sub\n        /* \"#utility.yul\":9146:9147   */\n      0x00\n        /* \"#utility.yul\":9135:9144   */\n      dup4\n        /* \"#utility.yul\":9131:9148   */\n      add\n        /* \"#utility.yul\":9124:9171   */\n      mstore\n        /* \"#utility.yul\":9188:9319   */\n      tag_261\n        /* \"#utility.yul\":9314:9318   */\n      dup2\n        /* \"#utility.yul\":9188:9319   */\n      tag_223\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":9180:9319   */\n      swap1\n      pop\n        /* \"#utility.yul\":9078:9326   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9332:9751   */\n    tag_139:\n      0x00\n        /* \"#utility.yul\":9536:9538   */\n      0x20\n        /* \"#utility.yul\":9525:9534   */\n      dup3\n        /* \"#utility.yul\":9521:9539   */\n      add\n        /* \"#utility.yul\":9513:9539   */\n      swap1\n      pop\n        /* \"#utility.yul\":9585:9594   */\n      dup2\n        /* \"#utility.yul\":9579:9583   */\n      dup2\n        /* \"#utility.yul\":9575:9595   */\n      sub\n        /* \"#utility.yul\":9571:9572   */\n      0x00\n        /* \"#utility.yul\":9560:9569   */\n      dup4\n        /* \"#utility.yul\":9556:9573   */\n      add\n        /* \"#utility.yul\":9549:9596   */\n      mstore\n        /* \"#utility.yul\":9613:9744   */\n      tag_263\n        /* \"#utility.yul\":9739:9743   */\n      dup2\n        /* \"#utility.yul\":9613:9744   */\n      tag_228\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":9605:9744   */\n      swap1\n      pop\n        /* \"#utility.yul\":9503:9751   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9757:9979   */\n    tag_23:\n      0x00\n        /* \"#utility.yul\":9888:9890   */\n      0x20\n        /* \"#utility.yul\":9877:9886   */\n      dup3\n        /* \"#utility.yul\":9873:9891   */\n      add\n        /* \"#utility.yul\":9865:9891   */\n      swap1\n      pop\n        /* \"#utility.yul\":9901:9972   */\n      tag_265\n        /* \"#utility.yul\":9969:9970   */\n      0x00\n        /* \"#utility.yul\":9958:9967   */\n      dup4\n        /* \"#utility.yul\":9954:9971   */\n      add\n        /* \"#utility.yul\":9945:9951   */\n      dup5\n        /* \"#utility.yul\":9901:9972   */\n      tag_233\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":9855:9979   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9985:10154   */\n    tag_195:\n      0x00\n        /* \"#utility.yul\":10103:10109   */\n      dup3\n        /* \"#utility.yul\":10098:10101   */\n      dup3\n        /* \"#utility.yul\":10091:10110   */\n      mstore\n        /* \"#utility.yul\":10143:10147   */\n      0x20\n        /* \"#utility.yul\":10138:10141   */\n      dup3\n        /* \"#utility.yul\":10134:10148   */\n      add\n        /* \"#utility.yul\":10119:10148   */\n      swap1\n      pop\n        /* \"#utility.yul\":10081:10154   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10160:10465   */\n    tag_142:\n      0x00\n        /* \"#utility.yul\":10219:10239   */\n      tag_268\n        /* \"#utility.yul\":10237:10238   */\n      dup3\n        /* \"#utility.yul\":10219:10239   */\n      tag_236\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":10214:10239   */\n      swap2\n      pop\n        /* \"#utility.yul\":10253:10273   */\n      tag_269\n        /* \"#utility.yul\":10271:10272   */\n      dup4\n        /* \"#utility.yul\":10253:10273   */\n      tag_236\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":10248:10273   */\n      swap3\n      pop\n        /* \"#utility.yul\":10407:10408   */\n      dup3\n        /* \"#utility.yul\":10339:10405   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10335:10409   */\n      sub\n        /* \"#utility.yul\":10332:10333   */\n      dup3\n        /* \"#utility.yul\":10329:10410   */\n      gt\n        /* \"#utility.yul\":10326:10328   */\n      iszero\n      tag_270\n      jumpi\n        /* \"#utility.yul\":10413:10431   */\n      tag_271\n      tag_272\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":10326:10328   */\n    tag_270:\n        /* \"#utility.yul\":10457:10458   */\n      dup3\n        /* \"#utility.yul\":10454:10455   */\n      dup3\n        /* \"#utility.yul\":10450:10459   */\n      add\n        /* \"#utility.yul\":10443:10459   */\n      swap1\n      pop\n        /* \"#utility.yul\":10204:10465   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10471:10662   */\n    tag_145:\n      0x00\n        /* \"#utility.yul\":10531:10551   */\n      tag_274\n        /* \"#utility.yul\":10549:10550   */\n      dup3\n        /* \"#utility.yul\":10531:10551   */\n      tag_236\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":10526:10551   */\n      swap2\n      pop\n        /* \"#utility.yul\":10565:10585   */\n      tag_275\n        /* \"#utility.yul\":10583:10584   */\n      dup4\n        /* \"#utility.yul\":10565:10585   */\n      tag_236\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":10560:10585   */\n      swap3\n      pop\n        /* \"#utility.yul\":10604:10605   */\n      dup3\n        /* \"#utility.yul\":10601:10602   */\n      dup3\n        /* \"#utility.yul\":10598:10606   */\n      lt\n        /* \"#utility.yul\":10595:10597   */\n      iszero\n      tag_276\n      jumpi\n        /* \"#utility.yul\":10609:10627   */\n      tag_277\n      tag_272\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":10595:10597   */\n    tag_276:\n        /* \"#utility.yul\":10654:10655   */\n      dup3\n        /* \"#utility.yul\":10651:10652   */\n      dup3\n        /* \"#utility.yul\":10647:10656   */\n      sub\n        /* \"#utility.yul\":10639:10656   */\n      swap1\n      pop\n        /* \"#utility.yul\":10516:10662   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10668:10764   */\n    tag_187:\n      0x00\n        /* \"#utility.yul\":10734:10758   */\n      tag_279\n        /* \"#utility.yul\":10752:10757   */\n      dup3\n        /* \"#utility.yul\":10734:10758   */\n      tag_280\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":10723:10758   */\n      swap1\n      pop\n        /* \"#utility.yul\":10713:10764   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10770:10860   */\n    tag_281:\n      0x00\n        /* \"#utility.yul\":10847:10852   */\n      dup2\n        /* \"#utility.yul\":10840:10853   */\n      iszero\n        /* \"#utility.yul\":10833:10854   */\n      iszero\n        /* \"#utility.yul\":10822:10854   */\n      swap1\n      pop\n        /* \"#utility.yul\":10812:10860   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10866:10992   */\n    tag_280:\n      0x00\n        /* \"#utility.yul\":10943:10985   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10936:10941   */\n      dup3\n        /* \"#utility.yul\":10932:10986   */\n      and\n        /* \"#utility.yul\":10921:10986   */\n      swap1\n      pop\n        /* \"#utility.yul\":10911:10992   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10998:11075   */\n    tag_236:\n      0x00\n        /* \"#utility.yul\":11064:11069   */\n      dup2\n        /* \"#utility.yul\":11053:11069   */\n      swap1\n      pop\n        /* \"#utility.yul\":11043:11075   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11081:11235   */\n    tag_191:\n      0x00\n        /* \"#utility.yul\":11178:11229   */\n      tag_286\n        /* \"#utility.yul\":11223:11228   */\n      dup3\n        /* \"#utility.yul\":11178:11229   */\n      tag_287\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":11165:11229   */\n      swap1\n      pop\n        /* \"#utility.yul\":11155:11235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11241:11368   */\n    tag_287:\n      0x00\n        /* \"#utility.yul\":11338:11362   */\n      tag_289\n        /* \"#utility.yul\":11356:11361   */\n      dup3\n        /* \"#utility.yul\":11338:11362   */\n      tag_280\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":11325:11362   */\n      swap1\n      pop\n        /* \"#utility.yul\":11315:11368   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11374:11554   */\n    tag_272:\n        /* \"#utility.yul\":11422:11499   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11419:11420   */\n      0x00\n        /* \"#utility.yul\":11412:11500   */\n      mstore\n        /* \"#utility.yul\":11519:11523   */\n      0x11\n        /* \"#utility.yul\":11516:11517   */\n      0x04\n        /* \"#utility.yul\":11509:11524   */\n      mstore\n        /* \"#utility.yul\":11543:11547   */\n      0x24\n        /* \"#utility.yul\":11540:11541   */\n      0x00\n        /* \"#utility.yul\":11533:11548   */\n      revert\n        /* \"#utility.yul\":11560:11716   */\n    tag_197:\n        /* \"#utility.yul\":11700:11708   */\n      0x4c6f636b65640000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11696:11697   */\n      0x00\n        /* \"#utility.yul\":11688:11694   */\n      dup3\n        /* \"#utility.yul\":11684:11698   */\n      add\n        /* \"#utility.yul\":11677:11709   */\n      mstore\n        /* \"#utility.yul\":11666:11716   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11722:11947   */\n    tag_202:\n        /* \"#utility.yul\":11862:11896   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":11858:11859   */\n      0x00\n        /* \"#utility.yul\":11850:11856   */\n      dup3\n        /* \"#utility.yul\":11846:11860   */\n      add\n        /* \"#utility.yul\":11839:11897   */\n      mstore\n        /* \"#utility.yul\":11931:11939   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11926:11928   */\n      0x20\n        /* \"#utility.yul\":11918:11924   */\n      dup3\n        /* \"#utility.yul\":11914:11929   */\n      add\n        /* \"#utility.yul\":11907:11940   */\n      mstore\n        /* \"#utility.yul\":11828:11947   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11953:12123   */\n    tag_207:\n        /* \"#utility.yul\":12093:12115   */\n      0x496e73756666696369656e742062616c616e6365000000000000000000000000\n        /* \"#utility.yul\":12089:12090   */\n      0x00\n        /* \"#utility.yul\":12081:12087   */\n      dup3\n        /* \"#utility.yul\":12077:12091   */\n      add\n        /* \"#utility.yul\":12070:12116   */\n      mstore\n        /* \"#utility.yul\":12059:12123   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12129:12300   */\n    tag_212:\n        /* \"#utility.yul\":12269:12292   */\n      0x546f6b656e207472616e73666572206661696c65640000000000000000000000\n        /* \"#utility.yul\":12265:12266   */\n      0x00\n        /* \"#utility.yul\":12257:12263   */\n      dup3\n        /* \"#utility.yul\":12253:12267   */\n      add\n        /* \"#utility.yul\":12246:12293   */\n      mstore\n        /* \"#utility.yul\":12235:12300   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12306:12527   */\n    tag_217:\n        /* \"#utility.yul\":12446:12480   */\n      0x416d6f756e742073686f756c642062652067726561746572207468616e207a65\n        /* \"#utility.yul\":12442:12443   */\n      0x00\n        /* \"#utility.yul\":12434:12440   */\n      dup3\n        /* \"#utility.yul\":12430:12444   */\n      add\n        /* \"#utility.yul\":12423:12481   */\n      mstore\n        /* \"#utility.yul\":12515:12519   */\n      0x726f000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12510:12512   */\n      0x20\n        /* \"#utility.yul\":12502:12508   */\n      dup3\n        /* \"#utility.yul\":12498:12513   */\n      add\n        /* \"#utility.yul\":12491:12520   */\n      mstore\n        /* \"#utility.yul\":12412:12527   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12533:12715   */\n    tag_222:\n        /* \"#utility.yul\":12673:12707   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":12669:12670   */\n      0x00\n        /* \"#utility.yul\":12661:12667   */\n      dup3\n        /* \"#utility.yul\":12657:12671   */\n      add\n        /* \"#utility.yul\":12650:12708   */\n      mstore\n        /* \"#utility.yul\":12639:12715   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12721:12964   */\n    tag_227:\n        /* \"#utility.yul\":12861:12895   */\n      0x416d6f756e742073686f756c642062652067726561746572207468616e206f72\n        /* \"#utility.yul\":12857:12858   */\n      0x00\n        /* \"#utility.yul\":12849:12855   */\n      dup3\n        /* \"#utility.yul\":12845:12859   */\n      add\n        /* \"#utility.yul\":12838:12896   */\n      mstore\n        /* \"#utility.yul\":12930:12956   */\n      0x20657175616c20746f206d696e5374616b65416d6f756e740000000000000000\n        /* \"#utility.yul\":12925:12927   */\n      0x20\n        /* \"#utility.yul\":12917:12923   */\n      dup3\n        /* \"#utility.yul\":12913:12928   */\n      add\n        /* \"#utility.yul\":12906:12957   */\n      mstore\n        /* \"#utility.yul\":12827:12964   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12970:13151   */\n    tag_232:\n        /* \"#utility.yul\":13110:13143   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":13106:13107   */\n      0x00\n        /* \"#utility.yul\":13098:13104   */\n      dup3\n        /* \"#utility.yul\":13094:13108   */\n      add\n        /* \"#utility.yul\":13087:13144   */\n      mstore\n        /* \"#utility.yul\":13076:13151   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13157:13279   */\n    tag_160:\n        /* \"#utility.yul\":13230:13254   */\n      tag_300\n        /* \"#utility.yul\":13248:13253   */\n      dup2\n        /* \"#utility.yul\":13230:13254   */\n      tag_187\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":13223:13228   */\n      dup2\n        /* \"#utility.yul\":13220:13255   */\n      eq\n        /* \"#utility.yul\":13210:13212   */\n      tag_301\n      jumpi\n        /* \"#utility.yul\":13269:13270   */\n      0x00\n        /* \"#utility.yul\":13266:13267   */\n      dup1\n        /* \"#utility.yul\":13259:13271   */\n      revert\n        /* \"#utility.yul\":13210:13212   */\n    tag_301:\n        /* \"#utility.yul\":13200:13279   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13285:13401   */\n    tag_164:\n        /* \"#utility.yul\":13355:13376   */\n      tag_303\n        /* \"#utility.yul\":13370:13375   */\n      dup2\n        /* \"#utility.yul\":13355:13376   */\n      tag_281\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":13348:13353   */\n      dup2\n        /* \"#utility.yul\":13345:13377   */\n      eq\n        /* \"#utility.yul\":13335:13337   */\n      tag_304\n      jumpi\n        /* \"#utility.yul\":13391:13392   */\n      0x00\n        /* \"#utility.yul\":13388:13389   */\n      dup1\n        /* \"#utility.yul\":13381:13393   */\n      revert\n        /* \"#utility.yul\":13335:13337   */\n    tag_304:\n        /* \"#utility.yul\":13325:13401   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13407:13529   */\n    tag_168:\n        /* \"#utility.yul\":13480:13504   */\n      tag_306\n        /* \"#utility.yul\":13498:13503   */\n      dup2\n        /* \"#utility.yul\":13480:13504   */\n      tag_236\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":13473:13478   */\n      dup2\n        /* \"#utility.yul\":13470:13505   */\n      eq\n        /* \"#utility.yul\":13460:13462   */\n      tag_307\n      jumpi\n        /* \"#utility.yul\":13519:13520   */\n      0x00\n        /* \"#utility.yul\":13516:13517   */\n      dup1\n        /* \"#utility.yul\":13509:13521   */\n      revert\n        /* \"#utility.yul\":13460:13462   */\n    tag_307:\n        /* \"#utility.yul\":13450:13529   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205a7eb1be02e17b958334044928017b4c2fc53b643ea1a13a1d93bfbd855ae96a64736f6c63430008010033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1477:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:6"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:6",
														"type": ""
													}
												],
												"src": "7:143:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "219:80:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "229:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "244:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "238:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "238:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "229:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "287:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "260:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "260:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "260:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "197:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "205:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "213:5:6",
														"type": ""
													}
												],
												"src": "156:143:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "416:485:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "462:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "471:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "474:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "464:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "464:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "464:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "437:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "446:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "433:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "433:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "458:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "429:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "429:32:6"
															},
															"nodeType": "YulIf",
															"src": "426:2:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "488:128:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "503:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "517:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "507:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "532:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "578:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "589:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "574:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "574:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "598:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "542:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "542:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "532:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "626:129:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "641:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "655:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "645:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "671:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "717:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "728:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "713:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "713:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "737:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "681:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "681:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "671:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "765:129:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "780:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "794:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "784:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "810:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "856:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "867:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "852:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "852:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "876:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "820:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "820:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "810:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "370:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "381:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "393:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "401:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "409:6:6",
														"type": ""
													}
												],
												"src": "305:596:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "952:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "962:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "991:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "973:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "973:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "962:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "934:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "944:7:6",
														"type": ""
													}
												],
												"src": "907:96:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1054:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1064:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1079:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1086:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1075:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1075:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1064:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1036:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1046:7:6",
														"type": ""
													}
												],
												"src": "1009:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1186:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1196:16:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1207:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1196:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1168:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1178:7:6",
														"type": ""
													}
												],
												"src": "1141:77:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1267:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1324:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1333:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1336:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1326:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1326:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1326:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1290:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1315:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1297:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1297:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1287:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1287:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1280:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1280:43:6"
															},
															"nodeType": "YulIf",
															"src": "1277:2:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1260:5:6",
														"type": ""
													}
												],
												"src": "1224:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1395:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1452:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1461:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1464:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1454:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1454:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1454:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1418:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1443:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1425:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1425:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1415:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1415:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1408:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1408:43:6"
															},
															"nodeType": "YulIf",
															"src": "1405:2:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1388:5:6",
														"type": ""
													}
												],
												"src": "1352:122:6"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162001648380380620016488339818101604052810190620000379190620001b0565b620000576200004b620000b660201b60201c565b620000be60201b60201c565b6001808190555082600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816006819055508060048190555050505062000278565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050620001938162000244565b92915050565b600081519050620001aa816200025e565b92915050565b600080600060608486031215620001c657600080fd5b6000620001d68682870162000182565b9350506020620001e98682870162000199565b9250506040620001fc8682870162000199565b9150509250925092565b600062000213826200021a565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6200024f8162000206565b81146200025b57600080fd5b50565b62000269816200023a565b81146200027557600080fd5b50565b6113c080620002886000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806394409a561161008c578063ee947a7c11610066578063ee947a7c146101ec578063f18876841461020a578063f2fde38b14610228578063fc0c546a14610244576100cf565b806394409a5614610196578063a694fc3a146101b4578063eb4af045146101d0576100cf565b806327e235e3146100d4578063583d42fd146101045780635d3eea9114610134578063715018a614610150578063817b1cd21461015a5780638da5cb5b14610178575b600080fd5b6100ee60048036038101906100e99190610cbb565b610262565b6040516100fb919061103a565b60405180910390f35b61011e60048036038101906101199190610cbb565b61027a565b60405161012b919061103a565b60405180910390f35b61014e60048036038101906101499190610d0d565b610292565b005b61015861058e565b005b6101626105a2565b60405161016f919061103a565b60405180910390f35b610180610654565b60405161018d9190610ea4565b60405180910390f35b61019e61067d565b6040516101ab919061103a565b60405180910390f35b6101ce60048036038101906101c99190610d0d565b610683565b005b6101ea60048036038101906101e59190610d0d565b61098c565b005b6101f46109e2565b604051610201919061103a565b60405180910390f35b6102126109e8565b60405161021f919061103a565b60405180910390f35b610242600480360381019061023d9190610cbb565b6109ee565b005b61024c610a72565b6040516102599190610f1f565b60405180910390f35b60076020528060005260406000206000915090505481565b60056020528060005260406000206000915090505481565b61029a610a98565b6102ee600454600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ae890919063ffffffff16565b421015610330576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032790610f3a565b60405180910390fd5b80600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156103b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a990610f7a565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161040f929190610ef6565b602060405180830381600087803b15801561042957600080fd5b505af115801561043d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104619190610ce4565b6104a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049790610f9a565b60405180910390fd5b6104f281600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610afe90919063ffffffff16565b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff167fb24546d975e2628748efc9aced80665e0fad66272033e5c0ea25fd3afac997958260405161057b919061103a565b60405180910390a261058b610b14565b50565b610596610b1d565b6105a06000610b9b565b565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105ff9190610ea4565b60206040518083038186803b15801561061757600080fd5b505afa15801561062b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064f9190610d36565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60035481565b61068b610a98565b6006546106e082600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ae890919063ffffffff16565b1015610721576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071890610ffa565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161078093929190610ebf565b602060405180830381600087803b15801561079a57600080fd5b505af11580156107ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d29190610ce4565b610811576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080890610f9a565b60405180910390fd5b61086381600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ae890919063ffffffff16565b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414156109335742600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b3373ffffffffffffffffffffffffffffffffffffffff167febedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a82604051610979919061103a565b60405180910390a2610989610b14565b50565b610994610b1d565b60008110156109d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109cf90610fba565b60405180910390fd5b8060068190555050565b60045481565b60065481565b6109f6610b1d565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610a66576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5d90610f5a565b60405180910390fd5b610a6f81610b9b565b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026001541415610ade576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad59061101a565b60405180910390fd5b6002600181905550565b60008183610af69190611066565b905092915050565b60008183610b0c91906110bc565b905092915050565b60018081905550565b610b25610c5f565b73ffffffffffffffffffffffffffffffffffffffff16610b43610654565b73ffffffffffffffffffffffffffffffffffffffff1614610b99576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9090610fda565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600081359050610c7681611345565b92915050565b600081519050610c8b8161135c565b92915050565b600081359050610ca081611373565b92915050565b600081519050610cb581611373565b92915050565b600060208284031215610ccd57600080fd5b6000610cdb84828501610c67565b91505092915050565b600060208284031215610cf657600080fd5b6000610d0484828501610c7c565b91505092915050565b600060208284031215610d1f57600080fd5b6000610d2d84828501610c91565b91505092915050565b600060208284031215610d4857600080fd5b6000610d5684828501610ca6565b91505092915050565b610d68816110f0565b82525050565b610d7781611138565b82525050565b6000610d8a600683611055565b9150610d958261118b565b602082019050919050565b6000610dad602683611055565b9150610db8826111b4565b604082019050919050565b6000610dd0601483611055565b9150610ddb82611203565b602082019050919050565b6000610df3601583611055565b9150610dfe8261122c565b602082019050919050565b6000610e16602283611055565b9150610e2182611255565b604082019050919050565b6000610e39602083611055565b9150610e44826112a4565b602082019050919050565b6000610e5c603883611055565b9150610e67826112cd565b604082019050919050565b6000610e7f601f83611055565b9150610e8a8261131c565b602082019050919050565b610e9e8161112e565b82525050565b6000602082019050610eb96000830184610d5f565b92915050565b6000606082019050610ed46000830186610d5f565b610ee16020830185610d5f565b610eee6040830184610e95565b949350505050565b6000604082019050610f0b6000830185610d5f565b610f186020830184610e95565b9392505050565b6000602082019050610f346000830184610d6e565b92915050565b60006020820190508181036000830152610f5381610d7d565b9050919050565b60006020820190508181036000830152610f7381610da0565b9050919050565b60006020820190508181036000830152610f9381610dc3565b9050919050565b60006020820190508181036000830152610fb381610de6565b9050919050565b60006020820190508181036000830152610fd381610e09565b9050919050565b60006020820190508181036000830152610ff381610e2c565b9050919050565b6000602082019050818103600083015261101381610e4f565b9050919050565b6000602082019050818103600083015261103381610e72565b9050919050565b600060208201905061104f6000830184610e95565b92915050565b600082825260208201905092915050565b60006110718261112e565b915061107c8361112e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156110b1576110b061115c565b5b828201905092915050565b60006110c78261112e565b91506110d28361112e565b9250828210156110e5576110e461115c565b5b828203905092915050565b60006110fb8261110e565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006111438261114a565b9050919050565b60006111558261110e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4c6f636b65640000000000000000000000000000000000000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b7f546f6b656e207472616e73666572206661696c65640000000000000000000000600082015250565b7f416d6f756e742073686f756c642062652067726561746572207468616e207a6560008201527f726f000000000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f416d6f756e742073686f756c642062652067726561746572207468616e206f7260008201527f20657175616c20746f206d696e5374616b65416d6f756e740000000000000000602082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b61134e816110f0565b811461135957600080fd5b50565b61136581611102565b811461137057600080fd5b50565b61137c8161112e565b811461138757600080fd5b5056fea26469706673582212205a7eb1be02e17b958334044928017b4c2fc53b643ea1a13a1d93bfbd855ae96a64736f6c63430008010033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1648 CODESIZE SUB DUP1 PUSH3 0x1648 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x1B0 JUMP JUMPDEST PUSH3 0x57 PUSH3 0x4B PUSH3 0xB6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xBE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP POP POP PUSH3 0x278 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x193 DUP2 PUSH3 0x244 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1AA DUP2 PUSH3 0x25E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x1C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x1D6 DUP7 DUP3 DUP8 ADD PUSH3 0x182 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x1E9 DUP7 DUP3 DUP8 ADD PUSH3 0x199 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x1FC DUP7 DUP3 DUP8 ADD PUSH3 0x199 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x213 DUP3 PUSH3 0x21A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x24F DUP2 PUSH3 0x206 JUMP JUMPDEST DUP2 EQ PUSH3 0x25B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x269 DUP2 PUSH3 0x23A JUMP JUMPDEST DUP2 EQ PUSH3 0x275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x13C0 DUP1 PUSH3 0x288 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x94409A56 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xEE947A7C GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xEE947A7C EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0xF1887684 EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x244 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x94409A56 EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0xEB4AF045 EQ PUSH2 0x1D0 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x27E235E3 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x583D42FD EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x5D3EEA91 EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x178 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0xCBB JUMP JUMPDEST PUSH2 0x262 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x103A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x119 SWAP2 SWAP1 PUSH2 0xCBB JUMP JUMPDEST PUSH2 0x27A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12B SWAP2 SWAP1 PUSH2 0x103A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x149 SWAP2 SWAP1 PUSH2 0xD0D JUMP JUMPDEST PUSH2 0x292 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x158 PUSH2 0x58E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x162 PUSH2 0x5A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x103A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x180 PUSH2 0x654 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP2 SWAP1 PUSH2 0xEA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19E PUSH2 0x67D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x103A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0xD0D JUMP JUMPDEST PUSH2 0x683 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0xD0D JUMP JUMPDEST PUSH2 0x98C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F4 PUSH2 0x9E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x201 SWAP2 SWAP1 PUSH2 0x103A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x212 PUSH2 0x9E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21F SWAP2 SWAP1 PUSH2 0x103A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x242 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xCBB JUMP JUMPDEST PUSH2 0x9EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24C PUSH2 0xA72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x259 SWAP2 SWAP1 PUSH2 0xF1F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x29A PUSH2 0xA98 JUMP JUMPDEST PUSH2 0x2EE PUSH1 0x4 SLOAD PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xAE8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x330 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x327 SWAP1 PUSH2 0xF3A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x3B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A9 SWAP1 PUSH2 0xF7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40F SWAP3 SWAP2 SWAP1 PUSH2 0xEF6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x429 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x43D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x461 SWAP2 SWAP1 PUSH2 0xCE4 JUMP JUMPDEST PUSH2 0x4A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x497 SWAP1 PUSH2 0xF9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4F2 DUP2 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xAFE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB24546D975E2628748EFC9ACED80665E0FAD66272033E5C0EA25FD3AFAC99795 DUP3 PUSH1 0x40 MLOAD PUSH2 0x57B SWAP2 SWAP1 PUSH2 0x103A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x58B PUSH2 0xB14 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x596 PUSH2 0xB1D JUMP JUMPDEST PUSH2 0x5A0 PUSH1 0x0 PUSH2 0xB9B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5FF SWAP2 SWAP1 PUSH2 0xEA4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x617 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x62B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x64F SWAP2 SWAP1 PUSH2 0xD36 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x68B PUSH2 0xA98 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x6E0 DUP3 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xAE8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0x721 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x718 SWAP1 PUSH2 0xFFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x780 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xEBF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x79A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7AE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7D2 SWAP2 SWAP1 PUSH2 0xCE4 JUMP JUMPDEST PUSH2 0x811 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x808 SWAP1 PUSH2 0xF9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x863 DUP2 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xAE8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO PUSH2 0x933 JUMPI TIMESTAMP PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEBEDB8B3C678666E7F36970BC8F57ABF6D8FA2E828C0DA91EA5B75BF68ED101A DUP3 PUSH1 0x40 MLOAD PUSH2 0x979 SWAP2 SWAP1 PUSH2 0x103A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x989 PUSH2 0xB14 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x994 PUSH2 0xB1D JUMP JUMPDEST PUSH1 0x0 DUP2 LT ISZERO PUSH2 0x9D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9CF SWAP1 PUSH2 0xFBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x9F6 PUSH2 0xB1D JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA66 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA5D SWAP1 PUSH2 0xF5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA6F DUP2 PUSH2 0xB9B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xADE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD5 SWAP1 PUSH2 0x101A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xAF6 SWAP2 SWAP1 PUSH2 0x1066 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xB0C SWAP2 SWAP1 PUSH2 0x10BC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xB25 PUSH2 0xC5F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB43 PUSH2 0x654 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB99 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB90 SWAP1 PUSH2 0xFDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC76 DUP2 PUSH2 0x1345 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xC8B DUP2 PUSH2 0x135C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCA0 DUP2 PUSH2 0x1373 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xCB5 DUP2 PUSH2 0x1373 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xCDB DUP5 DUP3 DUP6 ADD PUSH2 0xC67 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD04 DUP5 DUP3 DUP6 ADD PUSH2 0xC7C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD2D DUP5 DUP3 DUP6 ADD PUSH2 0xC91 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD56 DUP5 DUP3 DUP6 ADD PUSH2 0xCA6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD68 DUP2 PUSH2 0x10F0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xD77 DUP2 PUSH2 0x1138 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD8A PUSH1 0x6 DUP4 PUSH2 0x1055 JUMP JUMPDEST SWAP2 POP PUSH2 0xD95 DUP3 PUSH2 0x118B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDAD PUSH1 0x26 DUP4 PUSH2 0x1055 JUMP JUMPDEST SWAP2 POP PUSH2 0xDB8 DUP3 PUSH2 0x11B4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDD0 PUSH1 0x14 DUP4 PUSH2 0x1055 JUMP JUMPDEST SWAP2 POP PUSH2 0xDDB DUP3 PUSH2 0x1203 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDF3 PUSH1 0x15 DUP4 PUSH2 0x1055 JUMP JUMPDEST SWAP2 POP PUSH2 0xDFE DUP3 PUSH2 0x122C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE16 PUSH1 0x22 DUP4 PUSH2 0x1055 JUMP JUMPDEST SWAP2 POP PUSH2 0xE21 DUP3 PUSH2 0x1255 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE39 PUSH1 0x20 DUP4 PUSH2 0x1055 JUMP JUMPDEST SWAP2 POP PUSH2 0xE44 DUP3 PUSH2 0x12A4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE5C PUSH1 0x38 DUP4 PUSH2 0x1055 JUMP JUMPDEST SWAP2 POP PUSH2 0xE67 DUP3 PUSH2 0x12CD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE7F PUSH1 0x1F DUP4 PUSH2 0x1055 JUMP JUMPDEST SWAP2 POP PUSH2 0xE8A DUP3 PUSH2 0x131C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE9E DUP2 PUSH2 0x112E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEB9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD5F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xED4 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xD5F JUMP JUMPDEST PUSH2 0xEE1 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xD5F JUMP JUMPDEST PUSH2 0xEEE PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xE95 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xF0B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xD5F JUMP JUMPDEST PUSH2 0xF18 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE95 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF34 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD6E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF53 DUP2 PUSH2 0xD7D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF73 DUP2 PUSH2 0xDA0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF93 DUP2 PUSH2 0xDC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFB3 DUP2 PUSH2 0xDE6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFD3 DUP2 PUSH2 0xE09 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFF3 DUP2 PUSH2 0xE2C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1013 DUP2 PUSH2 0xE4F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1033 DUP2 PUSH2 0xE72 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x104F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE95 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1071 DUP3 PUSH2 0x112E JUMP JUMPDEST SWAP2 POP PUSH2 0x107C DUP4 PUSH2 0x112E JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x10B1 JUMPI PUSH2 0x10B0 PUSH2 0x115C JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10C7 DUP3 PUSH2 0x112E JUMP JUMPDEST SWAP2 POP PUSH2 0x10D2 DUP4 PUSH2 0x112E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x10E5 JUMPI PUSH2 0x10E4 PUSH2 0x115C JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10FB DUP3 PUSH2 0x110E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1143 DUP3 PUSH2 0x114A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1155 DUP3 PUSH2 0x110E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4C6F636B65640000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x546F6B656E207472616E73666572206661696C65640000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416D6F756E742073686F756C642062652067726561746572207468616E207A65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x726F000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416D6F756E742073686F756C642062652067726561746572207468616E206F72 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20657175616C20746F206D696E5374616B65416D6F756E740000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x134E DUP2 PUSH2 0x10F0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1359 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1365 DUP2 PUSH2 0x1102 JUMP JUMPDEST DUP2 EQ PUSH2 0x1370 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x137C DUP2 PUSH2 0x112E JUMP JUMPDEST DUP2 EQ PUSH2 0x1387 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GAS PUSH31 0xB1BE02E17B958334044928017B4C2FC53B643EA1A13A1D93BFBD855AE96A64 PUSH20 0x6F6C634300080100330000000000000000000000 ",
							"sourceMap": "290:1958:5:-:0;;;818:195;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;1716:1:1;1821:7;:22;;;;922:13:5;907:5;;:29;;;;;;;;;;;;;;;;;;959:15;942:14;:32;;;;995:13;980:12;:28;;;;818:195;;;290:1958;;640:96:3;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2433:187;;:::o;7:143:6:-;;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:143::-;;244:6;238:13;229:22;;260:33;287:5;260:33;:::i;:::-;219:80;;;;:::o;305:596::-;;;;458:2;446:9;437:7;433:23;429:32;426:2;;;474:1;471;464:12;426:2;517:1;542:64;598:7;589:6;578:9;574:22;542:64;:::i;:::-;532:74;;488:128;655:2;681:64;737:7;728:6;717:9;713:22;681:64;:::i;:::-;671:74;;626:129;794:2;820:64;876:7;867:6;856:9;852:22;820:64;:::i;:::-;810:74;;765:129;416:485;;;;;:::o;907:96::-;;973:24;991:5;973:24;:::i;:::-;962:35;;952:51;;;:::o;1009:126::-;;1086:42;1079:5;1075:54;1064:65;;1054:81;;;:::o;1141:77::-;;1207:5;1196:16;;1186:32;;;:::o;1224:122::-;1297:24;1315:5;1297:24;:::i;:::-;1290:5;1287:35;1277:2;;1336:1;1333;1326:12;1277:2;1267:79;:::o;1352:122::-;1425:24;1443:5;1425:24;:::i;:::-;1418:5;1415:35;1405:2;;1464:1;1461;1454:12;1405:2;1395:79;:::o;290:1958:5:-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:13532:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:6",
														"type": ""
													}
												],
												"src": "7:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "212:77:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "222:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "237:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "231:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "222:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "277:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "253:23:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "253:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "253:30:6"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "190:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "198:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "206:5:6",
														"type": ""
													}
												],
												"src": "152:137:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "347:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "357:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "379:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "366:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "366:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "357:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "422:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "395:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "395:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "395:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "325:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "333:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "341:5:6",
														"type": ""
													}
												],
												"src": "295:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "503:80:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "513:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "528:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "522:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "522:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "513:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "571:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "544:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "544:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "481:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "489:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "497:5:6",
														"type": ""
													}
												],
												"src": "440:143:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "655:196:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "701:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "710:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "713:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "703:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "703:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "703:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "676:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "685:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "672:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "672:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "697:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "668:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "668:32:6"
															},
															"nodeType": "YulIf",
															"src": "665:2:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "727:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "742:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "756:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "746:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "771:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "806:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "817:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "802:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "802:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "826:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "781:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "781:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "771:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "625:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "636:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "648:6:6",
														"type": ""
													}
												],
												"src": "589:262:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "931:204:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "977:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "986:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "989:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "979:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "979:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "979:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "952:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "961:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "948:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "973:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "944:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "944:32:6"
															},
															"nodeType": "YulIf",
															"src": "941:2:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "1003:125:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1018:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1032:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1022:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1047:71:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1090:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1101:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1086:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1086:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1110:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1057:28:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1057:61:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1047:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "901:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "912:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "924:6:6",
														"type": ""
													}
												],
												"src": "857:278:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1207:196:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1253:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1262:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1265:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1255:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1255:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1255:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1228:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1237:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1224:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1224:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1249:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1220:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1220:32:6"
															},
															"nodeType": "YulIf",
															"src": "1217:2:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "1279:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1294:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1308:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1298:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1323:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1358:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1369:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1354:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1354:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1378:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1333:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1333:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1323:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1177:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1188:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1200:6:6",
														"type": ""
													}
												],
												"src": "1141:262:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1486:207:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1532:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1541:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1544:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1534:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1534:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1534:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1507:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1516:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1503:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1503:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1528:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1499:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1499:32:6"
															},
															"nodeType": "YulIf",
															"src": "1496:2:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "1558:128:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1573:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1587:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1577:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1602:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1648:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1659:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1644:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1644:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1668:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1612:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1612:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1602:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1456:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1467:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1479:6:6",
														"type": ""
													}
												],
												"src": "1409:284:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1764:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1781:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1804:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1786:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1786:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1774:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1774:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1774:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1752:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1759:3:6",
														"type": ""
													}
												],
												"src": "1699:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1902:80:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1919:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1969:5:6"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$244_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1924:44:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1924:51:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1912:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1912:64:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1912:64:6"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$244_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1890:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1897:3:6",
														"type": ""
													}
												],
												"src": "1823:159:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2134:219:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2144:73:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2210:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2215:1:6",
																		"type": "",
																		"value": "6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2151:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2151:66:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2144:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2315:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_10bc01d611f2c803e55ff98d999836f196afae7cf91f96f3b6f511e56ba84974",
																	"nodeType": "YulIdentifier",
																	"src": "2226:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2226:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2226:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2328:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2339:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2344:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2335:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2335:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2328:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_10bc01d611f2c803e55ff98d999836f196afae7cf91f96f3b6f511e56ba84974_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2122:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2130:3:6",
														"type": ""
													}
												],
												"src": "1988:365:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2505:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2515:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2581:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2586:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2522:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2522:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2515:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2687:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "2598:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2598:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2598:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2700:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2711:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2716:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2707:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2707:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2700:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2493:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2501:3:6",
														"type": ""
													}
												],
												"src": "2359:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2877:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2887:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2953:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2958:2:6",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2894:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2894:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2887:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3059:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																	"nodeType": "YulIdentifier",
																	"src": "2970:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2970:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2970:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3072:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3083:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3088:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3079:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3079:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3072:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2865:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2873:3:6",
														"type": ""
													}
												],
												"src": "2731:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3249:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3259:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3325:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3330:2:6",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3266:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3266:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3259:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3431:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																	"nodeType": "YulIdentifier",
																	"src": "3342:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3342:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3342:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3444:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3455:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3460:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3451:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3451:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3444:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3237:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3245:3:6",
														"type": ""
													}
												],
												"src": "3103:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3621:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3631:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3697:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3702:2:6",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3638:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3638:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3631:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3803:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_86ceaf40f78f95089708c16e6c28aa31172e9b6636983e7b1c5a9cebb43e7abd",
																	"nodeType": "YulIdentifier",
																	"src": "3714:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3714:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3714:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3816:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3827:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3832:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3823:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3823:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3816:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_86ceaf40f78f95089708c16e6c28aa31172e9b6636983e7b1c5a9cebb43e7abd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3609:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3617:3:6",
														"type": ""
													}
												],
												"src": "3475:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3993:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4003:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4069:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4074:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4010:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4010:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4003:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4175:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "4086:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4086:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4086:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4188:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4199:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4204:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4195:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4195:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4188:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3981:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3989:3:6",
														"type": ""
													}
												],
												"src": "3847:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4365:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4375:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4441:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4446:2:6",
																		"type": "",
																		"value": "56"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4382:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4382:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4375:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4547:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d0a08b5f8a78e7f8c109da4e72a03dd8742a9dcf74203ea2c80e6327607cb55a",
																	"nodeType": "YulIdentifier",
																	"src": "4458:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4458:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4458:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4560:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4571:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4576:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4567:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4567:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4560:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d0a08b5f8a78e7f8c109da4e72a03dd8742a9dcf74203ea2c80e6327607cb55a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4353:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4361:3:6",
														"type": ""
													}
												],
												"src": "4219:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4737:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4747:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4813:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4818:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4754:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4754:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4747:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4919:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nodeType": "YulIdentifier",
																	"src": "4830:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4830:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4830:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4932:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4943:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4948:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4939:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4939:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4932:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4725:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4733:3:6",
														"type": ""
													}
												],
												"src": "4591:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5028:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5045:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5068:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5050:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5050:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5038:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5038:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5038:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5016:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5023:3:6",
														"type": ""
													}
												],
												"src": "4963:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5185:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5195:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5207:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5218:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5203:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5203:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5195:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5275:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5288:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5299:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5284:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5284:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5231:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5231:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5231:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5157:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5169:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5180:4:6",
														"type": ""
													}
												],
												"src": "5087:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5469:288:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5479:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5491:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5502:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5487:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5487:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5479:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5559:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5572:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5583:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5568:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5568:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5515:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5515:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5515:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5640:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5653:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5664:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5649:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5649:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5596:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5596:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5596:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "5722:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5735:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5746:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5731:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5731:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5678:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5678:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5678:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5425:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5437:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5445:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5453:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5464:4:6",
														"type": ""
													}
												],
												"src": "5315:442:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5889:206:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5899:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5911:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5922:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5907:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5907:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5899:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5979:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5992:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6003:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5988:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5988:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5935:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5935:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5935:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6060:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6073:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6084:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6069:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6069:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6016:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6016:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6016:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5853:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5865:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5873:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5884:4:6",
														"type": ""
													}
												],
												"src": "5763:332:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6213:138:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6223:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6235:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6246:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6231:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6231:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6223:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6317:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6330:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6341:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6326:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6326:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$244_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6259:57:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6259:85:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6259:85:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$244__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6185:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6197:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6208:4:6",
														"type": ""
													}
												],
												"src": "6101:250:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6528:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6538:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6550:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6561:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6546:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6546:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6538:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6585:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6596:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6581:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6581:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6604:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6610:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6600:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6600:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6574:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6574:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6574:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6630:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6764:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_10bc01d611f2c803e55ff98d999836f196afae7cf91f96f3b6f511e56ba84974_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6638:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6638:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6630:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_10bc01d611f2c803e55ff98d999836f196afae7cf91f96f3b6f511e56ba84974__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6508:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6523:4:6",
														"type": ""
													}
												],
												"src": "6357:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6953:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6963:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6975:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6986:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6971:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6971:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6963:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7010:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7021:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7006:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7006:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7029:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7035:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7025:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7025:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6999:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6999:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6999:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7055:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7189:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7063:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7063:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7055:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6933:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6948:4:6",
														"type": ""
													}
												],
												"src": "6782:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7378:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7388:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7400:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7411:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7396:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7396:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7388:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7435:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7446:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7431:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7431:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7454:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7460:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7450:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7450:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7424:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7424:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7424:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7480:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7614:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7488:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7488:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7480:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7358:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7373:4:6",
														"type": ""
													}
												],
												"src": "7207:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7803:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7813:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7825:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7836:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7821:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7821:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7813:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7860:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7871:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7856:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7856:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7879:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7885:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7875:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7875:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7849:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7849:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7849:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7905:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8039:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7913:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7913:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7905:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7783:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7798:4:6",
														"type": ""
													}
												],
												"src": "7632:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8228:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8238:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8250:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8261:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8246:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8246:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8238:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8285:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8296:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8281:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8281:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8304:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8310:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8300:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8300:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8274:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8274:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8274:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8330:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8464:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_86ceaf40f78f95089708c16e6c28aa31172e9b6636983e7b1c5a9cebb43e7abd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8338:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8338:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8330:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_86ceaf40f78f95089708c16e6c28aa31172e9b6636983e7b1c5a9cebb43e7abd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8208:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8223:4:6",
														"type": ""
													}
												],
												"src": "8057:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8653:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8663:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8675:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8686:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8671:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8671:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8663:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8710:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8721:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8706:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8706:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8729:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8735:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8725:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8725:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8699:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8699:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8699:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8755:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8889:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8763:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8763:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8755:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8633:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8648:4:6",
														"type": ""
													}
												],
												"src": "8482:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9078:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9088:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9100:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9111:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9096:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9096:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9088:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9135:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9146:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9131:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9131:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9154:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9160:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9150:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9150:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9124:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9124:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9124:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9180:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9314:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d0a08b5f8a78e7f8c109da4e72a03dd8742a9dcf74203ea2c80e6327607cb55a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9188:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9188:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9180:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d0a08b5f8a78e7f8c109da4e72a03dd8742a9dcf74203ea2c80e6327607cb55a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9058:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9073:4:6",
														"type": ""
													}
												],
												"src": "8907:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9503:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9513:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9525:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9536:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9521:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9521:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9513:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9560:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9571:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9556:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9556:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9579:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9585:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9575:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9575:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9549:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9549:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9549:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9605:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9739:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9613:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9613:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9605:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9483:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9498:4:6",
														"type": ""
													}
												],
												"src": "9332:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9855:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9865:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9877:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9888:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9873:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9873:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9865:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9945:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9958:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9969:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9954:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9954:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9901:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9901:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9901:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9827:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9839:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9850:4:6",
														"type": ""
													}
												],
												"src": "9757:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10081:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10098:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10103:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10091:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10091:19:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10091:19:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10119:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10138:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10143:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10134:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10134:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "10119:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10053:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10058:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "10069:11:6",
														"type": ""
													}
												],
												"src": "9985:169:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10204:261:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10214:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10237:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10219:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10219:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10214:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10248:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10271:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10253:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10253:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10248:1:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10411:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10413:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10413:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10413:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10332:1:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10339:66:6",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "10407:1:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10335:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10335:74:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10329:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10329:81:6"
															},
															"nodeType": "YulIf",
															"src": "10326:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10443:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10454:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10457:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10450:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10450:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "10443:3:6"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10191:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10194:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "10200:3:6",
														"type": ""
													}
												],
												"src": "10160:305:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10516:146:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10526:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10549:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10531:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10531:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10526:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10560:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10583:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10565:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10565:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10560:1:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10607:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10609:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10609:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10609:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10601:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10604:1:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10598:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10598:8:6"
															},
															"nodeType": "YulIf",
															"src": "10595:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10639:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10651:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10654:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "10647:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10647:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "10639:4:6"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10502:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10505:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "10511:4:6",
														"type": ""
													}
												],
												"src": "10471:191:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10713:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10723:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10752:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "10734:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10734:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10723:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10695:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10705:7:6",
														"type": ""
													}
												],
												"src": "10668:96:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10812:48:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10822:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10847:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "10840:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10840:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10833:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10833:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10822:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10794:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10804:7:6",
														"type": ""
													}
												],
												"src": "10770:90:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10911:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10921:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10936:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10943:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10932:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10932:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10921:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10893:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10903:7:6",
														"type": ""
													}
												],
												"src": "10866:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11043:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11053:16:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "11064:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11053:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11025:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11035:7:6",
														"type": ""
													}
												],
												"src": "10998:77:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11155:80:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11165:64:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11223:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_contract$_IERC20_$244_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "11178:44:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11178:51:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "11165:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$244_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11135:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "11145:9:6",
														"type": ""
													}
												],
												"src": "11081:154:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11315:53:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11325:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11356:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "11338:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11338:24:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "11325:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$244_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11295:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "11305:9:6",
														"type": ""
													}
												],
												"src": "11241:127:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11402:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11419:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11422:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11412:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11412:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11412:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11516:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11519:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11509:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11509:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11509:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11540:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11543:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11533:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11533:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11533:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "11374:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11666:50:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11688:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11696:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11684:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11684:14:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11700:8:6",
																		"type": "",
																		"value": "Locked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11677:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11677:32:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11677:32:6"
														}
													]
												},
												"name": "store_literal_in_memory_10bc01d611f2c803e55ff98d999836f196afae7cf91f96f3b6f511e56ba84974",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11658:6:6",
														"type": ""
													}
												],
												"src": "11560:156:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11828:119:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11850:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11858:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11846:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11846:14:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11862:34:6",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11839:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11839:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11839:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11918:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11926:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11914:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11914:15:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11931:8:6",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11907:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11907:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11907:33:6"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11820:6:6",
														"type": ""
													}
												],
												"src": "11722:225:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12059:64:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12081:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12089:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12077:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12077:14:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12093:22:6",
																		"type": "",
																		"value": "Insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12070:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12070:46:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12070:46:6"
														}
													]
												},
												"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12051:6:6",
														"type": ""
													}
												],
												"src": "11953:170:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12235:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12257:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12265:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12253:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12253:14:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12269:23:6",
																		"type": "",
																		"value": "Token transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12246:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12246:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12246:47:6"
														}
													]
												},
												"name": "store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12227:6:6",
														"type": ""
													}
												],
												"src": "12129:171:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12412:115:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12434:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12442:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12430:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12430:14:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12446:34:6",
																		"type": "",
																		"value": "Amount should be greater than ze"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12423:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12423:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12423:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12502:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12510:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12498:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12498:15:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12515:4:6",
																		"type": "",
																		"value": "ro"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12491:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12491:29:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12491:29:6"
														}
													]
												},
												"name": "store_literal_in_memory_86ceaf40f78f95089708c16e6c28aa31172e9b6636983e7b1c5a9cebb43e7abd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12404:6:6",
														"type": ""
													}
												],
												"src": "12306:221:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12639:76:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12661:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12669:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12657:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12657:14:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12673:34:6",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12650:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12650:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12650:58:6"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12631:6:6",
														"type": ""
													}
												],
												"src": "12533:182:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12827:137:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12849:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12857:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12845:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12845:14:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12861:34:6",
																		"type": "",
																		"value": "Amount should be greater than or"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12838:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12838:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12838:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12917:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12925:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12913:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12913:15:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12930:26:6",
																		"type": "",
																		"value": " equal to minStakeAmount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12906:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12906:51:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12906:51:6"
														}
													]
												},
												"name": "store_literal_in_memory_d0a08b5f8a78e7f8c109da4e72a03dd8742a9dcf74203ea2c80e6327607cb55a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12819:6:6",
														"type": ""
													}
												],
												"src": "12721:243:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13076:75:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13098:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13106:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13094:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13094:14:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13110:33:6",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13087:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13087:57:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13087:57:6"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13068:6:6",
														"type": ""
													}
												],
												"src": "12970:181:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13200:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13257:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13266:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13269:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13259:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13259:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13259:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13223:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13248:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "13230:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13230:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13220:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13220:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13213:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13213:43:6"
															},
															"nodeType": "YulIf",
															"src": "13210:2:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13193:5:6",
														"type": ""
													}
												],
												"src": "13157:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13325:76:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13379:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13388:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13391:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13381:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13381:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13381:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13348:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13370:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "13355:14:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13355:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13345:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13345:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13338:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13338:40:6"
															},
															"nodeType": "YulIf",
															"src": "13335:2:6"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13318:5:6",
														"type": ""
													}
												],
												"src": "13285:116:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13450:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13507:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13516:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13519:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13509:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13509:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13509:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13473:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13498:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "13480:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13480:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13470:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13470:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13463:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13463:43:6"
															},
															"nodeType": "YulIf",
															"src": "13460:2:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13443:5:6",
														"type": ""
													}
												],
												"src": "13407:122:6"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IERC20_$244_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$244_to_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_10bc01d611f2c803e55ff98d999836f196afae7cf91f96f3b6f511e56ba84974_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 6)\n        store_literal_in_memory_10bc01d611f2c803e55ff98d999836f196afae7cf91f96f3b6f511e56ba84974(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_86ceaf40f78f95089708c16e6c28aa31172e9b6636983e7b1c5a9cebb43e7abd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_86ceaf40f78f95089708c16e6c28aa31172e9b6636983e7b1c5a9cebb43e7abd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_d0a08b5f8a78e7f8c109da4e72a03dd8742a9dcf74203ea2c80e6327607cb55a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 56)\n        store_literal_in_memory_d0a08b5f8a78e7f8c109da4e72a03dd8742a9dcf74203ea2c80e6327607cb55a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$244__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$244_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_10bc01d611f2c803e55ff98d999836f196afae7cf91f96f3b6f511e56ba84974__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_10bc01d611f2c803e55ff98d999836f196afae7cf91f96f3b6f511e56ba84974_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_86ceaf40f78f95089708c16e6c28aa31172e9b6636983e7b1c5a9cebb43e7abd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_86ceaf40f78f95089708c16e6c28aa31172e9b6636983e7b1c5a9cebb43e7abd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_d0a08b5f8a78e7f8c109da4e72a03dd8742a9dcf74203ea2c80e6327607cb55a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d0a08b5f8a78e7f8c109da4e72a03dd8742a9dcf74203ea2c80e6327607cb55a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IERC20_$244_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IERC20_$244_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$244_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_10bc01d611f2c803e55ff98d999836f196afae7cf91f96f3b6f511e56ba84974(memPtr) {\n\n        mstore(add(memPtr, 0), \"Locked\")\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance\")\n\n    }\n\n    function store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token transfer failed\")\n\n    }\n\n    function store_literal_in_memory_86ceaf40f78f95089708c16e6c28aa31172e9b6636983e7b1c5a9cebb43e7abd(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount should be greater than ze\")\n\n        mstore(add(memPtr, 32), \"ro\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_d0a08b5f8a78e7f8c109da4e72a03dd8742a9dcf74203ea2c80e6327607cb55a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount should be greater than or\")\n\n        mstore(add(memPtr, 32), \" equal to minStakeAmount\")\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c806394409a561161008c578063ee947a7c11610066578063ee947a7c146101ec578063f18876841461020a578063f2fde38b14610228578063fc0c546a14610244576100cf565b806394409a5614610196578063a694fc3a146101b4578063eb4af045146101d0576100cf565b806327e235e3146100d4578063583d42fd146101045780635d3eea9114610134578063715018a614610150578063817b1cd21461015a5780638da5cb5b14610178575b600080fd5b6100ee60048036038101906100e99190610cbb565b610262565b6040516100fb919061103a565b60405180910390f35b61011e60048036038101906101199190610cbb565b61027a565b60405161012b919061103a565b60405180910390f35b61014e60048036038101906101499190610d0d565b610292565b005b61015861058e565b005b6101626105a2565b60405161016f919061103a565b60405180910390f35b610180610654565b60405161018d9190610ea4565b60405180910390f35b61019e61067d565b6040516101ab919061103a565b60405180910390f35b6101ce60048036038101906101c99190610d0d565b610683565b005b6101ea60048036038101906101e59190610d0d565b61098c565b005b6101f46109e2565b604051610201919061103a565b60405180910390f35b6102126109e8565b60405161021f919061103a565b60405180910390f35b610242600480360381019061023d9190610cbb565b6109ee565b005b61024c610a72565b6040516102599190610f1f565b60405180910390f35b60076020528060005260406000206000915090505481565b60056020528060005260406000206000915090505481565b61029a610a98565b6102ee600454600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ae890919063ffffffff16565b421015610330576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032790610f3a565b60405180910390fd5b80600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156103b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a990610f7a565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161040f929190610ef6565b602060405180830381600087803b15801561042957600080fd5b505af115801561043d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104619190610ce4565b6104a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049790610f9a565b60405180910390fd5b6104f281600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610afe90919063ffffffff16565b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff167fb24546d975e2628748efc9aced80665e0fad66272033e5c0ea25fd3afac997958260405161057b919061103a565b60405180910390a261058b610b14565b50565b610596610b1d565b6105a06000610b9b565b565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105ff9190610ea4565b60206040518083038186803b15801561061757600080fd5b505afa15801561062b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064f9190610d36565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60035481565b61068b610a98565b6006546106e082600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ae890919063ffffffff16565b1015610721576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071890610ffa565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161078093929190610ebf565b602060405180830381600087803b15801561079a57600080fd5b505af11580156107ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d29190610ce4565b610811576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080890610f9a565b60405180910390fd5b61086381600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ae890919063ffffffff16565b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414156109335742600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b3373ffffffffffffffffffffffffffffffffffffffff167febedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a82604051610979919061103a565b60405180910390a2610989610b14565b50565b610994610b1d565b60008110156109d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109cf90610fba565b60405180910390fd5b8060068190555050565b60045481565b60065481565b6109f6610b1d565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610a66576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5d90610f5a565b60405180910390fd5b610a6f81610b9b565b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026001541415610ade576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad59061101a565b60405180910390fd5b6002600181905550565b60008183610af69190611066565b905092915050565b60008183610b0c91906110bc565b905092915050565b60018081905550565b610b25610c5f565b73ffffffffffffffffffffffffffffffffffffffff16610b43610654565b73ffffffffffffffffffffffffffffffffffffffff1614610b99576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9090610fda565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600081359050610c7681611345565b92915050565b600081519050610c8b8161135c565b92915050565b600081359050610ca081611373565b92915050565b600081519050610cb581611373565b92915050565b600060208284031215610ccd57600080fd5b6000610cdb84828501610c67565b91505092915050565b600060208284031215610cf657600080fd5b6000610d0484828501610c7c565b91505092915050565b600060208284031215610d1f57600080fd5b6000610d2d84828501610c91565b91505092915050565b600060208284031215610d4857600080fd5b6000610d5684828501610ca6565b91505092915050565b610d68816110f0565b82525050565b610d7781611138565b82525050565b6000610d8a600683611055565b9150610d958261118b565b602082019050919050565b6000610dad602683611055565b9150610db8826111b4565b604082019050919050565b6000610dd0601483611055565b9150610ddb82611203565b602082019050919050565b6000610df3601583611055565b9150610dfe8261122c565b602082019050919050565b6000610e16602283611055565b9150610e2182611255565b604082019050919050565b6000610e39602083611055565b9150610e44826112a4565b602082019050919050565b6000610e5c603883611055565b9150610e67826112cd565b604082019050919050565b6000610e7f601f83611055565b9150610e8a8261131c565b602082019050919050565b610e9e8161112e565b82525050565b6000602082019050610eb96000830184610d5f565b92915050565b6000606082019050610ed46000830186610d5f565b610ee16020830185610d5f565b610eee6040830184610e95565b949350505050565b6000604082019050610f0b6000830185610d5f565b610f186020830184610e95565b9392505050565b6000602082019050610f346000830184610d6e565b92915050565b60006020820190508181036000830152610f5381610d7d565b9050919050565b60006020820190508181036000830152610f7381610da0565b9050919050565b60006020820190508181036000830152610f9381610dc3565b9050919050565b60006020820190508181036000830152610fb381610de6565b9050919050565b60006020820190508181036000830152610fd381610e09565b9050919050565b60006020820190508181036000830152610ff381610e2c565b9050919050565b6000602082019050818103600083015261101381610e4f565b9050919050565b6000602082019050818103600083015261103381610e72565b9050919050565b600060208201905061104f6000830184610e95565b92915050565b600082825260208201905092915050565b60006110718261112e565b915061107c8361112e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156110b1576110b061115c565b5b828201905092915050565b60006110c78261112e565b91506110d28361112e565b9250828210156110e5576110e461115c565b5b828203905092915050565b60006110fb8261110e565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006111438261114a565b9050919050565b60006111558261110e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4c6f636b65640000000000000000000000000000000000000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b7f546f6b656e207472616e73666572206661696c65640000000000000000000000600082015250565b7f416d6f756e742073686f756c642062652067726561746572207468616e207a6560008201527f726f000000000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f416d6f756e742073686f756c642062652067726561746572207468616e206f7260008201527f20657175616c20746f206d696e5374616b65416d6f756e740000000000000000602082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b61134e816110f0565b811461135957600080fd5b50565b61136581611102565b811461137057600080fd5b50565b61137c8161112e565b811461138757600080fd5b5056fea26469706673582212205a7eb1be02e17b958334044928017b4c2fc53b643ea1a13a1d93bfbd855ae96a64736f6c63430008010033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x94409A56 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xEE947A7C GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xEE947A7C EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0xF1887684 EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x244 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x94409A56 EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0xEB4AF045 EQ PUSH2 0x1D0 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x27E235E3 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x583D42FD EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x5D3EEA91 EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x178 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0xCBB JUMP JUMPDEST PUSH2 0x262 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x103A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x119 SWAP2 SWAP1 PUSH2 0xCBB JUMP JUMPDEST PUSH2 0x27A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12B SWAP2 SWAP1 PUSH2 0x103A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x149 SWAP2 SWAP1 PUSH2 0xD0D JUMP JUMPDEST PUSH2 0x292 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x158 PUSH2 0x58E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x162 PUSH2 0x5A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x103A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x180 PUSH2 0x654 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP2 SWAP1 PUSH2 0xEA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19E PUSH2 0x67D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x103A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0xD0D JUMP JUMPDEST PUSH2 0x683 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0xD0D JUMP JUMPDEST PUSH2 0x98C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F4 PUSH2 0x9E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x201 SWAP2 SWAP1 PUSH2 0x103A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x212 PUSH2 0x9E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21F SWAP2 SWAP1 PUSH2 0x103A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x242 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xCBB JUMP JUMPDEST PUSH2 0x9EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24C PUSH2 0xA72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x259 SWAP2 SWAP1 PUSH2 0xF1F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x29A PUSH2 0xA98 JUMP JUMPDEST PUSH2 0x2EE PUSH1 0x4 SLOAD PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xAE8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x330 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x327 SWAP1 PUSH2 0xF3A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x3B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A9 SWAP1 PUSH2 0xF7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40F SWAP3 SWAP2 SWAP1 PUSH2 0xEF6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x429 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x43D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x461 SWAP2 SWAP1 PUSH2 0xCE4 JUMP JUMPDEST PUSH2 0x4A0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x497 SWAP1 PUSH2 0xF9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4F2 DUP2 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xAFE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB24546D975E2628748EFC9ACED80665E0FAD66272033E5C0EA25FD3AFAC99795 DUP3 PUSH1 0x40 MLOAD PUSH2 0x57B SWAP2 SWAP1 PUSH2 0x103A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x58B PUSH2 0xB14 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x596 PUSH2 0xB1D JUMP JUMPDEST PUSH2 0x5A0 PUSH1 0x0 PUSH2 0xB9B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5FF SWAP2 SWAP1 PUSH2 0xEA4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x617 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x62B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x64F SWAP2 SWAP1 PUSH2 0xD36 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x68B PUSH2 0xA98 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x6E0 DUP3 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xAE8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST LT ISZERO PUSH2 0x721 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x718 SWAP1 PUSH2 0xFFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x780 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xEBF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x79A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7AE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7D2 SWAP2 SWAP1 PUSH2 0xCE4 JUMP JUMPDEST PUSH2 0x811 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x808 SWAP1 PUSH2 0xF9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x863 DUP2 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xAE8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO PUSH2 0x933 JUMPI TIMESTAMP PUSH1 0x5 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEBEDB8B3C678666E7F36970BC8F57ABF6D8FA2E828C0DA91EA5B75BF68ED101A DUP3 PUSH1 0x40 MLOAD PUSH2 0x979 SWAP2 SWAP1 PUSH2 0x103A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x989 PUSH2 0xB14 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x994 PUSH2 0xB1D JUMP JUMPDEST PUSH1 0x0 DUP2 LT ISZERO PUSH2 0x9D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9CF SWAP1 PUSH2 0xFBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x9F6 PUSH2 0xB1D JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA66 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA5D SWAP1 PUSH2 0xF5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA6F DUP2 PUSH2 0xB9B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xADE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD5 SWAP1 PUSH2 0x101A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xAF6 SWAP2 SWAP1 PUSH2 0x1066 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xB0C SWAP2 SWAP1 PUSH2 0x10BC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xB25 PUSH2 0xC5F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB43 PUSH2 0x654 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB99 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB90 SWAP1 PUSH2 0xFDA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xC76 DUP2 PUSH2 0x1345 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xC8B DUP2 PUSH2 0x135C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCA0 DUP2 PUSH2 0x1373 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xCB5 DUP2 PUSH2 0x1373 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xCDB DUP5 DUP3 DUP6 ADD PUSH2 0xC67 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD04 DUP5 DUP3 DUP6 ADD PUSH2 0xC7C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD2D DUP5 DUP3 DUP6 ADD PUSH2 0xC91 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD56 DUP5 DUP3 DUP6 ADD PUSH2 0xCA6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD68 DUP2 PUSH2 0x10F0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xD77 DUP2 PUSH2 0x1138 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD8A PUSH1 0x6 DUP4 PUSH2 0x1055 JUMP JUMPDEST SWAP2 POP PUSH2 0xD95 DUP3 PUSH2 0x118B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDAD PUSH1 0x26 DUP4 PUSH2 0x1055 JUMP JUMPDEST SWAP2 POP PUSH2 0xDB8 DUP3 PUSH2 0x11B4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDD0 PUSH1 0x14 DUP4 PUSH2 0x1055 JUMP JUMPDEST SWAP2 POP PUSH2 0xDDB DUP3 PUSH2 0x1203 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDF3 PUSH1 0x15 DUP4 PUSH2 0x1055 JUMP JUMPDEST SWAP2 POP PUSH2 0xDFE DUP3 PUSH2 0x122C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE16 PUSH1 0x22 DUP4 PUSH2 0x1055 JUMP JUMPDEST SWAP2 POP PUSH2 0xE21 DUP3 PUSH2 0x1255 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE39 PUSH1 0x20 DUP4 PUSH2 0x1055 JUMP JUMPDEST SWAP2 POP PUSH2 0xE44 DUP3 PUSH2 0x12A4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE5C PUSH1 0x38 DUP4 PUSH2 0x1055 JUMP JUMPDEST SWAP2 POP PUSH2 0xE67 DUP3 PUSH2 0x12CD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE7F PUSH1 0x1F DUP4 PUSH2 0x1055 JUMP JUMPDEST SWAP2 POP PUSH2 0xE8A DUP3 PUSH2 0x131C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE9E DUP2 PUSH2 0x112E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEB9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD5F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xED4 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xD5F JUMP JUMPDEST PUSH2 0xEE1 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xD5F JUMP JUMPDEST PUSH2 0xEEE PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xE95 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xF0B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xD5F JUMP JUMPDEST PUSH2 0xF18 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE95 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF34 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD6E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF53 DUP2 PUSH2 0xD7D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF73 DUP2 PUSH2 0xDA0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF93 DUP2 PUSH2 0xDC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFB3 DUP2 PUSH2 0xDE6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFD3 DUP2 PUSH2 0xE09 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFF3 DUP2 PUSH2 0xE2C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1013 DUP2 PUSH2 0xE4F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1033 DUP2 PUSH2 0xE72 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x104F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE95 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1071 DUP3 PUSH2 0x112E JUMP JUMPDEST SWAP2 POP PUSH2 0x107C DUP4 PUSH2 0x112E JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x10B1 JUMPI PUSH2 0x10B0 PUSH2 0x115C JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10C7 DUP3 PUSH2 0x112E JUMP JUMPDEST SWAP2 POP PUSH2 0x10D2 DUP4 PUSH2 0x112E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x10E5 JUMPI PUSH2 0x10E4 PUSH2 0x115C JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10FB DUP3 PUSH2 0x110E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1143 DUP3 PUSH2 0x114A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1155 DUP3 PUSH2 0x110E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4C6F636B65640000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x546F6B656E207472616E73666572206661696C65640000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416D6F756E742073686F756C642062652067726561746572207468616E207A65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x726F000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416D6F756E742073686F756C642062652067726561746572207468616E206F72 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20657175616C20746F206D696E5374616B65416D6F756E740000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x134E DUP2 PUSH2 0x10F0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1359 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1365 DUP2 PUSH2 0x1102 JUMP JUMPDEST DUP2 EQ PUSH2 0x1370 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x137C DUP2 PUSH2 0x112E JUMP JUMPDEST DUP2 EQ PUSH2 0x1387 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GAS PUSH31 0xB1BE02E17B958334044928017B4C2FC53B643EA1A13A1D93BFBD855AE96A64 PUSH20 0x6F6C634300080100330000000000000000000000 ",
							"sourceMap": "290:1958:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;661:43;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;501:46;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1495:396;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1831:101:0;;;:::i;:::-;;2141:105:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1201:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;400:31:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1017:474;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1928:163;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;435:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;583:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;376:19:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;661:43;;;;;;;;;;;;;;;;;:::o;501:46::-;;;;;;;;;;;;;;;;;:::o;1495:396::-;2261:21:1;:19;:21::i;:::-;1585:41:5::1;1613:12;;1585:11;:23;1597:10;1585:23;;;;;;;;;;;;;;;;:27;;:41;;;;:::i;:::-;1565:15;:62;;1557:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;1676:7;1652:8;:20;1661:10;1652:20;;;;;;;;;;;;;;;;:31;;1644:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;1722:5;;;;;;;;;;;:14;;;1737:10;1749:7;1722:35;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1714:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1813:33;1838:7;1813:8;:20;1822:10;1813:20;;;;;;;;;;;;;;;;:24;;:33;;;;:::i;:::-;1790:8;:20;1799:10;1790:20;;;;;;;;;;;;;;;:56;;;;1866:10;1858:28;;;1878:7;1858:28;;;;;;:::i;:::-;;;;;;;;2303:20:1::0;:18;:20::i;:::-;1495:396:5;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;2141:105:5:-;2187:7;2211:5;;;;;;;;;;;:15;;;2235:4;2211:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2204:37;;2141:105;:::o;1201:85:0:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;400:31:5:-;;;;:::o;1017:474::-;2261:21:1;:19;:21::i;:::-;1122:14:5::1;;1085:33;1110:7;1085:8;:20;1094:10;1085:20;;;;;;;;;;;;;;;;:24;;:33;;;;:::i;:::-;:51;;1077:120;;;;;;;;;;;;:::i;:::-;;;;;;;;;1211:5;;;;;;;;;;;:18;;;1230:10;1250:4;1257:7;1211:54;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1203:88;;;;;;;;;;;;:::i;:::-;;;;;;;;;1321:33;1346:7;1321:8;:20;1330:10;1321:20;;;;;;;;;;;;;;;;:24;;:33;;;;:::i;:::-;1298:8;:20;1307:10;1298:20;;;;;;;;;;;;;;;:56;;;;1391:1;1364:11;:23;1376:10;1364:23;;;;;;;;;;;;;;;;:28;1361:88;;;1427:15;1401:11;:23;1413:10;1401:23;;;;;;;;;;;;;;;:41;;;;1361:88;1466:10;1460:26;;;1478:7;1460:26;;;;;;:::i;:::-;;;;;;;;2303:20:1::0;:18;:20::i;:::-;1017:474:5;:::o;1928:163::-;1094:13:0;:11;:13::i;:::-;2016:1:5::1;2005:7;:12;;1997:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;2079:7;2062:14;:24;;;;1928:163:::0;:::o;435:27::-;;;;:::o;583:29::-;;;;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;;;2161:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;376:19:5:-;;;;;;;;;;;;;:::o;2336:287:1:-;1759:1;2468:7;;:19;;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;2755:96:4:-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;3122:::-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;2629:209:1:-;1716:1;2809:7;:22;;;;2629:209::o;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2433:187;;:::o;640:96:3:-;693:7;719:10;712:17;;640:96;:::o;7:139:6:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:137::-;;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;212:77;;;;:::o;295:139::-;;379:6;366:20;357:29;;395:33;422:5;395:33;:::i;:::-;347:87;;;;:::o;440:143::-;;528:6;522:13;513:22;;544:33;571:5;544:33;:::i;:::-;503:80;;;;:::o;589:262::-;;697:2;685:9;676:7;672:23;668:32;665:2;;;713:1;710;703:12;665:2;756:1;781:53;826:7;817:6;806:9;802:22;781:53;:::i;:::-;771:63;;727:117;655:196;;;;:::o;857:278::-;;973:2;961:9;952:7;948:23;944:32;941:2;;;989:1;986;979:12;941:2;1032:1;1057:61;1110:7;1101:6;1090:9;1086:22;1057:61;:::i;:::-;1047:71;;1003:125;931:204;;;;:::o;1141:262::-;;1249:2;1237:9;1228:7;1224:23;1220:32;1217:2;;;1265:1;1262;1255:12;1217:2;1308:1;1333:53;1378:7;1369:6;1358:9;1354:22;1333:53;:::i;:::-;1323:63;;1279:117;1207:196;;;;:::o;1409:284::-;;1528:2;1516:9;1507:7;1503:23;1499:32;1496:2;;;1544:1;1541;1534:12;1496:2;1587:1;1612:64;1668:7;1659:6;1648:9;1644:22;1612:64;:::i;:::-;1602:74;;1558:128;1486:207;;;;:::o;1699:118::-;1786:24;1804:5;1786:24;:::i;:::-;1781:3;1774:37;1764:53;;:::o;1823:159::-;1924:51;1969:5;1924:51;:::i;:::-;1919:3;1912:64;1902:80;;:::o;1988:365::-;;2151:66;2215:1;2210:3;2151:66;:::i;:::-;2144:73;;2226:93;2315:3;2226:93;:::i;:::-;2344:2;2339:3;2335:12;2328:19;;2134:219;;;:::o;2359:366::-;;2522:67;2586:2;2581:3;2522:67;:::i;:::-;2515:74;;2598:93;2687:3;2598:93;:::i;:::-;2716:2;2711:3;2707:12;2700:19;;2505:220;;;:::o;2731:366::-;;2894:67;2958:2;2953:3;2894:67;:::i;:::-;2887:74;;2970:93;3059:3;2970:93;:::i;:::-;3088:2;3083:3;3079:12;3072:19;;2877:220;;;:::o;3103:366::-;;3266:67;3330:2;3325:3;3266:67;:::i;:::-;3259:74;;3342:93;3431:3;3342:93;:::i;:::-;3460:2;3455:3;3451:12;3444:19;;3249:220;;;:::o;3475:366::-;;3638:67;3702:2;3697:3;3638:67;:::i;:::-;3631:74;;3714:93;3803:3;3714:93;:::i;:::-;3832:2;3827:3;3823:12;3816:19;;3621:220;;;:::o;3847:366::-;;4010:67;4074:2;4069:3;4010:67;:::i;:::-;4003:74;;4086:93;4175:3;4086:93;:::i;:::-;4204:2;4199:3;4195:12;4188:19;;3993:220;;;:::o;4219:366::-;;4382:67;4446:2;4441:3;4382:67;:::i;:::-;4375:74;;4458:93;4547:3;4458:93;:::i;:::-;4576:2;4571:3;4567:12;4560:19;;4365:220;;;:::o;4591:366::-;;4754:67;4818:2;4813:3;4754:67;:::i;:::-;4747:74;;4830:93;4919:3;4830:93;:::i;:::-;4948:2;4943:3;4939:12;4932:19;;4737:220;;;:::o;4963:118::-;5050:24;5068:5;5050:24;:::i;:::-;5045:3;5038:37;5028:53;;:::o;5087:222::-;;5218:2;5207:9;5203:18;5195:26;;5231:71;5299:1;5288:9;5284:17;5275:6;5231:71;:::i;:::-;5185:124;;;;:::o;5315:442::-;;5502:2;5491:9;5487:18;5479:26;;5515:71;5583:1;5572:9;5568:17;5559:6;5515:71;:::i;:::-;5596:72;5664:2;5653:9;5649:18;5640:6;5596:72;:::i;:::-;5678;5746:2;5735:9;5731:18;5722:6;5678:72;:::i;:::-;5469:288;;;;;;:::o;5763:332::-;;5922:2;5911:9;5907:18;5899:26;;5935:71;6003:1;5992:9;5988:17;5979:6;5935:71;:::i;:::-;6016:72;6084:2;6073:9;6069:18;6060:6;6016:72;:::i;:::-;5889:206;;;;;:::o;6101:250::-;;6246:2;6235:9;6231:18;6223:26;;6259:85;6341:1;6330:9;6326:17;6317:6;6259:85;:::i;:::-;6213:138;;;;:::o;6357:419::-;;6561:2;6550:9;6546:18;6538:26;;6610:9;6604:4;6600:20;6596:1;6585:9;6581:17;6574:47;6638:131;6764:4;6638:131;:::i;:::-;6630:139;;6528:248;;;:::o;6782:419::-;;6986:2;6975:9;6971:18;6963:26;;7035:9;7029:4;7025:20;7021:1;7010:9;7006:17;6999:47;7063:131;7189:4;7063:131;:::i;:::-;7055:139;;6953:248;;;:::o;7207:419::-;;7411:2;7400:9;7396:18;7388:26;;7460:9;7454:4;7450:20;7446:1;7435:9;7431:17;7424:47;7488:131;7614:4;7488:131;:::i;:::-;7480:139;;7378:248;;;:::o;7632:419::-;;7836:2;7825:9;7821:18;7813:26;;7885:9;7879:4;7875:20;7871:1;7860:9;7856:17;7849:47;7913:131;8039:4;7913:131;:::i;:::-;7905:139;;7803:248;;;:::o;8057:419::-;;8261:2;8250:9;8246:18;8238:26;;8310:9;8304:4;8300:20;8296:1;8285:9;8281:17;8274:47;8338:131;8464:4;8338:131;:::i;:::-;8330:139;;8228:248;;;:::o;8482:419::-;;8686:2;8675:9;8671:18;8663:26;;8735:9;8729:4;8725:20;8721:1;8710:9;8706:17;8699:47;8763:131;8889:4;8763:131;:::i;:::-;8755:139;;8653:248;;;:::o;8907:419::-;;9111:2;9100:9;9096:18;9088:26;;9160:9;9154:4;9150:20;9146:1;9135:9;9131:17;9124:47;9188:131;9314:4;9188:131;:::i;:::-;9180:139;;9078:248;;;:::o;9332:419::-;;9536:2;9525:9;9521:18;9513:26;;9585:9;9579:4;9575:20;9571:1;9560:9;9556:17;9549:47;9613:131;9739:4;9613:131;:::i;:::-;9605:139;;9503:248;;;:::o;9757:222::-;;9888:2;9877:9;9873:18;9865:26;;9901:71;9969:1;9958:9;9954:17;9945:6;9901:71;:::i;:::-;9855:124;;;;:::o;9985:169::-;;10103:6;10098:3;10091:19;10143:4;10138:3;10134:14;10119:29;;10081:73;;;;:::o;10160:305::-;;10219:20;10237:1;10219:20;:::i;:::-;10214:25;;10253:20;10271:1;10253:20;:::i;:::-;10248:25;;10407:1;10339:66;10335:74;10332:1;10329:81;10326:2;;;10413:18;;:::i;:::-;10326:2;10457:1;10454;10450:9;10443:16;;10204:261;;;;:::o;10471:191::-;;10531:20;10549:1;10531:20;:::i;:::-;10526:25;;10565:20;10583:1;10565:20;:::i;:::-;10560:25;;10604:1;10601;10598:8;10595:2;;;10609:18;;:::i;:::-;10595:2;10654:1;10651;10647:9;10639:17;;10516:146;;;;:::o;10668:96::-;;10734:24;10752:5;10734:24;:::i;:::-;10723:35;;10713:51;;;:::o;10770:90::-;;10847:5;10840:13;10833:21;10822:32;;10812:48;;;:::o;10866:126::-;;10943:42;10936:5;10932:54;10921:65;;10911:81;;;:::o;10998:77::-;;11064:5;11053:16;;11043:32;;;:::o;11081:154::-;;11178:51;11223:5;11178:51;:::i;:::-;11165:64;;11155:80;;;:::o;11241:127::-;;11338:24;11356:5;11338:24;:::i;:::-;11325:37;;11315:53;;;:::o;11374:180::-;11422:77;11419:1;11412:88;11519:4;11516:1;11509:15;11543:4;11540:1;11533:15;11560:156;11700:8;11696:1;11688:6;11684:14;11677:32;11666:50;:::o;11722:225::-;11862:34;11858:1;11850:6;11846:14;11839:58;11931:8;11926:2;11918:6;11914:15;11907:33;11828:119;:::o;11953:170::-;12093:22;12089:1;12081:6;12077:14;12070:46;12059:64;:::o;12129:171::-;12269:23;12265:1;12257:6;12253:14;12246:47;12235:65;:::o;12306:221::-;12446:34;12442:1;12434:6;12430:14;12423:58;12515:4;12510:2;12502:6;12498:15;12491:29;12412:115;:::o;12533:182::-;12673:34;12669:1;12661:6;12657:14;12650:58;12639:76;:::o;12721:243::-;12861:34;12857:1;12849:6;12845:14;12838:58;12930:26;12925:2;12917:6;12913:15;12906:51;12827:137;:::o;12970:181::-;13110:33;13106:1;13098:6;13094:14;13087:57;13076:75;:::o;13157:122::-;13230:24;13248:5;13230:24;:::i;:::-;13223:5;13220:35;13210:2;;13269:1;13266;13259:12;13210:2;13200:79;:::o;13285:116::-;13355:21;13370:5;13355:21;:::i;:::-;13348:5;13345:32;13335:2;;13391:1;13388;13381:12;13335:2;13325:76;:::o;13407:122::-;13480:24;13498:5;13480:24;:::i;:::-;13473:5;13470:35;13460:2;;13519:1;13516;13509:12;13460:2;13450:79;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1011200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balances(address)": "1515",
								"lockupPeriod()": "1151",
								"minStakeAmount()": "1173",
								"owner()": "1333",
								"renounceOwnership()": "24465",
								"setMinStakeAmount(uint256)": "21477",
								"stake(uint256)": "infinite",
								"stakingTime(address)": "1537",
								"token()": "1345",
								"totalStakeAmount()": "1152",
								"totalStaked()": "infinite",
								"transferOwnership(address)": "24813",
								"unStake(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 290,
									"end": 2248,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 290,
									"end": 2248,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 290,
									"end": 2248,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 818,
									"end": 1013,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 818,
									"end": 1013,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 818,
									"end": 1013,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 818,
									"end": 1013,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 818,
									"end": 1013,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 818,
									"end": 1013,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 818,
									"end": 1013,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 818,
									"end": 1013,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 818,
									"end": 1013,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 818,
									"end": 1013,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 818,
									"end": 1013,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 818,
									"end": 1013,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 818,
									"end": 1013,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 818,
									"end": 1013,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 818,
									"end": 1013,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 818,
									"end": 1013,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 818,
									"end": 1013,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 818,
									"end": 1013,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 818,
									"end": 1013,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 818,
									"end": 1013,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 818,
									"end": 1013,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 818,
									"end": 1013,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 818,
									"end": 1013,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 818,
									"end": 1013,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 818,
									"end": 1013,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 818,
									"end": 1013,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 818,
									"end": 1013,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 818,
									"end": 1013,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 818,
									"end": 1013,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 818,
									"end": 1013,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 818,
									"end": 1013,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 818,
									"end": 1013,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 818,
									"end": 1013,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 818,
									"end": 1013,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 818,
									"end": 1013,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 922,
									"end": 935,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 907,
									"end": 912,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 907,
									"end": 912,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 907,
									"end": 936,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 907,
									"end": 936,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 907,
									"end": 936,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 907,
									"end": 936,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 907,
									"end": 936,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 907,
									"end": 936,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 907,
									"end": 936,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 907,
									"end": 936,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 907,
									"end": 936,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 907,
									"end": 936,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 907,
									"end": 936,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 907,
									"end": 936,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 907,
									"end": 936,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 907,
									"end": 936,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 907,
									"end": 936,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 907,
									"end": 936,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 907,
									"end": 936,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 907,
									"end": 936,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 959,
									"end": 974,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 942,
									"end": 956,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 942,
									"end": 974,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 942,
									"end": 974,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 942,
									"end": 974,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 942,
									"end": 974,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 995,
									"end": 1008,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 980,
									"end": 992,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 980,
									"end": 1008,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 980,
									"end": 1008,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 980,
									"end": 1008,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 980,
									"end": 1008,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 818,
									"end": 1013,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 818,
									"end": 1013,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 818,
									"end": 1013,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 290,
									"end": 2248,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 290,
									"end": 2248,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2550,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2604,
									"end": 2612,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2594,
									"end": 2602,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7,
									"end": 150,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 70,
									"end": 150,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 70,
									"end": 150,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 70,
									"end": 150,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 70,
									"end": 150,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 70,
									"end": 150,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 299,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 156,
									"end": 299,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 156,
									"end": 299,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 250,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 238,
									"end": 251,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 229,
									"end": 251,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 229,
									"end": 251,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 260,
									"end": 293,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 287,
									"end": 292,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 260,
									"end": 293,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 260,
									"end": 293,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 260,
									"end": 293,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 260,
									"end": 293,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 219,
									"end": 299,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 219,
									"end": 299,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 219,
									"end": 299,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 219,
									"end": 299,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 219,
									"end": 299,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 305,
									"end": 901,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 305,
									"end": 901,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 305,
									"end": 901,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 305,
									"end": 901,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 305,
									"end": 901,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 458,
									"end": 460,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 446,
									"end": 455,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 437,
									"end": 444,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 433,
									"end": 456,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 429,
									"end": 461,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 426,
									"end": 428,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 426,
									"end": 428,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 426,
									"end": 428,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 474,
									"end": 475,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 471,
									"end": 472,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 464,
									"end": 476,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 426,
									"end": 428,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 426,
									"end": 428,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 517,
									"end": 518,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 542,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 598,
									"end": 605,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 589,
									"end": 595,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 578,
									"end": 587,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 574,
									"end": 596,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 542,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 542,
									"end": 606,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 542,
									"end": 606,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 542,
									"end": 606,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 532,
									"end": 606,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 532,
									"end": 606,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 488,
									"end": 616,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 655,
									"end": 657,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 681,
									"end": 745,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 737,
									"end": 744,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 728,
									"end": 734,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 717,
									"end": 726,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 713,
									"end": 735,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 681,
									"end": 745,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 681,
									"end": 745,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 681,
									"end": 745,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 681,
									"end": 745,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 671,
									"end": 745,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 671,
									"end": 745,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 626,
									"end": 755,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 794,
									"end": 796,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 820,
									"end": 884,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 876,
									"end": 883,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 867,
									"end": 873,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 856,
									"end": 865,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 852,
									"end": 874,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 820,
									"end": 884,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 820,
									"end": 884,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 820,
									"end": 884,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 820,
									"end": 884,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 810,
									"end": 884,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 810,
									"end": 884,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 765,
									"end": 894,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 416,
									"end": 901,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 416,
									"end": 901,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 416,
									"end": 901,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 416,
									"end": 901,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 416,
									"end": 901,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 416,
									"end": 901,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 907,
									"end": 1003,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 907,
									"end": 1003,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 907,
									"end": 1003,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 973,
									"end": 997,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 991,
									"end": 996,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 973,
									"end": 997,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 973,
									"end": 997,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 973,
									"end": 997,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 973,
									"end": 997,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 962,
									"end": 997,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 962,
									"end": 997,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 952,
									"end": 1003,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 952,
									"end": 1003,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 952,
									"end": 1003,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 952,
									"end": 1003,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 1009,
									"end": 1135,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 1009,
									"end": 1135,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1009,
									"end": 1135,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1086,
									"end": 1128,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1079,
									"end": 1084,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1075,
									"end": 1129,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1064,
									"end": 1129,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1064,
									"end": 1129,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1054,
									"end": 1135,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1054,
									"end": 1135,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1054,
									"end": 1135,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1054,
									"end": 1135,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 1141,
									"end": 1218,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 1141,
									"end": 1218,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1141,
									"end": 1218,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1207,
									"end": 1212,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1196,
									"end": 1212,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1196,
									"end": 1212,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1186,
									"end": 1218,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1186,
									"end": 1218,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1186,
									"end": 1218,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1186,
									"end": 1218,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 1224,
									"end": 1346,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1224,
									"end": 1346,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1297,
									"end": 1321,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 1315,
									"end": 1320,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1297,
									"end": 1321,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 1297,
									"end": 1321,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 1297,
									"end": 1321,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 1297,
									"end": 1321,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1290,
									"end": 1295,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1287,
									"end": 1322,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 1277,
									"end": 1279,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1277,
									"end": 1279,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1336,
									"end": 1337,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1333,
									"end": 1334,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1326,
									"end": 1338,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1277,
									"end": 1279,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1277,
									"end": 1279,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1267,
									"end": 1346,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1267,
									"end": 1346,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 1352,
									"end": 1474,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 1352,
									"end": 1474,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1425,
									"end": 1449,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 1443,
									"end": 1448,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1425,
									"end": 1449,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 1425,
									"end": 1449,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 1425,
									"end": 1449,
									"name": "tag",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 1425,
									"end": 1449,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1418,
									"end": 1423,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1415,
									"end": 1450,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 1405,
									"end": 1407,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 1405,
									"end": 1407,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1464,
									"end": 1465,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1461,
									"end": 1462,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1454,
									"end": 1466,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1405,
									"end": 1407,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 1405,
									"end": 1407,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1395,
									"end": 1474,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1395,
									"end": 1474,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 290,
									"end": 2248,
									"name": "tag",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 290,
									"end": 2248,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 290,
									"end": 2248,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 290,
									"end": 2248,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 290,
									"end": 2248,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 290,
									"end": 2248,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 290,
									"end": 2248,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 290,
									"end": 2248,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 290,
									"end": 2248,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205a7eb1be02e17b958334044928017b4c2fc53b643ea1a13a1d93bfbd855ae96a64736f6c63430008010033",
									".code": [
										{
											"begin": 290,
											"end": 2248,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "PUSH",
											"source": 5,
											"value": "94409A56"
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "PUSH",
											"source": 5,
											"value": "EE947A7C"
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "PUSH",
											"source": 5,
											"value": "EE947A7C"
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "PUSH",
											"source": 5,
											"value": "F1887684"
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "PUSH",
											"source": 5,
											"value": "F2FDE38B"
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "PUSH",
											"source": 5,
											"value": "FC0C546A"
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "PUSH",
											"source": 5,
											"value": "94409A56"
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "PUSH",
											"source": 5,
											"value": "A694FC3A"
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "PUSH",
											"source": 5,
											"value": "EB4AF045"
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "PUSH",
											"source": 5,
											"value": "27E235E3"
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "PUSH",
											"source": 5,
											"value": "583D42FD"
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "PUSH",
											"source": 5,
											"value": "5D3EEA91"
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "PUSH",
											"source": 5,
											"value": "715018A6"
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "PUSH",
											"source": 5,
											"value": "817B1CD2"
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "PUSH",
											"source": 5,
											"value": "8DA5CB5B"
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 290,
											"end": 2248,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 661,
											"end": 704,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 661,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 661,
											"end": 704,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 661,
											"end": 704,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 661,
											"end": 704,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 661,
											"end": 704,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 661,
											"end": 704,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 661,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 661,
											"end": 704,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 661,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 661,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 661,
											"end": 704,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 661,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 661,
											"end": 704,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 661,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 661,
											"end": 704,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 661,
											"end": 704,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 661,
											"end": 704,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 661,
											"end": 704,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 661,
											"end": 704,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 661,
											"end": 704,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 501,
											"end": 547,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 501,
											"end": 547,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 501,
											"end": 547,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 501,
											"end": 547,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 501,
											"end": 547,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 501,
											"end": 547,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 501,
											"end": 547,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 501,
											"end": 547,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 501,
											"end": 547,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 501,
											"end": 547,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 501,
											"end": 547,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 501,
											"end": 547,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 501,
											"end": 547,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 501,
											"end": 547,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 501,
											"end": 547,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 501,
											"end": 547,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1495,
											"end": 1891,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1495,
											"end": 1891,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1495,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 1495,
											"end": 1891,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1495,
											"end": 1891,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1495,
											"end": 1891,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1495,
											"end": 1891,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1495,
											"end": 1891,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1495,
											"end": 1891,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1495,
											"end": 1891,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1495,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 1495,
											"end": 1891,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1495,
											"end": 1891,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1495,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1495,
											"end": 1891,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1495,
											"end": 1891,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 1495,
											"end": 1891,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1495,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1495,
											"end": 1891,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1495,
											"end": 1891,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 1495,
											"end": 1891,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1495,
											"end": 1891,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2141,
											"end": 2246,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 2141,
											"end": 2246,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2141,
											"end": 2246,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 2141,
											"end": 2246,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 2141,
											"end": 2246,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2141,
											"end": 2246,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 2141,
											"end": 2246,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2141,
											"end": 2246,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2141,
											"end": 2246,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2141,
											"end": 2246,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 2141,
											"end": 2246,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2141,
											"end": 2246,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2141,
											"end": 2246,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 2141,
											"end": 2246,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2141,
											"end": 2246,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 2141,
											"end": 2246,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2141,
											"end": 2246,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2141,
											"end": 2246,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2141,
											"end": 2246,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2141,
											"end": 2246,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2141,
											"end": 2246,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2141,
											"end": 2246,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2141,
											"end": 2246,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 400,
											"end": 431,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 400,
											"end": 431,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 400,
											"end": 431,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 400,
											"end": 431,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 400,
											"end": 431,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 400,
											"end": 431,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 400,
											"end": 431,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 400,
											"end": 431,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 400,
											"end": 431,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 400,
											"end": 431,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 400,
											"end": 431,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 400,
											"end": 431,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 400,
											"end": 431,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 400,
											"end": 431,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 400,
											"end": 431,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 400,
											"end": 431,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 400,
											"end": 431,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 400,
											"end": 431,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 400,
											"end": 431,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 400,
											"end": 431,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 400,
											"end": 431,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 400,
											"end": 431,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 400,
											"end": 431,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1017,
											"end": 1491,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 1017,
											"end": 1491,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1017,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1017,
											"end": 1491,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1017,
											"end": 1491,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1017,
											"end": 1491,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1017,
											"end": 1491,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1017,
											"end": 1491,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1017,
											"end": 1491,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1017,
											"end": 1491,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1017,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 1017,
											"end": 1491,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1017,
											"end": 1491,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1017,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1017,
											"end": 1491,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1017,
											"end": 1491,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 1017,
											"end": 1491,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1017,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 1017,
											"end": 1491,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1017,
											"end": 1491,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1017,
											"end": 1491,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1017,
											"end": 1491,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1928,
											"end": 2091,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 1928,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1928,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 1928,
											"end": 2091,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1928,
											"end": 2091,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1928,
											"end": 2091,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1928,
											"end": 2091,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1928,
											"end": 2091,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1928,
											"end": 2091,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1928,
											"end": 2091,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1928,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 1928,
											"end": 2091,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1928,
											"end": 2091,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1928,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1928,
											"end": 2091,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1928,
											"end": 2091,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 1928,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1928,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 1928,
											"end": 2091,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1928,
											"end": 2091,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 1928,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1928,
											"end": 2091,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 435,
											"end": 462,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 435,
											"end": 462,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 435,
											"end": 462,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 435,
											"end": 462,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 435,
											"end": 462,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 435,
											"end": 462,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 435,
											"end": 462,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 435,
											"end": 462,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 435,
											"end": 462,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 435,
											"end": 462,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 435,
											"end": 462,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 435,
											"end": 462,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 435,
											"end": 462,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 435,
											"end": 462,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 435,
											"end": 462,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 435,
											"end": 462,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 435,
											"end": 462,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 435,
											"end": 462,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 435,
											"end": 462,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 435,
											"end": 462,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 435,
											"end": 462,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 435,
											"end": 462,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 435,
											"end": 462,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 583,
											"end": 612,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 583,
											"end": 612,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 583,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 583,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 583,
											"end": 612,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 583,
											"end": 612,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 583,
											"end": 612,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 583,
											"end": 612,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 583,
											"end": 612,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 583,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 583,
											"end": 612,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 583,
											"end": 612,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 583,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 583,
											"end": 612,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 583,
											"end": 612,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 583,
											"end": 612,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 583,
											"end": 612,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 583,
											"end": 612,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 583,
											"end": 612,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 583,
											"end": 612,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 583,
											"end": 612,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 583,
											"end": 612,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 583,
											"end": 612,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 376,
											"end": 395,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 376,
											"end": 395,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 376,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 376,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 376,
											"end": 395,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 376,
											"end": 395,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 376,
											"end": 395,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 376,
											"end": 395,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 376,
											"end": 395,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 376,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 376,
											"end": 395,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 376,
											"end": 395,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 376,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 376,
											"end": 395,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 376,
											"end": 395,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 376,
											"end": 395,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 376,
											"end": 395,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 376,
											"end": 395,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 376,
											"end": 395,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 376,
											"end": 395,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 376,
											"end": 395,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 376,
											"end": 395,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 376,
											"end": 395,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 661,
											"end": 704,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 661,
											"end": 704,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 661,
											"end": 704,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 661,
											"end": 704,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 661,
											"end": 704,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 661,
											"end": 704,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 661,
											"end": 704,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 661,
											"end": 704,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 661,
											"end": 704,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 661,
											"end": 704,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 661,
											"end": 704,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 661,
											"end": 704,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 661,
											"end": 704,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 501,
											"end": 547,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 501,
											"end": 547,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 501,
											"end": 547,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 501,
											"end": 547,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 501,
											"end": 547,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 501,
											"end": 547,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 501,
											"end": 547,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 501,
											"end": 547,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 501,
											"end": 547,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1495,
											"end": 1891,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1495,
											"end": 1891,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1585,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 1613,
											"end": 1625,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1613,
											"end": 1625,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1585,
											"end": 1596,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1585,
											"end": 1608,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1597,
											"end": 1607,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1585,
											"end": 1608,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1585,
											"end": 1608,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1585,
											"end": 1608,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1585,
											"end": 1608,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1585,
											"end": 1608,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1585,
											"end": 1608,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1585,
											"end": 1608,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1585,
											"end": 1608,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1585,
											"end": 1608,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1585,
											"end": 1608,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1585,
											"end": 1608,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1585,
											"end": 1608,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1585,
											"end": 1608,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1585,
											"end": 1608,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1585,
											"end": 1608,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1585,
											"end": 1608,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1585,
											"end": 1612,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 1585,
											"end": 1612,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1585,
											"end": 1626,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1585,
											"end": 1626,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1585,
											"end": 1626,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1585,
											"end": 1626,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1585,
											"end": 1626,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1585,
											"end": 1626,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 1585,
											"end": 1626,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1565,
											"end": 1580,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 1565,
											"end": 1627,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1565,
											"end": 1627,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1557,
											"end": 1638,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 1557,
											"end": 1638,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1557,
											"end": 1638,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1557,
											"end": 1638,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1557,
											"end": 1638,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1557,
											"end": 1638,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1557,
											"end": 1638,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1557,
											"end": 1638,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1557,
											"end": 1638,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1557,
											"end": 1638,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 1557,
											"end": 1638,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1557,
											"end": 1638,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 1557,
											"end": 1638,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1557,
											"end": 1638,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 1557,
											"end": 1638,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1557,
											"end": 1638,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1557,
											"end": 1638,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1557,
											"end": 1638,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1557,
											"end": 1638,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1557,
											"end": 1638,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1557,
											"end": 1638,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1557,
											"end": 1638,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1557,
											"end": 1638,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 1557,
											"end": 1638,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1676,
											"end": 1683,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1652,
											"end": 1660,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 1652,
											"end": 1672,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1661,
											"end": 1671,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1652,
											"end": 1672,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1652,
											"end": 1672,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1652,
											"end": 1672,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1652,
											"end": 1672,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1652,
											"end": 1672,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1652,
											"end": 1672,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1652,
											"end": 1672,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1652,
											"end": 1672,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1652,
											"end": 1672,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1652,
											"end": 1672,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1652,
											"end": 1672,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1652,
											"end": 1672,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1652,
											"end": 1672,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1652,
											"end": 1672,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1652,
											"end": 1672,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1652,
											"end": 1672,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1652,
											"end": 1683,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1652,
											"end": 1683,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1644,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1644,
											"end": 1708,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1644,
											"end": 1708,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1644,
											"end": 1708,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1644,
											"end": 1708,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1644,
											"end": 1708,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1644,
											"end": 1708,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1644,
											"end": 1708,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1644,
											"end": 1708,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1644,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 1644,
											"end": 1708,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1644,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 1644,
											"end": 1708,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1644,
											"end": 1708,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 1644,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1644,
											"end": 1708,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1644,
											"end": 1708,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1644,
											"end": 1708,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1644,
											"end": 1708,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1644,
											"end": 1708,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1644,
											"end": 1708,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1644,
											"end": 1708,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1644,
											"end": 1708,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1644,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1727,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1722,
											"end": 1727,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1722,
											"end": 1727,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1727,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1727,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1727,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1722,
											"end": 1727,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1727,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1727,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1727,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1722,
											"end": 1727,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1736,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1722,
											"end": 1736,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1736,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1749,
											"end": 1756,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1722,
											"end": 1757,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1714,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 1714,
											"end": 1783,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1714,
											"end": 1783,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1714,
											"end": 1783,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1714,
											"end": 1783,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1714,
											"end": 1783,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1714,
											"end": 1783,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1714,
											"end": 1783,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1714,
											"end": 1783,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1714,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 1714,
											"end": 1783,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1714,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 1714,
											"end": 1783,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1714,
											"end": 1783,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 1714,
											"end": 1783,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1714,
											"end": 1783,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1714,
											"end": 1783,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1714,
											"end": 1783,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1714,
											"end": 1783,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1714,
											"end": 1783,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1714,
											"end": 1783,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1714,
											"end": 1783,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1714,
											"end": 1783,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 1714,
											"end": 1783,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1813,
											"end": 1846,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 1838,
											"end": 1845,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1813,
											"end": 1821,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 1813,
											"end": 1833,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1822,
											"end": 1832,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1813,
											"end": 1833,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1813,
											"end": 1833,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1813,
											"end": 1833,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1813,
											"end": 1833,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1813,
											"end": 1833,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1813,
											"end": 1833,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1813,
											"end": 1833,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1813,
											"end": 1833,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1813,
											"end": 1833,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1813,
											"end": 1833,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1813,
											"end": 1833,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1813,
											"end": 1833,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1813,
											"end": 1833,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1813,
											"end": 1833,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1833,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1813,
											"end": 1833,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1813,
											"end": 1837,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 1813,
											"end": 1837,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1813,
											"end": 1846,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1813,
											"end": 1846,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1813,
											"end": 1846,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1813,
											"end": 1846,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1813,
											"end": 1846,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1813,
											"end": 1846,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 1813,
											"end": 1846,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1790,
											"end": 1798,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 1790,
											"end": 1810,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1799,
											"end": 1809,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1790,
											"end": 1810,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1790,
											"end": 1810,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1790,
											"end": 1810,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1790,
											"end": 1810,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1790,
											"end": 1810,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1790,
											"end": 1810,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1790,
											"end": 1810,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1790,
											"end": 1810,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1790,
											"end": 1810,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1790,
											"end": 1810,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1790,
											"end": 1810,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1790,
											"end": 1810,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1790,
											"end": 1810,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1790,
											"end": 1810,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1790,
											"end": 1810,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1790,
											"end": 1846,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1790,
											"end": 1846,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1790,
											"end": 1846,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1790,
											"end": 1846,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 1886,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1858,
											"end": 1886,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 1886,
											"name": "PUSH",
											"source": 5,
											"value": "B24546D975E2628748EFC9ACED80665E0FAD66272033E5C0EA25FD3AFAC99795"
										},
										{
											"begin": 1878,
											"end": 1885,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 1886,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1858,
											"end": 1886,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 1858,
											"end": 1886,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 1886,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 1858,
											"end": 1886,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1858,
											"end": 1886,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 1858,
											"end": 1886,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 1886,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1858,
											"end": 1886,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 1886,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 1886,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 1886,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 1886,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1858,
											"end": 1886,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1495,
											"end": 1891,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1495,
											"end": 1891,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2141,
											"end": 2246,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 2141,
											"end": 2246,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2187,
											"end": 2194,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2211,
											"end": 2216,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2211,
											"end": 2216,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2211,
											"end": 2216,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2216,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2216,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2216,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2211,
											"end": 2216,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2216,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2216,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2216,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2211,
											"end": 2216,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2226,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2211,
											"end": 2226,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2226,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 2235,
											"end": 2239,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 2211,
											"end": 2241,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2241,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2241,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2141,
											"end": 2246,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2141,
											"end": 2246,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 400,
											"end": 431,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 400,
											"end": 431,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 400,
											"end": 431,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 400,
											"end": 431,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 400,
											"end": 431,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 400,
											"end": 431,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1017,
											"end": 1491,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 1017,
											"end": 1491,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1122,
											"end": 1136,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 1122,
											"end": 1136,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1085,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 1110,
											"end": 1117,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1085,
											"end": 1093,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 1085,
											"end": 1105,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1094,
											"end": 1104,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1085,
											"end": 1105,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1085,
											"end": 1105,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1085,
											"end": 1105,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1085,
											"end": 1105,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1085,
											"end": 1105,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1085,
											"end": 1105,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1085,
											"end": 1105,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1085,
											"end": 1105,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1085,
											"end": 1105,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1085,
											"end": 1105,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1085,
											"end": 1105,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1085,
											"end": 1105,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1085,
											"end": 1105,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1085,
											"end": 1105,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1085,
											"end": 1105,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1085,
											"end": 1105,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1085,
											"end": 1109,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 1085,
											"end": 1109,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1085,
											"end": 1118,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1085,
											"end": 1118,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1085,
											"end": 1118,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1085,
											"end": 1118,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1085,
											"end": 1118,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1085,
											"end": 1118,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 1085,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1085,
											"end": 1136,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1085,
											"end": 1136,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1077,
											"end": 1197,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 1077,
											"end": 1197,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1077,
											"end": 1197,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1197,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1077,
											"end": 1197,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1077,
											"end": 1197,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1077,
											"end": 1197,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1077,
											"end": 1197,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1077,
											"end": 1197,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1077,
											"end": 1197,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 1077,
											"end": 1197,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1077,
											"end": 1197,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 1077,
											"end": 1197,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1077,
											"end": 1197,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 1077,
											"end": 1197,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1077,
											"end": 1197,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1197,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1077,
											"end": 1197,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1077,
											"end": 1197,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1077,
											"end": 1197,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1077,
											"end": 1197,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1077,
											"end": 1197,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1077,
											"end": 1197,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 1077,
											"end": 1197,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1216,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1211,
											"end": 1216,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1211,
											"end": 1216,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1216,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1216,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1216,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1211,
											"end": 1216,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1216,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1216,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1216,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1211,
											"end": 1216,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1229,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1211,
											"end": 1229,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1229,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 1230,
											"end": 1240,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1250,
											"end": 1254,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 1257,
											"end": 1264,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 1211,
											"end": 1265,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1203,
											"end": 1291,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 1203,
											"end": 1291,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1203,
											"end": 1291,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1203,
											"end": 1291,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1203,
											"end": 1291,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1203,
											"end": 1291,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1203,
											"end": 1291,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1203,
											"end": 1291,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1203,
											"end": 1291,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1203,
											"end": 1291,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 1203,
											"end": 1291,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1203,
											"end": 1291,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 1203,
											"end": 1291,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1203,
											"end": 1291,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 1203,
											"end": 1291,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1203,
											"end": 1291,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1203,
											"end": 1291,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1203,
											"end": 1291,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1203,
											"end": 1291,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1203,
											"end": 1291,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1203,
											"end": 1291,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1203,
											"end": 1291,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1203,
											"end": 1291,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 1203,
											"end": 1291,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1321,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 1346,
											"end": 1353,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1321,
											"end": 1329,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 1321,
											"end": 1341,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1330,
											"end": 1340,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1321,
											"end": 1341,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1321,
											"end": 1341,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1321,
											"end": 1341,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1321,
											"end": 1341,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1321,
											"end": 1341,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1321,
											"end": 1341,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1321,
											"end": 1341,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1321,
											"end": 1341,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1321,
											"end": 1341,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1321,
											"end": 1341,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1321,
											"end": 1341,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1321,
											"end": 1341,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1321,
											"end": 1341,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1321,
											"end": 1341,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1321,
											"end": 1341,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1321,
											"end": 1341,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1321,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 1321,
											"end": 1345,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1321,
											"end": 1354,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1321,
											"end": 1354,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1321,
											"end": 1354,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1321,
											"end": 1354,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1321,
											"end": 1354,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1321,
											"end": 1354,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 1321,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1298,
											"end": 1306,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 1298,
											"end": 1318,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1307,
											"end": 1317,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1298,
											"end": 1318,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1298,
											"end": 1318,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1298,
											"end": 1318,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1298,
											"end": 1318,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1298,
											"end": 1318,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1298,
											"end": 1318,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1298,
											"end": 1318,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1298,
											"end": 1318,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1298,
											"end": 1318,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1298,
											"end": 1318,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1298,
											"end": 1318,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1298,
											"end": 1318,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1298,
											"end": 1318,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1298,
											"end": 1318,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1298,
											"end": 1318,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1298,
											"end": 1354,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1298,
											"end": 1354,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1298,
											"end": 1354,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1298,
											"end": 1354,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 1392,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1364,
											"end": 1375,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1364,
											"end": 1387,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1376,
											"end": 1386,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1387,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1364,
											"end": 1387,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1387,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1364,
											"end": 1387,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1387,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1387,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1387,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1387,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1387,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1387,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1387,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1387,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1387,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1387,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1364,
											"end": 1387,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1387,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 1392,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1361,
											"end": 1449,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1361,
											"end": 1449,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 1361,
											"end": 1449,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1427,
											"end": 1442,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 1401,
											"end": 1412,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1401,
											"end": 1424,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1413,
											"end": 1423,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1401,
											"end": 1424,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1401,
											"end": 1424,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1401,
											"end": 1424,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1401,
											"end": 1424,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1401,
											"end": 1424,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1401,
											"end": 1424,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1401,
											"end": 1424,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1401,
											"end": 1424,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1401,
											"end": 1424,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1401,
											"end": 1424,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1401,
											"end": 1424,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1401,
											"end": 1424,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1401,
											"end": 1424,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1401,
											"end": 1424,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1401,
											"end": 1424,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1401,
											"end": 1442,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1401,
											"end": 1442,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1401,
											"end": 1442,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1401,
											"end": 1442,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1361,
											"end": 1449,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 1361,
											"end": 1449,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1466,
											"end": 1476,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1486,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1460,
											"end": 1486,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1486,
											"name": "PUSH",
											"source": 5,
											"value": "EBEDB8B3C678666E7F36970BC8F57ABF6D8FA2E828C0DA91EA5B75BF68ED101A"
										},
										{
											"begin": 1478,
											"end": 1485,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1486,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1460,
											"end": 1486,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1486,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 1460,
											"end": 1486,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1486,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1486,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 1460,
											"end": 1486,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1460,
											"end": 1486,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 1460,
											"end": 1486,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1486,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1460,
											"end": 1486,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1486,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1486,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1486,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1486,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1486,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1017,
											"end": 1491,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1017,
											"end": 1491,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1928,
											"end": 2091,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 1928,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2016,
											"end": 2017,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2005,
											"end": 2012,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2005,
											"end": 2017,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2005,
											"end": 2017,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1997,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 1997,
											"end": 2056,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1997,
											"end": 2056,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1997,
											"end": 2056,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1997,
											"end": 2056,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1997,
											"end": 2056,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1997,
											"end": 2056,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1997,
											"end": 2056,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1997,
											"end": 2056,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1997,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 1997,
											"end": 2056,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1997,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 1997,
											"end": 2056,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1997,
											"end": 2056,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 1997,
											"end": 2056,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1997,
											"end": 2056,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1997,
											"end": 2056,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1997,
											"end": 2056,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1997,
											"end": 2056,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1997,
											"end": 2056,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1997,
											"end": 2056,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1997,
											"end": 2056,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1997,
											"end": 2056,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 1997,
											"end": 2056,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2079,
											"end": 2086,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2062,
											"end": 2076,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 2062,
											"end": 2086,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2062,
											"end": 2086,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2062,
											"end": 2086,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2062,
											"end": 2086,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1928,
											"end": 2091,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1928,
											"end": 2091,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 435,
											"end": 462,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 435,
											"end": 462,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 435,
											"end": 462,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 435,
											"end": 462,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 435,
											"end": 462,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 435,
											"end": 462,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 583,
											"end": 612,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 583,
											"end": 612,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 583,
											"end": 612,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 583,
											"end": 612,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 583,
											"end": 612,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 583,
											"end": 612,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2190,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2177,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2263,
											"end": 2271,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 376,
											"end": 395,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 376,
											"end": 395,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 376,
											"end": 395,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 376,
											"end": 395,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 376,
											"end": 395,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 376,
											"end": 395,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 376,
											"end": 395,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 376,
											"end": 395,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 376,
											"end": 395,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 376,
											"end": 395,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 376,
											"end": 395,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 376,
											"end": 395,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 376,
											"end": 395,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 376,
											"end": 395,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 376,
											"end": 395,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7,
											"end": 146,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 59,
											"end": 146,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 152,
											"end": 289,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 237,
											"end": 243,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 231,
											"end": 244,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 222,
											"end": 244,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 222,
											"end": 244,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 277,
											"end": 282,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 212,
											"end": 289,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 212,
											"end": 289,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 212,
											"end": 289,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 212,
											"end": 289,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 212,
											"end": 289,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 295,
											"end": 434,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 385,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 366,
											"end": 386,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 357,
											"end": 386,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 422,
											"end": 427,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 347,
											"end": 434,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 347,
											"end": 434,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 347,
											"end": 434,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 347,
											"end": 434,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 347,
											"end": 434,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 440,
											"end": 583,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 440,
											"end": 583,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 440,
											"end": 583,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 534,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 522,
											"end": 535,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 513,
											"end": 535,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 513,
											"end": 535,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 544,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 571,
											"end": 576,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 544,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 503,
											"end": 583,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 503,
											"end": 583,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 503,
											"end": 583,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 503,
											"end": 583,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 503,
											"end": 583,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 589,
											"end": 851,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 589,
											"end": 851,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 589,
											"end": 851,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 697,
											"end": 699,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 685,
											"end": 694,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 676,
											"end": 683,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 672,
											"end": 695,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 668,
											"end": 700,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 665,
											"end": 667,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 665,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 665,
											"end": 667,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 713,
											"end": 714,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 710,
											"end": 711,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 703,
											"end": 715,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 665,
											"end": 667,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 665,
											"end": 667,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 756,
											"end": 757,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 826,
											"end": 833,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 817,
											"end": 823,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 806,
											"end": 815,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 802,
											"end": 824,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 781,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 781,
											"end": 834,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 781,
											"end": 834,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 781,
											"end": 834,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 771,
											"end": 834,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 771,
											"end": 834,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 727,
											"end": 844,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 655,
											"end": 851,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 655,
											"end": 851,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 655,
											"end": 851,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 655,
											"end": 851,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 655,
											"end": 851,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 857,
											"end": 1135,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 857,
											"end": 1135,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 857,
											"end": 1135,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 973,
											"end": 975,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 961,
											"end": 970,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 952,
											"end": 959,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 948,
											"end": 971,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 944,
											"end": 976,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 941,
											"end": 943,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 941,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 941,
											"end": 943,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 989,
											"end": 990,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 986,
											"end": 987,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 979,
											"end": 991,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 941,
											"end": 943,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 941,
											"end": 943,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1033,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1057,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 1110,
											"end": 1117,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1090,
											"end": 1099,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1086,
											"end": 1108,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 1057,
											"end": 1118,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1057,
											"end": 1118,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 1057,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1118,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1118,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1003,
											"end": 1128,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 931,
											"end": 1135,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 931,
											"end": 1135,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 931,
											"end": 1135,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 931,
											"end": 1135,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 931,
											"end": 1135,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1141,
											"end": 1403,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 1141,
											"end": 1403,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1141,
											"end": 1403,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1249,
											"end": 1251,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1237,
											"end": 1246,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1228,
											"end": 1235,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1224,
											"end": 1247,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1220,
											"end": 1252,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1219,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1219,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 1217,
											"end": 1219,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1266,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1262,
											"end": 1263,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1255,
											"end": 1267,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1219,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 1217,
											"end": 1219,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1308,
											"end": 1309,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1333,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 1378,
											"end": 1385,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1369,
											"end": 1375,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1358,
											"end": 1367,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1354,
											"end": 1376,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1333,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 1333,
											"end": 1386,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1333,
											"end": 1386,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 1333,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1323,
											"end": 1386,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1323,
											"end": 1386,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1279,
											"end": 1396,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1207,
											"end": 1403,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1207,
											"end": 1403,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1207,
											"end": 1403,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1207,
											"end": 1403,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1207,
											"end": 1403,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1409,
											"end": 1693,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 1409,
											"end": 1693,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1409,
											"end": 1693,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1528,
											"end": 1530,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1516,
											"end": 1525,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1507,
											"end": 1514,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1503,
											"end": 1526,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1499,
											"end": 1531,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1496,
											"end": 1498,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1496,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 1496,
											"end": 1498,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1544,
											"end": 1545,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1541,
											"end": 1542,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1534,
											"end": 1546,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1496,
											"end": 1498,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 1496,
											"end": 1498,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1587,
											"end": 1588,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1612,
											"end": 1676,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 1668,
											"end": 1675,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1659,
											"end": 1665,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1648,
											"end": 1657,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1644,
											"end": 1666,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1612,
											"end": 1676,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 1612,
											"end": 1676,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1612,
											"end": 1676,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 1612,
											"end": 1676,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1602,
											"end": 1676,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1602,
											"end": 1676,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1558,
											"end": 1686,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1486,
											"end": 1693,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1486,
											"end": 1693,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1486,
											"end": 1693,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1486,
											"end": 1693,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1486,
											"end": 1693,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1699,
											"end": 1817,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 1699,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1786,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 1804,
											"end": 1809,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1786,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 1786,
											"end": 1810,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1786,
											"end": 1810,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 1786,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1781,
											"end": 1784,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1774,
											"end": 1811,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1764,
											"end": 1817,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1764,
											"end": 1817,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1764,
											"end": 1817,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1823,
											"end": 1982,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 1823,
											"end": 1982,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 1975,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 1969,
											"end": 1974,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 1975,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 1924,
											"end": 1975,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1924,
											"end": 1975,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 1924,
											"end": 1975,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1919,
											"end": 1922,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1976,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1902,
											"end": 1982,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1902,
											"end": 1982,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1902,
											"end": 1982,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1988,
											"end": 2353,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 1988,
											"end": 2353,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1988,
											"end": 2353,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2151,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 2215,
											"end": 2216,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2210,
											"end": 2213,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2151,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 2151,
											"end": 2217,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2151,
											"end": 2217,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 2151,
											"end": 2217,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2144,
											"end": 2217,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2144,
											"end": 2217,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2226,
											"end": 2319,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 2315,
											"end": 2318,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2226,
											"end": 2319,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 2226,
											"end": 2319,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2226,
											"end": 2319,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 2226,
											"end": 2319,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2344,
											"end": 2346,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2339,
											"end": 2342,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2335,
											"end": 2347,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2328,
											"end": 2347,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2328,
											"end": 2347,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2134,
											"end": 2353,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2134,
											"end": 2353,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2134,
											"end": 2353,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2134,
											"end": 2353,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2359,
											"end": 2725,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 2359,
											"end": 2725,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2359,
											"end": 2725,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2522,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 2586,
											"end": 2588,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 2581,
											"end": 2584,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2522,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 2522,
											"end": 2589,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2522,
											"end": 2589,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 2522,
											"end": 2589,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2515,
											"end": 2589,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2515,
											"end": 2589,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2691,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 2687,
											"end": 2690,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2691,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 2598,
											"end": 2691,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2598,
											"end": 2691,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 2598,
											"end": 2691,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2718,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2711,
											"end": 2714,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2719,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 2719,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 2719,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2505,
											"end": 2725,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2505,
											"end": 2725,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2505,
											"end": 2725,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2505,
											"end": 2725,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2731,
											"end": 3097,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 2731,
											"end": 3097,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2731,
											"end": 3097,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2894,
											"end": 2961,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 2958,
											"end": 2960,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 2953,
											"end": 2956,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2894,
											"end": 2961,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 2894,
											"end": 2961,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2894,
											"end": 2961,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 2894,
											"end": 2961,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2887,
											"end": 2961,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2887,
											"end": 2961,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2970,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 3059,
											"end": 3062,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2970,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 2970,
											"end": 3063,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2970,
											"end": 3063,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 2970,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3088,
											"end": 3090,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3083,
											"end": 3086,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3079,
											"end": 3091,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3072,
											"end": 3091,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3072,
											"end": 3091,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2877,
											"end": 3097,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2877,
											"end": 3097,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2877,
											"end": 3097,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2877,
											"end": 3097,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3103,
											"end": 3469,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 3103,
											"end": 3469,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3103,
											"end": 3469,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3266,
											"end": 3333,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 3330,
											"end": 3332,
											"name": "PUSH",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 3325,
											"end": 3328,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3266,
											"end": 3333,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 3266,
											"end": 3333,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3266,
											"end": 3333,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 3266,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3259,
											"end": 3333,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3259,
											"end": 3333,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3342,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 3431,
											"end": 3434,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3342,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 3342,
											"end": 3435,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3342,
											"end": 3435,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 3342,
											"end": 3435,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3460,
											"end": 3462,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3455,
											"end": 3458,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3451,
											"end": 3463,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3444,
											"end": 3463,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3444,
											"end": 3463,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3249,
											"end": 3469,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3249,
											"end": 3469,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3249,
											"end": 3469,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3249,
											"end": 3469,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3475,
											"end": 3841,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 3475,
											"end": 3841,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3475,
											"end": 3841,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3705,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 3702,
											"end": 3704,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 3697,
											"end": 3700,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3638,
											"end": 3705,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 3638,
											"end": 3705,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3638,
											"end": 3705,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 3638,
											"end": 3705,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3631,
											"end": 3705,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3631,
											"end": 3705,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3714,
											"end": 3807,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 3803,
											"end": 3806,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3714,
											"end": 3807,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 3714,
											"end": 3807,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3714,
											"end": 3807,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 3714,
											"end": 3807,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3832,
											"end": 3834,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3827,
											"end": 3830,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3835,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3816,
											"end": 3835,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3816,
											"end": 3835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3841,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3841,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3841,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3841,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3847,
											"end": 4213,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 3847,
											"end": 4213,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3847,
											"end": 4213,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4010,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 4074,
											"end": 4076,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4069,
											"end": 4072,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4010,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 4010,
											"end": 4077,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4010,
											"end": 4077,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 4010,
											"end": 4077,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4003,
											"end": 4077,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4003,
											"end": 4077,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4086,
											"end": 4179,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 4175,
											"end": 4178,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4086,
											"end": 4179,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 4086,
											"end": 4179,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4086,
											"end": 4179,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 4086,
											"end": 4179,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4204,
											"end": 4206,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4199,
											"end": 4202,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4195,
											"end": 4207,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4188,
											"end": 4207,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4188,
											"end": 4207,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3993,
											"end": 4213,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3993,
											"end": 4213,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3993,
											"end": 4213,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3993,
											"end": 4213,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4219,
											"end": 4585,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 4219,
											"end": 4585,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4219,
											"end": 4585,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4449,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 4446,
											"end": 4448,
											"name": "PUSH",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 4441,
											"end": 4444,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4382,
											"end": 4449,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 4382,
											"end": 4449,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4382,
											"end": 4449,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 4382,
											"end": 4449,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4375,
											"end": 4449,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4375,
											"end": 4449,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4458,
											"end": 4551,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 4547,
											"end": 4550,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4458,
											"end": 4551,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 4458,
											"end": 4551,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4458,
											"end": 4551,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 4458,
											"end": 4551,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4576,
											"end": 4578,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4571,
											"end": 4574,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4567,
											"end": 4579,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4560,
											"end": 4579,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4560,
											"end": 4579,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4365,
											"end": 4585,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4365,
											"end": 4585,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4365,
											"end": 4585,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4365,
											"end": 4585,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4591,
											"end": 4957,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 4591,
											"end": 4957,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4591,
											"end": 4957,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4754,
											"end": 4821,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 4818,
											"end": 4820,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4813,
											"end": 4816,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4754,
											"end": 4821,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 4754,
											"end": 4821,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4754,
											"end": 4821,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 4754,
											"end": 4821,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4747,
											"end": 4821,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4747,
											"end": 4821,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4830,
											"end": 4923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 4919,
											"end": 4922,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4830,
											"end": 4923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 4830,
											"end": 4923,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4830,
											"end": 4923,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 4830,
											"end": 4923,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4948,
											"end": 4950,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4943,
											"end": 4946,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4939,
											"end": 4951,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4932,
											"end": 4951,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4932,
											"end": 4951,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4737,
											"end": 4957,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4737,
											"end": 4957,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4737,
											"end": 4957,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4737,
											"end": 4957,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4963,
											"end": 5081,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 4963,
											"end": 5081,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5050,
											"end": 5074,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 5068,
											"end": 5073,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5050,
											"end": 5074,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 5050,
											"end": 5074,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5050,
											"end": 5074,
											"name": "tag",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 5050,
											"end": 5074,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5045,
											"end": 5048,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5038,
											"end": 5075,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5028,
											"end": 5081,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5028,
											"end": 5081,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5028,
											"end": 5081,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5087,
											"end": 5309,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5087,
											"end": 5309,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5087,
											"end": 5309,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5218,
											"end": 5220,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5207,
											"end": 5216,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5203,
											"end": 5221,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5195,
											"end": 5221,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5195,
											"end": 5221,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5231,
											"end": 5302,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 5299,
											"end": 5300,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5288,
											"end": 5297,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5284,
											"end": 5301,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5275,
											"end": 5281,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5231,
											"end": 5302,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 5231,
											"end": 5302,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5231,
											"end": 5302,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 5231,
											"end": 5302,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5185,
											"end": 5309,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5185,
											"end": 5309,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5185,
											"end": 5309,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5185,
											"end": 5309,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5185,
											"end": 5309,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5315,
											"end": 5757,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 5315,
											"end": 5757,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5315,
											"end": 5757,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5502,
											"end": 5504,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5491,
											"end": 5500,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5505,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5479,
											"end": 5505,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5479,
											"end": 5505,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5515,
											"end": 5586,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 5583,
											"end": 5584,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5572,
											"end": 5581,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5568,
											"end": 5585,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5559,
											"end": 5565,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5515,
											"end": 5586,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 5515,
											"end": 5586,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5515,
											"end": 5586,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 5515,
											"end": 5586,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5596,
											"end": 5668,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 5664,
											"end": 5666,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5653,
											"end": 5662,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5649,
											"end": 5667,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5640,
											"end": 5646,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5596,
											"end": 5668,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 5596,
											"end": 5668,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5596,
											"end": 5668,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 5596,
											"end": 5668,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5678,
											"end": 5750,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 5746,
											"end": 5748,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5735,
											"end": 5744,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5731,
											"end": 5749,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5722,
											"end": 5728,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5678,
											"end": 5750,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 5678,
											"end": 5750,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5678,
											"end": 5750,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 5678,
											"end": 5750,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5469,
											"end": 5757,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 5469,
											"end": 5757,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5469,
											"end": 5757,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5469,
											"end": 5757,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5469,
											"end": 5757,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5469,
											"end": 5757,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5469,
											"end": 5757,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5763,
											"end": 6095,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 5763,
											"end": 6095,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5763,
											"end": 6095,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5922,
											"end": 5924,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5911,
											"end": 5920,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5907,
											"end": 5925,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5899,
											"end": 5925,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5899,
											"end": 5925,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5935,
											"end": 6006,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 6003,
											"end": 6004,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5992,
											"end": 6001,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6005,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5979,
											"end": 5985,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5935,
											"end": 6006,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 5935,
											"end": 6006,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5935,
											"end": 6006,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 5935,
											"end": 6006,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6016,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 6084,
											"end": 6086,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6073,
											"end": 6082,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6069,
											"end": 6087,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6060,
											"end": 6066,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6016,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 6016,
											"end": 6088,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6016,
											"end": 6088,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 6016,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5889,
											"end": 6095,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5889,
											"end": 6095,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5889,
											"end": 6095,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5889,
											"end": 6095,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5889,
											"end": 6095,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5889,
											"end": 6095,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6101,
											"end": 6351,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 6101,
											"end": 6351,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6101,
											"end": 6351,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6246,
											"end": 6248,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6235,
											"end": 6244,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6231,
											"end": 6249,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6223,
											"end": 6249,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6223,
											"end": 6249,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6259,
											"end": 6344,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 6341,
											"end": 6342,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6330,
											"end": 6339,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6326,
											"end": 6343,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6317,
											"end": 6323,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6259,
											"end": 6344,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 6259,
											"end": 6344,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6259,
											"end": 6344,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 6259,
											"end": 6344,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6213,
											"end": 6351,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6213,
											"end": 6351,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6213,
											"end": 6351,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6213,
											"end": 6351,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6213,
											"end": 6351,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6357,
											"end": 6776,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 6357,
											"end": 6776,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6357,
											"end": 6776,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6561,
											"end": 6563,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6550,
											"end": 6559,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6546,
											"end": 6564,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6538,
											"end": 6564,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6538,
											"end": 6564,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6619,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6604,
											"end": 6608,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6600,
											"end": 6620,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6596,
											"end": 6597,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6585,
											"end": 6594,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6581,
											"end": 6598,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6574,
											"end": 6621,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6638,
											"end": 6769,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 6764,
											"end": 6768,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6638,
											"end": 6769,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 6638,
											"end": 6769,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6638,
											"end": 6769,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 6638,
											"end": 6769,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6630,
											"end": 6769,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6630,
											"end": 6769,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6528,
											"end": 6776,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6528,
											"end": 6776,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6528,
											"end": 6776,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6528,
											"end": 6776,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6782,
											"end": 7201,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 6782,
											"end": 7201,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6782,
											"end": 7201,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6986,
											"end": 6988,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6975,
											"end": 6984,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6971,
											"end": 6989,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6963,
											"end": 6989,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6963,
											"end": 6989,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7035,
											"end": 7044,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7029,
											"end": 7033,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7025,
											"end": 7045,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7021,
											"end": 7022,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7010,
											"end": 7019,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7006,
											"end": 7023,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6999,
											"end": 7046,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7063,
											"end": 7194,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 7189,
											"end": 7193,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7063,
											"end": 7194,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 7063,
											"end": 7194,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7063,
											"end": 7194,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 7063,
											"end": 7194,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7055,
											"end": 7194,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7055,
											"end": 7194,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6953,
											"end": 7201,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6953,
											"end": 7201,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6953,
											"end": 7201,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6953,
											"end": 7201,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7207,
											"end": 7626,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 7207,
											"end": 7626,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7207,
											"end": 7626,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7411,
											"end": 7413,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7400,
											"end": 7409,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7396,
											"end": 7414,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7388,
											"end": 7414,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7388,
											"end": 7414,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7460,
											"end": 7469,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7454,
											"end": 7458,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7450,
											"end": 7470,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7446,
											"end": 7447,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7435,
											"end": 7444,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7431,
											"end": 7448,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7424,
											"end": 7471,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7488,
											"end": 7619,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 7614,
											"end": 7618,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7488,
											"end": 7619,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 7488,
											"end": 7619,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7488,
											"end": 7619,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 7488,
											"end": 7619,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7480,
											"end": 7619,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7480,
											"end": 7619,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7378,
											"end": 7626,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7378,
											"end": 7626,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7378,
											"end": 7626,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7378,
											"end": 7626,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7632,
											"end": 8051,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 7632,
											"end": 8051,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7632,
											"end": 8051,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7836,
											"end": 7838,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7825,
											"end": 7834,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7821,
											"end": 7839,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7813,
											"end": 7839,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7813,
											"end": 7839,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7885,
											"end": 7894,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7879,
											"end": 7883,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7875,
											"end": 7895,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7871,
											"end": 7872,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7860,
											"end": 7869,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7856,
											"end": 7873,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7849,
											"end": 7896,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7913,
											"end": 8044,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 8039,
											"end": 8043,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7913,
											"end": 8044,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 7913,
											"end": 8044,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7913,
											"end": 8044,
											"name": "tag",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 7913,
											"end": 8044,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7905,
											"end": 8044,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7905,
											"end": 8044,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7803,
											"end": 8051,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7803,
											"end": 8051,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7803,
											"end": 8051,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7803,
											"end": 8051,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8057,
											"end": 8476,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 8057,
											"end": 8476,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8057,
											"end": 8476,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8261,
											"end": 8263,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8250,
											"end": 8259,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8246,
											"end": 8264,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8238,
											"end": 8264,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8238,
											"end": 8264,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8310,
											"end": 8319,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8304,
											"end": 8308,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8300,
											"end": 8320,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8296,
											"end": 8297,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8285,
											"end": 8294,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8281,
											"end": 8298,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8274,
											"end": 8321,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8338,
											"end": 8469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 8464,
											"end": 8468,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8338,
											"end": 8469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 8338,
											"end": 8469,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8338,
											"end": 8469,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 8338,
											"end": 8469,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8330,
											"end": 8469,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8330,
											"end": 8469,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8228,
											"end": 8476,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8228,
											"end": 8476,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8228,
											"end": 8476,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8228,
											"end": 8476,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8482,
											"end": 8901,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 8482,
											"end": 8901,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8482,
											"end": 8901,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8686,
											"end": 8688,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8675,
											"end": 8684,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8671,
											"end": 8689,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8663,
											"end": 8689,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8663,
											"end": 8689,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8735,
											"end": 8744,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8729,
											"end": 8733,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8725,
											"end": 8745,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8721,
											"end": 8722,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8710,
											"end": 8719,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8706,
											"end": 8723,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8699,
											"end": 8746,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8763,
											"end": 8894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 8889,
											"end": 8893,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8763,
											"end": 8894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 8763,
											"end": 8894,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8763,
											"end": 8894,
											"name": "tag",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 8763,
											"end": 8894,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8755,
											"end": 8894,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8755,
											"end": 8894,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8653,
											"end": 8901,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8653,
											"end": 8901,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8653,
											"end": 8901,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8653,
											"end": 8901,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8907,
											"end": 9326,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 8907,
											"end": 9326,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8907,
											"end": 9326,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9111,
											"end": 9113,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9100,
											"end": 9109,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9096,
											"end": 9114,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9088,
											"end": 9114,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9088,
											"end": 9114,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9160,
											"end": 9169,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9154,
											"end": 9158,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9150,
											"end": 9170,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9146,
											"end": 9147,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9135,
											"end": 9144,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9131,
											"end": 9148,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9124,
											"end": 9171,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9188,
											"end": 9319,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 9314,
											"end": 9318,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9188,
											"end": 9319,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 9188,
											"end": 9319,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9188,
											"end": 9319,
											"name": "tag",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 9188,
											"end": 9319,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9180,
											"end": 9319,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9180,
											"end": 9319,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9078,
											"end": 9326,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9078,
											"end": 9326,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9078,
											"end": 9326,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9078,
											"end": 9326,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9332,
											"end": 9751,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 9332,
											"end": 9751,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9332,
											"end": 9751,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9536,
											"end": 9538,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9525,
											"end": 9534,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9521,
											"end": 9539,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9513,
											"end": 9539,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9513,
											"end": 9539,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9585,
											"end": 9594,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9579,
											"end": 9583,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9575,
											"end": 9595,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9571,
											"end": 9572,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9560,
											"end": 9569,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9556,
											"end": 9573,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9549,
											"end": 9596,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9613,
											"end": 9744,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 9739,
											"end": 9743,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9613,
											"end": 9744,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 9613,
											"end": 9744,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9613,
											"end": 9744,
											"name": "tag",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 9613,
											"end": 9744,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9605,
											"end": 9744,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9605,
											"end": 9744,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9503,
											"end": 9751,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9503,
											"end": 9751,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9503,
											"end": 9751,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9503,
											"end": 9751,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9757,
											"end": 9979,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 9757,
											"end": 9979,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9757,
											"end": 9979,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9888,
											"end": 9890,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9877,
											"end": 9886,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9873,
											"end": 9891,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9865,
											"end": 9891,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9865,
											"end": 9891,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9901,
											"end": 9972,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 9969,
											"end": 9970,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9958,
											"end": 9967,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9954,
											"end": 9971,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9945,
											"end": 9951,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9901,
											"end": 9972,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 9901,
											"end": 9972,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9901,
											"end": 9972,
											"name": "tag",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 9901,
											"end": 9972,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9855,
											"end": 9979,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9855,
											"end": 9979,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9855,
											"end": 9979,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9855,
											"end": 9979,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9855,
											"end": 9979,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9985,
											"end": 10154,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 9985,
											"end": 10154,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9985,
											"end": 10154,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10109,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10098,
											"end": 10101,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10091,
											"end": 10110,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10143,
											"end": 10147,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10138,
											"end": 10141,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10134,
											"end": 10148,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10119,
											"end": 10148,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10119,
											"end": 10148,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10081,
											"end": 10154,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10081,
											"end": 10154,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10081,
											"end": 10154,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10081,
											"end": 10154,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10081,
											"end": 10154,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10160,
											"end": 10465,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 10160,
											"end": 10465,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10160,
											"end": 10465,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10219,
											"end": 10239,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 10237,
											"end": 10238,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10219,
											"end": 10239,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 10219,
											"end": 10239,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10219,
											"end": 10239,
											"name": "tag",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 10219,
											"end": 10239,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10214,
											"end": 10239,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10214,
											"end": 10239,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10253,
											"end": 10273,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 10271,
											"end": 10272,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10253,
											"end": 10273,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 10253,
											"end": 10273,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10253,
											"end": 10273,
											"name": "tag",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 10253,
											"end": 10273,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10248,
											"end": 10273,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10248,
											"end": 10273,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10407,
											"end": 10408,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10339,
											"end": 10405,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10335,
											"end": 10409,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10332,
											"end": 10333,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10329,
											"end": 10410,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 10326,
											"end": 10328,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10326,
											"end": 10328,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 10326,
											"end": 10328,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10413,
											"end": 10431,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 10413,
											"end": 10431,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 10413,
											"end": 10431,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10413,
											"end": 10431,
											"name": "tag",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 10413,
											"end": 10431,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10326,
											"end": 10328,
											"name": "tag",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 10326,
											"end": 10328,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10457,
											"end": 10458,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10454,
											"end": 10455,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10450,
											"end": 10459,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10443,
											"end": 10459,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10443,
											"end": 10459,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10204,
											"end": 10465,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10204,
											"end": 10465,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10204,
											"end": 10465,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10204,
											"end": 10465,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10204,
											"end": 10465,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10471,
											"end": 10662,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 10471,
											"end": 10662,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10471,
											"end": 10662,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10531,
											"end": 10551,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 10549,
											"end": 10550,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10531,
											"end": 10551,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 10531,
											"end": 10551,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10531,
											"end": 10551,
											"name": "tag",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 10531,
											"end": 10551,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10526,
											"end": 10551,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10526,
											"end": 10551,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10565,
											"end": 10585,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 10583,
											"end": 10584,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10565,
											"end": 10585,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 10565,
											"end": 10585,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10565,
											"end": 10585,
											"name": "tag",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 10565,
											"end": 10585,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10560,
											"end": 10585,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10560,
											"end": 10585,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10604,
											"end": 10605,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10601,
											"end": 10602,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10598,
											"end": 10606,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10595,
											"end": 10597,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10595,
											"end": 10597,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 10595,
											"end": 10597,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10609,
											"end": 10627,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 10609,
											"end": 10627,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 10609,
											"end": 10627,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10609,
											"end": 10627,
											"name": "tag",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 10609,
											"end": 10627,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10595,
											"end": 10597,
											"name": "tag",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 10595,
											"end": 10597,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10654,
											"end": 10655,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10651,
											"end": 10652,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10647,
											"end": 10656,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10639,
											"end": 10656,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10639,
											"end": 10656,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10516,
											"end": 10662,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10516,
											"end": 10662,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10516,
											"end": 10662,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10516,
											"end": 10662,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10516,
											"end": 10662,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10668,
											"end": 10764,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 10668,
											"end": 10764,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10668,
											"end": 10764,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10734,
											"end": 10758,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 10752,
											"end": 10757,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10734,
											"end": 10758,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 10734,
											"end": 10758,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10734,
											"end": 10758,
											"name": "tag",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 10734,
											"end": 10758,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10723,
											"end": 10758,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10723,
											"end": 10758,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10713,
											"end": 10764,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10713,
											"end": 10764,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10713,
											"end": 10764,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10713,
											"end": 10764,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10770,
											"end": 10860,
											"name": "tag",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 10770,
											"end": 10860,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10770,
											"end": 10860,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10847,
											"end": 10852,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10840,
											"end": 10853,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10833,
											"end": 10854,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10822,
											"end": 10854,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10822,
											"end": 10854,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10812,
											"end": 10860,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10812,
											"end": 10860,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10812,
											"end": 10860,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10812,
											"end": 10860,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10866,
											"end": 10992,
											"name": "tag",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 10866,
											"end": 10992,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10866,
											"end": 10992,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10943,
											"end": 10985,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10936,
											"end": 10941,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10932,
											"end": 10986,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10921,
											"end": 10986,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10921,
											"end": 10986,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10911,
											"end": 10992,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10911,
											"end": 10992,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10911,
											"end": 10992,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10911,
											"end": 10992,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10998,
											"end": 11075,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 10998,
											"end": 11075,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10998,
											"end": 11075,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11064,
											"end": 11069,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11053,
											"end": 11069,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11053,
											"end": 11069,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11043,
											"end": 11075,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11043,
											"end": 11075,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11043,
											"end": 11075,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11043,
											"end": 11075,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 11081,
											"end": 11235,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 11081,
											"end": 11235,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11081,
											"end": 11235,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11178,
											"end": 11229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 11223,
											"end": 11228,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11178,
											"end": 11229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 11178,
											"end": 11229,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11178,
											"end": 11229,
											"name": "tag",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 11178,
											"end": 11229,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11165,
											"end": 11229,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11165,
											"end": 11229,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11155,
											"end": 11235,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11155,
											"end": 11235,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11155,
											"end": 11235,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11155,
											"end": 11235,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 11241,
											"end": 11368,
											"name": "tag",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 11241,
											"end": 11368,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11241,
											"end": 11368,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11338,
											"end": 11362,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 11356,
											"end": 11361,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11338,
											"end": 11362,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 11338,
											"end": 11362,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11338,
											"end": 11362,
											"name": "tag",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 11338,
											"end": 11362,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11325,
											"end": 11362,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11325,
											"end": 11362,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11315,
											"end": 11368,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11315,
											"end": 11368,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11315,
											"end": 11368,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11315,
											"end": 11368,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 11374,
											"end": 11554,
											"name": "tag",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 11374,
											"end": 11554,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11422,
											"end": 11499,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11419,
											"end": 11420,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11412,
											"end": 11500,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11519,
											"end": 11523,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 11516,
											"end": 11517,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 11509,
											"end": 11524,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11543,
											"end": 11547,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 11540,
											"end": 11541,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11533,
											"end": 11548,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 11560,
											"end": 11716,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 11560,
											"end": 11716,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11700,
											"end": 11708,
											"name": "PUSH",
											"source": 6,
											"value": "4C6F636B65640000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11696,
											"end": 11697,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11688,
											"end": 11694,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11684,
											"end": 11698,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11677,
											"end": 11709,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11666,
											"end": 11716,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11666,
											"end": 11716,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 11722,
											"end": 11947,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 11722,
											"end": 11947,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11862,
											"end": 11896,
											"name": "PUSH",
											"source": 6,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 11858,
											"end": 11859,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11850,
											"end": 11856,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11846,
											"end": 11860,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11839,
											"end": 11897,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11931,
											"end": 11939,
											"name": "PUSH",
											"source": 6,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11926,
											"end": 11928,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11918,
											"end": 11924,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11914,
											"end": 11929,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11907,
											"end": 11940,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11828,
											"end": 11947,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11828,
											"end": 11947,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 11953,
											"end": 12123,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 11953,
											"end": 12123,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12093,
											"end": 12115,
											"name": "PUSH",
											"source": 6,
											"value": "496E73756666696369656E742062616C616E6365000000000000000000000000"
										},
										{
											"begin": 12089,
											"end": 12090,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12081,
											"end": 12087,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12077,
											"end": 12091,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12070,
											"end": 12116,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12059,
											"end": 12123,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12059,
											"end": 12123,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 12129,
											"end": 12300,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 12129,
											"end": 12300,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12269,
											"end": 12292,
											"name": "PUSH",
											"source": 6,
											"value": "546F6B656E207472616E73666572206661696C65640000000000000000000000"
										},
										{
											"begin": 12265,
											"end": 12266,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12257,
											"end": 12263,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12253,
											"end": 12267,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12246,
											"end": 12293,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12235,
											"end": 12300,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12235,
											"end": 12300,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 12306,
											"end": 12527,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 12306,
											"end": 12527,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12446,
											"end": 12480,
											"name": "PUSH",
											"source": 6,
											"value": "416D6F756E742073686F756C642062652067726561746572207468616E207A65"
										},
										{
											"begin": 12442,
											"end": 12443,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12434,
											"end": 12440,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12430,
											"end": 12444,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12423,
											"end": 12481,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12515,
											"end": 12519,
											"name": "PUSH",
											"source": 6,
											"value": "726F000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12510,
											"end": 12512,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12502,
											"end": 12508,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12498,
											"end": 12513,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12491,
											"end": 12520,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12412,
											"end": 12527,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12412,
											"end": 12527,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 12533,
											"end": 12715,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 12533,
											"end": 12715,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12673,
											"end": 12707,
											"name": "PUSH",
											"source": 6,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 12669,
											"end": 12670,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12661,
											"end": 12667,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12657,
											"end": 12671,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12650,
											"end": 12708,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12639,
											"end": 12715,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12639,
											"end": 12715,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 12721,
											"end": 12964,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 12721,
											"end": 12964,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12861,
											"end": 12895,
											"name": "PUSH",
											"source": 6,
											"value": "416D6F756E742073686F756C642062652067726561746572207468616E206F72"
										},
										{
											"begin": 12857,
											"end": 12858,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12849,
											"end": 12855,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12845,
											"end": 12859,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12838,
											"end": 12896,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12930,
											"end": 12956,
											"name": "PUSH",
											"source": 6,
											"value": "20657175616C20746F206D696E5374616B65416D6F756E740000000000000000"
										},
										{
											"begin": 12925,
											"end": 12927,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12917,
											"end": 12923,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12913,
											"end": 12928,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12906,
											"end": 12957,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12827,
											"end": 12964,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12827,
											"end": 12964,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 12970,
											"end": 13151,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 12970,
											"end": 13151,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13110,
											"end": 13143,
											"name": "PUSH",
											"source": 6,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 13106,
											"end": 13107,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13098,
											"end": 13104,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13094,
											"end": 13108,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13087,
											"end": 13144,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13076,
											"end": 13151,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13076,
											"end": 13151,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 13157,
											"end": 13279,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 13157,
											"end": 13279,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13230,
											"end": 13254,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 13248,
											"end": 13253,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13230,
											"end": 13254,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 13230,
											"end": 13254,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 13230,
											"end": 13254,
											"name": "tag",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 13230,
											"end": 13254,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13223,
											"end": 13228,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13220,
											"end": 13255,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 13210,
											"end": 13212,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 13210,
											"end": 13212,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13269,
											"end": 13270,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13266,
											"end": 13267,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13259,
											"end": 13271,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 13210,
											"end": 13212,
											"name": "tag",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 13210,
											"end": 13212,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13200,
											"end": 13279,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13200,
											"end": 13279,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 13285,
											"end": 13401,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 13285,
											"end": 13401,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13355,
											"end": 13376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 13370,
											"end": 13375,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13355,
											"end": 13376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 13355,
											"end": 13376,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 13355,
											"end": 13376,
											"name": "tag",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 13355,
											"end": 13376,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13348,
											"end": 13353,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13345,
											"end": 13377,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 13335,
											"end": 13337,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 13335,
											"end": 13337,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13391,
											"end": 13392,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13388,
											"end": 13389,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13381,
											"end": 13393,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 13335,
											"end": 13337,
											"name": "tag",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 13335,
											"end": 13337,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13325,
											"end": 13401,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13325,
											"end": 13401,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 13407,
											"end": 13529,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 13407,
											"end": 13529,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13480,
											"end": 13504,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 13498,
											"end": 13503,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13480,
											"end": 13504,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 13480,
											"end": 13504,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 13480,
											"end": 13504,
											"name": "tag",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 13480,
											"end": 13504,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13473,
											"end": 13478,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13470,
											"end": 13505,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 13460,
											"end": 13462,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 13460,
											"end": 13462,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13519,
											"end": 13520,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13516,
											"end": 13517,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13509,
											"end": 13521,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 13460,
											"end": 13462,
											"name": "tag",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 13460,
											"end": 13462,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13450,
											"end": 13529,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13450,
											"end": 13529,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"balances(address)": "27e235e3",
							"lockupPeriod()": "ee947a7c",
							"minStakeAmount()": "f1887684",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setMinStakeAmount(uint256)": "eb4af045",
							"stake(uint256)": "a694fc3a",
							"stakingTime(address)": "583d42fd",
							"token()": "fc0c546a",
							"totalStakeAmount()": "94409a56",
							"totalStaked()": "817b1cd2",
							"transferOwnership(address)": "f2fde38b",
							"unStake(uint256)": "5d3eea91"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_minStakeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_lockupPeriod\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Stake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"UnStake\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockupPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minStakeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"setMinStakeAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakingTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStakeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"unStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SLStaking.sol\":\"SLStakingPool\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"SLStaking.sol\":{\"keccak256\":\"0x9c9658b22ae0c39a8ea110cc1e560fd36f29206011ce61f707dedf4ee3b39e6d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85f7bb1ca97dfd33218f51328ba342104a97208b64fc528967788b809186ad69\",\"dweb:/ipfs/QmWAHbUEDjJX3mXt6jSNse8BPC5wb9yr5rWRF6SXa7gX9w\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "SLStaking.sol:SLStakingPool",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 123,
								"contract": "SLStaking.sol:SLStakingPool",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 594,
								"contract": "SLStaking.sol:SLStakingPool",
								"label": "token",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)244"
							},
							{
								"astId": 596,
								"contract": "SLStaking.sol:SLStakingPool",
								"label": "totalStakeAmount",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 598,
								"contract": "SLStaking.sol:SLStakingPool",
								"label": "lockupPeriod",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 602,
								"contract": "SLStaking.sol:SLStakingPool",
								"label": "stakingTime",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 604,
								"contract": "SLStaking.sol:SLStakingPool",
								"label": "minStakeAmount",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 608,
								"contract": "SLStaking.sol:SLStakingPool",
								"label": "balances",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)244": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							266
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 267,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 266,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"contractDependencies": [
								266
							],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								266
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 256,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 256,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0"
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							166
						]
					},
					"id": 167,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:1",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 166,
							"linearizedBaseContracts": [
								166
							],
							"name": "ReentrancyGuard",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 118,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nodeType": "VariableDeclaration",
									"scope": 166,
									"src": "1676:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 116,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 117,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 121,
									"mutability": "constant",
									"name": "_ENTERED",
									"nodeType": "VariableDeclaration",
									"scope": 166,
									"src": "1723:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 119,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 120,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 123,
									"mutability": "mutable",
									"name": "_status",
									"nodeType": "VariableDeclaration",
									"scope": 166,
									"src": "1767:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 122,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "1811:39:1",
										"statements": [
											{
												"expression": {
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 126,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "1821:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 127,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "1831:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 129,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:1"
											}
										]
									},
									"id": 131,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:1"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:1"
									},
									"scope": 166,
									"src": "1797:53:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 141,
										"nodeType": "Block",
										"src": "2251:79:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 134,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 157,
														"src": "2261:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 136,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:1"
											},
											{
												"id": 137,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:1"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 138,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2303:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:1"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:1",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 142,
									"name": "nonReentrant",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:1"
									},
									"src": "2227:103:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 156,
										"nodeType": "Block",
										"src": "2375:248:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 146,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 123,
																"src": "2468:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 147,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 121,
																"src": "2479:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 149,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 145,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 151,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:1"
											},
											{
												"expression": {
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 152,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2598:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 153,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "2608:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 155,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:1"
											}
										]
									},
									"id": 157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:1"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:1"
									},
									"scope": 166,
									"src": "2336:287:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 164,
										"nodeType": "Block",
										"src": "2667:171:1",
										"statements": [
											{
												"expression": {
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 160,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2809:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 161,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "2819:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 163,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:1"
											}
										]
									},
									"id": 165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:1"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:1"
									},
									"scope": 166,
									"src": "2629:209:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 167,
							"src": "888:1952:1"
						}
					],
					"src": "112:2729:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							244
						]
					},
					"id": 245,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 168,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 169,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 244,
							"linearizedBaseContracts": [
								244
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 178,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "403:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "425:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "445:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:2"
									},
									"src": "388:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 187,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "634:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "657:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "682:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:2"
									},
									"src": "619:78:2"
								},
								{
									"documentation": {
										"id": 188,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 193,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 244,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 194,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 201,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 244,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 211,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1211:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1223:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:2"
									},
									"returnParameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1257:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 208,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:2"
									},
									"scope": 244,
									"src": "1193:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 221,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "1557:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "1572:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:2"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "1612:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:2"
									},
									"scope": 244,
									"src": "1538:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 231,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2291:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2308:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:2"
									},
									"returnParameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2342:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 228,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:2"
									},
									"scope": 244,
									"src": "2274:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:2",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 243,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "2677:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "2699:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "2719:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:2"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "2758:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 240,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:2"
									},
									"scope": 244,
									"src": "2646:118:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 245,
							"src": "202:2564:2"
						}
					],
					"src": "106:2661:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							266
						]
					},
					"id": 267,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 246,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 247,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 266,
							"linearizedBaseContracts": [
								266
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "702:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 252,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 251,
												"id": 254,
												"nodeType": "Return",
												"src": "712:17:3"
											}
										]
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:3"
									},
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "693:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:3"
									},
									"scope": 266,
									"src": "640:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 264,
										"nodeType": "Block",
										"src": "809:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 261,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 260,
												"id": 263,
												"nodeType": "Return",
												"src": "819:15:3"
											}
										]
									},
									"id": 265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:3"
									},
									"returnParameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "793:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 258,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:3"
									},
									"scope": 266,
									"src": "742:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 267,
							"src": "608:235:3"
						}
					],
					"src": "86:758:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							578
						]
					},
					"id": 579,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 268,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 269,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:4",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 578,
							"linearizedBaseContracts": [
								578
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "717:140:4",
										"statements": [
											{
												"id": 299,
												"nodeType": "UncheckedBlock",
												"src": "727:124:4",
												"statements": [
													{
														"assignments": [
															282
														],
														"declarations": [
															{
																"constant": false,
																"id": 282,
																"mutability": "mutable",
																"name": "c",
																"nodeType": "VariableDeclaration",
																"scope": 299,
																"src": "751:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 281,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 286,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 283,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "763:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 284,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 274,
																"src": "767:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 289,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 287,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 282,
																"src": "786:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 288,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "790:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 294,
														"nodeType": "IfStatement",
														"src": "782:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 290,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 291,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 292,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 280,
															"id": 293,
															"nodeType": "Return",
															"src": "793:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 295,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 296,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 282,
																	"src": "838:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 297,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 280,
														"id": 298,
														"nodeType": "Return",
														"src": "824:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 270,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:4",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "657:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "668:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:4"
									},
									"returnParameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "702:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 276,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "708:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:4"
									},
									"scope": 578,
									"src": "641:216:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 328,
										"nodeType": "Block",
										"src": "1078:113:4",
										"statements": [
											{
												"id": 327,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 315,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 313,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "1116:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 314,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 304,
																"src": "1120:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 320,
														"nodeType": "IfStatement",
														"src": "1112:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 316,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 317,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 318,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 312,
															"id": 319,
															"nodeType": "Return",
															"src": "1123:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 321,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 324,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 322,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 304,
																		"src": "1168:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 323,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 306,
																		"src": "1172:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 325,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 312,
														"id": 326,
														"nodeType": "Return",
														"src": "1154:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 302,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:4",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "1018:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "1029:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:4"
									},
									"returnParameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "1063:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 308,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "1069:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:4"
									},
									"scope": 578,
									"src": "1002:189:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 370,
										"nodeType": "Block",
										"src": "1415:417:4",
										"statements": [
											{
												"id": 369,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 341,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 332,
																"src": "1683:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 342,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 348,
														"nodeType": "IfStatement",
														"src": "1679:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 344,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 345,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 346,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 340,
															"id": 347,
															"nodeType": "Return",
															"src": "1691:16:4"
														}
													},
													{
														"assignments": [
															350
														],
														"declarations": [
															{
																"constant": false,
																"id": 350,
																"mutability": "mutable",
																"name": "c",
																"nodeType": "VariableDeclaration",
																"scope": 369,
																"src": "1721:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 349,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 354,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 351,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 332,
																"src": "1733:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 352,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 334,
																"src": "1737:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 357,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 355,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 350,
																	"src": "1756:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 356,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 332,
																	"src": "1760:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 358,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 334,
																"src": "1765:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 364,
														"nodeType": "IfStatement",
														"src": "1752:33:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 360,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 361,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 362,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 340,
															"id": 363,
															"nodeType": "Return",
															"src": "1768:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 366,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 350,
																	"src": "1813:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 367,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 340,
														"id": 368,
														"nodeType": "Return",
														"src": "1799:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:4",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 371,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "1355:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "1366:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:4"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "1400:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 336,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "1406:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:4"
									},
									"scope": 578,
									"src": "1339:493:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 398,
										"nodeType": "Block",
										"src": "2057:114:4",
										"statements": [
											{
												"id": 397,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 383,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 376,
																"src": "2095:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 384,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 390,
														"nodeType": "IfStatement",
														"src": "2091:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 386,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 388,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 382,
															"id": 389,
															"nodeType": "Return",
															"src": "2103:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 392,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 374,
																		"src": "2148:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 393,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 376,
																		"src": "2152:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 395,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 382,
														"id": 396,
														"nodeType": "Return",
														"src": "2134:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 372,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:4",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "1997:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "2008:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:4"
									},
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "2042:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 378,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "2048:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:4"
									},
									"scope": 578,
									"src": "1981:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "2406:114:4",
										"statements": [
											{
												"id": 425,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 411,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 404,
																"src": "2444:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 412,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 418,
														"nodeType": "IfStatement",
														"src": "2440:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 414,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 415,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 416,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 410,
															"id": 417,
															"nodeType": "Return",
															"src": "2452:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 419,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 422,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 420,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 402,
																		"src": "2497:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 421,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 404,
																		"src": "2501:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 423,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 410,
														"id": 424,
														"nodeType": "Return",
														"src": "2483:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "2346:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "2357:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:4"
									},
									"returnParameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "2391:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 406,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "2397:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:4"
									},
									"scope": 578,
									"src": "2330:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "2822:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 437,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 430,
														"src": "2839:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 438,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 432,
														"src": "2843:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 436,
												"id": 440,
												"nodeType": "Return",
												"src": "2832:12:4"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:4",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2768:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2779:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:4"
									},
									"returnParameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2813:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:4"
									},
									"scope": 578,
									"src": "2755:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 456,
										"nodeType": "Block",
										"src": "3189:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 452,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "3206:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 453,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "3210:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 451,
												"id": 455,
												"nodeType": "Return",
												"src": "3199:12:4"
											}
										]
									},
									"documentation": {
										"id": 443,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 457,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "3135:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "3146:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:4"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "3180:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:4"
									},
									"scope": 578,
									"src": "3122:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 471,
										"nodeType": "Block",
										"src": "3532:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 467,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 460,
														"src": "3549:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 468,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 462,
														"src": "3553:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 466,
												"id": 470,
												"nodeType": "Return",
												"src": "3542:12:4"
											}
										]
									},
									"documentation": {
										"id": 458,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:4",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 472,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "3478:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "3489:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:4"
									},
									"returnParameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "3523:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:4"
									},
									"scope": 578,
									"src": "3465:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 486,
										"nodeType": "Block",
										"src": "3917:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 482,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 475,
														"src": "3934:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 483,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 477,
														"src": "3938:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 481,
												"id": 485,
												"nodeType": "Return",
												"src": "3927:12:4"
											}
										]
									},
									"documentation": {
										"id": 473,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:4",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 487,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "3863:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "3874:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:4"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "3908:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:4"
									},
									"scope": 578,
									"src": "3850:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 501,
										"nodeType": "Block",
										"src": "4466:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 497,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 490,
														"src": "4483:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 498,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 492,
														"src": "4487:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 496,
												"id": 500,
												"nodeType": "Return",
												"src": "4476:12:4"
											}
										]
									},
									"documentation": {
										"id": 488,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 502,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "4412:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "4423:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:4"
									},
									"returnParameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "4457:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 494,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:4"
									},
									"scope": 578,
									"src": "4399:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 526,
										"nodeType": "Block",
										"src": "5084:106:4",
										"statements": [
											{
												"id": 525,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 515,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 507,
																		"src": "5126:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 516,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 505,
																		"src": "5131:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 518,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 509,
																	"src": "5134:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 514,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 520,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 521,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 505,
																"src": "5168:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 522,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 507,
																"src": "5172:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 513,
														"id": 524,
														"nodeType": "Return",
														"src": "5161:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 527,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "4981:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "5000:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "5019:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 508,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:4"
									},
									"returnParameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "5075:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:4"
									},
									"scope": 578,
									"src": "4959:231:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 551,
										"nodeType": "Block",
										"src": "5799:105:4",
										"statements": [
											{
												"id": 550,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 540,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 532,
																		"src": "5841:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 541,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 543,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 534,
																	"src": "5848:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 539,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 545,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 548,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 546,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 530,
																"src": "5882:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 547,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 532,
																"src": "5886:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 538,
														"id": 549,
														"nodeType": "Return",
														"src": "5875:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 528,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:4",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 552,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "5696:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "5715:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "5734:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 533,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:4"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "5790:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:4"
									},
									"scope": 578,
									"src": "5674:230:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 576,
										"nodeType": "Block",
										"src": "6675:105:4",
										"statements": [
											{
												"id": 575,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 567,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 565,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 557,
																		"src": "6717:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 566,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 568,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 559,
																	"src": "6724:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 564,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 570,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 571,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 555,
																"src": "6758:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 572,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 557,
																"src": "6762:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 563,
														"id": 574,
														"nodeType": "Return",
														"src": "6751:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 553,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 577,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "6572:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "6591:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 556,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "6610:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 558,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:4"
									},
									"returnParameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "6666:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:4"
									},
									"scope": 578,
									"src": "6550:230:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 579,
							"src": "482:6300:4"
						}
					],
					"src": "107:6676:4"
				},
				"id": 4
			},
			"SLStaking.sol": {
				"ast": {
					"absolutePath": "SLStaking.sol",
					"exportedSymbols": {
						"Context": [
							266
						],
						"IERC20": [
							244
						],
						"Ownable": [
							112
						],
						"ReentrancyGuard": [
							166
						],
						"SLStakingPool": [
							810
						],
						"SafeMath": [
							578
						]
					},
					"id": 811,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 580,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 581,
							"nodeType": "ImportDirective",
							"scope": 811,
							"sourceUnit": 245,
							"src": "58:56:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 582,
							"nodeType": "ImportDirective",
							"scope": 811,
							"sourceUnit": 113,
							"src": "115:52:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 583,
							"nodeType": "ImportDirective",
							"scope": 811,
							"sourceUnit": 167,
							"src": "168:62:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 584,
							"nodeType": "ImportDirective",
							"scope": 811,
							"sourceUnit": 579,
							"src": "231:57:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 585,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "316:7:5"
									},
									"id": 586,
									"nodeType": "InheritanceSpecifier",
									"src": "316:7:5"
								},
								{
									"baseName": {
										"id": 587,
										"name": "ReentrancyGuard",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 166,
										"src": "325:15:5"
									},
									"id": 588,
									"nodeType": "InheritanceSpecifier",
									"src": "325:15:5"
								}
							],
							"contractDependencies": [
								112,
								166,
								266
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 810,
							"linearizedBaseContracts": [
								810,
								166,
								112,
								266
							],
							"name": "SLStakingPool",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 591,
									"libraryName": {
										"id": 589,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 578,
										"src": "351:8:5"
									},
									"nodeType": "UsingForDirective",
									"src": "345:27:5",
									"typeName": {
										"id": 590,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "364:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 594,
									"mutability": "mutable",
									"name": "token",
									"nodeType": "VariableDeclaration",
									"scope": 810,
									"src": "376:19:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$244",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 593,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 592,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 244,
											"src": "376:6:5"
										},
										"referencedDeclaration": 244,
										"src": "376:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$244",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "94409a56",
									"id": 596,
									"mutability": "mutable",
									"name": "totalStakeAmount",
									"nodeType": "VariableDeclaration",
									"scope": 810,
									"src": "400:31:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 595,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "400:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ee947a7c",
									"id": 598,
									"mutability": "mutable",
									"name": "lockupPeriod",
									"nodeType": "VariableDeclaration",
									"scope": 810,
									"src": "435:27:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 597,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "435:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "583d42fd",
									"id": 602,
									"mutability": "mutable",
									"name": "stakingTime",
									"nodeType": "VariableDeclaration",
									"scope": 810,
									"src": "501:46:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 601,
										"keyType": {
											"id": 599,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "509:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "501:27:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 600,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "520:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f1887684",
									"id": 604,
									"mutability": "mutable",
									"name": "minStakeAmount",
									"nodeType": "VariableDeclaration",
									"scope": 810,
									"src": "583:29:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 603,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "583:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "27e235e3",
									"id": 608,
									"mutability": "mutable",
									"name": "balances",
									"nodeType": "VariableDeclaration",
									"scope": 810,
									"src": "661:43:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 607,
										"keyType": {
											"id": 605,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "669:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "661:27:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 606,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "680:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 614,
									"name": "Stake",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "721:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 609,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "721:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 612,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "743:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "743:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "720:38:5"
									},
									"src": "709:50:5"
								},
								{
									"anonymous": false,
									"id": 620,
									"name": "UnStake",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "776:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "776:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 618,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "798:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "798:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "775:38:5"
									},
									"src": "762:52:5"
								},
								{
									"body": {
										"id": 643,
										"nodeType": "Block",
										"src": "901:112:5",
										"statements": [
											{
												"expression": {
													"id": 633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 629,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "907:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$244",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 631,
																"name": "_tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 622,
																"src": "922:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 630,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "915:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$244_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 632,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "915:21:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$244",
															"typeString": "contract IERC20"
														}
													},
													"src": "907:29:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$244",
														"typeString": "contract IERC20"
													}
												},
												"id": 634,
												"nodeType": "ExpressionStatement",
												"src": "907:29:5"
											},
											{
												"expression": {
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 635,
														"name": "minStakeAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 604,
														"src": "942:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 636,
														"name": "_minStakeAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 624,
														"src": "959:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "942:32:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 638,
												"nodeType": "ExpressionStatement",
												"src": "942:32:5"
											},
											{
												"expression": {
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 639,
														"name": "lockupPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "980:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 640,
														"name": "_lockupPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 626,
														"src": "995:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "980:28:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 642,
												"nodeType": "ExpressionStatement",
												"src": "980:28:5"
											}
										]
									},
									"id": 644,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "830:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "830:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "_minStakeAmount",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "853:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "853:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "_lockupPeriod",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "878:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "829:71:5"
									},
									"returnParameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "901:0:5"
									},
									"scope": 810,
									"src": "818:195:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 713,
										"nodeType": "Block",
										"src": "1071:420:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 660,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 657,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 646,
																		"src": "1110:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"baseExpression": {
																			"id": 652,
																			"name": "balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 608,
																			"src": "1085:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 655,
																		"indexExpression": {
																			"expression": {
																				"id": 653,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "1094:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 654,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "1094:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1085:20:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 656,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 442,
																	"src": "1085:24:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1085:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 659,
																"name": "minStakeAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 604,
																"src": "1122:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1085:51:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e742073686f756c642062652067726561746572207468616e206f7220657175616c20746f206d696e5374616b65416d6f756e74",
															"id": 661,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1138:58:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d0a08b5f8a78e7f8c109da4e72a03dd8742a9dcf74203ea2c80e6327607cb55a",
																"typeString": "literal_string \"Amount should be greater than or equal to minStakeAmount\""
															},
															"value": "Amount should be greater than or equal to minStakeAmount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d0a08b5f8a78e7f8c109da4e72a03dd8742a9dcf74203ea2c80e6327607cb55a",
																"typeString": "literal_string \"Amount should be greater than or equal to minStakeAmount\""
															}
														],
														"id": 651,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1077:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1077:120:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 663,
												"nodeType": "ExpressionStatement",
												"src": "1077:120:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 667,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1230:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 668,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1230:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 671,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1250:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SLStakingPool_$810",
																				"typeString": "contract SLStakingPool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SLStakingPool_$810",
																				"typeString": "contract SLStakingPool"
																			}
																		],
																		"id": 670,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1242:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 669,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1242:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 672,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1242:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 673,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 646,
																	"src": "1257:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 665,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 594,
																	"src": "1211:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$244",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 666,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 243,
																"src": "1211:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 674,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1211:54:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e207472616e73666572206661696c6564",
															"id": 675,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1267:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																"typeString": "literal_string \"Token transfer failed\""
															},
															"value": "Token transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																"typeString": "literal_string \"Token transfer failed\""
															}
														],
														"id": 664,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1203:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1203:88:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 677,
												"nodeType": "ExpressionStatement",
												"src": "1203:88:5"
											},
											{
												"expression": {
													"id": 689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 678,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "1298:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 681,
														"indexExpression": {
															"expression": {
																"id": 679,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1307:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1307:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1298:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 687,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 646,
																"src": "1346:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 682,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 608,
																	"src": "1321:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 685,
																"indexExpression": {
																	"expression": {
																		"id": 683,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1330:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 684,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1330:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1321:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 442,
															"src": "1321:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 688,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1321:33:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1298:56:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 690,
												"nodeType": "ExpressionStatement",
												"src": "1298:56:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 691,
															"name": "stakingTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 602,
															"src": "1364:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 694,
														"indexExpression": {
															"expression": {
																"id": 692,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1376:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1376:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1364:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 695,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1391:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1364:28:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 706,
												"nodeType": "IfStatement",
												"src": "1361:88:5",
												"trueBody": {
													"id": 705,
													"nodeType": "Block",
													"src": "1393:56:5",
													"statements": [
														{
															"expression": {
																"id": 703,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 697,
																		"name": "stakingTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 602,
																		"src": "1401:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 700,
																	"indexExpression": {
																		"expression": {
																			"id": 698,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1413:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1413:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1401:23:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 701,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "1427:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 702,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "1427:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1401:41:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 704,
															"nodeType": "ExpressionStatement",
															"src": "1401:41:5"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 708,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1466:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 709,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1466:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 710,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 646,
															"src": "1478:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 707,
														"name": "Stake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 614,
														"src": "1460:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1460:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 712,
												"nodeType": "EmitStatement",
												"src": "1455:31:5"
											}
										]
									},
									"functionSelector": "a694fc3a",
									"id": 714,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 649,
											"modifierName": {
												"id": 648,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 142,
												"src": "1058:12:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1058:12:5"
										}
									],
									"name": "stake",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "1032:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1032:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1031:17:5"
									},
									"returnParameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1071:0:5"
									},
									"scope": 810,
									"src": "1017:474:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "1551:340:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 722,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1565:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 723,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1565:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"id": 729,
																				"name": "lockupPeriod",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 598,
																				"src": "1613:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"baseExpression": {
																					"id": 724,
																					"name": "stakingTime",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 602,
																					"src": "1585:11:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 727,
																				"indexExpression": {
																					"expression": {
																						"id": 725,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "1597:3:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 726,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "1597:10:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "1585:23:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 728,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "add",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 442,
																			"src": "1585:27:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 730,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1585:41:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 731,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1584:43:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1565:62:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c6f636b6564",
															"id": 733,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1629:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_10bc01d611f2c803e55ff98d999836f196afae7cf91f96f3b6f511e56ba84974",
																"typeString": "literal_string \"Locked\""
															},
															"value": "Locked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_10bc01d611f2c803e55ff98d999836f196afae7cf91f96f3b6f511e56ba84974",
																"typeString": "literal_string \"Locked\""
															}
														],
														"id": 721,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1557:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1557:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 735,
												"nodeType": "ExpressionStatement",
												"src": "1557:81:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 742,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 737,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 608,
																	"src": "1652:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 740,
																"indexExpression": {
																	"expression": {
																		"id": 738,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1661:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 739,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1661:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1652:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 741,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 716,
																"src": "1676:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1652:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 743,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1685:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 736,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1644:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1644:64:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 745,
												"nodeType": "ExpressionStatement",
												"src": "1644:64:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 749,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1737:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 750,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1737:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 751,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 716,
																	"src": "1749:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 747,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 594,
																	"src": "1722:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$244",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 748,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 211,
																"src": "1722:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 752,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1722:35:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e207472616e73666572206661696c6564",
															"id": 753,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1759:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																"typeString": "literal_string \"Token transfer failed\""
															},
															"value": "Token transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																"typeString": "literal_string \"Token transfer failed\""
															}
														],
														"id": 746,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1714:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1714:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 755,
												"nodeType": "ExpressionStatement",
												"src": "1714:69:5"
											},
											{
												"expression": {
													"id": 767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 756,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "1790:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 759,
														"indexExpression": {
															"expression": {
																"id": 757,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1799:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1799:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1790:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 765,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 716,
																"src": "1838:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 760,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 608,
																	"src": "1813:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 763,
																"indexExpression": {
																	"expression": {
																		"id": 761,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1822:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 762,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1822:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1813:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 764,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 457,
															"src": "1813:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 766,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1813:33:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1790:56:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 768,
												"nodeType": "ExpressionStatement",
												"src": "1790:56:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 770,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1866:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1866:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 772,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "1878:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 769,
														"name": "UnStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 620,
														"src": "1858:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1858:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 774,
												"nodeType": "EmitStatement",
												"src": "1853:33:5"
											}
										]
									},
									"functionSelector": "5d3eea91",
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 719,
											"modifierName": {
												"id": 718,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 142,
												"src": "1538:12:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1538:12:5"
										}
									],
									"name": "unStake",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "1512:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1512:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1511:17:5"
									},
									"returnParameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1551:0:5"
									},
									"scope": 810,
									"src": "1495:396:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 794,
										"nodeType": "Block",
										"src": "1991:100:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 786,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 784,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 778,
																"src": "2005:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "30",
																"id": 785,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2016:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2005:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e742073686f756c642062652067726561746572207468616e207a65726f",
															"id": 787,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2019:36:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_86ceaf40f78f95089708c16e6c28aa31172e9b6636983e7b1c5a9cebb43e7abd",
																"typeString": "literal_string \"Amount should be greater than zero\""
															},
															"value": "Amount should be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_86ceaf40f78f95089708c16e6c28aa31172e9b6636983e7b1c5a9cebb43e7abd",
																"typeString": "literal_string \"Amount should be greater than zero\""
															}
														],
														"id": 783,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1997:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1997:59:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 789,
												"nodeType": "ExpressionStatement",
												"src": "1997:59:5"
											},
											{
												"expression": {
													"id": 792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 790,
														"name": "minStakeAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 604,
														"src": "2062:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 791,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 778,
														"src": "2079:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2062:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 793,
												"nodeType": "ExpressionStatement",
												"src": "2062:24:5"
											}
										]
									},
									"functionSelector": "eb4af045",
									"id": 795,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 781,
											"modifierName": {
												"id": 780,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1981:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1981:9:5"
										}
									],
									"name": "setMinStakeAmount",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "1955:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 777,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1955:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1954:17:5"
									},
									"returnParameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1991:0:5"
									},
									"scope": 810,
									"src": "1928:163:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 808,
										"nodeType": "Block",
										"src": "2196:50:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 804,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2235:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SLStakingPool_$810",
																		"typeString": "contract SLStakingPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SLStakingPool_$810",
																		"typeString": "contract SLStakingPool"
																	}
																],
																"id": 803,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2227:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 802,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2227:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 805,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2227:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 800,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 594,
															"src": "2211:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$244",
																"typeString": "contract IERC20"
															}
														},
														"id": 801,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "2211:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2211:30:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 799,
												"id": 807,
												"nodeType": "Return",
												"src": "2204:37:5"
											}
										]
									},
									"functionSelector": "817b1cd2",
									"id": 809,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalStaked",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2161:2:5"
									},
									"returnParameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "2187:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 797,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2187:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2186:9:5"
									},
									"scope": 810,
									"src": "2141:105:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 811,
							"src": "290:1958:5"
						}
					],
					"src": "33:2215:5"
				},
				"id": 5
			}
		}
	}
}