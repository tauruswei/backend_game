{
	"id": "5451a8113c81eb4495a4ba98cf69fc30",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.4",
	"solcLongVersion": "0.8.4+commit.c7e474f2",
	"input": {
		"language": "Solidity",
		"sources": {
			"Defi/StakingPool.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\n\ncontract StakingPool is Ownable, ReentrancyGuard {\n    using SafeMath for uint256;\n\n    IERC20 public token;               // 导入的 ERC20 代币\n    IERC20 public rewardToken;         // 奖励代币，本例中是 USDT\n    uint256 public rewardRateInit;     // 每个代币每天的分润\n    uint256 public lockupPeriod;       // 锁定期，初步设为 90 天\n    uint256 public stakingStartTime;   // 项目 staking 开始时间\n\n    mapping(address => uint256) public stakingBalance;  // 各个用户质押的代币数量\n    mapping(address => uint256) public stakingTime;     // 各个用户质押的时间\n    mapping(address => uint256) public stakingReward;   // 各个用户已经获得的奖励金额\n\n    uint256 public totalStake;  // 池子中的总质押量\n    uint256 public totalReward; // 池子中的总奖励\n\n    uint256 public dayTime = 86400; // 每天一共有 86400 秒\n\n    event Stake(address indexed user, uint256 amount);\n    event UnStake(address indexed user, uint256 amount);\n    event ClaimReward(address indexed user, uint256 amount);\n\n    constructor(address _token, address _rewardToken, uint256 _rewardRateInit, uint256 _lockupPeriod) {\n        token = IERC20(_token);\n        rewardToken = IERC20(_rewardToken);\n        rewardRateInit = _rewardRateInit;\n        lockupPeriod = _lockupPeriod;\n        stakingStartTime = block.timestamp;\n    }\n\n    // 质押代币\n    function stake(uint256 _amount) external nonReentrant {\n        require(block.timestamp < stakingStartTime + lockupPeriod, \"The current staking activity has ended\");\n        require(_amount > 0, \"Amount should greater than zero\");\n        require(token.transferFrom(msg.sender, address(this), _amount), \"Transfer failed\");\n        stakingBalance[msg.sender] = stakingBalance[msg.sender].add(_amount);\n        stakingTime[msg.sender] = block.timestamp;\n        uint256 reward = getRewardForUser(msg.sender,_amount);\n        stakingReward[msg.sender] = stakingReward[msg.sender].add(reward);\n        totalStake = totalStake.add(_amount);\n        totalReward = totalReward.add(reward);\n        emit Stake(msg.sender, _amount);\n    }\n\n    // 撤回代币，仅在锁定期后允许\n    function unStake(uint256 _amount) external nonReentrant {\n        require(block.timestamp >= (stakingStartTime + lockupPeriod), \"Locked\");\n        require(stakingBalance[msg.sender] >= _amount, \"Insufficient balance\");\n        require(token.transfer(msg.sender, _amount), \"Transfer failed\");\n        stakingBalance[msg.sender] = stakingBalance[msg.sender].sub(_amount);\n        totalStake = totalStake.sub(_amount);\n        emit UnStake(msg.sender, _amount);\n    }\n\n    // 提取奖励\n    function claimReward() external nonReentrant {\n        require(block.timestamp >= (stakingStartTime + lockupPeriod), \"Locked\");\n        uint256 reward = stakingReward[msg.sender];\n        require(rewardToken.transfer(msg.sender, reward), \"Transfer failed\");\n        stakingReward[msg.sender]=0;\n        totalReward = totalReward.sub(reward);\n        emit ClaimReward(msg.sender, reward);\n    }\n\n    // 获取用户的累计奖励，不会实际转账\n    function getRewardForUser(address account,uint256 _amount) internal view returns (uint256) {\n        uint256 stakingDaysRemaining = (lockupPeriod.add(stakingStartTime)).sub(stakingTime[account]); // 计算用户已经质押的天数，不足一天按1天计算\n        // uint256 rewardRate = (stakingDaysRemaining.div(60)).add(1).mul(rewardRateInit).div(1e18);\n        uint256 reward = _amount.div(1e6).mul(rewardRateInit).mul(stakingDaysRemaining).div(dayTime);\n        return reward;\n    }\n\n    // 设置奖励代币实例\n    function setRewardToken(address _rewardToken) external onlyOwner {\n        rewardToken = IERC20(_rewardToken);\n    }\n\n    // 设置项目质押开始时间\n    function setStakingStartTime(uint256 _stakingStartTime) external onlyOwner {\n        stakingStartTime = _stakingStartTime;\n    }\n\n      // 设置项目质押开始时间\n    function setLockupPeriod(uint256 _lockupPeriod) external onlyOwner {\n        lockupPeriod = _lockupPeriod;\n    }\n    // 设置每枚代币的分润\n    function setRewardRateInit(uint256 _rewardRateInit) external onlyOwner {\n        rewardRateInit = _rewardRateInit;\n    }\n      // 查询用户的余额\n    function balanceOf(address _address) external view returns (uint256){\n        return stakingBalance[_address];\n    }\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 123,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202bbac305fb28cc6d6b99ac62b4043f030bd0bde7d28eb7d7b559be9a5354e3d464736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202bbac305fb28cc6d6b99ac62b4043f030bd0bde7d28eb7d7b559be9a5354e3d464736f6c63430008040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B 0xBA 0xC3 SDIV 0xFB 0x28 0xCC PUSH14 0x6B99AC62B4043F030BD0BDE7D28E 0xB7 0xD7 0xB5 MSIZE 0xBE SWAP11 MSTORE8 SLOAD 0xE3 0xD4 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "482:6300:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202bbac305fb28cc6d6b99ac62b4043f030bd0bde7d28eb7d7b559be9a5354e3d464736f6c63430008040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B 0xBA 0xC3 SDIV 0xFB 0x28 0xCC PUSH14 0x6B99AC62B4043F030BD0BDE7D28E 0xB7 0xD7 0xB5 MSIZE 0xBE SWAP11 MSTORE8 SLOAD 0xE3 0xD4 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "482:6300:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202bbac305fb28cc6d6b99ac62b4043f030bd0bde7d28eb7d7b559be9a5354e3d464736f6c63430008040033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Defi/StakingPool.sol": {
				"StakingPool": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_rewardToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_rewardRateInit",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_lockupPeriod",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ClaimReward",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Stake",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "UnStake",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "dayTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lockupPeriod",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardRateInit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_lockupPeriod",
									"type": "uint256"
								}
							],
							"name": "setLockupPeriod",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_rewardRateInit",
									"type": "uint256"
								}
							],
							"name": "setRewardRateInit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_rewardToken",
									"type": "address"
								}
							],
							"name": "setRewardToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_stakingStartTime",
									"type": "uint256"
								}
							],
							"name": "setStakingStartTime",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakingBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakingReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingStartTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakingTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalStake",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "unStake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Defi/StakingPool.sol\":289:4718  contract StakingPool is Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"Defi/StakingPool.sol\":1155:1160  86400 */\n  0x015180\n    /* \"Defi/StakingPool.sol\":1130:1160  uint256 public dayTime = 86400 */\n  0x0c\n  sstore\n    /* \"Defi/StakingPool.sol\":1370:1675  constructor(address _token, address _rewardToken, uint256 _rewardRateInit, uint256 _lockupPeriod) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_9\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_10)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  dup1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Defi/StakingPool.sol\":1493:1499  _token */\n  dup4\n    /* \"Defi/StakingPool.sol\":1478:1483  token */\n  0x02\n  0x00\n    /* \"Defi/StakingPool.sol\":1478:1500  token = IERC20(_token) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Defi/StakingPool.sol\":1531:1543  _rewardToken */\n  dup3\n    /* \"Defi/StakingPool.sol\":1510:1521  rewardToken */\n  0x03\n  0x00\n    /* \"Defi/StakingPool.sol\":1510:1544  rewardToken = IERC20(_rewardToken) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Defi/StakingPool.sol\":1571:1586  _rewardRateInit */\n  dup2\n    /* \"Defi/StakingPool.sol\":1554:1568  rewardRateInit */\n  0x04\n    /* \"Defi/StakingPool.sol\":1554:1586  rewardRateInit = _rewardRateInit */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Defi/StakingPool.sol\":1611:1624  _lockupPeriod */\n  dup1\n    /* \"Defi/StakingPool.sol\":1596:1608  lockupPeriod */\n  0x05\n    /* \"Defi/StakingPool.sol\":1596:1624  lockupPeriod = _lockupPeriod */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Defi/StakingPool.sol\":1653:1668  block.timestamp */\n  timestamp\n    /* \"Defi/StakingPool.sol\":1634:1650  stakingStartTime */\n  0x06\n    /* \"Defi/StakingPool.sol\":1634:1668  stakingStartTime = block.timestamp */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Defi/StakingPool.sol\":1370:1675  constructor(address _token, address _rewardToken, uint256 _rewardRateInit, uint256 _lockupPeriod) {... */\n  pop\n  pop\n  pop\n  pop\n    /* \"Defi/StakingPool.sol\":289:4718  contract StakingPool is Ownable, ReentrancyGuard {... */\n  jump(tag_14)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_10:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:150   */\ntag_18:\n    /* \"#utility.yul\":64:69   */\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_20\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_21\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":70:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:299   */\ntag_22:\n    /* \"#utility.yul\":213:218   */\n  0x00\n    /* \"#utility.yul\":244:250   */\n  dup2\n    /* \"#utility.yul\":238:251   */\n  mload\n    /* \"#utility.yul\":229:251   */\n  swap1\n  pop\n    /* \"#utility.yul\":260:293   */\n  tag_24\n    /* \"#utility.yul\":287:292   */\n  dup2\n    /* \"#utility.yul\":260:293   */\n  tag_25\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":219:299   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":305:1058   */\ntag_3:\n    /* \"#utility.yul\":402:408   */\n  0x00\n    /* \"#utility.yul\":410:416   */\n  dup1\n    /* \"#utility.yul\":418:424   */\n  0x00\n    /* \"#utility.yul\":426:432   */\n  dup1\n    /* \"#utility.yul\":475:478   */\n  0x80\n    /* \"#utility.yul\":463:472   */\n  dup6\n    /* \"#utility.yul\":454:461   */\n  dup8\n    /* \"#utility.yul\":450:473   */\n  sub\n    /* \"#utility.yul\":446:479   */\n  slt\n    /* \"#utility.yul\":443:445   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":492:493   */\n  0x00\n    /* \"#utility.yul\":489:490   */\n  dup1\n    /* \"#utility.yul\":482:494   */\n  revert\n    /* \"#utility.yul\":443:445   */\ntag_27:\n    /* \"#utility.yul\":535:536   */\n  0x00\n    /* \"#utility.yul\":560:624   */\n  tag_28\n    /* \"#utility.yul\":616:623   */\n  dup8\n    /* \"#utility.yul\":607:613   */\n  dup3\n    /* \"#utility.yul\":596:605   */\n  dup9\n    /* \"#utility.yul\":592:614   */\n  add\n    /* \"#utility.yul\":560:624   */\n  tag_18\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":550:624   */\n  swap5\n  pop\n    /* \"#utility.yul\":506:634   */\n  pop\n    /* \"#utility.yul\":673:675   */\n  0x20\n    /* \"#utility.yul\":699:763   */\n  tag_29\n    /* \"#utility.yul\":755:762   */\n  dup8\n    /* \"#utility.yul\":746:752   */\n  dup3\n    /* \"#utility.yul\":735:744   */\n  dup9\n    /* \"#utility.yul\":731:753   */\n  add\n    /* \"#utility.yul\":699:763   */\n  tag_18\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":689:763   */\n  swap4\n  pop\n    /* \"#utility.yul\":644:773   */\n  pop\n    /* \"#utility.yul\":812:814   */\n  0x40\n    /* \"#utility.yul\":838:902   */\n  tag_30\n    /* \"#utility.yul\":894:901   */\n  dup8\n    /* \"#utility.yul\":885:891   */\n  dup3\n    /* \"#utility.yul\":874:883   */\n  dup9\n    /* \"#utility.yul\":870:892   */\n  add\n    /* \"#utility.yul\":838:902   */\n  tag_22\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":828:902   */\n  swap3\n  pop\n    /* \"#utility.yul\":783:912   */\n  pop\n    /* \"#utility.yul\":951:953   */\n  0x60\n    /* \"#utility.yul\":977:1041   */\n  tag_31\n    /* \"#utility.yul\":1033:1040   */\n  dup8\n    /* \"#utility.yul\":1024:1030   */\n  dup3\n    /* \"#utility.yul\":1013:1022   */\n  dup9\n    /* \"#utility.yul\":1009:1031   */\n  add\n    /* \"#utility.yul\":977:1041   */\n  tag_22\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":967:1041   */\n  swap2\n  pop\n    /* \"#utility.yul\":922:1051   */\n  pop\n    /* \"#utility.yul\":433:1058   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1064:1160   */\ntag_32:\n    /* \"#utility.yul\":1101:1108   */\n  0x00\n    /* \"#utility.yul\":1130:1154   */\n  tag_34\n    /* \"#utility.yul\":1148:1153   */\n  dup3\n    /* \"#utility.yul\":1130:1154   */\n  tag_35\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":1119:1154   */\n  swap1\n  pop\n    /* \"#utility.yul\":1109:1160   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1166:1292   */\ntag_35:\n    /* \"#utility.yul\":1203:1210   */\n  0x00\n    /* \"#utility.yul\":1243:1285   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1236:1241   */\n  dup3\n    /* \"#utility.yul\":1232:1286   */\n  and\n    /* \"#utility.yul\":1221:1286   */\n  swap1\n  pop\n    /* \"#utility.yul\":1211:1292   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1298:1375   */\ntag_37:\n    /* \"#utility.yul\":1335:1342   */\n  0x00\n    /* \"#utility.yul\":1364:1369   */\n  dup2\n    /* \"#utility.yul\":1353:1369   */\n  swap1\n  pop\n    /* \"#utility.yul\":1343:1375   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1381:1503   */\ntag_21:\n    /* \"#utility.yul\":1454:1478   */\n  tag_40\n    /* \"#utility.yul\":1472:1477   */\n  dup2\n    /* \"#utility.yul\":1454:1478   */\n  tag_32\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1447:1452   */\n  dup2\n    /* \"#utility.yul\":1444:1479   */\n  eq\n    /* \"#utility.yul\":1434:1436   */\n  tag_41\n  jumpi\n    /* \"#utility.yul\":1493:1494   */\n  0x00\n    /* \"#utility.yul\":1490:1491   */\n  dup1\n    /* \"#utility.yul\":1483:1495   */\n  revert\n    /* \"#utility.yul\":1434:1436   */\ntag_41:\n    /* \"#utility.yul\":1424:1503   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1509:1631   */\ntag_25:\n    /* \"#utility.yul\":1582:1606   */\n  tag_43\n    /* \"#utility.yul\":1600:1605   */\n  dup2\n    /* \"#utility.yul\":1582:1606   */\n  tag_37\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1575:1580   */\n  dup2\n    /* \"#utility.yul\":1572:1607   */\n  eq\n    /* \"#utility.yul\":1562:1564   */\n  tag_44\n  jumpi\n    /* \"#utility.yul\":1621:1622   */\n  0x00\n    /* \"#utility.yul\":1618:1619   */\n  dup1\n    /* \"#utility.yul\":1611:1623   */\n  revert\n    /* \"#utility.yul\":1562:1564   */\ntag_44:\n    /* \"#utility.yul\":1552:1631   */\n  pop\n  jump\t// out\n    /* \"Defi/StakingPool.sol\":289:4718  contract StakingPool is Ownable, ReentrancyGuard {... */\ntag_14:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Defi/StakingPool.sol\":289:4718  contract StakingPool is Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8aee8127\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xc771c390\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xc771c390\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xee947a7c\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf7c618c1\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xfc71ae8c\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x8aee8127\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8b0e9f3f\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xb88a802f\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x5d90bad9\n      gt\n      tag_27\n      jumpi\n      dup1\n      0x5d90bad9\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x6abfd183\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x750142e6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x80c0976e\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x154a78b5\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1683153d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x45bc78ab\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x583d42fd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x5d3eea91\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Defi/StakingPool.sol\":517:546  uint256 public rewardRateInit */\n    tag_3:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Defi/StakingPool.sol\":912:960  mapping(address => uint256) public stakingReward */\n    tag_4:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Defi/StakingPool.sol\":732:781  mapping(address => uint256) public stakingBalance */\n    tag_5:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_38:\n      tag_39\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Defi/StakingPool.sol\":825:871  mapping(address => uint256) public stakingTime */\n    tag_6:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_42:\n      tag_43\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Defi/StakingPool.sol\":2483:2947  function unStake(uint256 _amount) external nonReentrant {... */\n    tag_7:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      stop\n        /* \"Defi/StakingPool.sol\":4118:4246  function setStakingStartTime(uint256 _stakingStartTime) external onlyOwner {... */\n    tag_8:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_50:\n      tag_51\n      jump\t// in\n    tag_49:\n      stop\n        /* \"Defi/StakingPool.sol\":661:692  uint256 public stakingStartTime */\n    tag_9:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Defi/StakingPool.sol\":4600:4716  function balanceOf(address _address) external view returns (uint256){... */\n    tag_10:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      stop\n        /* \"Defi/StakingPool.sol\":1072:1098  uint256 public totalReward */\n    tag_12:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Defi/StakingPool.sol\":1130:1160  uint256 public dayTime = 86400 */\n    tag_13:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Defi/StakingPool.sol\":3958:4074  function setRewardToken(address _rewardToken) external onlyOwner {... */\n    tag_14:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n    tag_67:\n      stop\n        /* \"Defi/StakingPool.sol\":1012:1037  uint256 public totalStake */\n    tag_15:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_16:\n      tag_73\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Defi/StakingPool.sol\":1701:2430  function stake(uint256 _amount) external nonReentrant {... */\n    tag_17:\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_78:\n      tag_79\n      jump\t// in\n    tag_77:\n      stop\n        /* \"Defi/StakingPool.sol\":2973:3366  function claimReward() external nonReentrant {... */\n    tag_18:\n      tag_80\n      tag_81\n      jump\t// in\n    tag_80:\n      stop\n        /* \"Defi/StakingPool.sol\":4292:4404  function setLockupPeriod(uint256 _lockupPeriod) external onlyOwner {... */\n    tag_19:\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n    tag_82:\n      stop\n        /* \"Defi/StakingPool.sol\":587:614  uint256 public lockupPeriod */\n    tag_20:\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_21:\n      tag_88\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_89:\n      tag_90\n      jump\t// in\n    tag_88:\n      stop\n        /* \"Defi/StakingPool.sol\":442:467  IERC20 public rewardToken */\n    tag_22:\n      tag_91\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      tag_93\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Defi/StakingPool.sol\":377:396  IERC20 public token */\n    tag_23:\n      tag_95\n      tag_96\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Defi/StakingPool.sol\":4444:4564  function setRewardRateInit(uint256 _rewardRateInit) external onlyOwner {... */\n    tag_24:\n      tag_98\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_99\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_99:\n      tag_100\n      jump\t// in\n    tag_98:\n      stop\n        /* \"Defi/StakingPool.sol\":517:546  uint256 public rewardRateInit */\n    tag_29:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"Defi/StakingPool.sol\":912:960  mapping(address => uint256) public stakingReward */\n    tag_35:\n      mstore(0x20, 0x09)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"Defi/StakingPool.sol\":732:781  mapping(address => uint256) public stakingBalance */\n    tag_39:\n      mstore(0x20, 0x07)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"Defi/StakingPool.sol\":825:871  mapping(address => uint256) public stakingTime */\n    tag_43:\n      mstore(0x20, 0x08)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"Defi/StakingPool.sol\":2483:2947  function unStake(uint256 _amount) external nonReentrant {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_102\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_103\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_102:\n        /* \"Defi/StakingPool.sol\":2596:2608  lockupPeriod */\n      sload(0x05)\n        /* \"Defi/StakingPool.sol\":2577:2593  stakingStartTime */\n      sload(0x06)\n        /* \"Defi/StakingPool.sol\":2577:2608  stakingStartTime + lockupPeriod */\n      tag_105\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n        /* \"Defi/StakingPool.sol\":2557:2572  block.timestamp */\n      timestamp\n        /* \"Defi/StakingPool.sol\":2557:2609  block.timestamp >= (stakingStartTime + lockupPeriod) */\n      lt\n      iszero\n        /* \"Defi/StakingPool.sol\":2549:2620  require(block.timestamp >= (stakingStartTime + lockupPeriod), \"Locked\") */\n      tag_107\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_107:\n        /* \"Defi/StakingPool.sol\":2668:2675  _amount */\n      dup1\n        /* \"Defi/StakingPool.sol\":2638:2652  stakingBalance */\n      0x07\n        /* \"Defi/StakingPool.sol\":2638:2664  stakingBalance[msg.sender] */\n      0x00\n        /* \"Defi/StakingPool.sol\":2653:2663  msg.sender */\n      caller\n        /* \"Defi/StakingPool.sol\":2638:2664  stakingBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Defi/StakingPool.sol\":2638:2675  stakingBalance[msg.sender] >= _amount */\n      lt\n      iszero\n        /* \"Defi/StakingPool.sol\":2630:2700  require(stakingBalance[msg.sender] >= _amount, \"Insufficient balance\") */\n      tag_110\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_111\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_110:\n        /* \"Defi/StakingPool.sol\":2718:2723  token */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Defi/StakingPool.sol\":2718:2732  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"Defi/StakingPool.sol\":2733:2743  msg.sender */\n      caller\n        /* \"Defi/StakingPool.sol\":2745:2752  _amount */\n      dup4\n        /* \"Defi/StakingPool.sol\":2718:2753  token.transfer(msg.sender, _amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap3\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_115\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_115:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_117\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_117:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_118\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n        /* \"Defi/StakingPool.sol\":2710:2773  require(token.transfer(msg.sender, _amount), \"Transfer failed\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_120:\n        /* \"Defi/StakingPool.sol\":2812:2851  stakingBalance[msg.sender].sub(_amount) */\n      tag_123\n        /* \"Defi/StakingPool.sol\":2843:2850  _amount */\n      dup2\n        /* \"Defi/StakingPool.sol\":2812:2826  stakingBalance */\n      0x07\n        /* \"Defi/StakingPool.sol\":2812:2838  stakingBalance[msg.sender] */\n      0x00\n        /* \"Defi/StakingPool.sol\":2827:2837  msg.sender */\n      caller\n        /* \"Defi/StakingPool.sol\":2812:2838  stakingBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Defi/StakingPool.sol\":2812:2842  stakingBalance[msg.sender].sub */\n      tag_124\n      swap1\n        /* \"Defi/StakingPool.sol\":2812:2851  stakingBalance[msg.sender].sub(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_123:\n        /* \"Defi/StakingPool.sol\":2783:2797  stakingBalance */\n      0x07\n        /* \"Defi/StakingPool.sol\":2783:2809  stakingBalance[msg.sender] */\n      0x00\n        /* \"Defi/StakingPool.sol\":2798:2808  msg.sender */\n      caller\n        /* \"Defi/StakingPool.sol\":2783:2809  stakingBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Defi/StakingPool.sol\":2783:2851  stakingBalance[msg.sender] = stakingBalance[msg.sender].sub(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Defi/StakingPool.sol\":2874:2897  totalStake.sub(_amount) */\n      tag_125\n        /* \"Defi/StakingPool.sol\":2889:2896  _amount */\n      dup2\n        /* \"Defi/StakingPool.sol\":2874:2884  totalStake */\n      sload(0x0a)\n        /* \"Defi/StakingPool.sol\":2874:2888  totalStake.sub */\n      tag_124\n      swap1\n        /* \"Defi/StakingPool.sol\":2874:2897  totalStake.sub(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_125:\n        /* \"Defi/StakingPool.sol\":2861:2871  totalStake */\n      0x0a\n        /* \"Defi/StakingPool.sol\":2861:2897  totalStake = totalStake.sub(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Defi/StakingPool.sol\":2920:2930  msg.sender */\n      caller\n        /* \"Defi/StakingPool.sol\":2912:2940  UnStake(msg.sender, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xb24546d975e2628748efc9aced80665e0fad66272033e5c0ea25fd3afac99795\n        /* \"Defi/StakingPool.sol\":2932:2939  _amount */\n      dup3\n        /* \"Defi/StakingPool.sol\":2912:2940  UnStake(msg.sender, _amount) */\n      mload(0x40)\n      tag_126\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_127\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_128\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_127:\n        /* \"Defi/StakingPool.sol\":2483:2947  function unStake(uint256 _amount) external nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"Defi/StakingPool.sol\":4118:4246  function setStakingStartTime(uint256 _stakingStartTime) external onlyOwner {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_130\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_131\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_130:\n        /* \"Defi/StakingPool.sol\":4222:4239  _stakingStartTime */\n      dup1\n        /* \"Defi/StakingPool.sol\":4203:4219  stakingStartTime */\n      0x06\n        /* \"Defi/StakingPool.sol\":4203:4239  stakingStartTime = _stakingStartTime */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Defi/StakingPool.sol\":4118:4246  function setStakingStartTime(uint256 _stakingStartTime) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Defi/StakingPool.sol\":661:692  uint256 public stakingStartTime */\n    tag_53:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"Defi/StakingPool.sol\":4600:4716  function balanceOf(address _address) external view returns (uint256){... */\n    tag_57:\n        /* \"Defi/StakingPool.sol\":4660:4667  uint256 */\n      0x00\n        /* \"Defi/StakingPool.sol\":4685:4699  stakingBalance */\n      0x07\n        /* \"Defi/StakingPool.sol\":4685:4709  stakingBalance[_address] */\n      0x00\n        /* \"Defi/StakingPool.sol\":4700:4708  _address */\n      dup4\n        /* \"Defi/StakingPool.sol\":4685:4709  stakingBalance[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Defi/StakingPool.sol\":4678:4709  return stakingBalance[_address] */\n      swap1\n      pop\n        /* \"Defi/StakingPool.sol\":4600:4716  function balanceOf(address _address) external view returns (uint256){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_135\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_131\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_135:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_137\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_138\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_137:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"Defi/StakingPool.sol\":1072:1098  uint256 public totalReward */\n    tag_62:\n      sload(0x0b)\n      dup2\n      jump\t// out\n        /* \"Defi/StakingPool.sol\":1130:1160  uint256 public dayTime = 86400 */\n    tag_65:\n      sload(0x0c)\n      dup2\n      jump\t// out\n        /* \"Defi/StakingPool.sol\":3958:4074  function setRewardToken(address _rewardToken) external onlyOwner {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_140\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_131\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_140:\n        /* \"Defi/StakingPool.sol\":4054:4066  _rewardToken */\n      dup1\n        /* \"Defi/StakingPool.sol\":4033:4044  rewardToken */\n      0x03\n      0x00\n        /* \"Defi/StakingPool.sol\":4033:4067  rewardToken = IERC20(_rewardToken) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Defi/StakingPool.sol\":3958:4074  function setRewardToken(address _rewardToken) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Defi/StakingPool.sol\":1012:1037  uint256 public totalStake */\n    tag_71:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Defi/StakingPool.sol\":1701:2430  function stake(uint256 _amount) external nonReentrant {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_144\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_103\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_144:\n        /* \"Defi/StakingPool.sol\":1810:1822  lockupPeriod */\n      sload(0x05)\n        /* \"Defi/StakingPool.sol\":1791:1807  stakingStartTime */\n      sload(0x06)\n        /* \"Defi/StakingPool.sol\":1791:1822  stakingStartTime + lockupPeriod */\n      tag_146\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_146:\n        /* \"Defi/StakingPool.sol\":1773:1788  block.timestamp */\n      timestamp\n        /* \"Defi/StakingPool.sol\":1773:1822  block.timestamp < stakingStartTime + lockupPeriod */\n      lt\n        /* \"Defi/StakingPool.sol\":1765:1865  require(block.timestamp < stakingStartTime + lockupPeriod, \"The current staking activity has ended\") */\n      tag_147\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_148\n      swap1\n      tag_149\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_147:\n        /* \"Defi/StakingPool.sol\":1893:1894  0 */\n      0x00\n        /* \"Defi/StakingPool.sol\":1883:1890  _amount */\n      dup2\n        /* \"Defi/StakingPool.sol\":1883:1894  _amount > 0 */\n      gt\n        /* \"Defi/StakingPool.sol\":1875:1930  require(_amount > 0, \"Amount should greater than zero\") */\n      tag_150\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_151\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_150:\n        /* \"Defi/StakingPool.sol\":1948:1953  token */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Defi/StakingPool.sol\":1948:1966  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"Defi/StakingPool.sol\":1967:1977  msg.sender */\n      caller\n        /* \"Defi/StakingPool.sol\":1987:1991  this */\n      address\n        /* \"Defi/StakingPool.sol\":1994:2001  _amount */\n      dup5\n        /* \"Defi/StakingPool.sol\":1948:2002  token.transferFrom(msg.sender, address(this), _amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_153:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_155\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_155:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_157\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_157:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_158\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_158:\n        /* \"Defi/StakingPool.sol\":1940:2022  require(token.transferFrom(msg.sender, address(this), _amount), \"Transfer failed\") */\n      tag_159\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_160\n      swap1\n      tag_122\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_159:\n        /* \"Defi/StakingPool.sol\":2061:2100  stakingBalance[msg.sender].add(_amount) */\n      tag_161\n        /* \"Defi/StakingPool.sol\":2092:2099  _amount */\n      dup2\n        /* \"Defi/StakingPool.sol\":2061:2075  stakingBalance */\n      0x07\n        /* \"Defi/StakingPool.sol\":2061:2087  stakingBalance[msg.sender] */\n      0x00\n        /* \"Defi/StakingPool.sol\":2076:2086  msg.sender */\n      caller\n        /* \"Defi/StakingPool.sol\":2061:2087  stakingBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Defi/StakingPool.sol\":2061:2091  stakingBalance[msg.sender].add */\n      tag_162\n      swap1\n        /* \"Defi/StakingPool.sol\":2061:2100  stakingBalance[msg.sender].add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_161:\n        /* \"Defi/StakingPool.sol\":2032:2046  stakingBalance */\n      0x07\n        /* \"Defi/StakingPool.sol\":2032:2058  stakingBalance[msg.sender] */\n      0x00\n        /* \"Defi/StakingPool.sol\":2047:2057  msg.sender */\n      caller\n        /* \"Defi/StakingPool.sol\":2032:2058  stakingBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Defi/StakingPool.sol\":2032:2100  stakingBalance[msg.sender] = stakingBalance[msg.sender].add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Defi/StakingPool.sol\":2136:2151  block.timestamp */\n      timestamp\n        /* \"Defi/StakingPool.sol\":2110:2121  stakingTime */\n      0x08\n        /* \"Defi/StakingPool.sol\":2110:2133  stakingTime[msg.sender] */\n      0x00\n        /* \"Defi/StakingPool.sol\":2122:2132  msg.sender */\n      caller\n        /* \"Defi/StakingPool.sol\":2110:2133  stakingTime[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Defi/StakingPool.sol\":2110:2151  stakingTime[msg.sender] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Defi/StakingPool.sol\":2161:2175  uint256 reward */\n      0x00\n        /* \"Defi/StakingPool.sol\":2178:2214  getRewardForUser(msg.sender,_amount) */\n      tag_163\n        /* \"Defi/StakingPool.sol\":2195:2205  msg.sender */\n      caller\n        /* \"Defi/StakingPool.sol\":2206:2213  _amount */\n      dup4\n        /* \"Defi/StakingPool.sol\":2178:2194  getRewardForUser */\n      tag_164\n        /* \"Defi/StakingPool.sol\":2178:2214  getRewardForUser(msg.sender,_amount) */\n      jump\t// in\n    tag_163:\n        /* \"Defi/StakingPool.sol\":2161:2214  uint256 reward = getRewardForUser(msg.sender,_amount) */\n      swap1\n      pop\n        /* \"Defi/StakingPool.sol\":2252:2289  stakingReward[msg.sender].add(reward) */\n      tag_165\n        /* \"Defi/StakingPool.sol\":2282:2288  reward */\n      dup2\n        /* \"Defi/StakingPool.sol\":2252:2265  stakingReward */\n      0x09\n        /* \"Defi/StakingPool.sol\":2252:2277  stakingReward[msg.sender] */\n      0x00\n        /* \"Defi/StakingPool.sol\":2266:2276  msg.sender */\n      caller\n        /* \"Defi/StakingPool.sol\":2252:2277  stakingReward[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Defi/StakingPool.sol\":2252:2281  stakingReward[msg.sender].add */\n      tag_162\n      swap1\n        /* \"Defi/StakingPool.sol\":2252:2289  stakingReward[msg.sender].add(reward) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_165:\n        /* \"Defi/StakingPool.sol\":2224:2237  stakingReward */\n      0x09\n        /* \"Defi/StakingPool.sol\":2224:2249  stakingReward[msg.sender] */\n      0x00\n        /* \"Defi/StakingPool.sol\":2238:2248  msg.sender */\n      caller\n        /* \"Defi/StakingPool.sol\":2224:2249  stakingReward[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Defi/StakingPool.sol\":2224:2289  stakingReward[msg.sender] = stakingReward[msg.sender].add(reward) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Defi/StakingPool.sol\":2312:2335  totalStake.add(_amount) */\n      tag_166\n        /* \"Defi/StakingPool.sol\":2327:2334  _amount */\n      dup3\n        /* \"Defi/StakingPool.sol\":2312:2322  totalStake */\n      sload(0x0a)\n        /* \"Defi/StakingPool.sol\":2312:2326  totalStake.add */\n      tag_162\n      swap1\n        /* \"Defi/StakingPool.sol\":2312:2335  totalStake.add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_166:\n        /* \"Defi/StakingPool.sol\":2299:2309  totalStake */\n      0x0a\n        /* \"Defi/StakingPool.sol\":2299:2335  totalStake = totalStake.add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Defi/StakingPool.sol\":2359:2382  totalReward.add(reward) */\n      tag_167\n        /* \"Defi/StakingPool.sol\":2375:2381  reward */\n      dup2\n        /* \"Defi/StakingPool.sol\":2359:2370  totalReward */\n      sload(0x0b)\n        /* \"Defi/StakingPool.sol\":2359:2374  totalReward.add */\n      tag_162\n      swap1\n        /* \"Defi/StakingPool.sol\":2359:2382  totalReward.add(reward) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_167:\n        /* \"Defi/StakingPool.sol\":2345:2356  totalReward */\n      0x0b\n        /* \"Defi/StakingPool.sol\":2345:2382  totalReward = totalReward.add(reward) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Defi/StakingPool.sol\":2403:2413  msg.sender */\n      caller\n        /* \"Defi/StakingPool.sol\":2397:2423  Stake(msg.sender, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xebedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a\n        /* \"Defi/StakingPool.sol\":2415:2422  _amount */\n      dup4\n        /* \"Defi/StakingPool.sol\":2397:2423  Stake(msg.sender, _amount) */\n      mload(0x40)\n      tag_168\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2292:2293  _ */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_169\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_128\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_169:\n        /* \"Defi/StakingPool.sol\":1701:2430  function stake(uint256 _amount) external nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"Defi/StakingPool.sol\":2973:3366  function claimReward() external nonReentrant {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_171\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_103\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_171:\n        /* \"Defi/StakingPool.sol\":3075:3087  lockupPeriod */\n      sload(0x05)\n        /* \"Defi/StakingPool.sol\":3056:3072  stakingStartTime */\n      sload(0x06)\n        /* \"Defi/StakingPool.sol\":3056:3087  stakingStartTime + lockupPeriod */\n      tag_173\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_173:\n        /* \"Defi/StakingPool.sol\":3036:3051  block.timestamp */\n      timestamp\n        /* \"Defi/StakingPool.sol\":3036:3088  block.timestamp >= (stakingStartTime + lockupPeriod) */\n      lt\n      iszero\n        /* \"Defi/StakingPool.sol\":3028:3099  require(block.timestamp >= (stakingStartTime + lockupPeriod), \"Locked\") */\n      tag_174\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_175\n      swap1\n      tag_109\n      jump\t// in\n    tag_175:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_174:\n        /* \"Defi/StakingPool.sol\":3109:3123  uint256 reward */\n      0x00\n        /* \"Defi/StakingPool.sol\":3126:3139  stakingReward */\n      0x09\n        /* \"Defi/StakingPool.sol\":3126:3151  stakingReward[msg.sender] */\n      0x00\n        /* \"Defi/StakingPool.sol\":3140:3150  msg.sender */\n      caller\n        /* \"Defi/StakingPool.sol\":3126:3151  stakingReward[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Defi/StakingPool.sol\":3109:3151  uint256 reward = stakingReward[msg.sender] */\n      swap1\n      pop\n        /* \"Defi/StakingPool.sol\":3169:3180  rewardToken */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Defi/StakingPool.sol\":3169:3189  rewardToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"Defi/StakingPool.sol\":3190:3200  msg.sender */\n      caller\n        /* \"Defi/StakingPool.sol\":3202:3208  reward */\n      dup4\n        /* \"Defi/StakingPool.sol\":3169:3209  rewardToken.transfer(msg.sender, reward) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_176\n      swap3\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_176:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_177\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_177:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_179\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_179:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_180\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_180:\n        /* \"Defi/StakingPool.sol\":3161:3229  require(rewardToken.transfer(msg.sender, reward), \"Transfer failed\") */\n      tag_181\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_182\n      swap1\n      tag_122\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_181:\n        /* \"Defi/StakingPool.sol\":3265:3266  0 */\n      0x00\n        /* \"Defi/StakingPool.sol\":3239:3252  stakingReward */\n      0x09\n        /* \"Defi/StakingPool.sol\":3239:3264  stakingReward[msg.sender] */\n      0x00\n        /* \"Defi/StakingPool.sol\":3253:3263  msg.sender */\n      caller\n        /* \"Defi/StakingPool.sol\":3239:3264  stakingReward[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Defi/StakingPool.sol\":3239:3266  stakingReward[msg.sender]=0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Defi/StakingPool.sol\":3290:3313  totalReward.sub(reward) */\n      tag_183\n        /* \"Defi/StakingPool.sol\":3306:3312  reward */\n      dup2\n        /* \"Defi/StakingPool.sol\":3290:3301  totalReward */\n      sload(0x0b)\n        /* \"Defi/StakingPool.sol\":3290:3305  totalReward.sub */\n      tag_124\n      swap1\n        /* \"Defi/StakingPool.sol\":3290:3313  totalReward.sub(reward) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_183:\n        /* \"Defi/StakingPool.sol\":3276:3287  totalReward */\n      0x0b\n        /* \"Defi/StakingPool.sol\":3276:3313  totalReward = totalReward.sub(reward) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Defi/StakingPool.sol\":3340:3350  msg.sender */\n      caller\n        /* \"Defi/StakingPool.sol\":3328:3359  ClaimReward(msg.sender, reward) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xba8de60c3403ec381d1d484652ea1980e3c3e56359195c92525bff4ce47ad98e\n        /* \"Defi/StakingPool.sol\":3352:3358  reward */\n      dup3\n        /* \"Defi/StakingPool.sol\":3328:3359  ClaimReward(msg.sender, reward) */\n      mload(0x40)\n      tag_184\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_184:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2292:2293  _ */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_185\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_128\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_185:\n        /* \"Defi/StakingPool.sol\":2973:3366  function claimReward() external nonReentrant {... */\n      jump\t// out\n        /* \"Defi/StakingPool.sol\":4292:4404  function setLockupPeriod(uint256 _lockupPeriod) external onlyOwner {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_187\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_131\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_187:\n        /* \"Defi/StakingPool.sol\":4384:4397  _lockupPeriod */\n      dup1\n        /* \"Defi/StakingPool.sol\":4369:4381  lockupPeriod */\n      0x05\n        /* \"Defi/StakingPool.sol\":4369:4397  lockupPeriod = _lockupPeriod */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Defi/StakingPool.sol\":4292:4404  function setLockupPeriod(uint256 _lockupPeriod) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Defi/StakingPool.sol\":587:614  uint256 public lockupPeriod */\n    tag_86:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_190\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_131\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_190:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2189:2190  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2177  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_192\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_192:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_195\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_138\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_195:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Defi/StakingPool.sol\":442:467  IERC20 public rewardToken */\n    tag_92:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Defi/StakingPool.sol\":377:396  IERC20 public token */\n    tag_96:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Defi/StakingPool.sol\":4444:4564  function setRewardRateInit(uint256 _rewardRateInit) external onlyOwner {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_197\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_131\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_197:\n        /* \"Defi/StakingPool.sol\":4542:4557  _rewardRateInit */\n      dup1\n        /* \"Defi/StakingPool.sol\":4525:4539  rewardRateInit */\n      0x04\n        /* \"Defi/StakingPool.sol\":4525:4557  rewardRateInit = _rewardRateInit */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Defi/StakingPool.sol\":4444:4564  function setRewardRateInit(uint256 _rewardRateInit) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_200\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap1\n      tag_202\n      jump\t// in\n    tag_201:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_200:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_204\n      swap2\n      swap1\n      tag_205\n      jump\t// in\n    tag_204:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      dup1\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_131:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_208\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_209\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_208:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      tag_210\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1427  owner */\n      tag_74\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_210:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_211\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_212\n      swap1\n      tag_213\n      jump\t// in\n    tag_212:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_211:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_138:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_162:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_216\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_216:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Defi/StakingPool.sol\":3428:3920  function getRewardForUser(address account,uint256 _amount) internal view returns (uint256) {... */\n    tag_164:\n        /* \"Defi/StakingPool.sol\":3510:3517  uint256 */\n      0x00\n        /* \"Defi/StakingPool.sol\":3529:3557  uint256 stakingDaysRemaining */\n      dup1\n        /* \"Defi/StakingPool.sol\":3560:3622  (lockupPeriod.add(stakingStartTime)).sub(stakingTime[account]) */\n      tag_218\n        /* \"Defi/StakingPool.sol\":3601:3612  stakingTime */\n      0x08\n        /* \"Defi/StakingPool.sol\":3601:3621  stakingTime[account] */\n      0x00\n        /* \"Defi/StakingPool.sol\":3613:3620  account */\n      dup7\n        /* \"Defi/StakingPool.sol\":3601:3621  stakingTime[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Defi/StakingPool.sol\":3561:3595  lockupPeriod.add(stakingStartTime) */\n      tag_219\n        /* \"Defi/StakingPool.sol\":3578:3594  stakingStartTime */\n      sload(0x06)\n        /* \"Defi/StakingPool.sol\":3561:3573  lockupPeriod */\n      sload(0x05)\n        /* \"Defi/StakingPool.sol\":3561:3577  lockupPeriod.add */\n      tag_162\n      swap1\n        /* \"Defi/StakingPool.sol\":3561:3595  lockupPeriod.add(stakingStartTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_219:\n        /* \"Defi/StakingPool.sol\":3560:3600  (lockupPeriod.add(stakingStartTime)).sub */\n      tag_124\n      swap1\n        /* \"Defi/StakingPool.sol\":3560:3622  (lockupPeriod.add(stakingStartTime)).sub(stakingTime[account]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_218:\n        /* \"Defi/StakingPool.sol\":3529:3622  uint256 stakingDaysRemaining = (lockupPeriod.add(stakingStartTime)).sub(stakingTime[account]) */\n      swap1\n      pop\n        /* \"Defi/StakingPool.sol\":3798:3812  uint256 reward */\n      0x00\n        /* \"Defi/StakingPool.sol\":3815:3890  _amount.div(1e6).mul(rewardRateInit).mul(stakingDaysRemaining).div(dayTime) */\n      tag_220\n        /* \"Defi/StakingPool.sol\":3882:3889  dayTime */\n      sload(0x0c)\n        /* \"Defi/StakingPool.sol\":3815:3877  _amount.div(1e6).mul(rewardRateInit).mul(stakingDaysRemaining) */\n      tag_221\n        /* \"Defi/StakingPool.sol\":3856:3876  stakingDaysRemaining */\n      dup5\n        /* \"Defi/StakingPool.sol\":3815:3851  _amount.div(1e6).mul(rewardRateInit) */\n      tag_222\n        /* \"Defi/StakingPool.sol\":3836:3850  rewardRateInit */\n      sload(0x04)\n        /* \"Defi/StakingPool.sol\":3815:3831  _amount.div(1e6) */\n      tag_223\n        /* \"Defi/StakingPool.sol\":3827:3830  1e6 */\n      0x0f4240\n        /* \"Defi/StakingPool.sol\":3815:3822  _amount */\n      dup12\n        /* \"Defi/StakingPool.sol\":3815:3826  _amount.div */\n      tag_224\n      swap1\n        /* \"Defi/StakingPool.sol\":3815:3831  _amount.div(1e6) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_223:\n        /* \"Defi/StakingPool.sol\":3815:3835  _amount.div(1e6).mul */\n      tag_225\n      swap1\n        /* \"Defi/StakingPool.sol\":3815:3851  _amount.div(1e6).mul(rewardRateInit) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_222:\n        /* \"Defi/StakingPool.sol\":3815:3855  _amount.div(1e6).mul(rewardRateInit).mul */\n      tag_225\n      swap1\n        /* \"Defi/StakingPool.sol\":3815:3877  _amount.div(1e6).mul(rewardRateInit).mul(stakingDaysRemaining) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_221:\n        /* \"Defi/StakingPool.sol\":3815:3881  _amount.div(1e6).mul(rewardRateInit).mul(stakingDaysRemaining).div */\n      tag_224\n      swap1\n        /* \"Defi/StakingPool.sol\":3815:3890  _amount.div(1e6).mul(rewardRateInit).mul(stakingDaysRemaining).div(dayTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_220:\n        /* \"Defi/StakingPool.sol\":3798:3890  uint256 reward = _amount.div(1e6).mul(rewardRateInit).mul(stakingDaysRemaining).div(dayTime) */\n      swap1\n      pop\n        /* \"Defi/StakingPool.sol\":3907:3913  reward */\n      dup1\n        /* \"Defi/StakingPool.sol\":3900:3913  return reward */\n      swap3\n      pop\n      pop\n      pop\n        /* \"Defi/StakingPool.sol\":3428:3920  function getRewardForUser(address account,uint256 _amount) internal view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_209:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_224:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_228\n      swap2\n      swap1\n      tag_229\n      jump\t// in\n    tag_228:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3927:3939  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_225:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_231\n      swap2\n      swap1\n      tag_232\n      jump\t// in\n    tag_231:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3542:3554  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_234:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_236\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_237\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":59:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:289   */\n    tag_238:\n        /* \"#utility.yul\":206:211   */\n      0x00\n        /* \"#utility.yul\":237:243   */\n      dup2\n        /* \"#utility.yul\":231:244   */\n      mload\n        /* \"#utility.yul\":222:244   */\n      swap1\n      pop\n        /* \"#utility.yul\":253:283   */\n      tag_240\n        /* \"#utility.yul\":277:282   */\n      dup2\n        /* \"#utility.yul\":253:283   */\n      tag_241\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":212:289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":295:434   */\n    tag_242:\n        /* \"#utility.yul\":341:346   */\n      0x00\n        /* \"#utility.yul\":379:385   */\n      dup2\n        /* \"#utility.yul\":366:386   */\n      calldataload\n        /* \"#utility.yul\":357:386   */\n      swap1\n      pop\n        /* \"#utility.yul\":395:428   */\n      tag_244\n        /* \"#utility.yul\":422:427   */\n      dup2\n        /* \"#utility.yul\":395:428   */\n      tag_245\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":347:434   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":440:702   */\n    tag_34:\n        /* \"#utility.yul\":499:505   */\n      0x00\n        /* \"#utility.yul\":548:550   */\n      0x20\n        /* \"#utility.yul\":536:545   */\n      dup3\n        /* \"#utility.yul\":527:534   */\n      dup5\n        /* \"#utility.yul\":523:546   */\n      sub\n        /* \"#utility.yul\":519:551   */\n      slt\n        /* \"#utility.yul\":516:518   */\n      iszero\n      tag_247\n      jumpi\n        /* \"#utility.yul\":564:565   */\n      0x00\n        /* \"#utility.yul\":561:562   */\n      dup1\n        /* \"#utility.yul\":554:566   */\n      revert\n        /* \"#utility.yul\":516:518   */\n    tag_247:\n        /* \"#utility.yul\":607:608   */\n      0x00\n        /* \"#utility.yul\":632:685   */\n      tag_248\n        /* \"#utility.yul\":677:684   */\n      dup5\n        /* \"#utility.yul\":668:674   */\n      dup3\n        /* \"#utility.yul\":657:666   */\n      dup6\n        /* \"#utility.yul\":653:675   */\n      add\n        /* \"#utility.yul\":632:685   */\n      tag_234\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":622:685   */\n      swap2\n      pop\n        /* \"#utility.yul\":578:695   */\n      pop\n        /* \"#utility.yul\":506:702   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":708:986   */\n    tag_119:\n        /* \"#utility.yul\":775:781   */\n      0x00\n        /* \"#utility.yul\":824:826   */\n      0x20\n        /* \"#utility.yul\":812:821   */\n      dup3\n        /* \"#utility.yul\":803:810   */\n      dup5\n        /* \"#utility.yul\":799:822   */\n      sub\n        /* \"#utility.yul\":795:827   */\n      slt\n        /* \"#utility.yul\":792:794   */\n      iszero\n      tag_250\n      jumpi\n        /* \"#utility.yul\":840:841   */\n      0x00\n        /* \"#utility.yul\":837:838   */\n      dup1\n        /* \"#utility.yul\":830:842   */\n      revert\n        /* \"#utility.yul\":792:794   */\n    tag_250:\n        /* \"#utility.yul\":883:884   */\n      0x00\n        /* \"#utility.yul\":908:969   */\n      tag_251\n        /* \"#utility.yul\":961:968   */\n      dup5\n        /* \"#utility.yul\":952:958   */\n      dup3\n        /* \"#utility.yul\":941:950   */\n      dup6\n        /* \"#utility.yul\":937:959   */\n      add\n        /* \"#utility.yul\":908:969   */\n      tag_238\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":898:969   */\n      swap2\n      pop\n        /* \"#utility.yul\":854:979   */\n      pop\n        /* \"#utility.yul\":782:986   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":992:1254   */\n    tag_47:\n        /* \"#utility.yul\":1051:1057   */\n      0x00\n        /* \"#utility.yul\":1100:1102   */\n      0x20\n        /* \"#utility.yul\":1088:1097   */\n      dup3\n        /* \"#utility.yul\":1079:1086   */\n      dup5\n        /* \"#utility.yul\":1075:1098   */\n      sub\n        /* \"#utility.yul\":1071:1103   */\n      slt\n        /* \"#utility.yul\":1068:1070   */\n      iszero\n      tag_253\n      jumpi\n        /* \"#utility.yul\":1116:1117   */\n      0x00\n        /* \"#utility.yul\":1113:1114   */\n      dup1\n        /* \"#utility.yul\":1106:1118   */\n      revert\n        /* \"#utility.yul\":1068:1070   */\n    tag_253:\n        /* \"#utility.yul\":1159:1160   */\n      0x00\n        /* \"#utility.yul\":1184:1237   */\n      tag_254\n        /* \"#utility.yul\":1229:1236   */\n      dup5\n        /* \"#utility.yul\":1220:1226   */\n      dup3\n        /* \"#utility.yul\":1209:1218   */\n      dup6\n        /* \"#utility.yul\":1205:1227   */\n      add\n        /* \"#utility.yul\":1184:1237   */\n      tag_242\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":1174:1237   */\n      swap2\n      pop\n        /* \"#utility.yul\":1130:1247   */\n      pop\n        /* \"#utility.yul\":1058:1254   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1260:1378   */\n    tag_255:\n        /* \"#utility.yul\":1347:1371   */\n      tag_257\n        /* \"#utility.yul\":1365:1370   */\n      dup2\n        /* \"#utility.yul\":1347:1371   */\n      tag_258\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":1342:1345   */\n      dup3\n        /* \"#utility.yul\":1335:1372   */\n      mstore\n        /* \"#utility.yul\":1325:1378   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1384:1543   */\n    tag_259:\n        /* \"#utility.yul\":1485:1536   */\n      tag_261\n        /* \"#utility.yul\":1530:1535   */\n      dup2\n        /* \"#utility.yul\":1485:1536   */\n      tag_262\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":1480:1483   */\n      dup3\n        /* \"#utility.yul\":1473:1537   */\n      mstore\n        /* \"#utility.yul\":1463:1543   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1549:1914   */\n    tag_263:\n        /* \"#utility.yul\":1691:1694   */\n      0x00\n        /* \"#utility.yul\":1712:1778   */\n      tag_265\n        /* \"#utility.yul\":1776:1777   */\n      0x06\n        /* \"#utility.yul\":1771:1774   */\n      dup4\n        /* \"#utility.yul\":1712:1778   */\n      tag_266\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":1705:1778   */\n      swap2\n      pop\n        /* \"#utility.yul\":1787:1880   */\n      tag_267\n        /* \"#utility.yul\":1876:1879   */\n      dup3\n        /* \"#utility.yul\":1787:1880   */\n      tag_268\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":1905:1907   */\n      0x20\n        /* \"#utility.yul\":1900:1903   */\n      dup3\n        /* \"#utility.yul\":1896:1908   */\n      add\n        /* \"#utility.yul\":1889:1908   */\n      swap1\n      pop\n        /* \"#utility.yul\":1695:1914   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1920:2286   */\n    tag_269:\n        /* \"#utility.yul\":2062:2065   */\n      0x00\n        /* \"#utility.yul\":2083:2150   */\n      tag_271\n        /* \"#utility.yul\":2147:2149   */\n      0x26\n        /* \"#utility.yul\":2142:2145   */\n      dup4\n        /* \"#utility.yul\":2083:2150   */\n      tag_266\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":2076:2150   */\n      swap2\n      pop\n        /* \"#utility.yul\":2159:2252   */\n      tag_272\n        /* \"#utility.yul\":2248:2251   */\n      dup3\n        /* \"#utility.yul\":2159:2252   */\n      tag_273\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":2277:2279   */\n      0x40\n        /* \"#utility.yul\":2272:2275   */\n      dup3\n        /* \"#utility.yul\":2268:2280   */\n      add\n        /* \"#utility.yul\":2261:2280   */\n      swap1\n      pop\n        /* \"#utility.yul\":2066:2286   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2292:2658   */\n    tag_274:\n        /* \"#utility.yul\":2434:2437   */\n      0x00\n        /* \"#utility.yul\":2455:2522   */\n      tag_276\n        /* \"#utility.yul\":2519:2521   */\n      0x0f\n        /* \"#utility.yul\":2514:2517   */\n      dup4\n        /* \"#utility.yul\":2455:2522   */\n      tag_266\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":2448:2522   */\n      swap2\n      pop\n        /* \"#utility.yul\":2531:2624   */\n      tag_277\n        /* \"#utility.yul\":2620:2623   */\n      dup3\n        /* \"#utility.yul\":2531:2624   */\n      tag_278\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":2649:2651   */\n      0x20\n        /* \"#utility.yul\":2644:2647   */\n      dup3\n        /* \"#utility.yul\":2640:2652   */\n      add\n        /* \"#utility.yul\":2633:2652   */\n      swap1\n      pop\n        /* \"#utility.yul\":2438:2658   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2664:3030   */\n    tag_279:\n        /* \"#utility.yul\":2806:2809   */\n      0x00\n        /* \"#utility.yul\":2827:2894   */\n      tag_281\n        /* \"#utility.yul\":2891:2893   */\n      0x14\n        /* \"#utility.yul\":2886:2889   */\n      dup4\n        /* \"#utility.yul\":2827:2894   */\n      tag_266\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":2820:2894   */\n      swap2\n      pop\n        /* \"#utility.yul\":2903:2996   */\n      tag_282\n        /* \"#utility.yul\":2992:2995   */\n      dup3\n        /* \"#utility.yul\":2903:2996   */\n      tag_283\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":3021:3023   */\n      0x20\n        /* \"#utility.yul\":3016:3019   */\n      dup3\n        /* \"#utility.yul\":3012:3024   */\n      add\n        /* \"#utility.yul\":3005:3024   */\n      swap1\n      pop\n        /* \"#utility.yul\":2810:3030   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3036:3402   */\n    tag_284:\n        /* \"#utility.yul\":3178:3181   */\n      0x00\n        /* \"#utility.yul\":3199:3266   */\n      tag_286\n        /* \"#utility.yul\":3263:3265   */\n      0x1f\n        /* \"#utility.yul\":3258:3261   */\n      dup4\n        /* \"#utility.yul\":3199:3266   */\n      tag_266\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":3192:3266   */\n      swap2\n      pop\n        /* \"#utility.yul\":3275:3368   */\n      tag_287\n        /* \"#utility.yul\":3364:3367   */\n      dup3\n        /* \"#utility.yul\":3275:3368   */\n      tag_288\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":3393:3395   */\n      0x20\n        /* \"#utility.yul\":3388:3391   */\n      dup3\n        /* \"#utility.yul\":3384:3396   */\n      add\n        /* \"#utility.yul\":3377:3396   */\n      swap1\n      pop\n        /* \"#utility.yul\":3182:3402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3408:3774   */\n    tag_289:\n        /* \"#utility.yul\":3550:3553   */\n      0x00\n        /* \"#utility.yul\":3571:3638   */\n      tag_291\n        /* \"#utility.yul\":3635:3637   */\n      0x20\n        /* \"#utility.yul\":3630:3633   */\n      dup4\n        /* \"#utility.yul\":3571:3638   */\n      tag_266\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":3564:3638   */\n      swap2\n      pop\n        /* \"#utility.yul\":3647:3740   */\n      tag_292\n        /* \"#utility.yul\":3736:3739   */\n      dup3\n        /* \"#utility.yul\":3647:3740   */\n      tag_293\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":3765:3767   */\n      0x20\n        /* \"#utility.yul\":3760:3763   */\n      dup3\n        /* \"#utility.yul\":3756:3768   */\n      add\n        /* \"#utility.yul\":3749:3768   */\n      swap1\n      pop\n        /* \"#utility.yul\":3554:3774   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3780:4146   */\n    tag_294:\n        /* \"#utility.yul\":3922:3925   */\n      0x00\n        /* \"#utility.yul\":3943:4010   */\n      tag_296\n        /* \"#utility.yul\":4007:4009   */\n      0x26\n        /* \"#utility.yul\":4002:4005   */\n      dup4\n        /* \"#utility.yul\":3943:4010   */\n      tag_266\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":3936:4010   */\n      swap2\n      pop\n        /* \"#utility.yul\":4019:4112   */\n      tag_297\n        /* \"#utility.yul\":4108:4111   */\n      dup3\n        /* \"#utility.yul\":4019:4112   */\n      tag_298\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":4137:4139   */\n      0x40\n        /* \"#utility.yul\":4132:4135   */\n      dup3\n        /* \"#utility.yul\":4128:4140   */\n      add\n        /* \"#utility.yul\":4121:4140   */\n      swap1\n      pop\n        /* \"#utility.yul\":3926:4146   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4152:4518   */\n    tag_299:\n        /* \"#utility.yul\":4294:4297   */\n      0x00\n        /* \"#utility.yul\":4315:4382   */\n      tag_301\n        /* \"#utility.yul\":4379:4381   */\n      0x1f\n        /* \"#utility.yul\":4374:4377   */\n      dup4\n        /* \"#utility.yul\":4315:4382   */\n      tag_266\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":4308:4382   */\n      swap2\n      pop\n        /* \"#utility.yul\":4391:4484   */\n      tag_302\n        /* \"#utility.yul\":4480:4483   */\n      dup3\n        /* \"#utility.yul\":4391:4484   */\n      tag_303\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":4509:4511   */\n      0x20\n        /* \"#utility.yul\":4504:4507   */\n      dup3\n        /* \"#utility.yul\":4500:4512   */\n      add\n        /* \"#utility.yul\":4493:4512   */\n      swap1\n      pop\n        /* \"#utility.yul\":4298:4518   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4524:4642   */\n    tag_304:\n        /* \"#utility.yul\":4611:4635   */\n      tag_306\n        /* \"#utility.yul\":4629:4634   */\n      dup2\n        /* \"#utility.yul\":4611:4635   */\n      tag_307\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":4606:4609   */\n      dup3\n        /* \"#utility.yul\":4599:4636   */\n      mstore\n        /* \"#utility.yul\":4589:4642   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4648:4870   */\n    tag_76:\n        /* \"#utility.yul\":4741:4745   */\n      0x00\n        /* \"#utility.yul\":4779:4781   */\n      0x20\n        /* \"#utility.yul\":4768:4777   */\n      dup3\n        /* \"#utility.yul\":4764:4782   */\n      add\n        /* \"#utility.yul\":4756:4782   */\n      swap1\n      pop\n        /* \"#utility.yul\":4792:4863   */\n      tag_309\n        /* \"#utility.yul\":4860:4861   */\n      0x00\n        /* \"#utility.yul\":4849:4858   */\n      dup4\n        /* \"#utility.yul\":4845:4862   */\n      add\n        /* \"#utility.yul\":4836:4842   */\n      dup5\n        /* \"#utility.yul\":4792:4863   */\n      tag_255\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":4746:4870   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4876:5318   */\n    tag_154:\n        /* \"#utility.yul\":5025:5029   */\n      0x00\n        /* \"#utility.yul\":5063:5065   */\n      0x60\n        /* \"#utility.yul\":5052:5061   */\n      dup3\n        /* \"#utility.yul\":5048:5066   */\n      add\n        /* \"#utility.yul\":5040:5066   */\n      swap1\n      pop\n        /* \"#utility.yul\":5076:5147   */\n      tag_311\n        /* \"#utility.yul\":5144:5145   */\n      0x00\n        /* \"#utility.yul\":5133:5142   */\n      dup4\n        /* \"#utility.yul\":5129:5146   */\n      add\n        /* \"#utility.yul\":5120:5126   */\n      dup7\n        /* \"#utility.yul\":5076:5147   */\n      tag_255\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":5157:5229   */\n      tag_312\n        /* \"#utility.yul\":5225:5227   */\n      0x20\n        /* \"#utility.yul\":5214:5223   */\n      dup4\n        /* \"#utility.yul\":5210:5228   */\n      add\n        /* \"#utility.yul\":5201:5207   */\n      dup6\n        /* \"#utility.yul\":5157:5229   */\n      tag_255\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":5239:5311   */\n      tag_313\n        /* \"#utility.yul\":5307:5309   */\n      0x40\n        /* \"#utility.yul\":5296:5305   */\n      dup4\n        /* \"#utility.yul\":5292:5310   */\n      add\n        /* \"#utility.yul\":5283:5289   */\n      dup5\n        /* \"#utility.yul\":5239:5311   */\n      tag_304\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":5030:5318   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5324:5656   */\n    tag_114:\n        /* \"#utility.yul\":5445:5449   */\n      0x00\n        /* \"#utility.yul\":5483:5485   */\n      0x40\n        /* \"#utility.yul\":5472:5481   */\n      dup3\n        /* \"#utility.yul\":5468:5486   */\n      add\n        /* \"#utility.yul\":5460:5486   */\n      swap1\n      pop\n        /* \"#utility.yul\":5496:5567   */\n      tag_315\n        /* \"#utility.yul\":5564:5565   */\n      0x00\n        /* \"#utility.yul\":5553:5562   */\n      dup4\n        /* \"#utility.yul\":5549:5566   */\n      add\n        /* \"#utility.yul\":5540:5546   */\n      dup6\n        /* \"#utility.yul\":5496:5567   */\n      tag_255\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":5577:5649   */\n      tag_316\n        /* \"#utility.yul\":5645:5647   */\n      0x20\n        /* \"#utility.yul\":5634:5643   */\n      dup4\n        /* \"#utility.yul\":5630:5648   */\n      add\n        /* \"#utility.yul\":5621:5627   */\n      dup5\n        /* \"#utility.yul\":5577:5649   */\n      tag_304\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":5450:5656   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5662:5912   */\n    tag_94:\n        /* \"#utility.yul\":5769:5773   */\n      0x00\n        /* \"#utility.yul\":5807:5809   */\n      0x20\n        /* \"#utility.yul\":5796:5805   */\n      dup3\n        /* \"#utility.yul\":5792:5810   */\n      add\n        /* \"#utility.yul\":5784:5810   */\n      swap1\n      pop\n        /* \"#utility.yul\":5820:5905   */\n      tag_318\n        /* \"#utility.yul\":5902:5903   */\n      0x00\n        /* \"#utility.yul\":5891:5900   */\n      dup4\n        /* \"#utility.yul\":5887:5904   */\n      add\n        /* \"#utility.yul\":5878:5884   */\n      dup5\n        /* \"#utility.yul\":5820:5905   */\n      tag_259\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":5774:5912   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5918:6337   */\n    tag_109:\n        /* \"#utility.yul\":6084:6088   */\n      0x00\n        /* \"#utility.yul\":6122:6124   */\n      0x20\n        /* \"#utility.yul\":6111:6120   */\n      dup3\n        /* \"#utility.yul\":6107:6125   */\n      add\n        /* \"#utility.yul\":6099:6125   */\n      swap1\n      pop\n        /* \"#utility.yul\":6171:6180   */\n      dup2\n        /* \"#utility.yul\":6165:6169   */\n      dup2\n        /* \"#utility.yul\":6161:6181   */\n      sub\n        /* \"#utility.yul\":6157:6158   */\n      0x00\n        /* \"#utility.yul\":6146:6155   */\n      dup4\n        /* \"#utility.yul\":6142:6159   */\n      add\n        /* \"#utility.yul\":6135:6182   */\n      mstore\n        /* \"#utility.yul\":6199:6330   */\n      tag_320\n        /* \"#utility.yul\":6325:6329   */\n      dup2\n        /* \"#utility.yul\":6199:6330   */\n      tag_263\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":6191:6330   */\n      swap1\n      pop\n        /* \"#utility.yul\":6089:6337   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6343:6762   */\n    tag_194:\n        /* \"#utility.yul\":6509:6513   */\n      0x00\n        /* \"#utility.yul\":6547:6549   */\n      0x20\n        /* \"#utility.yul\":6536:6545   */\n      dup3\n        /* \"#utility.yul\":6532:6550   */\n      add\n        /* \"#utility.yul\":6524:6550   */\n      swap1\n      pop\n        /* \"#utility.yul\":6596:6605   */\n      dup2\n        /* \"#utility.yul\":6590:6594   */\n      dup2\n        /* \"#utility.yul\":6586:6606   */\n      sub\n        /* \"#utility.yul\":6582:6583   */\n      0x00\n        /* \"#utility.yul\":6571:6580   */\n      dup4\n        /* \"#utility.yul\":6567:6584   */\n      add\n        /* \"#utility.yul\":6560:6607   */\n      mstore\n        /* \"#utility.yul\":6624:6755   */\n      tag_322\n        /* \"#utility.yul\":6750:6754   */\n      dup2\n        /* \"#utility.yul\":6624:6755   */\n      tag_269\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":6616:6755   */\n      swap1\n      pop\n        /* \"#utility.yul\":6514:6762   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6768:7187   */\n    tag_122:\n        /* \"#utility.yul\":6934:6938   */\n      0x00\n        /* \"#utility.yul\":6972:6974   */\n      0x20\n        /* \"#utility.yul\":6961:6970   */\n      dup3\n        /* \"#utility.yul\":6957:6975   */\n      add\n        /* \"#utility.yul\":6949:6975   */\n      swap1\n      pop\n        /* \"#utility.yul\":7021:7030   */\n      dup2\n        /* \"#utility.yul\":7015:7019   */\n      dup2\n        /* \"#utility.yul\":7011:7031   */\n      sub\n        /* \"#utility.yul\":7007:7008   */\n      0x00\n        /* \"#utility.yul\":6996:7005   */\n      dup4\n        /* \"#utility.yul\":6992:7009   */\n      add\n        /* \"#utility.yul\":6985:7032   */\n      mstore\n        /* \"#utility.yul\":7049:7180   */\n      tag_324\n        /* \"#utility.yul\":7175:7179   */\n      dup2\n        /* \"#utility.yul\":7049:7180   */\n      tag_274\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":7041:7180   */\n      swap1\n      pop\n        /* \"#utility.yul\":6939:7187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7193:7612   */\n    tag_112:\n        /* \"#utility.yul\":7359:7363   */\n      0x00\n        /* \"#utility.yul\":7397:7399   */\n      0x20\n        /* \"#utility.yul\":7386:7395   */\n      dup3\n        /* \"#utility.yul\":7382:7400   */\n      add\n        /* \"#utility.yul\":7374:7400   */\n      swap1\n      pop\n        /* \"#utility.yul\":7446:7455   */\n      dup2\n        /* \"#utility.yul\":7440:7444   */\n      dup2\n        /* \"#utility.yul\":7436:7456   */\n      sub\n        /* \"#utility.yul\":7432:7433   */\n      0x00\n        /* \"#utility.yul\":7421:7430   */\n      dup4\n        /* \"#utility.yul\":7417:7434   */\n      add\n        /* \"#utility.yul\":7410:7457   */\n      mstore\n        /* \"#utility.yul\":7474:7605   */\n      tag_326\n        /* \"#utility.yul\":7600:7604   */\n      dup2\n        /* \"#utility.yul\":7474:7605   */\n      tag_279\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":7466:7605   */\n      swap1\n      pop\n        /* \"#utility.yul\":7364:7612   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7618:8037   */\n    tag_152:\n        /* \"#utility.yul\":7784:7788   */\n      0x00\n        /* \"#utility.yul\":7822:7824   */\n      0x20\n        /* \"#utility.yul\":7811:7820   */\n      dup3\n        /* \"#utility.yul\":7807:7825   */\n      add\n        /* \"#utility.yul\":7799:7825   */\n      swap1\n      pop\n        /* \"#utility.yul\":7871:7880   */\n      dup2\n        /* \"#utility.yul\":7865:7869   */\n      dup2\n        /* \"#utility.yul\":7861:7881   */\n      sub\n        /* \"#utility.yul\":7857:7858   */\n      0x00\n        /* \"#utility.yul\":7846:7855   */\n      dup4\n        /* \"#utility.yul\":7842:7859   */\n      add\n        /* \"#utility.yul\":7835:7882   */\n      mstore\n        /* \"#utility.yul\":7899:8030   */\n      tag_328\n        /* \"#utility.yul\":8025:8029   */\n      dup2\n        /* \"#utility.yul\":7899:8030   */\n      tag_284\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":7891:8030   */\n      swap1\n      pop\n        /* \"#utility.yul\":7789:8037   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8043:8462   */\n    tag_213:\n        /* \"#utility.yul\":8209:8213   */\n      0x00\n        /* \"#utility.yul\":8247:8249   */\n      0x20\n        /* \"#utility.yul\":8236:8245   */\n      dup3\n        /* \"#utility.yul\":8232:8250   */\n      add\n        /* \"#utility.yul\":8224:8250   */\n      swap1\n      pop\n        /* \"#utility.yul\":8296:8305   */\n      dup2\n        /* \"#utility.yul\":8290:8294   */\n      dup2\n        /* \"#utility.yul\":8286:8306   */\n      sub\n        /* \"#utility.yul\":8282:8283   */\n      0x00\n        /* \"#utility.yul\":8271:8280   */\n      dup4\n        /* \"#utility.yul\":8267:8284   */\n      add\n        /* \"#utility.yul\":8260:8307   */\n      mstore\n        /* \"#utility.yul\":8324:8455   */\n      tag_330\n        /* \"#utility.yul\":8450:8454   */\n      dup2\n        /* \"#utility.yul\":8324:8455   */\n      tag_289\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":8316:8455   */\n      swap1\n      pop\n        /* \"#utility.yul\":8214:8462   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8468:8887   */\n    tag_149:\n        /* \"#utility.yul\":8634:8638   */\n      0x00\n        /* \"#utility.yul\":8672:8674   */\n      0x20\n        /* \"#utility.yul\":8661:8670   */\n      dup3\n        /* \"#utility.yul\":8657:8675   */\n      add\n        /* \"#utility.yul\":8649:8675   */\n      swap1\n      pop\n        /* \"#utility.yul\":8721:8730   */\n      dup2\n        /* \"#utility.yul\":8715:8719   */\n      dup2\n        /* \"#utility.yul\":8711:8731   */\n      sub\n        /* \"#utility.yul\":8707:8708   */\n      0x00\n        /* \"#utility.yul\":8696:8705   */\n      dup4\n        /* \"#utility.yul\":8692:8709   */\n      add\n        /* \"#utility.yul\":8685:8732   */\n      mstore\n        /* \"#utility.yul\":8749:8880   */\n      tag_332\n        /* \"#utility.yul\":8875:8879   */\n      dup2\n        /* \"#utility.yul\":8749:8880   */\n      tag_294\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":8741:8880   */\n      swap1\n      pop\n        /* \"#utility.yul\":8639:8887   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8893:9312   */\n    tag_202:\n        /* \"#utility.yul\":9059:9063   */\n      0x00\n        /* \"#utility.yul\":9097:9099   */\n      0x20\n        /* \"#utility.yul\":9086:9095   */\n      dup3\n        /* \"#utility.yul\":9082:9100   */\n      add\n        /* \"#utility.yul\":9074:9100   */\n      swap1\n      pop\n        /* \"#utility.yul\":9146:9155   */\n      dup2\n        /* \"#utility.yul\":9140:9144   */\n      dup2\n        /* \"#utility.yul\":9136:9156   */\n      sub\n        /* \"#utility.yul\":9132:9133   */\n      0x00\n        /* \"#utility.yul\":9121:9130   */\n      dup4\n        /* \"#utility.yul\":9117:9134   */\n      add\n        /* \"#utility.yul\":9110:9157   */\n      mstore\n        /* \"#utility.yul\":9174:9305   */\n      tag_334\n        /* \"#utility.yul\":9300:9304   */\n      dup2\n        /* \"#utility.yul\":9174:9305   */\n      tag_299\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":9166:9305   */\n      swap1\n      pop\n        /* \"#utility.yul\":9064:9312   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9318:9540   */\n    tag_31:\n        /* \"#utility.yul\":9411:9415   */\n      0x00\n        /* \"#utility.yul\":9449:9451   */\n      0x20\n        /* \"#utility.yul\":9438:9447   */\n      dup3\n        /* \"#utility.yul\":9434:9452   */\n      add\n        /* \"#utility.yul\":9426:9452   */\n      swap1\n      pop\n        /* \"#utility.yul\":9462:9533   */\n      tag_336\n        /* \"#utility.yul\":9530:9531   */\n      0x00\n        /* \"#utility.yul\":9519:9528   */\n      dup4\n        /* \"#utility.yul\":9515:9532   */\n      add\n        /* \"#utility.yul\":9506:9512   */\n      dup5\n        /* \"#utility.yul\":9462:9533   */\n      tag_304\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":9416:9540   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9546:9715   */\n    tag_266:\n        /* \"#utility.yul\":9630:9641   */\n      0x00\n        /* \"#utility.yul\":9664:9670   */\n      dup3\n        /* \"#utility.yul\":9659:9662   */\n      dup3\n        /* \"#utility.yul\":9652:9671   */\n      mstore\n        /* \"#utility.yul\":9704:9708   */\n      0x20\n        /* \"#utility.yul\":9699:9702   */\n      dup3\n        /* \"#utility.yul\":9695:9709   */\n      add\n        /* \"#utility.yul\":9680:9709   */\n      swap1\n      pop\n        /* \"#utility.yul\":9642:9715   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9721:10026   */\n    tag_106:\n        /* \"#utility.yul\":9761:9764   */\n      0x00\n        /* \"#utility.yul\":9780:9800   */\n      tag_339\n        /* \"#utility.yul\":9798:9799   */\n      dup3\n        /* \"#utility.yul\":9780:9800   */\n      tag_307\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":9775:9800   */\n      swap2\n      pop\n        /* \"#utility.yul\":9814:9834   */\n      tag_340\n        /* \"#utility.yul\":9832:9833   */\n      dup4\n        /* \"#utility.yul\":9814:9834   */\n      tag_307\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":9809:9834   */\n      swap3\n      pop\n        /* \"#utility.yul\":9968:9969   */\n      dup3\n        /* \"#utility.yul\":9900:9966   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":9896:9970   */\n      sub\n        /* \"#utility.yul\":9893:9894   */\n      dup3\n        /* \"#utility.yul\":9890:9971   */\n      gt\n        /* \"#utility.yul\":9887:9889   */\n      iszero\n      tag_341\n      jumpi\n        /* \"#utility.yul\":9974:9992   */\n      tag_342\n      tag_343\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":9887:9889   */\n    tag_341:\n        /* \"#utility.yul\":10018:10019   */\n      dup3\n        /* \"#utility.yul\":10015:10016   */\n      dup3\n        /* \"#utility.yul\":10011:10020   */\n      add\n        /* \"#utility.yul\":10004:10020   */\n      swap1\n      pop\n        /* \"#utility.yul\":9765:10026   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10032:10217   */\n    tag_229:\n        /* \"#utility.yul\":10072:10073   */\n      0x00\n        /* \"#utility.yul\":10089:10109   */\n      tag_345\n        /* \"#utility.yul\":10107:10108   */\n      dup3\n        /* \"#utility.yul\":10089:10109   */\n      tag_307\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":10084:10109   */\n      swap2\n      pop\n        /* \"#utility.yul\":10123:10143   */\n      tag_346\n        /* \"#utility.yul\":10141:10142   */\n      dup4\n        /* \"#utility.yul\":10123:10143   */\n      tag_307\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":10118:10143   */\n      swap3\n      pop\n        /* \"#utility.yul\":10162:10163   */\n      dup3\n        /* \"#utility.yul\":10152:10154   */\n      tag_347\n      jumpi\n        /* \"#utility.yul\":10167:10185   */\n      tag_348\n      tag_349\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":10152:10154   */\n    tag_347:\n        /* \"#utility.yul\":10209:10210   */\n      dup3\n        /* \"#utility.yul\":10206:10207   */\n      dup3\n        /* \"#utility.yul\":10202:10211   */\n      div\n        /* \"#utility.yul\":10197:10211   */\n      swap1\n      pop\n        /* \"#utility.yul\":10074:10217   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10223:10571   */\n    tag_232:\n        /* \"#utility.yul\":10263:10270   */\n      0x00\n        /* \"#utility.yul\":10286:10306   */\n      tag_351\n        /* \"#utility.yul\":10304:10305   */\n      dup3\n        /* \"#utility.yul\":10286:10306   */\n      tag_307\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":10281:10306   */\n      swap2\n      pop\n        /* \"#utility.yul\":10320:10340   */\n      tag_352\n        /* \"#utility.yul\":10338:10339   */\n      dup4\n        /* \"#utility.yul\":10320:10340   */\n      tag_307\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":10315:10340   */\n      swap3\n      pop\n        /* \"#utility.yul\":10508:10509   */\n      dup2\n        /* \"#utility.yul\":10440:10506   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10436:10510   */\n      div\n        /* \"#utility.yul\":10433:10434   */\n      dup4\n        /* \"#utility.yul\":10430:10511   */\n      gt\n        /* \"#utility.yul\":10425:10426   */\n      dup3\n        /* \"#utility.yul\":10418:10427   */\n      iszero\n        /* \"#utility.yul\":10411:10428   */\n      iszero\n        /* \"#utility.yul\":10407:10512   */\n      and\n        /* \"#utility.yul\":10404:10406   */\n      iszero\n      tag_353\n      jumpi\n        /* \"#utility.yul\":10515:10533   */\n      tag_354\n      tag_343\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":10404:10406   */\n    tag_353:\n        /* \"#utility.yul\":10563:10564   */\n      dup3\n        /* \"#utility.yul\":10560:10561   */\n      dup3\n        /* \"#utility.yul\":10556:10565   */\n      mul\n        /* \"#utility.yul\":10545:10565   */\n      swap1\n      pop\n        /* \"#utility.yul\":10271:10571   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10577:10768   */\n    tag_205:\n        /* \"#utility.yul\":10617:10621   */\n      0x00\n        /* \"#utility.yul\":10637:10657   */\n      tag_356\n        /* \"#utility.yul\":10655:10656   */\n      dup3\n        /* \"#utility.yul\":10637:10657   */\n      tag_307\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":10632:10657   */\n      swap2\n      pop\n        /* \"#utility.yul\":10671:10691   */\n      tag_357\n        /* \"#utility.yul\":10689:10690   */\n      dup4\n        /* \"#utility.yul\":10671:10691   */\n      tag_307\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":10666:10691   */\n      swap3\n      pop\n        /* \"#utility.yul\":10710:10711   */\n      dup3\n        /* \"#utility.yul\":10707:10708   */\n      dup3\n        /* \"#utility.yul\":10704:10712   */\n      lt\n        /* \"#utility.yul\":10701:10703   */\n      iszero\n      tag_358\n      jumpi\n        /* \"#utility.yul\":10715:10733   */\n      tag_359\n      tag_343\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":10701:10703   */\n    tag_358:\n        /* \"#utility.yul\":10760:10761   */\n      dup3\n        /* \"#utility.yul\":10757:10758   */\n      dup3\n        /* \"#utility.yul\":10753:10762   */\n      sub\n        /* \"#utility.yul\":10745:10762   */\n      swap1\n      pop\n        /* \"#utility.yul\":10622:10768   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10774:10870   */\n    tag_258:\n        /* \"#utility.yul\":10811:10818   */\n      0x00\n        /* \"#utility.yul\":10840:10864   */\n      tag_361\n        /* \"#utility.yul\":10858:10863   */\n      dup3\n        /* \"#utility.yul\":10840:10864   */\n      tag_362\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":10829:10864   */\n      swap1\n      pop\n        /* \"#utility.yul\":10819:10870   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10876:10966   */\n    tag_363:\n        /* \"#utility.yul\":10910:10917   */\n      0x00\n        /* \"#utility.yul\":10953:10958   */\n      dup2\n        /* \"#utility.yul\":10946:10959   */\n      iszero\n        /* \"#utility.yul\":10939:10960   */\n      iszero\n        /* \"#utility.yul\":10928:10960   */\n      swap1\n      pop\n        /* \"#utility.yul\":10918:10966   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10972:11098   */\n    tag_362:\n        /* \"#utility.yul\":11009:11016   */\n      0x00\n        /* \"#utility.yul\":11049:11091   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11042:11047   */\n      dup3\n        /* \"#utility.yul\":11038:11092   */\n      and\n        /* \"#utility.yul\":11027:11092   */\n      swap1\n      pop\n        /* \"#utility.yul\":11017:11098   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11104:11181   */\n    tag_307:\n        /* \"#utility.yul\":11141:11148   */\n      0x00\n        /* \"#utility.yul\":11170:11175   */\n      dup2\n        /* \"#utility.yul\":11159:11175   */\n      swap1\n      pop\n        /* \"#utility.yul\":11149:11181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11187:11341   */\n    tag_262:\n        /* \"#utility.yul\":11251:11260   */\n      0x00\n        /* \"#utility.yul\":11284:11335   */\n      tag_368\n        /* \"#utility.yul\":11329:11334   */\n      dup3\n        /* \"#utility.yul\":11284:11335   */\n      tag_369\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":11271:11335   */\n      swap1\n      pop\n        /* \"#utility.yul\":11261:11341   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11347:11474   */\n    tag_369:\n        /* \"#utility.yul\":11411:11420   */\n      0x00\n        /* \"#utility.yul\":11444:11468   */\n      tag_371\n        /* \"#utility.yul\":11462:11467   */\n      dup3\n        /* \"#utility.yul\":11444:11468   */\n      tag_362\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":11431:11468   */\n      swap1\n      pop\n        /* \"#utility.yul\":11421:11474   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11480:11660   */\n    tag_343:\n        /* \"#utility.yul\":11528:11605   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11525:11526   */\n      0x00\n        /* \"#utility.yul\":11518:11606   */\n      mstore\n        /* \"#utility.yul\":11625:11629   */\n      0x11\n        /* \"#utility.yul\":11622:11623   */\n      0x04\n        /* \"#utility.yul\":11615:11630   */\n      mstore\n        /* \"#utility.yul\":11649:11653   */\n      0x24\n        /* \"#utility.yul\":11646:11647   */\n      0x00\n        /* \"#utility.yul\":11639:11654   */\n      revert\n        /* \"#utility.yul\":11666:11846   */\n    tag_349:\n        /* \"#utility.yul\":11714:11791   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11711:11712   */\n      0x00\n        /* \"#utility.yul\":11704:11792   */\n      mstore\n        /* \"#utility.yul\":11811:11815   */\n      0x12\n        /* \"#utility.yul\":11808:11809   */\n      0x04\n        /* \"#utility.yul\":11801:11816   */\n      mstore\n        /* \"#utility.yul\":11835:11839   */\n      0x24\n        /* \"#utility.yul\":11832:11833   */\n      0x00\n        /* \"#utility.yul\":11825:11840   */\n      revert\n        /* \"#utility.yul\":11852:12008   */\n    tag_268:\n        /* \"#utility.yul\":11992:12000   */\n      0x4c6f636b65640000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11988:11989   */\n      0x00\n        /* \"#utility.yul\":11980:11986   */\n      dup3\n        /* \"#utility.yul\":11976:11990   */\n      add\n        /* \"#utility.yul\":11969:12001   */\n      mstore\n        /* \"#utility.yul\":11958:12008   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12014:12239   */\n    tag_273:\n        /* \"#utility.yul\":12154:12188   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":12150:12151   */\n      0x00\n        /* \"#utility.yul\":12142:12148   */\n      dup3\n        /* \"#utility.yul\":12138:12152   */\n      add\n        /* \"#utility.yul\":12131:12189   */\n      mstore\n        /* \"#utility.yul\":12223:12231   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12218:12220   */\n      0x20\n        /* \"#utility.yul\":12210:12216   */\n      dup3\n        /* \"#utility.yul\":12206:12221   */\n      add\n        /* \"#utility.yul\":12199:12232   */\n      mstore\n        /* \"#utility.yul\":12120:12239   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12245:12410   */\n    tag_278:\n        /* \"#utility.yul\":12385:12402   */\n      0x5472616e73666572206661696c65640000000000000000000000000000000000\n        /* \"#utility.yul\":12381:12382   */\n      0x00\n        /* \"#utility.yul\":12373:12379   */\n      dup3\n        /* \"#utility.yul\":12369:12383   */\n      add\n        /* \"#utility.yul\":12362:12403   */\n      mstore\n        /* \"#utility.yul\":12351:12410   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12416:12586   */\n    tag_283:\n        /* \"#utility.yul\":12556:12578   */\n      0x496e73756666696369656e742062616c616e6365000000000000000000000000\n        /* \"#utility.yul\":12552:12553   */\n      0x00\n        /* \"#utility.yul\":12544:12550   */\n      dup3\n        /* \"#utility.yul\":12540:12554   */\n      add\n        /* \"#utility.yul\":12533:12579   */\n      mstore\n        /* \"#utility.yul\":12522:12586   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12592:12773   */\n    tag_288:\n        /* \"#utility.yul\":12732:12765   */\n      0x416d6f756e742073686f756c642067726561746572207468616e207a65726f00\n        /* \"#utility.yul\":12728:12729   */\n      0x00\n        /* \"#utility.yul\":12720:12726   */\n      dup3\n        /* \"#utility.yul\":12716:12730   */\n      add\n        /* \"#utility.yul\":12709:12766   */\n      mstore\n        /* \"#utility.yul\":12698:12773   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12779:12961   */\n    tag_293:\n        /* \"#utility.yul\":12919:12953   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":12915:12916   */\n      0x00\n        /* \"#utility.yul\":12907:12913   */\n      dup3\n        /* \"#utility.yul\":12903:12917   */\n      add\n        /* \"#utility.yul\":12896:12954   */\n      mstore\n        /* \"#utility.yul\":12885:12961   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12967:13192   */\n    tag_298:\n        /* \"#utility.yul\":13107:13141   */\n      0x5468652063757272656e74207374616b696e6720616374697669747920686173\n        /* \"#utility.yul\":13103:13104   */\n      0x00\n        /* \"#utility.yul\":13095:13101   */\n      dup3\n        /* \"#utility.yul\":13091:13105   */\n      add\n        /* \"#utility.yul\":13084:13142   */\n      mstore\n        /* \"#utility.yul\":13176:13184   */\n      0x20656e6465640000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13171:13173   */\n      0x20\n        /* \"#utility.yul\":13163:13169   */\n      dup3\n        /* \"#utility.yul\":13159:13174   */\n      add\n        /* \"#utility.yul\":13152:13185   */\n      mstore\n        /* \"#utility.yul\":13073:13192   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13198:13379   */\n    tag_303:\n        /* \"#utility.yul\":13338:13371   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":13334:13335   */\n      0x00\n        /* \"#utility.yul\":13326:13332   */\n      dup3\n        /* \"#utility.yul\":13322:13336   */\n      add\n        /* \"#utility.yul\":13315:13372   */\n      mstore\n        /* \"#utility.yul\":13304:13379   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13385:13507   */\n    tag_237:\n        /* \"#utility.yul\":13458:13482   */\n      tag_383\n        /* \"#utility.yul\":13476:13481   */\n      dup2\n        /* \"#utility.yul\":13458:13482   */\n      tag_258\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":13451:13456   */\n      dup2\n        /* \"#utility.yul\":13448:13483   */\n      eq\n        /* \"#utility.yul\":13438:13440   */\n      tag_384\n      jumpi\n        /* \"#utility.yul\":13497:13498   */\n      0x00\n        /* \"#utility.yul\":13494:13495   */\n      dup1\n        /* \"#utility.yul\":13487:13499   */\n      revert\n        /* \"#utility.yul\":13438:13440   */\n    tag_384:\n        /* \"#utility.yul\":13428:13507   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13513:13629   */\n    tag_241:\n        /* \"#utility.yul\":13583:13604   */\n      tag_386\n        /* \"#utility.yul\":13598:13603   */\n      dup2\n        /* \"#utility.yul\":13583:13604   */\n      tag_363\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":13576:13581   */\n      dup2\n        /* \"#utility.yul\":13573:13605   */\n      eq\n        /* \"#utility.yul\":13563:13565   */\n      tag_387\n      jumpi\n        /* \"#utility.yul\":13619:13620   */\n      0x00\n        /* \"#utility.yul\":13616:13617   */\n      dup1\n        /* \"#utility.yul\":13609:13621   */\n      revert\n        /* \"#utility.yul\":13563:13565   */\n    tag_387:\n        /* \"#utility.yul\":13553:13629   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13635:13757   */\n    tag_245:\n        /* \"#utility.yul\":13708:13732   */\n      tag_389\n        /* \"#utility.yul\":13726:13731   */\n      dup2\n        /* \"#utility.yul\":13708:13732   */\n      tag_307\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":13701:13706   */\n      dup2\n        /* \"#utility.yul\":13698:13733   */\n      eq\n        /* \"#utility.yul\":13688:13690   */\n      tag_390\n      jumpi\n        /* \"#utility.yul\":13747:13748   */\n      0x00\n        /* \"#utility.yul\":13744:13745   */\n      dup1\n        /* \"#utility.yul\":13737:13749   */\n      revert\n        /* \"#utility.yul\":13688:13690   */\n    tag_390:\n        /* \"#utility.yul\":13678:13757   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220cdae40424d4768ee123e3d278a06c170ce9dedcb6f508ea500bf9311e12512d364736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1634:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:6"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:6",
														"type": ""
													}
												],
												"src": "7:143:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "219:80:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "229:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "244:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "238:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "238:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "229:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "287:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "260:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "260:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "260:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "197:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "205:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "213:5:6",
														"type": ""
													}
												],
												"src": "156:143:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "433:625:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "480:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "489:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "492:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "482:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "482:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "482:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "454:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "463:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "450:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "450:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "475:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "446:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "446:33:6"
															},
															"nodeType": "YulIf",
															"src": "443:2:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "506:128:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "521:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "535:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "525:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "550:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "596:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "607:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "592:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "592:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "616:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "560:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "560:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "550:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "644:129:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "659:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "673:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "663:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "689:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "735:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "746:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "731:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "731:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "755:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "699:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "699:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "689:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "783:129:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "798:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "812:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "802:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "828:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "874:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "885:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "870:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "870:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "894:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "838:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "838:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "828:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "922:129:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "937:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "951:2:6",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "941:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "967:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1013:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1024:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1009:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1009:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1033:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "977:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "977:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "967:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "379:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "390:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "402:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "410:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "418:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "426:6:6",
														"type": ""
													}
												],
												"src": "305:753:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1109:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1119:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1148:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1130:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1130:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1119:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1091:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1101:7:6",
														"type": ""
													}
												],
												"src": "1064:96:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1211:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1221:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1236:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1243:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1232:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1232:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1221:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1193:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1203:7:6",
														"type": ""
													}
												],
												"src": "1166:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1343:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1353:16:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1364:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1353:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1325:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1335:7:6",
														"type": ""
													}
												],
												"src": "1298:77:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1424:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1481:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1490:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1493:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1483:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1483:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1483:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1447:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1472:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1454:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1454:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1444:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1444:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1437:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1437:43:6"
															},
															"nodeType": "YulIf",
															"src": "1434:2:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1417:5:6",
														"type": ""
													}
												],
												"src": "1381:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1552:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1609:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1618:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1621:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1611:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1611:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1611:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1575:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1600:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1582:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1582:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1572:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1572:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1565:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1565:43:6"
															},
															"nodeType": "YulIf",
															"src": "1562:2:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1545:5:6",
														"type": ""
													}
												],
												"src": "1509:122:6"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405262015180600c553480156200001857600080fd5b5060405162001c4538038062001c4583398181016040528101906200003e919062000200565b6200005e620000526200010660201b60201c565b6200010e60201b60201c565b6001808190555083600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600481905550806005819055504260068190555050505050620002de565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050620001e381620002aa565b92915050565b600081519050620001fa81620002c4565b92915050565b600080600080608085870312156200021757600080fd5b60006200022787828801620001d2565b94505060206200023a87828801620001d2565b93505060406200024d87828801620001e9565b92505060606200026087828801620001e9565b91505092959194509250565b6000620002798262000280565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b620002b5816200026c565b8114620002c157600080fd5b50565b620002cf81620002a0565b8114620002db57600080fd5b50565b61195780620002ee6000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c80638aee8127116100b8578063c771c3901161007c578063c771c3901461033f578063ee947a7c1461035b578063f2fde38b14610379578063f7c618c114610395578063fc0c546a146103b3578063fc71ae8c146103d157610142565b80638aee8127146102c15780638b0e9f3f146102dd5780638da5cb5b146102fb578063a694fc3a14610319578063b88a802f1461033557610142565b80635d90bad91161010a5780635d90bad9146102115780636abfd1831461022d57806370a082311461024b578063715018a61461027b578063750142e61461028557806380c0976e146102a357610142565b8063154a78b5146101475780631683153d1461016557806345bc78ab14610195578063583d42fd146101c55780635d3eea91146101f5575b600080fd5b61014f6103ed565b60405161015c919061153d565b60405180910390f35b61017f600480360381019061017a91906111e7565b6103f3565b60405161018c919061153d565b60405180910390f35b6101af60048036038101906101aa91906111e7565b61040b565b6040516101bc919061153d565b60405180910390f35b6101df60048036038101906101da91906111e7565b610423565b6040516101ec919061153d565b60405180910390f35b61020f600480360381019061020a9190611239565b61043b565b005b61022b60048036038101906102269190611239565b61070e565b005b610235610720565b604051610242919061153d565b60405180910390f35b610265600480360381019061026091906111e7565b610726565b604051610272919061153d565b60405180910390f35b61028361076f565b005b61028d610783565b60405161029a919061153d565b60405180910390f35b6102ab610789565b6040516102b8919061153d565b60405180910390f35b6102db60048036038101906102d691906111e7565b61078f565b005b6102e56107db565b6040516102f2919061153d565b60405180910390f35b6103036107e1565b60405161031091906113a7565b60405180910390f35b610333600480360381019061032e9190611239565b61080a565b005b61033d610ba2565b005b61035960048036038101906103549190611239565b610de7565b005b610363610df9565b604051610370919061153d565b60405180910390f35b610393600480360381019061038e91906111e7565b610dff565b005b61039d610e83565b6040516103aa9190611422565b60405180910390f35b6103bb610ea9565b6040516103c89190611422565b60405180910390f35b6103eb60048036038101906103e69190611239565b610ecf565b005b60045481565b60096020528060005260406000206000915090505481565b60076020528060005260406000206000915090505481565b60086020528060005260406000206000915090505481565b610443610ee1565b6005546006546104539190611569565b421015610495576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048c9061143d565b60405180910390fd5b80600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610517576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050e9061149d565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016105749291906113f9565b602060405180830381600087803b15801561058e57600080fd5b505af11580156105a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c69190611210565b610605576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105fc9061147d565b60405180910390fd5b61065781600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f3190919063ffffffff16565b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506106af81600a54610f3190919063ffffffff16565b600a819055503373ffffffffffffffffffffffffffffffffffffffff167fb24546d975e2628748efc9aced80665e0fad66272033e5c0ea25fd3afac99795826040516106fb919061153d565b60405180910390a261070b610f47565b50565b610716610f50565b8060068190555050565b60065481565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610777610f50565b6107816000610fce565b565b600b5481565b600c5481565b610797610f50565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600a5481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610812610ee1565b6005546006546108229190611569565b4210610863576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085a906114fd565b60405180910390fd5b600081116108a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089d906114bd565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610905939291906113c2565b602060405180830381600087803b15801561091f57600080fd5b505af1158015610933573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109579190611210565b610996576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098d9061147d565b60405180910390fd5b6109e881600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461109290919063ffffffff16565b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555042600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000610a7b33836110a8565b9050610acf81600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461109290919063ffffffff16565b600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610b2782600a5461109290919063ffffffff16565b600a81905550610b4281600b5461109290919063ffffffff16565b600b819055503373ffffffffffffffffffffffffffffffffffffffff167febedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a83604051610b8e919061153d565b60405180910390a250610b9f610f47565b50565b610baa610ee1565b600554600654610bba9190611569565b421015610bfc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf39061143d565b60405180910390fd5b6000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610c9d9291906113f9565b602060405180830381600087803b158015610cb757600080fd5b505af1158015610ccb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cef9190611210565b610d2e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d259061147d565b60405180910390fd5b6000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610d8881600b54610f3190919063ffffffff16565b600b819055503373ffffffffffffffffffffffffffffffffffffffff167fba8de60c3403ec381d1d484652ea1980e3c3e56359195c92525bff4ce47ad98e82604051610dd4919061153d565b60405180910390a250610de5610f47565b565b610def610f50565b8060058190555050565b60055481565b610e07610f50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610e77576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e6e9061145d565b60405180910390fd5b610e8081610fce565b50565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610ed7610f50565b8060048190555050565b60026001541415610f27576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f1e9061151d565b60405180910390fd5b6002600181905550565b60008183610f3f919061164a565b905092915050565b60018081905550565b610f58611174565b73ffffffffffffffffffffffffffffffffffffffff16610f766107e1565b73ffffffffffffffffffffffffffffffffffffffff1614610fcc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fc3906114dd565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081836110a09190611569565b905092915050565b600080611113600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461110560065460055461109290919063ffffffff16565b610f3190919063ffffffff16565b90506000611167600c546111598461114b60045461113d620f42408b61117c90919063ffffffff16565b61119290919063ffffffff16565b61119290919063ffffffff16565b61117c90919063ffffffff16565b9050809250505092915050565b600033905090565b6000818361118a91906115bf565b905092915050565b600081836111a091906115f0565b905092915050565b6000813590506111b7816118dc565b92915050565b6000815190506111cc816118f3565b92915050565b6000813590506111e18161190a565b92915050565b6000602082840312156111f957600080fd5b6000611207848285016111a8565b91505092915050565b60006020828403121561122257600080fd5b6000611230848285016111bd565b91505092915050565b60006020828403121561124b57600080fd5b6000611259848285016111d2565b91505092915050565b61126b8161167e565b82525050565b61127a816116c6565b82525050565b600061128d600683611558565b915061129882611748565b602082019050919050565b60006112b0602683611558565b91506112bb82611771565b604082019050919050565b60006112d3600f83611558565b91506112de826117c0565b602082019050919050565b60006112f6601483611558565b9150611301826117e9565b602082019050919050565b6000611319601f83611558565b915061132482611812565b602082019050919050565b600061133c602083611558565b91506113478261183b565b602082019050919050565b600061135f602683611558565b915061136a82611864565b604082019050919050565b6000611382601f83611558565b915061138d826118b3565b602082019050919050565b6113a1816116bc565b82525050565b60006020820190506113bc6000830184611262565b92915050565b60006060820190506113d76000830186611262565b6113e46020830185611262565b6113f16040830184611398565b949350505050565b600060408201905061140e6000830185611262565b61141b6020830184611398565b9392505050565b60006020820190506114376000830184611271565b92915050565b6000602082019050818103600083015261145681611280565b9050919050565b60006020820190508181036000830152611476816112a3565b9050919050565b60006020820190508181036000830152611496816112c6565b9050919050565b600060208201905081810360008301526114b6816112e9565b9050919050565b600060208201905081810360008301526114d68161130c565b9050919050565b600060208201905081810360008301526114f68161132f565b9050919050565b6000602082019050818103600083015261151681611352565b9050919050565b6000602082019050818103600083015261153681611375565b9050919050565b60006020820190506115526000830184611398565b92915050565b600082825260208201905092915050565b6000611574826116bc565b915061157f836116bc565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156115b4576115b36116ea565b5b828201905092915050565b60006115ca826116bc565b91506115d5836116bc565b9250826115e5576115e4611719565b5b828204905092915050565b60006115fb826116bc565b9150611606836116bc565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561163f5761163e6116ea565b5b828202905092915050565b6000611655826116bc565b9150611660836116bc565b925082821015611673576116726116ea565b5b828203905092915050565b60006116898261169c565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006116d1826116d8565b9050919050565b60006116e38261169c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4c6f636b65640000000000000000000000000000000000000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b7f416d6f756e742073686f756c642067726561746572207468616e207a65726f00600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f5468652063757272656e74207374616b696e672061637469766974792068617360008201527f20656e6465640000000000000000000000000000000000000000000000000000602082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6118e58161167e565b81146118f057600080fd5b50565b6118fc81611690565b811461190757600080fd5b50565b611913816116bc565b811461191e57600080fd5b5056fea2646970667358221220cdae40424d4768ee123e3d278a06c170ce9dedcb6f508ea500bf9311e12512d364736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH3 0x15180 PUSH1 0xC SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1C45 CODESIZE SUB DUP1 PUSH3 0x1C45 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x3E SWAP2 SWAP1 PUSH3 0x200 JUMP JUMPDEST PUSH3 0x5E PUSH3 0x52 PUSH3 0x106 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x10E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x4 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP POP POP POP PUSH3 0x2DE JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1E3 DUP2 PUSH3 0x2AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1FA DUP2 PUSH3 0x2C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x217 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x227 DUP8 DUP3 DUP9 ADD PUSH3 0x1D2 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH3 0x23A DUP8 DUP3 DUP9 ADD PUSH3 0x1D2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH3 0x24D DUP8 DUP3 DUP9 ADD PUSH3 0x1E9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH3 0x260 DUP8 DUP3 DUP9 ADD PUSH3 0x1E9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x279 DUP3 PUSH3 0x280 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2B5 DUP2 PUSH3 0x26C JUMP JUMPDEST DUP2 EQ PUSH3 0x2C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x2CF DUP2 PUSH3 0x2A0 JUMP JUMPDEST DUP2 EQ PUSH3 0x2DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1957 DUP1 PUSH3 0x2EE PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8AEE8127 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xC771C390 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xC771C390 EQ PUSH2 0x33F JUMPI DUP1 PUSH4 0xEE947A7C EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x379 JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x3B3 JUMPI DUP1 PUSH4 0xFC71AE8C EQ PUSH2 0x3D1 JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x8AEE8127 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x8B0E9F3F EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x319 JUMPI DUP1 PUSH4 0xB88A802F EQ PUSH2 0x335 JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x5D90BAD9 GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x5D90BAD9 EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x6ABFD183 EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x27B JUMPI DUP1 PUSH4 0x750142E6 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x80C0976E EQ PUSH2 0x2A3 JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x154A78B5 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x1683153D EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x45BC78AB EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x583D42FD EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x5D3EEA91 EQ PUSH2 0x1F5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14F PUSH2 0x3ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x153D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x11E7 JUMP JUMPDEST PUSH2 0x3F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18C SWAP2 SWAP1 PUSH2 0x153D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0x11E7 JUMP JUMPDEST PUSH2 0x40B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0x153D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0x11E7 JUMP JUMPDEST PUSH2 0x423 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0x153D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x1239 JUMP JUMPDEST PUSH2 0x43B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x1239 JUMP JUMPDEST PUSH2 0x70E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x235 PUSH2 0x720 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x242 SWAP2 SWAP1 PUSH2 0x153D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x265 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x260 SWAP2 SWAP1 PUSH2 0x11E7 JUMP JUMPDEST PUSH2 0x726 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x153D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x283 PUSH2 0x76F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28D PUSH2 0x783 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x153D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AB PUSH2 0x789 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0x153D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D6 SWAP2 SWAP1 PUSH2 0x11E7 JUMP JUMPDEST PUSH2 0x78F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E5 PUSH2 0x7DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F2 SWAP2 SWAP1 PUSH2 0x153D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x303 PUSH2 0x7E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x310 SWAP2 SWAP1 PUSH2 0x13A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x333 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32E SWAP2 SWAP1 PUSH2 0x1239 JUMP JUMPDEST PUSH2 0x80A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x33D PUSH2 0xBA2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x359 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x354 SWAP2 SWAP1 PUSH2 0x1239 JUMP JUMPDEST PUSH2 0xDE7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x363 PUSH2 0xDF9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x370 SWAP2 SWAP1 PUSH2 0x153D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x393 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38E SWAP2 SWAP1 PUSH2 0x11E7 JUMP JUMPDEST PUSH2 0xDFF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x39D PUSH2 0xE83 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AA SWAP2 SWAP1 PUSH2 0x1422 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BB PUSH2 0xEA9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C8 SWAP2 SWAP1 PUSH2 0x1422 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E6 SWAP2 SWAP1 PUSH2 0x1239 JUMP JUMPDEST PUSH2 0xECF JUMP JUMPDEST STOP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x443 PUSH2 0xEE1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH2 0x453 SWAP2 SWAP1 PUSH2 0x1569 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x495 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48C SWAP1 PUSH2 0x143D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x517 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50E SWAP1 PUSH2 0x149D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x574 SWAP3 SWAP2 SWAP1 PUSH2 0x13F9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x58E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5A2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5C6 SWAP2 SWAP1 PUSH2 0x1210 JUMP JUMPDEST PUSH2 0x605 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5FC SWAP1 PUSH2 0x147D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x657 DUP2 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF31 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x6AF DUP2 PUSH1 0xA SLOAD PUSH2 0xF31 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB24546D975E2628748EFC9ACED80665E0FAD66272033E5C0EA25FD3AFAC99795 DUP3 PUSH1 0x40 MLOAD PUSH2 0x6FB SWAP2 SWAP1 PUSH2 0x153D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x70B PUSH2 0xF47 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x716 PUSH2 0xF50 JUMP JUMPDEST DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x777 PUSH2 0xF50 JUMP JUMPDEST PUSH2 0x781 PUSH1 0x0 PUSH2 0xFCE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH2 0x797 PUSH2 0xF50 JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x812 PUSH2 0xEE1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH2 0x822 SWAP2 SWAP1 PUSH2 0x1569 JUMP JUMPDEST TIMESTAMP LT PUSH2 0x863 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x85A SWAP1 PUSH2 0x14FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x8A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x89D SWAP1 PUSH2 0x14BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x905 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x13C2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x91F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x933 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x957 SWAP2 SWAP1 PUSH2 0x1210 JUMP JUMPDEST PUSH2 0x996 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x98D SWAP1 PUSH2 0x147D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9E8 DUP2 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1092 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0xA7B CALLER DUP4 PUSH2 0x10A8 JUMP JUMPDEST SWAP1 POP PUSH2 0xACF DUP2 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1092 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xB27 DUP3 PUSH1 0xA SLOAD PUSH2 0x1092 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH2 0xB42 DUP2 PUSH1 0xB SLOAD PUSH2 0x1092 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEBEDB8B3C678666E7F36970BC8F57ABF6D8FA2E828C0DA91EA5B75BF68ED101A DUP4 PUSH1 0x40 MLOAD PUSH2 0xB8E SWAP2 SWAP1 PUSH2 0x153D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0xB9F PUSH2 0xF47 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xBAA PUSH2 0xEE1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH2 0xBBA SWAP2 SWAP1 PUSH2 0x1569 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0xBFC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF3 SWAP1 PUSH2 0x143D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC9D SWAP3 SWAP2 SWAP1 PUSH2 0x13F9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCCB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCEF SWAP2 SWAP1 PUSH2 0x1210 JUMP JUMPDEST PUSH2 0xD2E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD25 SWAP1 PUSH2 0x147D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xD88 DUP2 PUSH1 0xB SLOAD PUSH2 0xF31 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBA8DE60C3403EC381D1D484652EA1980E3C3E56359195C92525BFF4CE47AD98E DUP3 PUSH1 0x40 MLOAD PUSH2 0xDD4 SWAP2 SWAP1 PUSH2 0x153D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0xDE5 PUSH2 0xF47 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xDEF PUSH2 0xF50 JUMP JUMPDEST DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xE07 PUSH2 0xF50 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xE77 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE6E SWAP1 PUSH2 0x145D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE80 DUP2 PUSH2 0xFCE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xED7 PUSH2 0xF50 JUMP JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xF27 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF1E SWAP1 PUSH2 0x151D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xF3F SWAP2 SWAP1 PUSH2 0x164A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xF58 PUSH2 0x1174 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF76 PUSH2 0x7E1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFCC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC3 SWAP1 PUSH2 0x14DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x10A0 SWAP2 SWAP1 PUSH2 0x1569 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1113 PUSH1 0x8 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1105 PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH2 0x1092 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xF31 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1167 PUSH1 0xC SLOAD PUSH2 0x1159 DUP5 PUSH2 0x114B PUSH1 0x4 SLOAD PUSH2 0x113D PUSH3 0xF4240 DUP12 PUSH2 0x117C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1192 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1192 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x117C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x118A SWAP2 SWAP1 PUSH2 0x15BF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x11A0 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11B7 DUP2 PUSH2 0x18DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x11CC DUP2 PUSH2 0x18F3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11E1 DUP2 PUSH2 0x190A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1207 DUP5 DUP3 DUP6 ADD PUSH2 0x11A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1230 DUP5 DUP3 DUP6 ADD PUSH2 0x11BD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x124B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1259 DUP5 DUP3 DUP6 ADD PUSH2 0x11D2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x126B DUP2 PUSH2 0x167E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x127A DUP2 PUSH2 0x16C6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x128D PUSH1 0x6 DUP4 PUSH2 0x1558 JUMP JUMPDEST SWAP2 POP PUSH2 0x1298 DUP3 PUSH2 0x1748 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12B0 PUSH1 0x26 DUP4 PUSH2 0x1558 JUMP JUMPDEST SWAP2 POP PUSH2 0x12BB DUP3 PUSH2 0x1771 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12D3 PUSH1 0xF DUP4 PUSH2 0x1558 JUMP JUMPDEST SWAP2 POP PUSH2 0x12DE DUP3 PUSH2 0x17C0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12F6 PUSH1 0x14 DUP4 PUSH2 0x1558 JUMP JUMPDEST SWAP2 POP PUSH2 0x1301 DUP3 PUSH2 0x17E9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1319 PUSH1 0x1F DUP4 PUSH2 0x1558 JUMP JUMPDEST SWAP2 POP PUSH2 0x1324 DUP3 PUSH2 0x1812 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x133C PUSH1 0x20 DUP4 PUSH2 0x1558 JUMP JUMPDEST SWAP2 POP PUSH2 0x1347 DUP3 PUSH2 0x183B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x135F PUSH1 0x26 DUP4 PUSH2 0x1558 JUMP JUMPDEST SWAP2 POP PUSH2 0x136A DUP3 PUSH2 0x1864 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1382 PUSH1 0x1F DUP4 PUSH2 0x1558 JUMP JUMPDEST SWAP2 POP PUSH2 0x138D DUP3 PUSH2 0x18B3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13A1 DUP2 PUSH2 0x16BC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13BC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1262 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x13D7 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1262 JUMP JUMPDEST PUSH2 0x13E4 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1262 JUMP JUMPDEST PUSH2 0x13F1 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1398 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x140E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1262 JUMP JUMPDEST PUSH2 0x141B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1398 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1437 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1271 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1456 DUP2 PUSH2 0x1280 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1476 DUP2 PUSH2 0x12A3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1496 DUP2 PUSH2 0x12C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14B6 DUP2 PUSH2 0x12E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14D6 DUP2 PUSH2 0x130C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14F6 DUP2 PUSH2 0x132F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1516 DUP2 PUSH2 0x1352 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1536 DUP2 PUSH2 0x1375 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1552 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1398 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1574 DUP3 PUSH2 0x16BC JUMP JUMPDEST SWAP2 POP PUSH2 0x157F DUP4 PUSH2 0x16BC JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x15B4 JUMPI PUSH2 0x15B3 PUSH2 0x16EA JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15CA DUP3 PUSH2 0x16BC JUMP JUMPDEST SWAP2 POP PUSH2 0x15D5 DUP4 PUSH2 0x16BC JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x15E5 JUMPI PUSH2 0x15E4 PUSH2 0x1719 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15FB DUP3 PUSH2 0x16BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1606 DUP4 PUSH2 0x16BC JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x163F JUMPI PUSH2 0x163E PUSH2 0x16EA JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1655 DUP3 PUSH2 0x16BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1660 DUP4 PUSH2 0x16BC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1673 JUMPI PUSH2 0x1672 PUSH2 0x16EA JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1689 DUP3 PUSH2 0x169C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16D1 DUP3 PUSH2 0x16D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16E3 DUP3 PUSH2 0x169C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4C6F636B65640000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416D6F756E742073686F756C642067726561746572207468616E207A65726F00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5468652063757272656E74207374616B696E6720616374697669747920686173 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20656E6465640000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x18E5 DUP2 PUSH2 0x167E JUMP JUMPDEST DUP2 EQ PUSH2 0x18F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x18FC DUP2 PUSH2 0x1690 JUMP JUMPDEST DUP2 EQ PUSH2 0x1907 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1913 DUP2 PUSH2 0x16BC JUMP JUMPDEST DUP2 EQ PUSH2 0x191E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD 0xAE BLOCKHASH TIMESTAMP 0x4D SELFBALANCE PUSH9 0xEE123E3D278A06C170 0xCE SWAP14 0xED 0xCB PUSH16 0x508EA500BF9311E12512D364736F6C63 NUMBER STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "289:4429:5:-:0;;;1155:5;1130:30;;1370:305;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;1716:1:1;1821:7;:22;;;;1493:6:5;1478:5;;:22;;;;;;;;;;;;;;;;;;1531:12;1510:11;;:34;;;;;;;;;;;;;;;;;;1571:15;1554:14;:32;;;;1611:13;1596:12;:28;;;;1653:15;1634:16;:34;;;;1370:305;;;;289:4429;;640:96:3;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2433:187;;:::o;7:143:6:-;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:143::-;213:5;244:6;238:13;229:22;;260:33;287:5;260:33;:::i;:::-;219:80;;;;:::o;305:753::-;402:6;410;418;426;475:3;463:9;454:7;450:23;446:33;443:2;;;492:1;489;482:12;443:2;535:1;560:64;616:7;607:6;596:9;592:22;560:64;:::i;:::-;550:74;;506:128;673:2;699:64;755:7;746:6;735:9;731:22;699:64;:::i;:::-;689:74;;644:129;812:2;838:64;894:7;885:6;874:9;870:22;838:64;:::i;:::-;828:74;;783:129;951:2;977:64;1033:7;1024:6;1013:9;1009:22;977:64;:::i;:::-;967:74;;922:129;433:625;;;;;;;:::o;1064:96::-;1101:7;1130:24;1148:5;1130:24;:::i;:::-;1119:35;;1109:51;;;:::o;1166:126::-;1203:7;1243:42;1236:5;1232:54;1221:65;;1211:81;;;:::o;1298:77::-;1335:7;1364:5;1353:16;;1343:32;;;:::o;1381:122::-;1454:24;1472:5;1454:24;:::i;:::-;1447:5;1444:35;1434:2;;1493:1;1490;1483:12;1434:2;1424:79;:::o;1509:122::-;1582:24;1600:5;1582:24;:::i;:::-;1575:5;1572:35;1562:2;;1621:1;1618;1611:12;1562:2;1552:79;:::o;289:4429:5:-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:13760:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:6",
														"type": ""
													}
												],
												"src": "7:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "212:77:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "222:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "237:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "231:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "222:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "277:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "253:23:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "253:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "253:30:6"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "190:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "198:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "206:5:6",
														"type": ""
													}
												],
												"src": "152:137:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "347:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "357:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "379:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "366:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "366:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "357:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "422:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "395:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "395:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "395:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "325:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "333:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "341:5:6",
														"type": ""
													}
												],
												"src": "295:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "506:196:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "552:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "561:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "564:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "554:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "554:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "554:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "527:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "536:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "523:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "523:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "548:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "519:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "519:32:6"
															},
															"nodeType": "YulIf",
															"src": "516:2:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "578:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "593:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "607:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "597:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "622:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "657:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "668:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "653:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "653:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "677:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "632:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "632:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "622:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "476:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "487:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "499:6:6",
														"type": ""
													}
												],
												"src": "440:262:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "782:204:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "828:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "837:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "840:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "830:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "830:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "830:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "803:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "812:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "799:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "799:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "824:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "795:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "795:32:6"
															},
															"nodeType": "YulIf",
															"src": "792:2:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "854:125:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "869:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "883:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "873:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "898:71:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "941:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "952:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "937:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "937:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "961:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "908:28:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "908:61:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "898:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "752:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "763:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "775:6:6",
														"type": ""
													}
												],
												"src": "708:278:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1058:196:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1104:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1113:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1116:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1106:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1106:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1106:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1079:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1088:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1075:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1075:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1100:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1071:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1071:32:6"
															},
															"nodeType": "YulIf",
															"src": "1068:2:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "1130:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1145:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1159:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1149:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1174:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1209:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1220:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1205:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1205:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1229:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1184:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1184:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1174:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1028:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1039:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1051:6:6",
														"type": ""
													}
												],
												"src": "992:262:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1325:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1342:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1365:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1347:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1347:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1335:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1335:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1335:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1313:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1320:3:6",
														"type": ""
													}
												],
												"src": "1260:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1463:80:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1480:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1530:5:6"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$244_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1485:44:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1485:51:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1473:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1473:64:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1473:64:6"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$244_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1451:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1458:3:6",
														"type": ""
													}
												],
												"src": "1384:159:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1695:219:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1705:73:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1771:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1776:1:6",
																		"type": "",
																		"value": "6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1712:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1712:66:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1705:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1876:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_10bc01d611f2c803e55ff98d999836f196afae7cf91f96f3b6f511e56ba84974",
																	"nodeType": "YulIdentifier",
																	"src": "1787:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1787:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1787:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1889:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1900:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1905:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1896:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1896:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1889:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_10bc01d611f2c803e55ff98d999836f196afae7cf91f96f3b6f511e56ba84974_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1683:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1691:3:6",
														"type": ""
													}
												],
												"src": "1549:365:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2066:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2076:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2142:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2147:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2083:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2083:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2076:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2248:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "2159:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2159:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2159:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2261:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2272:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2277:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2268:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2268:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2261:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2054:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2062:3:6",
														"type": ""
													}
												],
												"src": "1920:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2438:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2448:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2514:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2519:2:6",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2455:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2455:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2448:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2620:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																	"nodeType": "YulIdentifier",
																	"src": "2531:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2531:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2531:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2633:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2644:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2649:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2640:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2640:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2633:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2426:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2434:3:6",
														"type": ""
													}
												],
												"src": "2292:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2810:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2820:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2886:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2891:2:6",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2827:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2827:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2820:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2992:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																	"nodeType": "YulIdentifier",
																	"src": "2903:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2903:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2903:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3005:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3016:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3021:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3012:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3012:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3005:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2798:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2806:3:6",
														"type": ""
													}
												],
												"src": "2664:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3182:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3192:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3258:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3263:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3199:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3199:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3192:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3364:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7e6097df28dbd6e8fac3ec6a9281335c312bc8a436c798b83190edcb63f5401f",
																	"nodeType": "YulIdentifier",
																	"src": "3275:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3275:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3275:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3377:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3388:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3393:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3384:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3384:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3377:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7e6097df28dbd6e8fac3ec6a9281335c312bc8a436c798b83190edcb63f5401f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3170:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3178:3:6",
														"type": ""
													}
												],
												"src": "3036:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3554:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3564:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3630:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3635:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3571:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3571:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3564:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3736:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "3647:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3647:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3647:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3749:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3760:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3765:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3756:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3756:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3749:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3542:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3550:3:6",
														"type": ""
													}
												],
												"src": "3408:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3926:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3936:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4002:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4007:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3943:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3943:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3936:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4108:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_bb49972f036ceb7f98bbdcfadc5b5745930b5203ea6a23b47522e300d5db612c",
																	"nodeType": "YulIdentifier",
																	"src": "4019:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4019:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4019:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4121:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4132:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4137:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4128:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4128:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4121:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_bb49972f036ceb7f98bbdcfadc5b5745930b5203ea6a23b47522e300d5db612c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3914:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3922:3:6",
														"type": ""
													}
												],
												"src": "3780:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4298:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4308:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4374:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4379:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4315:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4315:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4308:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4480:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nodeType": "YulIdentifier",
																	"src": "4391:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4391:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4391:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4493:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4504:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4509:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4500:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4500:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4493:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4286:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4294:3:6",
														"type": ""
													}
												],
												"src": "4152:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4589:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4606:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4629:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4611:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4611:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4599:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4599:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4599:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4577:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4584:3:6",
														"type": ""
													}
												],
												"src": "4524:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4746:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4756:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4768:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4779:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4764:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4764:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4756:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4836:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4849:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4860:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4845:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4845:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4792:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4792:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4792:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4718:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4730:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4741:4:6",
														"type": ""
													}
												],
												"src": "4648:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5030:288:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5040:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5052:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5063:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5048:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5048:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5040:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5120:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5133:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5144:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5129:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5129:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5076:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5076:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5076:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5201:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5214:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5225:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5210:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5210:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5157:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5157:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5157:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "5283:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5296:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5307:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5292:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5292:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5239:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5239:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5239:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4986:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4998:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5006:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5014:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5025:4:6",
														"type": ""
													}
												],
												"src": "4876:442:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5450:206:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5460:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5472:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5483:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5468:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5468:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5460:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5540:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5553:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5564:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5549:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5549:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5496:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5496:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5496:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5621:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5634:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5645:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5630:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5630:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5577:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5577:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5577:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5414:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5426:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5434:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5445:4:6",
														"type": ""
													}
												],
												"src": "5324:332:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5774:138:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5784:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5796:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5807:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5792:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5792:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5784:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5878:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5891:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5902:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5887:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5887:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$244_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5820:57:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5820:85:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5820:85:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$244__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5746:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5758:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5769:4:6",
														"type": ""
													}
												],
												"src": "5662:250:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6089:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6099:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6111:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6122:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6107:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6107:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6099:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6146:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6157:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6142:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6142:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6165:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6171:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6161:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6161:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6135:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6135:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6135:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6191:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6325:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_10bc01d611f2c803e55ff98d999836f196afae7cf91f96f3b6f511e56ba84974_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6199:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6199:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6191:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_10bc01d611f2c803e55ff98d999836f196afae7cf91f96f3b6f511e56ba84974__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6069:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6084:4:6",
														"type": ""
													}
												],
												"src": "5918:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6514:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6524:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6536:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6547:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6532:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6532:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6524:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6571:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6582:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6567:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6567:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6590:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6596:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6586:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6586:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6560:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6560:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6560:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6616:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6750:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6624:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6624:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6616:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6494:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6509:4:6",
														"type": ""
													}
												],
												"src": "6343:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6939:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6949:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6961:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6972:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6957:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6957:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6949:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6996:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7007:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6992:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6992:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7015:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7021:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7011:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7011:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6985:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6985:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6985:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7041:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7175:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7049:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7049:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7041:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6919:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6934:4:6",
														"type": ""
													}
												],
												"src": "6768:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7364:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7374:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7386:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7397:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7382:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7382:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7374:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7421:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7432:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7417:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7417:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7440:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7446:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7436:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7436:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7410:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7410:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7410:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7466:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7600:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7474:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7474:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7466:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7344:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7359:4:6",
														"type": ""
													}
												],
												"src": "7193:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7789:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7799:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7811:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7822:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7807:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7807:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7799:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7846:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7857:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7842:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7842:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7865:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7871:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7861:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7861:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7835:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7835:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7835:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7891:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8025:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7e6097df28dbd6e8fac3ec6a9281335c312bc8a436c798b83190edcb63f5401f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7899:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7899:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7891:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7e6097df28dbd6e8fac3ec6a9281335c312bc8a436c798b83190edcb63f5401f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7769:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7784:4:6",
														"type": ""
													}
												],
												"src": "7618:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8214:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8224:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8236:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8247:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8232:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8232:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8224:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8271:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8282:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8267:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8267:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8290:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8296:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8286:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8286:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8260:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8260:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8260:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8316:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8450:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8324:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8324:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8316:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8194:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8209:4:6",
														"type": ""
													}
												],
												"src": "8043:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8639:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8649:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8661:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8672:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8657:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8657:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8649:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8696:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8707:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8692:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8692:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8715:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8721:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8711:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8711:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8685:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8685:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8685:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8741:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8875:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_bb49972f036ceb7f98bbdcfadc5b5745930b5203ea6a23b47522e300d5db612c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8749:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8749:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8741:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bb49972f036ceb7f98bbdcfadc5b5745930b5203ea6a23b47522e300d5db612c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8619:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8634:4:6",
														"type": ""
													}
												],
												"src": "8468:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9064:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9074:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9086:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9097:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9082:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9082:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9074:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9121:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9132:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9117:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9117:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9140:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9146:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9136:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9136:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9110:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9110:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9110:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9166:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9300:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9174:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9174:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9166:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9044:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9059:4:6",
														"type": ""
													}
												],
												"src": "8893:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9416:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9426:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9438:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9449:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9434:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9434:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9426:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9506:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9519:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9530:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9515:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9515:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9462:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9462:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9462:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9388:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9400:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9411:4:6",
														"type": ""
													}
												],
												"src": "9318:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9642:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9659:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9664:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9652:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9652:19:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9652:19:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9680:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9699:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9704:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9695:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9695:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "9680:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9614:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9619:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "9630:11:6",
														"type": ""
													}
												],
												"src": "9546:169:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9765:261:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9775:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9798:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9780:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9780:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9775:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9809:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9832:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9814:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9814:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9809:1:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9972:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9974:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9974:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9974:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9893:1:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9900:66:6",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "9968:1:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9896:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9896:74:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9890:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9890:81:6"
															},
															"nodeType": "YulIf",
															"src": "9887:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10004:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10015:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10018:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10011:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10011:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "10004:3:6"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9752:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9755:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "9761:3:6",
														"type": ""
													}
												],
												"src": "9721:305:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10074:143:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10084:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10107:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10089:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10089:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10084:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10118:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10141:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10123:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10123:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10118:1:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10165:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "10167:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10167:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10167:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10162:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10155:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10155:9:6"
															},
															"nodeType": "YulIf",
															"src": "10152:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10197:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10206:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10209:1:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "10202:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10202:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "10197:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10063:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10066:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "10072:1:6",
														"type": ""
													}
												],
												"src": "10032:185:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10271:300:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10281:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10304:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10286:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10286:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10281:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10315:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10338:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10320:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10320:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10315:1:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10513:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10515:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10515:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10515:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "10425:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "10418:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10418:9:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "10411:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10411:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "10433:1:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10440:66:6",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "10508:1:6"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "10436:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10436:74:6"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "10430:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10430:81:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10407:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10407:105:6"
															},
															"nodeType": "YulIf",
															"src": "10404:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10545:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10560:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10563:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "10556:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10556:9:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "10545:7:6"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10254:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10257:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "10263:7:6",
														"type": ""
													}
												],
												"src": "10223:348:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10622:146:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10632:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10655:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10637:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10637:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10632:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10666:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10689:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10671:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10671:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10666:1:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10713:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10715:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10715:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10715:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10707:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10710:1:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10704:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10704:8:6"
															},
															"nodeType": "YulIf",
															"src": "10701:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10745:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10757:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10760:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "10753:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10753:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "10745:4:6"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10608:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10611:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "10617:4:6",
														"type": ""
													}
												],
												"src": "10577:191:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10819:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10829:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10858:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "10840:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10840:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10829:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10801:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10811:7:6",
														"type": ""
													}
												],
												"src": "10774:96:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10918:48:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10928:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10953:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "10946:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10946:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10939:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10939:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10928:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10900:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10910:7:6",
														"type": ""
													}
												],
												"src": "10876:90:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11017:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11027:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11042:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11049:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11038:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11038:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11027:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10999:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11009:7:6",
														"type": ""
													}
												],
												"src": "10972:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11149:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11159:16:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "11170:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11159:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11131:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11141:7:6",
														"type": ""
													}
												],
												"src": "11104:77:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11261:80:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11271:64:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11329:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_contract$_IERC20_$244_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "11284:44:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11284:51:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "11271:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$244_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11241:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "11251:9:6",
														"type": ""
													}
												],
												"src": "11187:154:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11421:53:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11431:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11462:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "11444:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11444:24:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "11431:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$244_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11401:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "11411:9:6",
														"type": ""
													}
												],
												"src": "11347:127:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11508:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11525:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11528:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11518:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11518:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11518:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11622:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11625:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11615:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11615:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11615:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11646:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11649:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11639:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11639:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11639:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "11480:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11694:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11711:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11714:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11704:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11704:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11704:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11808:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11811:4:6",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11801:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11801:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11801:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11832:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11835:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11825:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11825:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11825:15:6"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "11666:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11958:50:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11980:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11988:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11976:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11976:14:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11992:8:6",
																		"type": "",
																		"value": "Locked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11969:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11969:32:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11969:32:6"
														}
													]
												},
												"name": "store_literal_in_memory_10bc01d611f2c803e55ff98d999836f196afae7cf91f96f3b6f511e56ba84974",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11950:6:6",
														"type": ""
													}
												],
												"src": "11852:156:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12120:119:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12142:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12150:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12138:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12138:14:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12154:34:6",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12131:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12131:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12131:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12210:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12218:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12206:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12206:15:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12223:8:6",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12199:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12199:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12199:33:6"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12112:6:6",
														"type": ""
													}
												],
												"src": "12014:225:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12351:59:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12373:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12381:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12369:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12369:14:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12385:17:6",
																		"type": "",
																		"value": "Transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12362:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12362:41:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12362:41:6"
														}
													]
												},
												"name": "store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12343:6:6",
														"type": ""
													}
												],
												"src": "12245:165:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12522:64:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12544:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12552:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12540:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12540:14:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12556:22:6",
																		"type": "",
																		"value": "Insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12533:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12533:46:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12533:46:6"
														}
													]
												},
												"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12514:6:6",
														"type": ""
													}
												],
												"src": "12416:170:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12698:75:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12720:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12728:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12716:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12716:14:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12732:33:6",
																		"type": "",
																		"value": "Amount should greater than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12709:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12709:57:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12709:57:6"
														}
													]
												},
												"name": "store_literal_in_memory_7e6097df28dbd6e8fac3ec6a9281335c312bc8a436c798b83190edcb63f5401f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12690:6:6",
														"type": ""
													}
												],
												"src": "12592:181:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12885:76:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12907:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12915:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12903:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12903:14:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12919:34:6",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12896:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12896:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12896:58:6"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12877:6:6",
														"type": ""
													}
												],
												"src": "12779:182:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13073:119:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13095:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13103:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13091:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13091:14:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13107:34:6",
																		"type": "",
																		"value": "The current staking activity has"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13084:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13084:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13084:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13163:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13171:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13159:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13159:15:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13176:8:6",
																		"type": "",
																		"value": " ended"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13152:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13152:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13152:33:6"
														}
													]
												},
												"name": "store_literal_in_memory_bb49972f036ceb7f98bbdcfadc5b5745930b5203ea6a23b47522e300d5db612c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13065:6:6",
														"type": ""
													}
												],
												"src": "12967:225:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13304:75:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13326:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13334:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13322:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13322:14:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13338:33:6",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13315:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13315:57:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13315:57:6"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13296:6:6",
														"type": ""
													}
												],
												"src": "13198:181:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13428:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13485:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13494:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13497:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13487:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13487:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13487:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13451:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13476:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "13458:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13458:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13448:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13448:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13441:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13441:43:6"
															},
															"nodeType": "YulIf",
															"src": "13438:2:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13421:5:6",
														"type": ""
													}
												],
												"src": "13385:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13553:76:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13607:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13616:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13619:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13609:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13609:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13609:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13576:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13598:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "13583:14:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13583:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13573:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13573:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13566:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13566:40:6"
															},
															"nodeType": "YulIf",
															"src": "13563:2:6"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13546:5:6",
														"type": ""
													}
												],
												"src": "13513:116:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13678:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13735:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13744:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13747:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13737:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13737:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13737:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13701:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13726:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "13708:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13708:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13698:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13698:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13691:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13691:43:6"
															},
															"nodeType": "YulIf",
															"src": "13688:2:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13671:5:6",
														"type": ""
													}
												],
												"src": "13635:122:6"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IERC20_$244_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$244_to_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_10bc01d611f2c803e55ff98d999836f196afae7cf91f96f3b6f511e56ba84974_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 6)\n        store_literal_in_memory_10bc01d611f2c803e55ff98d999836f196afae7cf91f96f3b6f511e56ba84974(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_7e6097df28dbd6e8fac3ec6a9281335c312bc8a436c798b83190edcb63f5401f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_7e6097df28dbd6e8fac3ec6a9281335c312bc8a436c798b83190edcb63f5401f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_bb49972f036ceb7f98bbdcfadc5b5745930b5203ea6a23b47522e300d5db612c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_bb49972f036ceb7f98bbdcfadc5b5745930b5203ea6a23b47522e300d5db612c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$244__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$244_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_10bc01d611f2c803e55ff98d999836f196afae7cf91f96f3b6f511e56ba84974__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_10bc01d611f2c803e55ff98d999836f196afae7cf91f96f3b6f511e56ba84974_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_7e6097df28dbd6e8fac3ec6a9281335c312bc8a436c798b83190edcb63f5401f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7e6097df28dbd6e8fac3ec6a9281335c312bc8a436c798b83190edcb63f5401f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_bb49972f036ceb7f98bbdcfadc5b5745930b5203ea6a23b47522e300d5db612c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bb49972f036ceb7f98bbdcfadc5b5745930b5203ea6a23b47522e300d5db612c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IERC20_$244_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IERC20_$244_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$244_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_10bc01d611f2c803e55ff98d999836f196afae7cf91f96f3b6f511e56ba84974(memPtr) {\n\n        mstore(add(memPtr, 0), \"Locked\")\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer failed\")\n\n    }\n\n    function store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance\")\n\n    }\n\n    function store_literal_in_memory_7e6097df28dbd6e8fac3ec6a9281335c312bc8a436c798b83190edcb63f5401f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount should greater than zero\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_bb49972f036ceb7f98bbdcfadc5b5745930b5203ea6a23b47522e300d5db612c(memPtr) {\n\n        mstore(add(memPtr, 0), \"The current staking activity has\")\n\n        mstore(add(memPtr, 32), \" ended\")\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101425760003560e01c80638aee8127116100b8578063c771c3901161007c578063c771c3901461033f578063ee947a7c1461035b578063f2fde38b14610379578063f7c618c114610395578063fc0c546a146103b3578063fc71ae8c146103d157610142565b80638aee8127146102c15780638b0e9f3f146102dd5780638da5cb5b146102fb578063a694fc3a14610319578063b88a802f1461033557610142565b80635d90bad91161010a5780635d90bad9146102115780636abfd1831461022d57806370a082311461024b578063715018a61461027b578063750142e61461028557806380c0976e146102a357610142565b8063154a78b5146101475780631683153d1461016557806345bc78ab14610195578063583d42fd146101c55780635d3eea91146101f5575b600080fd5b61014f6103ed565b60405161015c919061153d565b60405180910390f35b61017f600480360381019061017a91906111e7565b6103f3565b60405161018c919061153d565b60405180910390f35b6101af60048036038101906101aa91906111e7565b61040b565b6040516101bc919061153d565b60405180910390f35b6101df60048036038101906101da91906111e7565b610423565b6040516101ec919061153d565b60405180910390f35b61020f600480360381019061020a9190611239565b61043b565b005b61022b60048036038101906102269190611239565b61070e565b005b610235610720565b604051610242919061153d565b60405180910390f35b610265600480360381019061026091906111e7565b610726565b604051610272919061153d565b60405180910390f35b61028361076f565b005b61028d610783565b60405161029a919061153d565b60405180910390f35b6102ab610789565b6040516102b8919061153d565b60405180910390f35b6102db60048036038101906102d691906111e7565b61078f565b005b6102e56107db565b6040516102f2919061153d565b60405180910390f35b6103036107e1565b60405161031091906113a7565b60405180910390f35b610333600480360381019061032e9190611239565b61080a565b005b61033d610ba2565b005b61035960048036038101906103549190611239565b610de7565b005b610363610df9565b604051610370919061153d565b60405180910390f35b610393600480360381019061038e91906111e7565b610dff565b005b61039d610e83565b6040516103aa9190611422565b60405180910390f35b6103bb610ea9565b6040516103c89190611422565b60405180910390f35b6103eb60048036038101906103e69190611239565b610ecf565b005b60045481565b60096020528060005260406000206000915090505481565b60076020528060005260406000206000915090505481565b60086020528060005260406000206000915090505481565b610443610ee1565b6005546006546104539190611569565b421015610495576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048c9061143d565b60405180910390fd5b80600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610517576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050e9061149d565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016105749291906113f9565b602060405180830381600087803b15801561058e57600080fd5b505af11580156105a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c69190611210565b610605576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105fc9061147d565b60405180910390fd5b61065781600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f3190919063ffffffff16565b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506106af81600a54610f3190919063ffffffff16565b600a819055503373ffffffffffffffffffffffffffffffffffffffff167fb24546d975e2628748efc9aced80665e0fad66272033e5c0ea25fd3afac99795826040516106fb919061153d565b60405180910390a261070b610f47565b50565b610716610f50565b8060068190555050565b60065481565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610777610f50565b6107816000610fce565b565b600b5481565b600c5481565b610797610f50565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600a5481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610812610ee1565b6005546006546108229190611569565b4210610863576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085a906114fd565b60405180910390fd5b600081116108a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089d906114bd565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610905939291906113c2565b602060405180830381600087803b15801561091f57600080fd5b505af1158015610933573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109579190611210565b610996576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098d9061147d565b60405180910390fd5b6109e881600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461109290919063ffffffff16565b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555042600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000610a7b33836110a8565b9050610acf81600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461109290919063ffffffff16565b600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610b2782600a5461109290919063ffffffff16565b600a81905550610b4281600b5461109290919063ffffffff16565b600b819055503373ffffffffffffffffffffffffffffffffffffffff167febedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a83604051610b8e919061153d565b60405180910390a250610b9f610f47565b50565b610baa610ee1565b600554600654610bba9190611569565b421015610bfc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf39061143d565b60405180910390fd5b6000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610c9d9291906113f9565b602060405180830381600087803b158015610cb757600080fd5b505af1158015610ccb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cef9190611210565b610d2e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d259061147d565b60405180910390fd5b6000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610d8881600b54610f3190919063ffffffff16565b600b819055503373ffffffffffffffffffffffffffffffffffffffff167fba8de60c3403ec381d1d484652ea1980e3c3e56359195c92525bff4ce47ad98e82604051610dd4919061153d565b60405180910390a250610de5610f47565b565b610def610f50565b8060058190555050565b60055481565b610e07610f50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610e77576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e6e9061145d565b60405180910390fd5b610e8081610fce565b50565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610ed7610f50565b8060048190555050565b60026001541415610f27576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f1e9061151d565b60405180910390fd5b6002600181905550565b60008183610f3f919061164a565b905092915050565b60018081905550565b610f58611174565b73ffffffffffffffffffffffffffffffffffffffff16610f766107e1565b73ffffffffffffffffffffffffffffffffffffffff1614610fcc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fc3906114dd565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081836110a09190611569565b905092915050565b600080611113600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461110560065460055461109290919063ffffffff16565b610f3190919063ffffffff16565b90506000611167600c546111598461114b60045461113d620f42408b61117c90919063ffffffff16565b61119290919063ffffffff16565b61119290919063ffffffff16565b61117c90919063ffffffff16565b9050809250505092915050565b600033905090565b6000818361118a91906115bf565b905092915050565b600081836111a091906115f0565b905092915050565b6000813590506111b7816118dc565b92915050565b6000815190506111cc816118f3565b92915050565b6000813590506111e18161190a565b92915050565b6000602082840312156111f957600080fd5b6000611207848285016111a8565b91505092915050565b60006020828403121561122257600080fd5b6000611230848285016111bd565b91505092915050565b60006020828403121561124b57600080fd5b6000611259848285016111d2565b91505092915050565b61126b8161167e565b82525050565b61127a816116c6565b82525050565b600061128d600683611558565b915061129882611748565b602082019050919050565b60006112b0602683611558565b91506112bb82611771565b604082019050919050565b60006112d3600f83611558565b91506112de826117c0565b602082019050919050565b60006112f6601483611558565b9150611301826117e9565b602082019050919050565b6000611319601f83611558565b915061132482611812565b602082019050919050565b600061133c602083611558565b91506113478261183b565b602082019050919050565b600061135f602683611558565b915061136a82611864565b604082019050919050565b6000611382601f83611558565b915061138d826118b3565b602082019050919050565b6113a1816116bc565b82525050565b60006020820190506113bc6000830184611262565b92915050565b60006060820190506113d76000830186611262565b6113e46020830185611262565b6113f16040830184611398565b949350505050565b600060408201905061140e6000830185611262565b61141b6020830184611398565b9392505050565b60006020820190506114376000830184611271565b92915050565b6000602082019050818103600083015261145681611280565b9050919050565b60006020820190508181036000830152611476816112a3565b9050919050565b60006020820190508181036000830152611496816112c6565b9050919050565b600060208201905081810360008301526114b6816112e9565b9050919050565b600060208201905081810360008301526114d68161130c565b9050919050565b600060208201905081810360008301526114f68161132f565b9050919050565b6000602082019050818103600083015261151681611352565b9050919050565b6000602082019050818103600083015261153681611375565b9050919050565b60006020820190506115526000830184611398565b92915050565b600082825260208201905092915050565b6000611574826116bc565b915061157f836116bc565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156115b4576115b36116ea565b5b828201905092915050565b60006115ca826116bc565b91506115d5836116bc565b9250826115e5576115e4611719565b5b828204905092915050565b60006115fb826116bc565b9150611606836116bc565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561163f5761163e6116ea565b5b828202905092915050565b6000611655826116bc565b9150611660836116bc565b925082821015611673576116726116ea565b5b828203905092915050565b60006116898261169c565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006116d1826116d8565b9050919050565b60006116e38261169c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4c6f636b65640000000000000000000000000000000000000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b7f416d6f756e742073686f756c642067726561746572207468616e207a65726f00600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f5468652063757272656e74207374616b696e672061637469766974792068617360008201527f20656e6465640000000000000000000000000000000000000000000000000000602082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6118e58161167e565b81146118f057600080fd5b50565b6118fc81611690565b811461190757600080fd5b50565b611913816116bc565b811461191e57600080fd5b5056fea2646970667358221220cdae40424d4768ee123e3d278a06c170ce9dedcb6f508ea500bf9311e12512d364736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x142 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8AEE8127 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xC771C390 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xC771C390 EQ PUSH2 0x33F JUMPI DUP1 PUSH4 0xEE947A7C EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x379 JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x3B3 JUMPI DUP1 PUSH4 0xFC71AE8C EQ PUSH2 0x3D1 JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x8AEE8127 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x8B0E9F3F EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x319 JUMPI DUP1 PUSH4 0xB88A802F EQ PUSH2 0x335 JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x5D90BAD9 GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x5D90BAD9 EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x6ABFD183 EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x27B JUMPI DUP1 PUSH4 0x750142E6 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x80C0976E EQ PUSH2 0x2A3 JUMPI PUSH2 0x142 JUMP JUMPDEST DUP1 PUSH4 0x154A78B5 EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x1683153D EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x45BC78AB EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x583D42FD EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0x5D3EEA91 EQ PUSH2 0x1F5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14F PUSH2 0x3ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x153D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x11E7 JUMP JUMPDEST PUSH2 0x3F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18C SWAP2 SWAP1 PUSH2 0x153D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AA SWAP2 SWAP1 PUSH2 0x11E7 JUMP JUMPDEST PUSH2 0x40B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0x153D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0x11E7 JUMP JUMPDEST PUSH2 0x423 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0x153D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x1239 JUMP JUMPDEST PUSH2 0x43B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x1239 JUMP JUMPDEST PUSH2 0x70E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x235 PUSH2 0x720 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x242 SWAP2 SWAP1 PUSH2 0x153D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x265 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x260 SWAP2 SWAP1 PUSH2 0x11E7 JUMP JUMPDEST PUSH2 0x726 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x153D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x283 PUSH2 0x76F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28D PUSH2 0x783 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x153D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AB PUSH2 0x789 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0x153D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D6 SWAP2 SWAP1 PUSH2 0x11E7 JUMP JUMPDEST PUSH2 0x78F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E5 PUSH2 0x7DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F2 SWAP2 SWAP1 PUSH2 0x153D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x303 PUSH2 0x7E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x310 SWAP2 SWAP1 PUSH2 0x13A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x333 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32E SWAP2 SWAP1 PUSH2 0x1239 JUMP JUMPDEST PUSH2 0x80A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x33D PUSH2 0xBA2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x359 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x354 SWAP2 SWAP1 PUSH2 0x1239 JUMP JUMPDEST PUSH2 0xDE7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x363 PUSH2 0xDF9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x370 SWAP2 SWAP1 PUSH2 0x153D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x393 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38E SWAP2 SWAP1 PUSH2 0x11E7 JUMP JUMPDEST PUSH2 0xDFF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x39D PUSH2 0xE83 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AA SWAP2 SWAP1 PUSH2 0x1422 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BB PUSH2 0xEA9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C8 SWAP2 SWAP1 PUSH2 0x1422 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E6 SWAP2 SWAP1 PUSH2 0x1239 JUMP JUMPDEST PUSH2 0xECF JUMP JUMPDEST STOP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x443 PUSH2 0xEE1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH2 0x453 SWAP2 SWAP1 PUSH2 0x1569 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x495 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48C SWAP1 PUSH2 0x143D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x517 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50E SWAP1 PUSH2 0x149D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x574 SWAP3 SWAP2 SWAP1 PUSH2 0x13F9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x58E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5A2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5C6 SWAP2 SWAP1 PUSH2 0x1210 JUMP JUMPDEST PUSH2 0x605 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5FC SWAP1 PUSH2 0x147D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x657 DUP2 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF31 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x6AF DUP2 PUSH1 0xA SLOAD PUSH2 0xF31 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB24546D975E2628748EFC9ACED80665E0FAD66272033E5C0EA25FD3AFAC99795 DUP3 PUSH1 0x40 MLOAD PUSH2 0x6FB SWAP2 SWAP1 PUSH2 0x153D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x70B PUSH2 0xF47 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x716 PUSH2 0xF50 JUMP JUMPDEST DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x777 PUSH2 0xF50 JUMP JUMPDEST PUSH2 0x781 PUSH1 0x0 PUSH2 0xFCE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH2 0x797 PUSH2 0xF50 JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x812 PUSH2 0xEE1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH2 0x822 SWAP2 SWAP1 PUSH2 0x1569 JUMP JUMPDEST TIMESTAMP LT PUSH2 0x863 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x85A SWAP1 PUSH2 0x14FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x8A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x89D SWAP1 PUSH2 0x14BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x905 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x13C2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x91F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x933 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x957 SWAP2 SWAP1 PUSH2 0x1210 JUMP JUMPDEST PUSH2 0x996 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x98D SWAP1 PUSH2 0x147D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9E8 DUP2 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1092 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0xA7B CALLER DUP4 PUSH2 0x10A8 JUMP JUMPDEST SWAP1 POP PUSH2 0xACF DUP2 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1092 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xB27 DUP3 PUSH1 0xA SLOAD PUSH2 0x1092 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH2 0xB42 DUP2 PUSH1 0xB SLOAD PUSH2 0x1092 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEBEDB8B3C678666E7F36970BC8F57ABF6D8FA2E828C0DA91EA5B75BF68ED101A DUP4 PUSH1 0x40 MLOAD PUSH2 0xB8E SWAP2 SWAP1 PUSH2 0x153D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0xB9F PUSH2 0xF47 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xBAA PUSH2 0xEE1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH2 0xBBA SWAP2 SWAP1 PUSH2 0x1569 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0xBFC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF3 SWAP1 PUSH2 0x143D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC9D SWAP3 SWAP2 SWAP1 PUSH2 0x13F9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCCB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCEF SWAP2 SWAP1 PUSH2 0x1210 JUMP JUMPDEST PUSH2 0xD2E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD25 SWAP1 PUSH2 0x147D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xD88 DUP2 PUSH1 0xB SLOAD PUSH2 0xF31 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBA8DE60C3403EC381D1D484652EA1980E3C3E56359195C92525BFF4CE47AD98E DUP3 PUSH1 0x40 MLOAD PUSH2 0xDD4 SWAP2 SWAP1 PUSH2 0x153D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0xDE5 PUSH2 0xF47 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xDEF PUSH2 0xF50 JUMP JUMPDEST DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xE07 PUSH2 0xF50 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xE77 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE6E SWAP1 PUSH2 0x145D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE80 DUP2 PUSH2 0xFCE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xED7 PUSH2 0xF50 JUMP JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xF27 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF1E SWAP1 PUSH2 0x151D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xF3F SWAP2 SWAP1 PUSH2 0x164A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xF58 PUSH2 0x1174 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF76 PUSH2 0x7E1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFCC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC3 SWAP1 PUSH2 0x14DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x10A0 SWAP2 SWAP1 PUSH2 0x1569 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1113 PUSH1 0x8 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1105 PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH2 0x1092 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xF31 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1167 PUSH1 0xC SLOAD PUSH2 0x1159 DUP5 PUSH2 0x114B PUSH1 0x4 SLOAD PUSH2 0x113D PUSH3 0xF4240 DUP12 PUSH2 0x117C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1192 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1192 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x117C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x118A SWAP2 SWAP1 PUSH2 0x15BF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x11A0 SWAP2 SWAP1 PUSH2 0x15F0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11B7 DUP2 PUSH2 0x18DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x11CC DUP2 PUSH2 0x18F3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11E1 DUP2 PUSH2 0x190A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1207 DUP5 DUP3 DUP6 ADD PUSH2 0x11A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1230 DUP5 DUP3 DUP6 ADD PUSH2 0x11BD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x124B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1259 DUP5 DUP3 DUP6 ADD PUSH2 0x11D2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x126B DUP2 PUSH2 0x167E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x127A DUP2 PUSH2 0x16C6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x128D PUSH1 0x6 DUP4 PUSH2 0x1558 JUMP JUMPDEST SWAP2 POP PUSH2 0x1298 DUP3 PUSH2 0x1748 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12B0 PUSH1 0x26 DUP4 PUSH2 0x1558 JUMP JUMPDEST SWAP2 POP PUSH2 0x12BB DUP3 PUSH2 0x1771 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12D3 PUSH1 0xF DUP4 PUSH2 0x1558 JUMP JUMPDEST SWAP2 POP PUSH2 0x12DE DUP3 PUSH2 0x17C0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12F6 PUSH1 0x14 DUP4 PUSH2 0x1558 JUMP JUMPDEST SWAP2 POP PUSH2 0x1301 DUP3 PUSH2 0x17E9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1319 PUSH1 0x1F DUP4 PUSH2 0x1558 JUMP JUMPDEST SWAP2 POP PUSH2 0x1324 DUP3 PUSH2 0x1812 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x133C PUSH1 0x20 DUP4 PUSH2 0x1558 JUMP JUMPDEST SWAP2 POP PUSH2 0x1347 DUP3 PUSH2 0x183B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x135F PUSH1 0x26 DUP4 PUSH2 0x1558 JUMP JUMPDEST SWAP2 POP PUSH2 0x136A DUP3 PUSH2 0x1864 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1382 PUSH1 0x1F DUP4 PUSH2 0x1558 JUMP JUMPDEST SWAP2 POP PUSH2 0x138D DUP3 PUSH2 0x18B3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13A1 DUP2 PUSH2 0x16BC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13BC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1262 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x13D7 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1262 JUMP JUMPDEST PUSH2 0x13E4 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1262 JUMP JUMPDEST PUSH2 0x13F1 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1398 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x140E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1262 JUMP JUMPDEST PUSH2 0x141B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1398 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1437 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1271 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1456 DUP2 PUSH2 0x1280 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1476 DUP2 PUSH2 0x12A3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1496 DUP2 PUSH2 0x12C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14B6 DUP2 PUSH2 0x12E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14D6 DUP2 PUSH2 0x130C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14F6 DUP2 PUSH2 0x132F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1516 DUP2 PUSH2 0x1352 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1536 DUP2 PUSH2 0x1375 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1552 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1398 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1574 DUP3 PUSH2 0x16BC JUMP JUMPDEST SWAP2 POP PUSH2 0x157F DUP4 PUSH2 0x16BC JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x15B4 JUMPI PUSH2 0x15B3 PUSH2 0x16EA JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15CA DUP3 PUSH2 0x16BC JUMP JUMPDEST SWAP2 POP PUSH2 0x15D5 DUP4 PUSH2 0x16BC JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x15E5 JUMPI PUSH2 0x15E4 PUSH2 0x1719 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15FB DUP3 PUSH2 0x16BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1606 DUP4 PUSH2 0x16BC JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x163F JUMPI PUSH2 0x163E PUSH2 0x16EA JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1655 DUP3 PUSH2 0x16BC JUMP JUMPDEST SWAP2 POP PUSH2 0x1660 DUP4 PUSH2 0x16BC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1673 JUMPI PUSH2 0x1672 PUSH2 0x16EA JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1689 DUP3 PUSH2 0x169C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16D1 DUP3 PUSH2 0x16D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16E3 DUP3 PUSH2 0x169C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4C6F636B65640000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416D6F756E742073686F756C642067726561746572207468616E207A65726F00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5468652063757272656E74207374616B696E6720616374697669747920686173 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20656E6465640000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x18E5 DUP2 PUSH2 0x167E JUMP JUMPDEST DUP2 EQ PUSH2 0x18F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x18FC DUP2 PUSH2 0x1690 JUMP JUMPDEST DUP2 EQ PUSH2 0x1907 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1913 DUP2 PUSH2 0x16BC JUMP JUMPDEST DUP2 EQ PUSH2 0x191E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD 0xAE BLOCKHASH TIMESTAMP 0x4D SELFBALANCE PUSH9 0xEE123E3D278A06C170 0xCE SWAP14 0xED 0xCB PUSH16 0x508EA500BF9311E12512D364736F6C63 NUMBER STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "289:4429:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;517:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;912:48;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;732:49;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;825:46;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2483:464;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4118:128;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;661:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4600:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:0;;;:::i;:::-;;1072:26:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1130:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3958:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1012:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1201:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1701:729:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2973:393;;;:::i;:::-;;4292:112;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;587:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;442:25:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;377:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:120;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;517:29;;;;:::o;912:48::-;;;;;;;;;;;;;;;;;:::o;732:49::-;;;;;;;;;;;;;;;;;:::o;825:46::-;;;;;;;;;;;;;;;;;:::o;2483:464::-;2261:21:1;:19;:21::i;:::-;2596:12:5::1;;2577:16;;:31;;;;:::i;:::-;2557:15;:52;;2549:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;2668:7;2638:14;:26;2653:10;2638:26;;;;;;;;;;;;;;;;:37;;2630:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;2718:5;;;;;;;;;;;:14;;;2733:10;2745:7;2718:35;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2710:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;2812:39;2843:7;2812:14;:26;2827:10;2812:26;;;;;;;;;;;;;;;;:30;;:39;;;;:::i;:::-;2783:14;:26;2798:10;2783:26;;;;;;;;;;;;;;;:68;;;;2874:23;2889:7;2874:10;;:14;;:23;;;;:::i;:::-;2861:10;:36;;;;2920:10;2912:28;;;2932:7;2912:28;;;;;;:::i;:::-;;;;;;;;2303:20:1::0;:18;:20::i;:::-;2483:464:5;:::o;4118:128::-;1094:13:0;:11;:13::i;:::-;4222:17:5::1;4203:16;:36;;;;4118:128:::0;:::o;661:31::-;;;;:::o;4600:116::-;4660:7;4685:14;:24;4700:8;4685:24;;;;;;;;;;;;;;;;4678:31;;4600:116;;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1072:26:5:-;;;;:::o;1130:30::-;;;;:::o;3958:116::-;1094:13:0;:11;:13::i;:::-;4054:12:5::1;4033:11;;:34;;;;;;;;;;;;;;;;;;3958:116:::0;:::o;1012:25::-;;;;:::o;1201:85:0:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;1701:729:5:-;2261:21:1;:19;:21::i;:::-;1810:12:5::1;;1791:16;;:31;;;;:::i;:::-;1773:15;:49;1765:100;;;;;;;;;;;;:::i;:::-;;;;;;;;;1893:1;1883:7;:11;1875:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;1948:5;;;;;;;;;;;:18;;;1967:10;1987:4;1994:7;1948:54;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1940:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;2061:39;2092:7;2061:14;:26;2076:10;2061:26;;;;;;;;;;;;;;;;:30;;:39;;;;:::i;:::-;2032:14;:26;2047:10;2032:26;;;;;;;;;;;;;;;:68;;;;2136:15;2110:11;:23;2122:10;2110:23;;;;;;;;;;;;;;;:41;;;;2161:14;2178:36;2195:10;2206:7;2178:16;:36::i;:::-;2161:53;;2252:37;2282:6;2252:13;:25;2266:10;2252:25;;;;;;;;;;;;;;;;:29;;:37;;;;:::i;:::-;2224:13;:25;2238:10;2224:25;;;;;;;;;;;;;;;:65;;;;2312:23;2327:7;2312:10;;:14;;:23;;;;:::i;:::-;2299:10;:36;;;;2359:23;2375:6;2359:11;;:15;;:23;;;;:::i;:::-;2345:11;:37;;;;2403:10;2397:26;;;2415:7;2397:26;;;;;;:::i;:::-;;;;;;;;2292:1:1;2303:20:::0;:18;:20::i;:::-;1701:729:5;:::o;2973:393::-;2261:21:1;:19;:21::i;:::-;3075:12:5::1;;3056:16;;:31;;;;:::i;:::-;3036:15;:52;;3028:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;3109:14;3126:13;:25;3140:10;3126:25;;;;;;;;;;;;;;;;3109:42;;3169:11;;;;;;;;;;;:20;;;3190:10;3202:6;3169:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3161:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;3265:1;3239:13;:25;3253:10;3239:25;;;;;;;;;;;;;;;:27;;;;3290:23;3306:6;3290:11;;:15;;:23;;;;:::i;:::-;3276:11;:37;;;;3340:10;3328:31;;;3352:6;3328:31;;;;;;:::i;:::-;;;;;;;;2292:1:1;2303:20:::0;:18;:20::i;:::-;2973:393:5:o;4292:112::-;1094:13:0;:11;:13::i;:::-;4384::5::1;4369:12;:28;;;;4292:112:::0;:::o;587:27::-;;;;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;;;2161:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;442:25:5:-;;;;;;;;;;;;;:::o;377:19::-;;;;;;;;;;;;;:::o;4444:120::-;1094:13:0;:11;:13::i;:::-;4542:15:5::1;4525:14;:32;;;;4444:120:::0;:::o;2336:287:1:-;1759:1;2468:7;;:19;;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;3122:96:4:-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;2629:209:1:-;1716:1;2809:7;:22;;;;2629:209::o;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2433:187;;:::o;2755:96:4:-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;3428:492:5:-;3510:7;3529:28;3560:62;3601:11;:20;3613:7;3601:20;;;;;;;;;;;;;;;;3561:34;3578:16;;3561:12;;:16;;:34;;;;:::i;:::-;3560:40;;:62;;;;:::i;:::-;3529:93;;3798:14;3815:75;3882:7;;3815:62;3856:20;3815:36;3836:14;;3815:16;3827:3;3815:7;:11;;:16;;;;:::i;:::-;:20;;:36;;;;:::i;:::-;:40;;:62;;;;:::i;:::-;:66;;:75;;;;:::i;:::-;3798:92;;3907:6;3900:13;;;;3428:492;;;;:::o;640:96:3:-;693:7;719:10;712:17;;640:96;:::o;3850::4:-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;3465:::-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;7:139:6:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:137::-;206:5;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;212:77;;;;:::o;295:139::-;341:5;379:6;366:20;357:29;;395:33;422:5;395:33;:::i;:::-;347:87;;;;:::o;440:262::-;499:6;548:2;536:9;527:7;523:23;519:32;516:2;;;564:1;561;554:12;516:2;607:1;632:53;677:7;668:6;657:9;653:22;632:53;:::i;:::-;622:63;;578:117;506:196;;;;:::o;708:278::-;775:6;824:2;812:9;803:7;799:23;795:32;792:2;;;840:1;837;830:12;792:2;883:1;908:61;961:7;952:6;941:9;937:22;908:61;:::i;:::-;898:71;;854:125;782:204;;;;:::o;992:262::-;1051:6;1100:2;1088:9;1079:7;1075:23;1071:32;1068:2;;;1116:1;1113;1106:12;1068:2;1159:1;1184:53;1229:7;1220:6;1209:9;1205:22;1184:53;:::i;:::-;1174:63;;1130:117;1058:196;;;;:::o;1260:118::-;1347:24;1365:5;1347:24;:::i;:::-;1342:3;1335:37;1325:53;;:::o;1384:159::-;1485:51;1530:5;1485:51;:::i;:::-;1480:3;1473:64;1463:80;;:::o;1549:365::-;1691:3;1712:66;1776:1;1771:3;1712:66;:::i;:::-;1705:73;;1787:93;1876:3;1787:93;:::i;:::-;1905:2;1900:3;1896:12;1889:19;;1695:219;;;:::o;1920:366::-;2062:3;2083:67;2147:2;2142:3;2083:67;:::i;:::-;2076:74;;2159:93;2248:3;2159:93;:::i;:::-;2277:2;2272:3;2268:12;2261:19;;2066:220;;;:::o;2292:366::-;2434:3;2455:67;2519:2;2514:3;2455:67;:::i;:::-;2448:74;;2531:93;2620:3;2531:93;:::i;:::-;2649:2;2644:3;2640:12;2633:19;;2438:220;;;:::o;2664:366::-;2806:3;2827:67;2891:2;2886:3;2827:67;:::i;:::-;2820:74;;2903:93;2992:3;2903:93;:::i;:::-;3021:2;3016:3;3012:12;3005:19;;2810:220;;;:::o;3036:366::-;3178:3;3199:67;3263:2;3258:3;3199:67;:::i;:::-;3192:74;;3275:93;3364:3;3275:93;:::i;:::-;3393:2;3388:3;3384:12;3377:19;;3182:220;;;:::o;3408:366::-;3550:3;3571:67;3635:2;3630:3;3571:67;:::i;:::-;3564:74;;3647:93;3736:3;3647:93;:::i;:::-;3765:2;3760:3;3756:12;3749:19;;3554:220;;;:::o;3780:366::-;3922:3;3943:67;4007:2;4002:3;3943:67;:::i;:::-;3936:74;;4019:93;4108:3;4019:93;:::i;:::-;4137:2;4132:3;4128:12;4121:19;;3926:220;;;:::o;4152:366::-;4294:3;4315:67;4379:2;4374:3;4315:67;:::i;:::-;4308:74;;4391:93;4480:3;4391:93;:::i;:::-;4509:2;4504:3;4500:12;4493:19;;4298:220;;;:::o;4524:118::-;4611:24;4629:5;4611:24;:::i;:::-;4606:3;4599:37;4589:53;;:::o;4648:222::-;4741:4;4779:2;4768:9;4764:18;4756:26;;4792:71;4860:1;4849:9;4845:17;4836:6;4792:71;:::i;:::-;4746:124;;;;:::o;4876:442::-;5025:4;5063:2;5052:9;5048:18;5040:26;;5076:71;5144:1;5133:9;5129:17;5120:6;5076:71;:::i;:::-;5157:72;5225:2;5214:9;5210:18;5201:6;5157:72;:::i;:::-;5239;5307:2;5296:9;5292:18;5283:6;5239:72;:::i;:::-;5030:288;;;;;;:::o;5324:332::-;5445:4;5483:2;5472:9;5468:18;5460:26;;5496:71;5564:1;5553:9;5549:17;5540:6;5496:71;:::i;:::-;5577:72;5645:2;5634:9;5630:18;5621:6;5577:72;:::i;:::-;5450:206;;;;;:::o;5662:250::-;5769:4;5807:2;5796:9;5792:18;5784:26;;5820:85;5902:1;5891:9;5887:17;5878:6;5820:85;:::i;:::-;5774:138;;;;:::o;5918:419::-;6084:4;6122:2;6111:9;6107:18;6099:26;;6171:9;6165:4;6161:20;6157:1;6146:9;6142:17;6135:47;6199:131;6325:4;6199:131;:::i;:::-;6191:139;;6089:248;;;:::o;6343:419::-;6509:4;6547:2;6536:9;6532:18;6524:26;;6596:9;6590:4;6586:20;6582:1;6571:9;6567:17;6560:47;6624:131;6750:4;6624:131;:::i;:::-;6616:139;;6514:248;;;:::o;6768:419::-;6934:4;6972:2;6961:9;6957:18;6949:26;;7021:9;7015:4;7011:20;7007:1;6996:9;6992:17;6985:47;7049:131;7175:4;7049:131;:::i;:::-;7041:139;;6939:248;;;:::o;7193:419::-;7359:4;7397:2;7386:9;7382:18;7374:26;;7446:9;7440:4;7436:20;7432:1;7421:9;7417:17;7410:47;7474:131;7600:4;7474:131;:::i;:::-;7466:139;;7364:248;;;:::o;7618:419::-;7784:4;7822:2;7811:9;7807:18;7799:26;;7871:9;7865:4;7861:20;7857:1;7846:9;7842:17;7835:47;7899:131;8025:4;7899:131;:::i;:::-;7891:139;;7789:248;;;:::o;8043:419::-;8209:4;8247:2;8236:9;8232:18;8224:26;;8296:9;8290:4;8286:20;8282:1;8271:9;8267:17;8260:47;8324:131;8450:4;8324:131;:::i;:::-;8316:139;;8214:248;;;:::o;8468:419::-;8634:4;8672:2;8661:9;8657:18;8649:26;;8721:9;8715:4;8711:20;8707:1;8696:9;8692:17;8685:47;8749:131;8875:4;8749:131;:::i;:::-;8741:139;;8639:248;;;:::o;8893:419::-;9059:4;9097:2;9086:9;9082:18;9074:26;;9146:9;9140:4;9136:20;9132:1;9121:9;9117:17;9110:47;9174:131;9300:4;9174:131;:::i;:::-;9166:139;;9064:248;;;:::o;9318:222::-;9411:4;9449:2;9438:9;9434:18;9426:26;;9462:71;9530:1;9519:9;9515:17;9506:6;9462:71;:::i;:::-;9416:124;;;;:::o;9546:169::-;9630:11;9664:6;9659:3;9652:19;9704:4;9699:3;9695:14;9680:29;;9642:73;;;;:::o;9721:305::-;9761:3;9780:20;9798:1;9780:20;:::i;:::-;9775:25;;9814:20;9832:1;9814:20;:::i;:::-;9809:25;;9968:1;9900:66;9896:74;9893:1;9890:81;9887:2;;;9974:18;;:::i;:::-;9887:2;10018:1;10015;10011:9;10004:16;;9765:261;;;;:::o;10032:185::-;10072:1;10089:20;10107:1;10089:20;:::i;:::-;10084:25;;10123:20;10141:1;10123:20;:::i;:::-;10118:25;;10162:1;10152:2;;10167:18;;:::i;:::-;10152:2;10209:1;10206;10202:9;10197:14;;10074:143;;;;:::o;10223:348::-;10263:7;10286:20;10304:1;10286:20;:::i;:::-;10281:25;;10320:20;10338:1;10320:20;:::i;:::-;10315:25;;10508:1;10440:66;10436:74;10433:1;10430:81;10425:1;10418:9;10411:17;10407:105;10404:2;;;10515:18;;:::i;:::-;10404:2;10563:1;10560;10556:9;10545:20;;10271:300;;;;:::o;10577:191::-;10617:4;10637:20;10655:1;10637:20;:::i;:::-;10632:25;;10671:20;10689:1;10671:20;:::i;:::-;10666:25;;10710:1;10707;10704:8;10701:2;;;10715:18;;:::i;:::-;10701:2;10760:1;10757;10753:9;10745:17;;10622:146;;;;:::o;10774:96::-;10811:7;10840:24;10858:5;10840:24;:::i;:::-;10829:35;;10819:51;;;:::o;10876:90::-;10910:7;10953:5;10946:13;10939:21;10928:32;;10918:48;;;:::o;10972:126::-;11009:7;11049:42;11042:5;11038:54;11027:65;;11017:81;;;:::o;11104:77::-;11141:7;11170:5;11159:16;;11149:32;;;:::o;11187:154::-;11251:9;11284:51;11329:5;11284:51;:::i;:::-;11271:64;;11261:80;;;:::o;11347:127::-;11411:9;11444:24;11462:5;11444:24;:::i;:::-;11431:37;;11421:53;;;:::o;11480:180::-;11528:77;11525:1;11518:88;11625:4;11622:1;11615:15;11649:4;11646:1;11639:15;11666:180;11714:77;11711:1;11704:88;11811:4;11808:1;11801:15;11835:4;11832:1;11825:15;11852:156;11992:8;11988:1;11980:6;11976:14;11969:32;11958:50;:::o;12014:225::-;12154:34;12150:1;12142:6;12138:14;12131:58;12223:8;12218:2;12210:6;12206:15;12199:33;12120:119;:::o;12245:165::-;12385:17;12381:1;12373:6;12369:14;12362:41;12351:59;:::o;12416:170::-;12556:22;12552:1;12544:6;12540:14;12533:46;12522:64;:::o;12592:181::-;12732:33;12728:1;12720:6;12716:14;12709:57;12698:75;:::o;12779:182::-;12919:34;12915:1;12907:6;12903:14;12896:58;12885:76;:::o;12967:225::-;13107:34;13103:1;13095:6;13091:14;13084:58;13176:8;13171:2;13163:6;13159:15;13152:33;13073:119;:::o;13198:181::-;13338:33;13334:1;13326:6;13322:14;13315:57;13304:75;:::o;13385:122::-;13458:24;13476:5;13458:24;:::i;:::-;13451:5;13448:35;13438:2;;13497:1;13494;13487:12;13438:2;13428:79;:::o;13513:116::-;13583:21;13598:5;13583:21;:::i;:::-;13576:5;13573:32;13563:2;;13619:1;13616;13609:12;13563:2;13553:76;:::o;13635:122::-;13708:24;13726:5;13708:24;:::i;:::-;13701:5;13698:35;13688:2;;13747:1;13744;13737:12;13688:2;13678:79;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1297400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address)": "1608",
								"claimReward()": "infinite",
								"dayTime()": "1262",
								"lockupPeriod()": "1173",
								"owner()": "1289",
								"renounceOwnership()": "24487",
								"rewardRateInit()": "1153",
								"rewardToken()": "1345",
								"setLockupPeriod(uint256)": "21406",
								"setRewardRateInit(uint256)": "21516",
								"setRewardToken(address)": "22309",
								"setStakingStartTime(uint256)": "21407",
								"stake(uint256)": "infinite",
								"stakingBalance(address)": "1582",
								"stakingReward(address)": "1560",
								"stakingStartTime()": "1174",
								"stakingTime(address)": "1604",
								"token()": "1367",
								"totalReward()": "1240",
								"totalStake()": "1174",
								"transferOwnership(address)": "24813",
								"unStake(uint256)": "infinite"
							},
							"internal": {
								"getRewardForUser(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 289,
									"end": 4718,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 289,
									"end": 4718,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 289,
									"end": 4718,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1155,
									"end": 1160,
									"name": "PUSH",
									"source": 5,
									"value": "15180"
								},
								{
									"begin": 1130,
									"end": 1160,
									"name": "PUSH",
									"source": 5,
									"value": "C"
								},
								{
									"begin": 1130,
									"end": 1160,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1493,
									"end": 1499,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1478,
									"end": 1483,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1478,
									"end": 1483,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1478,
									"end": 1500,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 1478,
									"end": 1500,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 1478,
									"end": 1500,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1478,
									"end": 1500,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1478,
									"end": 1500,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1478,
									"end": 1500,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1478,
									"end": 1500,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1478,
									"end": 1500,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 1478,
									"end": 1500,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1478,
									"end": 1500,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1478,
									"end": 1500,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1478,
									"end": 1500,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1478,
									"end": 1500,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1478,
									"end": 1500,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1478,
									"end": 1500,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1478,
									"end": 1500,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1478,
									"end": 1500,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1478,
									"end": 1500,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1531,
									"end": 1543,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1510,
									"end": 1521,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1510,
									"end": 1521,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1510,
									"end": 1544,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 1510,
									"end": 1544,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 1510,
									"end": 1544,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1510,
									"end": 1544,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1510,
									"end": 1544,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1510,
									"end": 1544,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1510,
									"end": 1544,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1510,
									"end": 1544,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 1510,
									"end": 1544,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1510,
									"end": 1544,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1510,
									"end": 1544,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1510,
									"end": 1544,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1510,
									"end": 1544,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1510,
									"end": 1544,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1510,
									"end": 1544,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1510,
									"end": 1544,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1510,
									"end": 1544,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1510,
									"end": 1544,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1571,
									"end": 1586,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1554,
									"end": 1568,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1554,
									"end": 1586,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1554,
									"end": 1586,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1554,
									"end": 1586,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1554,
									"end": 1586,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1611,
									"end": 1624,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1596,
									"end": 1608,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 1596,
									"end": 1624,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1596,
									"end": 1624,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1596,
									"end": 1624,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1596,
									"end": 1624,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1653,
									"end": 1668,
									"name": "TIMESTAMP",
									"source": 5
								},
								{
									"begin": 1634,
									"end": 1650,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 1634,
									"end": 1668,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1634,
									"end": 1668,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1634,
									"end": 1668,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1634,
									"end": 1668,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 289,
									"end": 4718,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 289,
									"end": 4718,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2550,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2604,
									"end": 2612,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2594,
									"end": 2602,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 64,
									"end": 69,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 70,
									"end": 150,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 70,
									"end": 150,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 70,
									"end": 150,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 70,
									"end": 150,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 70,
									"end": 150,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 299,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 156,
									"end": 299,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 213,
									"end": 218,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 250,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 238,
									"end": 251,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 229,
									"end": 251,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 229,
									"end": 251,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 260,
									"end": 293,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 287,
									"end": 292,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 260,
									"end": 293,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 260,
									"end": 293,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 260,
									"end": 293,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 260,
									"end": 293,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 219,
									"end": 299,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 219,
									"end": 299,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 219,
									"end": 299,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 219,
									"end": 299,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 219,
									"end": 299,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 305,
									"end": 1058,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 305,
									"end": 1058,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 402,
									"end": 408,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 410,
									"end": 416,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 418,
									"end": 424,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 426,
									"end": 432,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 475,
									"end": 478,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 463,
									"end": 472,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 454,
									"end": 461,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 450,
									"end": 473,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 446,
									"end": 479,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 443,
									"end": 445,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 443,
									"end": 445,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 443,
									"end": 445,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 492,
									"end": 493,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 489,
									"end": 490,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 482,
									"end": 494,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 443,
									"end": 445,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 443,
									"end": 445,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 535,
									"end": 536,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 560,
									"end": 624,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 616,
									"end": 623,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 607,
									"end": 613,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 596,
									"end": 605,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 592,
									"end": 614,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 560,
									"end": 624,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 560,
									"end": 624,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 560,
									"end": 624,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 560,
									"end": 624,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 550,
									"end": 624,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 550,
									"end": 624,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 506,
									"end": 634,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 673,
									"end": 675,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 699,
									"end": 763,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 755,
									"end": 762,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 746,
									"end": 752,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 735,
									"end": 744,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 731,
									"end": 753,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 699,
									"end": 763,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 699,
									"end": 763,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 699,
									"end": 763,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 699,
									"end": 763,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 689,
									"end": 763,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 689,
									"end": 763,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 644,
									"end": 773,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 812,
									"end": 814,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 838,
									"end": 902,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 894,
									"end": 901,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 885,
									"end": 891,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 874,
									"end": 883,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 870,
									"end": 892,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 838,
									"end": 902,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 838,
									"end": 902,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 838,
									"end": 902,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 838,
									"end": 902,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 828,
									"end": 902,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 828,
									"end": 902,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 783,
									"end": 912,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 951,
									"end": 953,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 977,
									"end": 1041,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 1033,
									"end": 1040,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 1024,
									"end": 1030,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1013,
									"end": 1022,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 1009,
									"end": 1031,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 977,
									"end": 1041,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 977,
									"end": 1041,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 977,
									"end": 1041,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 977,
									"end": 1041,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 967,
									"end": 1041,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 967,
									"end": 1041,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 922,
									"end": 1051,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 433,
									"end": 1058,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 433,
									"end": 1058,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 433,
									"end": 1058,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 433,
									"end": 1058,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 433,
									"end": 1058,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 433,
									"end": 1058,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 433,
									"end": 1058,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 433,
									"end": 1058,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 1064,
									"end": 1160,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 1064,
									"end": 1160,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1101,
									"end": 1108,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1130,
									"end": 1154,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 1148,
									"end": 1153,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1130,
									"end": 1154,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 1130,
									"end": 1154,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 1130,
									"end": 1154,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 1130,
									"end": 1154,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1119,
									"end": 1154,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1119,
									"end": 1154,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1109,
									"end": 1160,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1109,
									"end": 1160,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1109,
									"end": 1160,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1109,
									"end": 1160,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 1166,
									"end": 1292,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 1166,
									"end": 1292,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1203,
									"end": 1210,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1243,
									"end": 1285,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1236,
									"end": 1241,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1232,
									"end": 1286,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1221,
									"end": 1286,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1221,
									"end": 1286,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1211,
									"end": 1292,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1211,
									"end": 1292,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1211,
									"end": 1292,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1211,
									"end": 1292,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 1298,
									"end": 1375,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 1298,
									"end": 1375,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1335,
									"end": 1342,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1364,
									"end": 1369,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1353,
									"end": 1369,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1353,
									"end": 1369,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1343,
									"end": 1375,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1343,
									"end": 1375,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1343,
									"end": 1375,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1343,
									"end": 1375,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 1381,
									"end": 1503,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1381,
									"end": 1503,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1454,
									"end": 1478,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1472,
									"end": 1477,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1454,
									"end": 1478,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 1454,
									"end": 1478,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 1454,
									"end": 1478,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1454,
									"end": 1478,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1447,
									"end": 1452,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1444,
									"end": 1479,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1436,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1434,
									"end": 1436,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1493,
									"end": 1494,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1490,
									"end": 1491,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1483,
									"end": 1495,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1436,
									"name": "tag",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1434,
									"end": 1436,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1424,
									"end": 1503,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1424,
									"end": 1503,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 1509,
									"end": 1631,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 1509,
									"end": 1631,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1606,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 1600,
									"end": 1605,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1606,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 1582,
									"end": 1606,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 1582,
									"end": 1606,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 1582,
									"end": 1606,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1575,
									"end": 1580,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1572,
									"end": 1607,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 1562,
									"end": 1564,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 1562,
									"end": 1564,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1621,
									"end": 1622,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1618,
									"end": 1619,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1611,
									"end": 1623,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1562,
									"end": 1564,
									"name": "tag",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 1562,
									"end": 1564,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1552,
									"end": 1631,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1552,
									"end": 1631,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 289,
									"end": 4718,
									"name": "tag",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 289,
									"end": 4718,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 289,
									"end": 4718,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 289,
									"end": 4718,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 289,
									"end": 4718,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 289,
									"end": 4718,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 289,
									"end": 4718,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 289,
									"end": 4718,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 289,
									"end": 4718,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cdae40424d4768ee123e3d278a06c170ce9dedcb6f508ea500bf9311e12512d364736f6c63430008040033",
									".code": [
										{
											"begin": 289,
											"end": 4718,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "PUSH",
											"source": 5,
											"value": "8AEE8127"
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "PUSH",
											"source": 5,
											"value": "C771C390"
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "PUSH",
											"source": 5,
											"value": "C771C390"
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "PUSH",
											"source": 5,
											"value": "EE947A7C"
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "PUSH",
											"source": 5,
											"value": "F2FDE38B"
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "PUSH",
											"source": 5,
											"value": "F7C618C1"
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "PUSH",
											"source": 5,
											"value": "FC0C546A"
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "PUSH",
											"source": 5,
											"value": "FC71AE8C"
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "PUSH",
											"source": 5,
											"value": "8AEE8127"
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "PUSH",
											"source": 5,
											"value": "8B0E9F3F"
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "PUSH",
											"source": 5,
											"value": "8DA5CB5B"
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "PUSH",
											"source": 5,
											"value": "A694FC3A"
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "PUSH",
											"source": 5,
											"value": "B88A802F"
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "PUSH",
											"source": 5,
											"value": "5D90BAD9"
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "PUSH",
											"source": 5,
											"value": "5D90BAD9"
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "PUSH",
											"source": 5,
											"value": "6ABFD183"
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "PUSH",
											"source": 5,
											"value": "715018A6"
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "PUSH",
											"source": 5,
											"value": "750142E6"
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "PUSH",
											"source": 5,
											"value": "80C0976E"
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "PUSH",
											"source": 5,
											"value": "154A78B5"
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "PUSH",
											"source": 5,
											"value": "1683153D"
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "PUSH",
											"source": 5,
											"value": "45BC78AB"
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "PUSH",
											"source": 5,
											"value": "583D42FD"
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "PUSH",
											"source": 5,
											"value": "5D3EEA91"
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4718,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 517,
											"end": 546,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 517,
											"end": 546,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 517,
											"end": 546,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 517,
											"end": 546,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 517,
											"end": 546,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 517,
											"end": 546,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 517,
											"end": 546,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 517,
											"end": 546,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 517,
											"end": 546,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 517,
											"end": 546,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 517,
											"end": 546,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 517,
											"end": 546,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 517,
											"end": 546,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 517,
											"end": 546,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 517,
											"end": 546,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 517,
											"end": 546,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 517,
											"end": 546,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 517,
											"end": 546,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 517,
											"end": 546,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 517,
											"end": 546,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 517,
											"end": 546,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 517,
											"end": 546,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 517,
											"end": 546,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 912,
											"end": 960,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 912,
											"end": 960,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 912,
											"end": 960,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 912,
											"end": 960,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 912,
											"end": 960,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 912,
											"end": 960,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 912,
											"end": 960,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 912,
											"end": 960,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 912,
											"end": 960,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 912,
											"end": 960,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 912,
											"end": 960,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 912,
											"end": 960,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 912,
											"end": 960,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 912,
											"end": 960,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 912,
											"end": 960,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 912,
											"end": 960,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 912,
											"end": 960,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 912,
											"end": 960,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 912,
											"end": 960,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 912,
											"end": 960,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 912,
											"end": 960,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 912,
											"end": 960,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 912,
											"end": 960,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 912,
											"end": 960,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 912,
											"end": 960,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 912,
											"end": 960,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 912,
											"end": 960,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 912,
											"end": 960,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 912,
											"end": 960,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 912,
											"end": 960,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 912,
											"end": 960,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 912,
											"end": 960,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 912,
											"end": 960,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 912,
											"end": 960,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 912,
											"end": 960,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 912,
											"end": 960,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 912,
											"end": 960,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 732,
											"end": 781,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 732,
											"end": 781,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 732,
											"end": 781,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 732,
											"end": 781,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 732,
											"end": 781,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 732,
											"end": 781,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 732,
											"end": 781,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 732,
											"end": 781,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 732,
											"end": 781,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 732,
											"end": 781,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 732,
											"end": 781,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 732,
											"end": 781,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 732,
											"end": 781,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 732,
											"end": 781,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 732,
											"end": 781,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 732,
											"end": 781,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 732,
											"end": 781,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 732,
											"end": 781,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 732,
											"end": 781,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 732,
											"end": 781,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 732,
											"end": 781,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 732,
											"end": 781,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 781,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 732,
											"end": 781,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 781,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 732,
											"end": 781,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 732,
											"end": 781,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 732,
											"end": 781,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 732,
											"end": 781,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 781,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 732,
											"end": 781,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 781,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 732,
											"end": 781,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 732,
											"end": 781,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 732,
											"end": 781,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 732,
											"end": 781,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 732,
											"end": 781,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 825,
											"end": 871,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 825,
											"end": 871,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 825,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 825,
											"end": 871,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 825,
											"end": 871,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 825,
											"end": 871,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 825,
											"end": 871,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 825,
											"end": 871,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 825,
											"end": 871,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 825,
											"end": 871,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 825,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 825,
											"end": 871,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 825,
											"end": 871,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 825,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 825,
											"end": 871,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 825,
											"end": 871,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 825,
											"end": 871,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 825,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 825,
											"end": 871,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 825,
											"end": 871,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 825,
											"end": 871,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 825,
											"end": 871,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 825,
											"end": 871,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 825,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 825,
											"end": 871,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 825,
											"end": 871,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 825,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 825,
											"end": 871,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 825,
											"end": 871,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 825,
											"end": 871,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 825,
											"end": 871,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 825,
											"end": 871,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 825,
											"end": 871,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 825,
											"end": 871,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 825,
											"end": 871,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 825,
											"end": 871,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 825,
											"end": 871,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2483,
											"end": 2947,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 2483,
											"end": 2947,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2483,
											"end": 2947,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 2483,
											"end": 2947,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2483,
											"end": 2947,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2483,
											"end": 2947,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2483,
											"end": 2947,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2483,
											"end": 2947,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2483,
											"end": 2947,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2483,
											"end": 2947,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2483,
											"end": 2947,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 2483,
											"end": 2947,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2483,
											"end": 2947,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2483,
											"end": 2947,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 2483,
											"end": 2947,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2483,
											"end": 2947,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 2483,
											"end": 2947,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2483,
											"end": 2947,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 2483,
											"end": 2947,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2483,
											"end": 2947,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 2483,
											"end": 2947,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2483,
											"end": 2947,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 4118,
											"end": 4246,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 4118,
											"end": 4246,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4118,
											"end": 4246,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 4118,
											"end": 4246,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4118,
											"end": 4246,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4118,
											"end": 4246,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4118,
											"end": 4246,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4118,
											"end": 4246,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4118,
											"end": 4246,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4118,
											"end": 4246,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4118,
											"end": 4246,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 4118,
											"end": 4246,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4118,
											"end": 4246,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4118,
											"end": 4246,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 4118,
											"end": 4246,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4118,
											"end": 4246,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 4118,
											"end": 4246,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4118,
											"end": 4246,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 4118,
											"end": 4246,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4118,
											"end": 4246,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 4118,
											"end": 4246,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4118,
											"end": 4246,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 661,
											"end": 692,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 661,
											"end": 692,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 661,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 661,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 661,
											"end": 692,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 661,
											"end": 692,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 661,
											"end": 692,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 661,
											"end": 692,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 661,
											"end": 692,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 661,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 661,
											"end": 692,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 661,
											"end": 692,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 661,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 661,
											"end": 692,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 661,
											"end": 692,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 661,
											"end": 692,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 661,
											"end": 692,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 661,
											"end": 692,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 661,
											"end": 692,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 661,
											"end": 692,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 661,
											"end": 692,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 661,
											"end": 692,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 661,
											"end": 692,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 4600,
											"end": 4716,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 4600,
											"end": 4716,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4600,
											"end": 4716,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 4600,
											"end": 4716,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4600,
											"end": 4716,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4600,
											"end": 4716,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4600,
											"end": 4716,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4600,
											"end": 4716,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4600,
											"end": 4716,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4600,
											"end": 4716,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4600,
											"end": 4716,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 4600,
											"end": 4716,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4600,
											"end": 4716,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4600,
											"end": 4716,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 4600,
											"end": 4716,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4600,
											"end": 4716,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 4600,
											"end": 4716,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4600,
											"end": 4716,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 4600,
											"end": 4716,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4600,
											"end": 4716,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 4600,
											"end": 4716,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4600,
											"end": 4716,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4600,
											"end": 4716,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4600,
											"end": 4716,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 4600,
											"end": 4716,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4600,
											"end": 4716,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4600,
											"end": 4716,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 4600,
											"end": 4716,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4600,
											"end": 4716,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 4600,
											"end": 4716,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4600,
											"end": 4716,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4600,
											"end": 4716,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4600,
											"end": 4716,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4600,
											"end": 4716,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4600,
											"end": 4716,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4600,
											"end": 4716,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4600,
											"end": 4716,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1072,
											"end": 1098,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 1072,
											"end": 1098,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1072,
											"end": 1098,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 1072,
											"end": 1098,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 1072,
											"end": 1098,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1072,
											"end": 1098,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 1072,
											"end": 1098,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1072,
											"end": 1098,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1072,
											"end": 1098,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1072,
											"end": 1098,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 1072,
											"end": 1098,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1072,
											"end": 1098,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1072,
											"end": 1098,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1072,
											"end": 1098,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1072,
											"end": 1098,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 1072,
											"end": 1098,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1072,
											"end": 1098,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1072,
											"end": 1098,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1072,
											"end": 1098,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1072,
											"end": 1098,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1072,
											"end": 1098,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1072,
											"end": 1098,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1072,
											"end": 1098,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3958,
											"end": 4074,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 3958,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3958,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 3958,
											"end": 4074,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3958,
											"end": 4074,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3958,
											"end": 4074,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3958,
											"end": 4074,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3958,
											"end": 4074,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3958,
											"end": 4074,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3958,
											"end": 4074,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3958,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 3958,
											"end": 4074,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3958,
											"end": 4074,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3958,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 3958,
											"end": 4074,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3958,
											"end": 4074,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 3958,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3958,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 3958,
											"end": 4074,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3958,
											"end": 4074,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 3958,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3958,
											"end": 4074,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1012,
											"end": 1037,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 1012,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1012,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 1012,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 1012,
											"end": 1037,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1012,
											"end": 1037,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 1012,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1012,
											"end": 1037,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1012,
											"end": 1037,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1012,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1012,
											"end": 1037,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1012,
											"end": 1037,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1012,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1012,
											"end": 1037,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1012,
											"end": 1037,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1012,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1012,
											"end": 1037,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1012,
											"end": 1037,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1012,
											"end": 1037,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1012,
											"end": 1037,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1012,
											"end": 1037,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1012,
											"end": 1037,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1012,
											"end": 1037,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1701,
											"end": 2430,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 1701,
											"end": 2430,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1701,
											"end": 2430,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 1701,
											"end": 2430,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1701,
											"end": 2430,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1701,
											"end": 2430,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1701,
											"end": 2430,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1701,
											"end": 2430,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1701,
											"end": 2430,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1701,
											"end": 2430,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1701,
											"end": 2430,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 1701,
											"end": 2430,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1701,
											"end": 2430,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1701,
											"end": 2430,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 1701,
											"end": 2430,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1701,
											"end": 2430,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 1701,
											"end": 2430,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1701,
											"end": 2430,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 1701,
											"end": 2430,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1701,
											"end": 2430,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 1701,
											"end": 2430,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1701,
											"end": 2430,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 2973,
											"end": 3366,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 2973,
											"end": 3366,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2973,
											"end": 3366,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 2973,
											"end": 3366,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 2973,
											"end": 3366,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2973,
											"end": 3366,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 2973,
											"end": 3366,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2973,
											"end": 3366,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 4292,
											"end": 4404,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 4292,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4292,
											"end": 4404,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 4292,
											"end": 4404,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4292,
											"end": 4404,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4292,
											"end": 4404,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4292,
											"end": 4404,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4292,
											"end": 4404,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4292,
											"end": 4404,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4292,
											"end": 4404,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4292,
											"end": 4404,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 4292,
											"end": 4404,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4292,
											"end": 4404,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4292,
											"end": 4404,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 4292,
											"end": 4404,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4292,
											"end": 4404,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 4292,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4292,
											"end": 4404,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4292,
											"end": 4404,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4292,
											"end": 4404,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 4292,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4292,
											"end": 4404,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 587,
											"end": 614,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 587,
											"end": 614,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 587,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 587,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 587,
											"end": 614,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 587,
											"end": 614,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 587,
											"end": 614,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 587,
											"end": 614,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 587,
											"end": 614,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 587,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 587,
											"end": 614,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 587,
											"end": 614,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 587,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 587,
											"end": 614,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 587,
											"end": 614,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 587,
											"end": 614,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 587,
											"end": 614,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 587,
											"end": 614,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 587,
											"end": 614,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 587,
											"end": 614,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 587,
											"end": 614,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 587,
											"end": 614,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 587,
											"end": 614,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 442,
											"end": 467,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 442,
											"end": 467,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 442,
											"end": 467,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 442,
											"end": 467,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 442,
											"end": 467,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 442,
											"end": 467,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 442,
											"end": 467,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 442,
											"end": 467,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 442,
											"end": 467,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 442,
											"end": 467,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 442,
											"end": 467,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 442,
											"end": 467,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 442,
											"end": 467,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 442,
											"end": 467,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 442,
											"end": 467,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 442,
											"end": 467,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 442,
											"end": 467,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 442,
											"end": 467,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 442,
											"end": 467,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 442,
											"end": 467,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 442,
											"end": 467,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 442,
											"end": 467,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 442,
											"end": 467,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 377,
											"end": 396,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 377,
											"end": 396,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 377,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 377,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 377,
											"end": 396,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 377,
											"end": 396,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 377,
											"end": 396,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 377,
											"end": 396,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 377,
											"end": 396,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 377,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 377,
											"end": 396,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 377,
											"end": 396,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 377,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 377,
											"end": 396,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 377,
											"end": 396,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 377,
											"end": 396,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 377,
											"end": 396,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 377,
											"end": 396,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 377,
											"end": 396,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 377,
											"end": 396,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 377,
											"end": 396,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 377,
											"end": 396,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 377,
											"end": 396,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 4444,
											"end": 4564,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4444,
											"end": 4564,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4444,
											"end": 4564,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 4444,
											"end": 4564,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4444,
											"end": 4564,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4444,
											"end": 4564,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4444,
											"end": 4564,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4444,
											"end": 4564,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4444,
											"end": 4564,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4444,
											"end": 4564,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4444,
											"end": 4564,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 4444,
											"end": 4564,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4444,
											"end": 4564,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4444,
											"end": 4564,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 4444,
											"end": 4564,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4444,
											"end": 4564,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 4444,
											"end": 4564,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4444,
											"end": 4564,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 4444,
											"end": 4564,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4444,
											"end": 4564,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 4444,
											"end": 4564,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4444,
											"end": 4564,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 517,
											"end": 546,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 517,
											"end": 546,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 517,
											"end": 546,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 517,
											"end": 546,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 517,
											"end": 546,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 517,
											"end": 546,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 912,
											"end": 960,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 912,
											"end": 960,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 912,
											"end": 960,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 912,
											"end": 960,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 912,
											"end": 960,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 912,
											"end": 960,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 912,
											"end": 960,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 912,
											"end": 960,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 912,
											"end": 960,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 912,
											"end": 960,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 912,
											"end": 960,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 912,
											"end": 960,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 912,
											"end": 960,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 912,
											"end": 960,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 912,
											"end": 960,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 912,
											"end": 960,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 912,
											"end": 960,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 912,
											"end": 960,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 912,
											"end": 960,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 732,
											"end": 781,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 732,
											"end": 781,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 732,
											"end": 781,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 732,
											"end": 781,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 732,
											"end": 781,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 732,
											"end": 781,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 732,
											"end": 781,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 732,
											"end": 781,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 732,
											"end": 781,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 781,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 732,
											"end": 781,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 732,
											"end": 781,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 732,
											"end": 781,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 732,
											"end": 781,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 732,
											"end": 781,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 732,
											"end": 781,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 732,
											"end": 781,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 732,
											"end": 781,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 732,
											"end": 781,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 825,
											"end": 871,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 825,
											"end": 871,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 825,
											"end": 871,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 825,
											"end": 871,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 825,
											"end": 871,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 825,
											"end": 871,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 825,
											"end": 871,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 825,
											"end": 871,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 825,
											"end": 871,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 825,
											"end": 871,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 825,
											"end": 871,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 825,
											"end": 871,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 825,
											"end": 871,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 825,
											"end": 871,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 825,
											"end": 871,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 825,
											"end": 871,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 825,
											"end": 871,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 825,
											"end": 871,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 825,
											"end": 871,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2483,
											"end": 2947,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 2483,
											"end": 2947,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2596,
											"end": 2608,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2596,
											"end": 2608,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2577,
											"end": 2593,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 2577,
											"end": 2593,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2577,
											"end": 2608,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 2577,
											"end": 2608,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2577,
											"end": 2608,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2577,
											"end": 2608,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 2577,
											"end": 2608,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2577,
											"end": 2608,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 2577,
											"end": 2608,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2557,
											"end": 2572,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 2557,
											"end": 2609,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2557,
											"end": 2609,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2549,
											"end": 2620,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 2549,
											"end": 2620,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2549,
											"end": 2620,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2549,
											"end": 2620,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2549,
											"end": 2620,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2549,
											"end": 2620,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2549,
											"end": 2620,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2549,
											"end": 2620,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2549,
											"end": 2620,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2549,
											"end": 2620,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 2549,
											"end": 2620,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2549,
											"end": 2620,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 2549,
											"end": 2620,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2549,
											"end": 2620,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 2549,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2549,
											"end": 2620,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2549,
											"end": 2620,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2549,
											"end": 2620,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2549,
											"end": 2620,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2549,
											"end": 2620,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2549,
											"end": 2620,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2549,
											"end": 2620,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2549,
											"end": 2620,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 2549,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2668,
											"end": 2675,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2638,
											"end": 2652,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 2638,
											"end": 2664,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2653,
											"end": 2663,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2638,
											"end": 2664,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2638,
											"end": 2664,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2638,
											"end": 2664,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2638,
											"end": 2664,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2638,
											"end": 2664,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2638,
											"end": 2664,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2638,
											"end": 2664,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2638,
											"end": 2664,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2638,
											"end": 2664,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2638,
											"end": 2664,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2638,
											"end": 2664,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2638,
											"end": 2664,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2638,
											"end": 2664,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2638,
											"end": 2664,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2638,
											"end": 2664,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2638,
											"end": 2664,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2638,
											"end": 2675,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2638,
											"end": 2675,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2630,
											"end": 2700,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 2630,
											"end": 2700,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2630,
											"end": 2700,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2630,
											"end": 2700,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2630,
											"end": 2700,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2630,
											"end": 2700,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2630,
											"end": 2700,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2630,
											"end": 2700,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2630,
											"end": 2700,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2630,
											"end": 2700,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 2630,
											"end": 2700,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2630,
											"end": 2700,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 2630,
											"end": 2700,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2630,
											"end": 2700,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 2630,
											"end": 2700,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2630,
											"end": 2700,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2630,
											"end": 2700,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2630,
											"end": 2700,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2630,
											"end": 2700,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2630,
											"end": 2700,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2630,
											"end": 2700,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2630,
											"end": 2700,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2630,
											"end": 2700,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 2630,
											"end": 2700,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2723,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2718,
											"end": 2723,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2718,
											"end": 2723,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2723,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2723,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2723,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2718,
											"end": 2723,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2723,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2723,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2723,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2718,
											"end": 2723,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2732,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2718,
											"end": 2732,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2732,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 2733,
											"end": 2743,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2745,
											"end": 2752,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 2718,
											"end": 2753,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2773,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 2710,
											"end": 2773,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2773,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2710,
											"end": 2773,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2773,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2710,
											"end": 2773,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2773,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2773,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2710,
											"end": 2773,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2773,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 2710,
											"end": 2773,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2773,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 2710,
											"end": 2773,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2710,
											"end": 2773,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 2710,
											"end": 2773,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2773,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2710,
											"end": 2773,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2773,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2773,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2773,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2773,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2773,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2773,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 2710,
											"end": 2773,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2812,
											"end": 2851,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 2843,
											"end": 2850,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2812,
											"end": 2826,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 2812,
											"end": 2838,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2827,
											"end": 2837,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2812,
											"end": 2838,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2812,
											"end": 2838,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2812,
											"end": 2838,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2812,
											"end": 2838,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2812,
											"end": 2838,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2812,
											"end": 2838,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2812,
											"end": 2838,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2812,
											"end": 2838,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2812,
											"end": 2838,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2812,
											"end": 2838,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2812,
											"end": 2838,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2812,
											"end": 2838,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2812,
											"end": 2838,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2812,
											"end": 2838,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2812,
											"end": 2838,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2812,
											"end": 2838,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2812,
											"end": 2842,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 2812,
											"end": 2842,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2812,
											"end": 2851,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2812,
											"end": 2851,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2812,
											"end": 2851,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2812,
											"end": 2851,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2812,
											"end": 2851,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2812,
											"end": 2851,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 2812,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2797,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 2783,
											"end": 2809,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2798,
											"end": 2808,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2809,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2783,
											"end": 2809,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2809,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2783,
											"end": 2809,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2809,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2809,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2809,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2783,
											"end": 2809,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2809,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2809,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2809,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2809,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2783,
											"end": 2809,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2809,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2783,
											"end": 2809,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2851,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2851,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2851,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2851,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2874,
											"end": 2897,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 2889,
											"end": 2896,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2874,
											"end": 2884,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 2874,
											"end": 2884,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2874,
											"end": 2888,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 2874,
											"end": 2888,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2874,
											"end": 2897,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2874,
											"end": 2897,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2874,
											"end": 2897,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2874,
											"end": 2897,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2874,
											"end": 2897,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2874,
											"end": 2897,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 2874,
											"end": 2897,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2861,
											"end": 2871,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 2861,
											"end": 2897,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2861,
											"end": 2897,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2861,
											"end": 2897,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2861,
											"end": 2897,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2920,
											"end": 2930,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 2940,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2912,
											"end": 2940,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 2940,
											"name": "PUSH",
											"source": 5,
											"value": "B24546D975E2628748EFC9ACED80665E0FAD66272033E5C0EA25FD3AFAC99795"
										},
										{
											"begin": 2932,
											"end": 2939,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 2940,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2912,
											"end": 2940,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 2940,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 2912,
											"end": 2940,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 2940,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 2940,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 2912,
											"end": 2940,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2912,
											"end": 2940,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 2912,
											"end": 2940,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 2940,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2912,
											"end": 2940,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 2940,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 2940,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 2940,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 2940,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 2940,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2947,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2483,
											"end": 2947,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4118,
											"end": 4246,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 4118,
											"end": 4246,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4222,
											"end": 4239,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4203,
											"end": 4219,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 4203,
											"end": 4239,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4203,
											"end": 4239,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4203,
											"end": 4239,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4203,
											"end": 4239,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4118,
											"end": 4246,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4118,
											"end": 4246,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 661,
											"end": 692,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 661,
											"end": 692,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 661,
											"end": 692,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 661,
											"end": 692,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 661,
											"end": 692,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 661,
											"end": 692,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4600,
											"end": 4716,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 4600,
											"end": 4716,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4660,
											"end": 4667,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4685,
											"end": 4699,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 4685,
											"end": 4709,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4700,
											"end": 4708,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4685,
											"end": 4709,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4685,
											"end": 4709,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4685,
											"end": 4709,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4685,
											"end": 4709,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4685,
											"end": 4709,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4685,
											"end": 4709,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4685,
											"end": 4709,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4685,
											"end": 4709,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4685,
											"end": 4709,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4685,
											"end": 4709,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4685,
											"end": 4709,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4685,
											"end": 4709,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4685,
											"end": 4709,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4685,
											"end": 4709,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4685,
											"end": 4709,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4685,
											"end": 4709,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4678,
											"end": 4709,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4678,
											"end": 4709,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4600,
											"end": 4716,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4600,
											"end": 4716,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4600,
											"end": 4716,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4600,
											"end": 4716,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1072,
											"end": 1098,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 1072,
											"end": 1098,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1072,
											"end": 1098,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 1072,
											"end": 1098,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1072,
											"end": 1098,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1072,
											"end": 1098,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "PUSH",
											"source": 5,
											"value": "C"
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3958,
											"end": 4074,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 3958,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4054,
											"end": 4066,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4033,
											"end": 4044,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 4033,
											"end": 4044,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4033,
											"end": 4067,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 4033,
											"end": 4067,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 4033,
											"end": 4067,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4033,
											"end": 4067,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4033,
											"end": 4067,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4033,
											"end": 4067,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4033,
											"end": 4067,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 4033,
											"end": 4067,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 4033,
											"end": 4067,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4033,
											"end": 4067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4033,
											"end": 4067,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4033,
											"end": 4067,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4033,
											"end": 4067,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4033,
											"end": 4067,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 4033,
											"end": 4067,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 4033,
											"end": 4067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4033,
											"end": 4067,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4033,
											"end": 4067,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3958,
											"end": 4074,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3958,
											"end": 4074,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1012,
											"end": 1037,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 1012,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1012,
											"end": 1037,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 1012,
											"end": 1037,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1012,
											"end": 1037,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1012,
											"end": 1037,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1701,
											"end": 2430,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 1701,
											"end": 2430,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1810,
											"end": 1822,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1810,
											"end": 1822,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1791,
											"end": 1807,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 1791,
											"end": 1807,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1791,
											"end": 1822,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 1791,
											"end": 1822,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1791,
											"end": 1822,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1791,
											"end": 1822,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 1791,
											"end": 1822,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1791,
											"end": 1822,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 1791,
											"end": 1822,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1773,
											"end": 1788,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 1773,
											"end": 1822,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1765,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 1765,
											"end": 1865,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1765,
											"end": 1865,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1765,
											"end": 1865,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1765,
											"end": 1865,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1765,
											"end": 1865,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1765,
											"end": 1865,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1765,
											"end": 1865,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1765,
											"end": 1865,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1765,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 1765,
											"end": 1865,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1765,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 1765,
											"end": 1865,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1765,
											"end": 1865,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 1765,
											"end": 1865,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1765,
											"end": 1865,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1765,
											"end": 1865,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1765,
											"end": 1865,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1765,
											"end": 1865,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1765,
											"end": 1865,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1765,
											"end": 1865,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1765,
											"end": 1865,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1765,
											"end": 1865,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 1765,
											"end": 1865,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1893,
											"end": 1894,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1883,
											"end": 1890,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1883,
											"end": 1894,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1875,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 1875,
											"end": 1930,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1875,
											"end": 1930,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1875,
											"end": 1930,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1875,
											"end": 1930,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1875,
											"end": 1930,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1875,
											"end": 1930,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1875,
											"end": 1930,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1875,
											"end": 1930,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1875,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 1875,
											"end": 1930,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1875,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 1875,
											"end": 1930,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1875,
											"end": 1930,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 1875,
											"end": 1930,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1875,
											"end": 1930,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1875,
											"end": 1930,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1875,
											"end": 1930,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1875,
											"end": 1930,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1875,
											"end": 1930,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1875,
											"end": 1930,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1875,
											"end": 1930,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1875,
											"end": 1930,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 1875,
											"end": 1930,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 1953,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1948,
											"end": 1953,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1948,
											"end": 1953,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 1953,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 1953,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 1953,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1948,
											"end": 1953,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 1953,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 1953,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 1953,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1948,
											"end": 1953,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 1966,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1948,
											"end": 1966,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 1966,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 1967,
											"end": 1977,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1987,
											"end": 1991,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 1994,
											"end": 2001,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 2022,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 1940,
											"end": 2022,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 2022,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1940,
											"end": 2022,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 2022,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1940,
											"end": 2022,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 2022,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 2022,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1940,
											"end": 2022,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 2022,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 1940,
											"end": 2022,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 2022,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 1940,
											"end": 2022,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1940,
											"end": 2022,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 1940,
											"end": 2022,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 2022,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1940,
											"end": 2022,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 2022,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 2022,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 2022,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 2022,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 2022,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 2022,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 1940,
											"end": 2022,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 2092,
											"end": 2099,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2075,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2076,
											"end": 2086,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 2061,
											"end": 2091,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2100,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2100,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2100,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2061,
											"end": 2100,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2100,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2061,
											"end": 2100,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 2061,
											"end": 2100,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2032,
											"end": 2046,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 2032,
											"end": 2058,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2047,
											"end": 2057,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2032,
											"end": 2058,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2032,
											"end": 2058,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2032,
											"end": 2058,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2032,
											"end": 2058,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2032,
											"end": 2058,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2032,
											"end": 2058,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2032,
											"end": 2058,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2032,
											"end": 2058,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2032,
											"end": 2058,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2032,
											"end": 2058,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2032,
											"end": 2058,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2032,
											"end": 2058,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2032,
											"end": 2058,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2032,
											"end": 2058,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2032,
											"end": 2058,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2032,
											"end": 2100,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2032,
											"end": 2100,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2032,
											"end": 2100,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2032,
											"end": 2100,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2136,
											"end": 2151,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 2110,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 2110,
											"end": 2133,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2132,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2110,
											"end": 2133,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2110,
											"end": 2133,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2110,
											"end": 2133,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2110,
											"end": 2133,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2110,
											"end": 2133,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2110,
											"end": 2133,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2110,
											"end": 2133,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2110,
											"end": 2133,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2110,
											"end": 2133,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2110,
											"end": 2133,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2110,
											"end": 2133,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2110,
											"end": 2133,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2110,
											"end": 2133,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2110,
											"end": 2133,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2110,
											"end": 2133,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2110,
											"end": 2151,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2110,
											"end": 2151,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2110,
											"end": 2151,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2110,
											"end": 2151,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2161,
											"end": 2175,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2178,
											"end": 2214,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 2195,
											"end": 2205,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2206,
											"end": 2213,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2178,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 2178,
											"end": 2214,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2178,
											"end": 2214,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 2178,
											"end": 2214,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2161,
											"end": 2214,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2161,
											"end": 2214,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2252,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 2282,
											"end": 2288,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2252,
											"end": 2265,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 2252,
											"end": 2277,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2266,
											"end": 2276,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2252,
											"end": 2277,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2252,
											"end": 2277,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2252,
											"end": 2277,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2252,
											"end": 2277,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2252,
											"end": 2277,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2252,
											"end": 2277,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2252,
											"end": 2277,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2252,
											"end": 2277,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2252,
											"end": 2277,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2252,
											"end": 2277,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2252,
											"end": 2277,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2252,
											"end": 2277,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2252,
											"end": 2277,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2252,
											"end": 2277,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2252,
											"end": 2277,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2252,
											"end": 2277,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2252,
											"end": 2281,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 2252,
											"end": 2281,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2252,
											"end": 2289,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2252,
											"end": 2289,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2252,
											"end": 2289,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2252,
											"end": 2289,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2252,
											"end": 2289,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2252,
											"end": 2289,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 2252,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2237,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 2224,
											"end": 2249,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2238,
											"end": 2248,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2249,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2224,
											"end": 2249,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2249,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2224,
											"end": 2249,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2249,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2249,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2249,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2224,
											"end": 2249,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2249,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2249,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2249,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2249,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2224,
											"end": 2249,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2249,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2224,
											"end": 2249,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2289,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2289,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2289,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2289,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2312,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 2327,
											"end": 2334,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2312,
											"end": 2322,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 2312,
											"end": 2322,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2312,
											"end": 2326,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 2312,
											"end": 2326,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2312,
											"end": 2335,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2312,
											"end": 2335,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2312,
											"end": 2335,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2312,
											"end": 2335,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2312,
											"end": 2335,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2312,
											"end": 2335,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 2312,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2299,
											"end": 2309,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 2299,
											"end": 2335,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2299,
											"end": 2335,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2299,
											"end": 2335,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2299,
											"end": 2335,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2359,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 2375,
											"end": 2381,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2359,
											"end": 2370,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 2359,
											"end": 2370,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2359,
											"end": 2374,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 2359,
											"end": 2374,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2359,
											"end": 2382,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2359,
											"end": 2382,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2359,
											"end": 2382,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2359,
											"end": 2382,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2359,
											"end": 2382,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2359,
											"end": 2382,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 2359,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2345,
											"end": 2356,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 2345,
											"end": 2382,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2345,
											"end": 2382,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2345,
											"end": 2382,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2345,
											"end": 2382,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 2413,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2397,
											"end": 2423,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2397,
											"end": 2423,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2397,
											"end": 2423,
											"name": "PUSH",
											"source": 5,
											"value": "EBEDB8B3C678666E7F36970BC8F57ABF6D8FA2E828C0DA91EA5B75BF68ED101A"
										},
										{
											"begin": 2415,
											"end": 2422,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2397,
											"end": 2423,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2397,
											"end": 2423,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2397,
											"end": 2423,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 2397,
											"end": 2423,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2397,
											"end": 2423,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2397,
											"end": 2423,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 2397,
											"end": 2423,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2397,
											"end": 2423,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 2397,
											"end": 2423,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2397,
											"end": 2423,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2397,
											"end": 2423,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2397,
											"end": 2423,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2397,
											"end": 2423,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2397,
											"end": 2423,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2397,
											"end": 2423,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2397,
											"end": 2423,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2293,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 2430,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1701,
											"end": 2430,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2973,
											"end": 3366,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 2973,
											"end": 3366,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3075,
											"end": 3087,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3075,
											"end": 3087,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3056,
											"end": 3072,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 3056,
											"end": 3072,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3056,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 3056,
											"end": 3087,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3056,
											"end": 3087,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3056,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 3056,
											"end": 3087,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3056,
											"end": 3087,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 3056,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3036,
											"end": 3051,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 3036,
											"end": 3088,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 3036,
											"end": 3088,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3028,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 3028,
											"end": 3099,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3028,
											"end": 3099,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3028,
											"end": 3099,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3028,
											"end": 3099,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3028,
											"end": 3099,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3028,
											"end": 3099,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3028,
											"end": 3099,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3028,
											"end": 3099,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3028,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 3028,
											"end": 3099,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3028,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 3028,
											"end": 3099,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3028,
											"end": 3099,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 3028,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3028,
											"end": 3099,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3028,
											"end": 3099,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3028,
											"end": 3099,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3028,
											"end": 3099,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3028,
											"end": 3099,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3028,
											"end": 3099,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3028,
											"end": 3099,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3028,
											"end": 3099,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 3028,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3109,
											"end": 3123,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3126,
											"end": 3139,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 3126,
											"end": 3151,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3140,
											"end": 3150,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3126,
											"end": 3151,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3126,
											"end": 3151,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3126,
											"end": 3151,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3126,
											"end": 3151,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3126,
											"end": 3151,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3126,
											"end": 3151,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3126,
											"end": 3151,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3126,
											"end": 3151,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3126,
											"end": 3151,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3126,
											"end": 3151,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3126,
											"end": 3151,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3126,
											"end": 3151,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3126,
											"end": 3151,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3126,
											"end": 3151,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3126,
											"end": 3151,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3126,
											"end": 3151,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3109,
											"end": 3151,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3109,
											"end": 3151,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3180,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 3169,
											"end": 3180,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3169,
											"end": 3180,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3180,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3180,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3180,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3169,
											"end": 3180,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3180,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3180,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3180,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3169,
											"end": 3180,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3189,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3169,
											"end": 3189,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3189,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 3190,
											"end": 3200,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3202,
											"end": 3208,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "tag",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 3169,
											"end": 3209,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3161,
											"end": 3229,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 3161,
											"end": 3229,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3161,
											"end": 3229,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3161,
											"end": 3229,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3161,
											"end": 3229,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3161,
											"end": 3229,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3161,
											"end": 3229,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3161,
											"end": 3229,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3161,
											"end": 3229,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3161,
											"end": 3229,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 3161,
											"end": 3229,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3161,
											"end": 3229,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 3161,
											"end": 3229,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3161,
											"end": 3229,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 3161,
											"end": 3229,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3161,
											"end": 3229,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3161,
											"end": 3229,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3161,
											"end": 3229,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3161,
											"end": 3229,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3161,
											"end": 3229,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3161,
											"end": 3229,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3161,
											"end": 3229,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3161,
											"end": 3229,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 3161,
											"end": 3229,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3265,
											"end": 3266,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3239,
											"end": 3252,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3253,
											"end": 3263,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3239,
											"end": 3264,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3239,
											"end": 3266,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3239,
											"end": 3266,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3239,
											"end": 3266,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3239,
											"end": 3266,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3290,
											"end": 3313,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 3306,
											"end": 3312,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3290,
											"end": 3301,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 3290,
											"end": 3301,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3290,
											"end": 3305,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 3290,
											"end": 3305,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3290,
											"end": 3313,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3290,
											"end": 3313,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3290,
											"end": 3313,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3290,
											"end": 3313,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3290,
											"end": 3313,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3290,
											"end": 3313,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 3290,
											"end": 3313,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3276,
											"end": 3287,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 3276,
											"end": 3313,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3276,
											"end": 3313,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3276,
											"end": 3313,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3276,
											"end": 3313,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3340,
											"end": 3350,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3328,
											"end": 3359,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3328,
											"end": 3359,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3328,
											"end": 3359,
											"name": "PUSH",
											"source": 5,
											"value": "BA8DE60C3403EC381D1D484652EA1980E3C3E56359195C92525BFF4CE47AD98E"
										},
										{
											"begin": 3352,
											"end": 3358,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3328,
											"end": 3359,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3328,
											"end": 3359,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3328,
											"end": 3359,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 3328,
											"end": 3359,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3328,
											"end": 3359,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3328,
											"end": 3359,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 3328,
											"end": 3359,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3328,
											"end": 3359,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 3328,
											"end": 3359,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3328,
											"end": 3359,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3328,
											"end": 3359,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3328,
											"end": 3359,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3328,
											"end": 3359,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3328,
											"end": 3359,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3328,
											"end": 3359,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3328,
											"end": 3359,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2293,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2973,
											"end": 3366,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4292,
											"end": 4404,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4292,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4384,
											"end": 4397,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4369,
											"end": 4381,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 4369,
											"end": 4397,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4369,
											"end": 4397,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4369,
											"end": 4397,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4369,
											"end": 4397,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4292,
											"end": 4404,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4292,
											"end": 4404,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 587,
											"end": 614,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 587,
											"end": 614,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 587,
											"end": 614,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 587,
											"end": 614,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 587,
											"end": 614,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 587,
											"end": 614,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2190,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2177,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 2263,
											"end": 2271,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 442,
											"end": 467,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 442,
											"end": 467,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 442,
											"end": 467,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 442,
											"end": 467,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 442,
											"end": 467,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 442,
											"end": 467,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 442,
											"end": 467,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 442,
											"end": 467,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 442,
											"end": 467,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 442,
											"end": 467,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 442,
											"end": 467,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 442,
											"end": 467,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 442,
											"end": 467,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 442,
											"end": 467,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 442,
											"end": 467,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 377,
											"end": 396,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 377,
											"end": 396,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 377,
											"end": 396,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 377,
											"end": 396,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 377,
											"end": 396,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 377,
											"end": 396,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 377,
											"end": 396,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 377,
											"end": 396,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 377,
											"end": 396,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 377,
											"end": 396,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 377,
											"end": 396,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 377,
											"end": 396,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 377,
											"end": 396,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 377,
											"end": 396,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 377,
											"end": 396,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4444,
											"end": 4564,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 4444,
											"end": 4564,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4542,
											"end": 4557,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4525,
											"end": 4539,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4525,
											"end": 4557,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4525,
											"end": 4557,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4525,
											"end": 4557,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4525,
											"end": 4557,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4444,
											"end": 4564,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4444,
											"end": 4564,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3428,
											"end": 3920,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 3428,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3510,
											"end": 3517,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3529,
											"end": 3557,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3560,
											"end": 3622,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 3601,
											"end": 3612,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 3601,
											"end": 3621,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3613,
											"end": 3620,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3601,
											"end": 3621,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3601,
											"end": 3621,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3601,
											"end": 3621,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3601,
											"end": 3621,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3601,
											"end": 3621,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3601,
											"end": 3621,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3601,
											"end": 3621,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3601,
											"end": 3621,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3601,
											"end": 3621,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3601,
											"end": 3621,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3601,
											"end": 3621,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3601,
											"end": 3621,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3601,
											"end": 3621,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3601,
											"end": 3621,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3601,
											"end": 3621,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3601,
											"end": 3621,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 3578,
											"end": 3594,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 3578,
											"end": 3594,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3573,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3561,
											"end": 3573,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3577,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 3561,
											"end": 3577,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3595,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3595,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3595,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3561,
											"end": 3595,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3561,
											"end": 3595,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3561,
											"end": 3595,
											"name": "tag",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 3561,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3560,
											"end": 3600,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 3560,
											"end": 3600,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3560,
											"end": 3622,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3560,
											"end": 3622,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3560,
											"end": 3622,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3560,
											"end": 3622,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3560,
											"end": 3622,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3560,
											"end": 3622,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 3560,
											"end": 3622,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3529,
											"end": 3622,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3529,
											"end": 3622,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3798,
											"end": 3812,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3815,
											"end": 3890,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 3882,
											"end": 3889,
											"name": "PUSH",
											"source": 5,
											"value": "C"
										},
										{
											"begin": 3882,
											"end": 3889,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3815,
											"end": 3877,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 3856,
											"end": 3876,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3815,
											"end": 3851,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 3836,
											"end": 3850,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3836,
											"end": 3850,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3815,
											"end": 3831,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 3827,
											"end": 3830,
											"name": "PUSH",
											"source": 5,
											"value": "F4240"
										},
										{
											"begin": 3815,
											"end": 3822,
											"name": "DUP12",
											"source": 5
										},
										{
											"begin": 3815,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 3815,
											"end": 3826,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3815,
											"end": 3831,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3815,
											"end": 3831,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3815,
											"end": 3831,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3815,
											"end": 3831,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3815,
											"end": 3831,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3815,
											"end": 3831,
											"name": "tag",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 3815,
											"end": 3831,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3815,
											"end": 3835,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 3815,
											"end": 3835,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3815,
											"end": 3851,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3815,
											"end": 3851,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3815,
											"end": 3851,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3815,
											"end": 3851,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3815,
											"end": 3851,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3815,
											"end": 3851,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 3815,
											"end": 3851,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3815,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 3815,
											"end": 3855,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3815,
											"end": 3877,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3815,
											"end": 3877,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3815,
											"end": 3877,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3815,
											"end": 3877,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3815,
											"end": 3877,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3815,
											"end": 3877,
											"name": "tag",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 3815,
											"end": 3877,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3815,
											"end": 3881,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 3815,
											"end": 3881,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3815,
											"end": 3890,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3815,
											"end": 3890,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3815,
											"end": 3890,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3815,
											"end": 3890,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3815,
											"end": 3890,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3815,
											"end": 3890,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 3815,
											"end": 3890,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3798,
											"end": 3890,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3798,
											"end": 3890,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3907,
											"end": 3913,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3900,
											"end": 3913,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3900,
											"end": 3913,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3900,
											"end": 3913,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3900,
											"end": 3913,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3428,
											"end": 3920,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3428,
											"end": 3920,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3428,
											"end": 3920,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3428,
											"end": 3920,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3428,
											"end": 3920,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "tag",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "tag",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 59,
											"end": 146,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 206,
											"end": 211,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 237,
											"end": 243,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 231,
											"end": 244,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 222,
											"end": 244,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 222,
											"end": 244,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 277,
											"end": 282,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 212,
											"end": 289,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 212,
											"end": 289,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 212,
											"end": 289,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 212,
											"end": 289,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 212,
											"end": 289,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 341,
											"end": 346,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 385,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 366,
											"end": 386,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 357,
											"end": 386,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 422,
											"end": 427,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 347,
											"end": 434,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 347,
											"end": 434,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 347,
											"end": 434,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 347,
											"end": 434,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 347,
											"end": 434,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 440,
											"end": 702,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 440,
											"end": 702,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 499,
											"end": 505,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 548,
											"end": 550,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 536,
											"end": 545,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 527,
											"end": 534,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 523,
											"end": 546,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 519,
											"end": 551,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 516,
											"end": 518,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 516,
											"end": 518,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 516,
											"end": 518,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 564,
											"end": 565,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 561,
											"end": 562,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 554,
											"end": 566,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 516,
											"end": 518,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 516,
											"end": 518,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 607,
											"end": 608,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 632,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 677,
											"end": 684,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 668,
											"end": 674,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 657,
											"end": 666,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 653,
											"end": 675,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 632,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 632,
											"end": 685,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 632,
											"end": 685,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 632,
											"end": 685,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 622,
											"end": 685,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 622,
											"end": 685,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 578,
											"end": 695,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 506,
											"end": 702,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 506,
											"end": 702,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 506,
											"end": 702,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 506,
											"end": 702,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 506,
											"end": 702,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 708,
											"end": 986,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 708,
											"end": 986,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 775,
											"end": 781,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 824,
											"end": 826,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 812,
											"end": 821,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 803,
											"end": 810,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 799,
											"end": 822,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 795,
											"end": 827,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 792,
											"end": 794,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 792,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 792,
											"end": 794,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 840,
											"end": 841,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 837,
											"end": 838,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 830,
											"end": 842,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 792,
											"end": 794,
											"name": "tag",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 792,
											"end": 794,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 883,
											"end": 884,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 908,
											"end": 969,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 961,
											"end": 968,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 952,
											"end": 958,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 941,
											"end": 950,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 937,
											"end": 959,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 908,
											"end": 969,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 908,
											"end": 969,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 908,
											"end": 969,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 908,
											"end": 969,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 898,
											"end": 969,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 898,
											"end": 969,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 854,
											"end": 979,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 782,
											"end": 986,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 782,
											"end": 986,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 782,
											"end": 986,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 782,
											"end": 986,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 782,
											"end": 986,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 992,
											"end": 1254,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 992,
											"end": 1254,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1102,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1088,
											"end": 1097,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1079,
											"end": 1086,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1075,
											"end": 1098,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 1103,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1068,
											"end": 1070,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1068,
											"end": 1070,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 1068,
											"end": 1070,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1116,
											"end": 1117,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1113,
											"end": 1114,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1106,
											"end": 1118,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1068,
											"end": 1070,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 1068,
											"end": 1070,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1159,
											"end": 1160,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1184,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 1229,
											"end": 1236,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1220,
											"end": 1226,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1209,
											"end": 1218,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1205,
											"end": 1227,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 1184,
											"end": 1237,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1184,
											"end": 1237,
											"name": "tag",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 1184,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1174,
											"end": 1237,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1174,
											"end": 1237,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1130,
											"end": 1247,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1058,
											"end": 1254,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1058,
											"end": 1254,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1058,
											"end": 1254,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1058,
											"end": 1254,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1058,
											"end": 1254,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1260,
											"end": 1378,
											"name": "tag",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 1260,
											"end": 1378,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1347,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 1365,
											"end": 1370,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1347,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 1347,
											"end": 1371,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1347,
											"end": 1371,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 1347,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1342,
											"end": 1345,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1335,
											"end": 1372,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1325,
											"end": 1378,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1325,
											"end": 1378,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1325,
											"end": 1378,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1384,
											"end": 1543,
											"name": "tag",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 1384,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1485,
											"end": 1536,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 1530,
											"end": 1535,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1485,
											"end": 1536,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 1485,
											"end": 1536,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1485,
											"end": 1536,
											"name": "tag",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 1485,
											"end": 1536,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1480,
											"end": 1483,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1473,
											"end": 1537,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1463,
											"end": 1543,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1463,
											"end": 1543,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1463,
											"end": 1543,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1549,
											"end": 1914,
											"name": "tag",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 1549,
											"end": 1914,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1691,
											"end": 1694,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 1776,
											"end": 1777,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1771,
											"end": 1774,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "tag",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 1712,
											"end": 1778,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1705,
											"end": 1778,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1705,
											"end": 1778,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1787,
											"end": 1880,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 1876,
											"end": 1879,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1787,
											"end": 1880,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 1787,
											"end": 1880,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1787,
											"end": 1880,
											"name": "tag",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 1787,
											"end": 1880,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1905,
											"end": 1907,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1900,
											"end": 1903,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1896,
											"end": 1908,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1889,
											"end": 1908,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1889,
											"end": 1908,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1914,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1914,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1914,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1914,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1920,
											"end": 2286,
											"name": "tag",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 1920,
											"end": 2286,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2062,
											"end": 2065,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2083,
											"end": 2150,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 2147,
											"end": 2149,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 2142,
											"end": 2145,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2083,
											"end": 2150,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 2083,
											"end": 2150,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2083,
											"end": 2150,
											"name": "tag",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 2083,
											"end": 2150,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2150,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2150,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 2248,
											"end": 2251,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 2159,
											"end": 2252,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2159,
											"end": 2252,
											"name": "tag",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 2159,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2277,
											"end": 2279,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2272,
											"end": 2275,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2268,
											"end": 2280,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2066,
											"end": 2286,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2066,
											"end": 2286,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2066,
											"end": 2286,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2066,
											"end": 2286,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2292,
											"end": 2658,
											"name": "tag",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 2292,
											"end": 2658,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2434,
											"end": 2437,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2455,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 2519,
											"end": 2521,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 2514,
											"end": 2517,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2455,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 2455,
											"end": 2522,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2455,
											"end": 2522,
											"name": "tag",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 2455,
											"end": 2522,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2448,
											"end": 2522,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2448,
											"end": 2522,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2531,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 2620,
											"end": 2623,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2531,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 2531,
											"end": 2624,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2531,
											"end": 2624,
											"name": "tag",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 2531,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2649,
											"end": 2651,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2644,
											"end": 2647,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2640,
											"end": 2652,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2633,
											"end": 2652,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2633,
											"end": 2652,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2438,
											"end": 2658,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2438,
											"end": 2658,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2438,
											"end": 2658,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2438,
											"end": 2658,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2664,
											"end": 3030,
											"name": "tag",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 2664,
											"end": 3030,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2806,
											"end": 2809,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2827,
											"end": 2894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 2891,
											"end": 2893,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 2886,
											"end": 2889,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2827,
											"end": 2894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 2827,
											"end": 2894,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2827,
											"end": 2894,
											"name": "tag",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 2827,
											"end": 2894,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2820,
											"end": 2894,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2820,
											"end": 2894,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 2992,
											"end": 2995,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 2903,
											"end": 2996,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2903,
											"end": 2996,
											"name": "tag",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 2903,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3021,
											"end": 3023,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3016,
											"end": 3019,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3012,
											"end": 3024,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3005,
											"end": 3024,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3005,
											"end": 3024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2810,
											"end": 3030,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2810,
											"end": 3030,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2810,
											"end": 3030,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2810,
											"end": 3030,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3036,
											"end": 3402,
											"name": "tag",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 3036,
											"end": 3402,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3178,
											"end": 3181,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3199,
											"end": 3266,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 3263,
											"end": 3265,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3258,
											"end": 3261,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3199,
											"end": 3266,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 3199,
											"end": 3266,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3199,
											"end": 3266,
											"name": "tag",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 3199,
											"end": 3266,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3192,
											"end": 3266,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3192,
											"end": 3266,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3275,
											"end": 3368,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 3364,
											"end": 3367,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3275,
											"end": 3368,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 3275,
											"end": 3368,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3275,
											"end": 3368,
											"name": "tag",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 3275,
											"end": 3368,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3393,
											"end": 3395,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3388,
											"end": 3391,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3396,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3377,
											"end": 3396,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3377,
											"end": 3396,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3182,
											"end": 3402,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3182,
											"end": 3402,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3182,
											"end": 3402,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3182,
											"end": 3402,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3408,
											"end": 3774,
											"name": "tag",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 3408,
											"end": 3774,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3550,
											"end": 3553,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3571,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 3635,
											"end": 3637,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3630,
											"end": 3633,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3571,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 3571,
											"end": 3638,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3571,
											"end": 3638,
											"name": "tag",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 3571,
											"end": 3638,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3564,
											"end": 3638,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3564,
											"end": 3638,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3647,
											"end": 3740,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 3736,
											"end": 3739,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3647,
											"end": 3740,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 3647,
											"end": 3740,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3647,
											"end": 3740,
											"name": "tag",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 3647,
											"end": 3740,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3765,
											"end": 3767,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3760,
											"end": 3763,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3756,
											"end": 3768,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3749,
											"end": 3768,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3749,
											"end": 3768,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3774,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3774,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3774,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3774,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3780,
											"end": 4146,
											"name": "tag",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 3780,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3922,
											"end": 3925,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3943,
											"end": 4010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 4007,
											"end": 4009,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 4002,
											"end": 4005,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3943,
											"end": 4010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 3943,
											"end": 4010,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3943,
											"end": 4010,
											"name": "tag",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 3943,
											"end": 4010,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3936,
											"end": 4010,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3936,
											"end": 4010,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4019,
											"end": 4112,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 4108,
											"end": 4111,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4019,
											"end": 4112,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 4019,
											"end": 4112,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4019,
											"end": 4112,
											"name": "tag",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 4019,
											"end": 4112,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4137,
											"end": 4139,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4132,
											"end": 4135,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4128,
											"end": 4140,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4121,
											"end": 4140,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4121,
											"end": 4140,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3926,
											"end": 4146,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3926,
											"end": 4146,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3926,
											"end": 4146,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3926,
											"end": 4146,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4152,
											"end": 4518,
											"name": "tag",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 4152,
											"end": 4518,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4294,
											"end": 4297,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4315,
											"end": 4382,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 4379,
											"end": 4381,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4374,
											"end": 4377,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4315,
											"end": 4382,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 4315,
											"end": 4382,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4315,
											"end": 4382,
											"name": "tag",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 4315,
											"end": 4382,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4308,
											"end": 4382,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4308,
											"end": 4382,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4391,
											"end": 4484,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 4480,
											"end": 4483,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4391,
											"end": 4484,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 4391,
											"end": 4484,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4391,
											"end": 4484,
											"name": "tag",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 4391,
											"end": 4484,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4509,
											"end": 4511,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4504,
											"end": 4507,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4500,
											"end": 4512,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4493,
											"end": 4512,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4493,
											"end": 4512,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4298,
											"end": 4518,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4298,
											"end": 4518,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4298,
											"end": 4518,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4298,
											"end": 4518,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4524,
											"end": 4642,
											"name": "tag",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 4524,
											"end": 4642,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4611,
											"end": 4635,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 4629,
											"end": 4634,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4611,
											"end": 4635,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 4611,
											"end": 4635,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4611,
											"end": 4635,
											"name": "tag",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 4611,
											"end": 4635,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4606,
											"end": 4609,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4599,
											"end": 4636,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4589,
											"end": 4642,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4589,
											"end": 4642,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4589,
											"end": 4642,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4648,
											"end": 4870,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 4648,
											"end": 4870,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4741,
											"end": 4745,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4779,
											"end": 4781,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4768,
											"end": 4777,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4764,
											"end": 4782,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4756,
											"end": 4782,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4756,
											"end": 4782,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4792,
											"end": 4863,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 4860,
											"end": 4861,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4849,
											"end": 4858,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4845,
											"end": 4862,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4836,
											"end": 4842,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4792,
											"end": 4863,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 4792,
											"end": 4863,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4792,
											"end": 4863,
											"name": "tag",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 4792,
											"end": 4863,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 4870,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 4870,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 4870,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 4870,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 4870,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4876,
											"end": 5318,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 4876,
											"end": 5318,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5025,
											"end": 5029,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5063,
											"end": 5065,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5052,
											"end": 5061,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5048,
											"end": 5066,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5040,
											"end": 5066,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5040,
											"end": 5066,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5076,
											"end": 5147,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 5144,
											"end": 5145,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5133,
											"end": 5142,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5129,
											"end": 5146,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5120,
											"end": 5126,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5076,
											"end": 5147,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 5076,
											"end": 5147,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5076,
											"end": 5147,
											"name": "tag",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 5076,
											"end": 5147,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5157,
											"end": 5229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 5225,
											"end": 5227,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5214,
											"end": 5223,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5210,
											"end": 5228,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5201,
											"end": 5207,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5157,
											"end": 5229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 5157,
											"end": 5229,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5157,
											"end": 5229,
											"name": "tag",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 5157,
											"end": 5229,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5239,
											"end": 5311,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 5307,
											"end": 5309,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5296,
											"end": 5305,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5292,
											"end": 5310,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5283,
											"end": 5289,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5239,
											"end": 5311,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 5239,
											"end": 5311,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5239,
											"end": 5311,
											"name": "tag",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 5239,
											"end": 5311,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5030,
											"end": 5318,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 5030,
											"end": 5318,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5030,
											"end": 5318,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5030,
											"end": 5318,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5030,
											"end": 5318,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5030,
											"end": 5318,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5030,
											"end": 5318,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5324,
											"end": 5656,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 5324,
											"end": 5656,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5445,
											"end": 5449,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5483,
											"end": 5485,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5472,
											"end": 5481,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5468,
											"end": 5486,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5460,
											"end": 5486,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5460,
											"end": 5486,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5496,
											"end": 5567,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 5564,
											"end": 5565,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5553,
											"end": 5562,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5549,
											"end": 5566,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5540,
											"end": 5546,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5496,
											"end": 5567,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 5496,
											"end": 5567,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5496,
											"end": 5567,
											"name": "tag",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 5496,
											"end": 5567,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5577,
											"end": 5649,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 5645,
											"end": 5647,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5634,
											"end": 5643,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5630,
											"end": 5648,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5621,
											"end": 5627,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5577,
											"end": 5649,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 5577,
											"end": 5649,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5577,
											"end": 5649,
											"name": "tag",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 5577,
											"end": 5649,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5450,
											"end": 5656,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5450,
											"end": 5656,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5450,
											"end": 5656,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5450,
											"end": 5656,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5450,
											"end": 5656,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5450,
											"end": 5656,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5662,
											"end": 5912,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 5662,
											"end": 5912,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5769,
											"end": 5773,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5807,
											"end": 5809,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5796,
											"end": 5805,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5792,
											"end": 5810,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5784,
											"end": 5810,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5784,
											"end": 5810,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5820,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5891,
											"end": 5900,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5887,
											"end": 5904,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5878,
											"end": 5884,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5820,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 5820,
											"end": 5905,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5820,
											"end": 5905,
											"name": "tag",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 5820,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5774,
											"end": 5912,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5774,
											"end": 5912,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5774,
											"end": 5912,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5774,
											"end": 5912,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5774,
											"end": 5912,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5918,
											"end": 6337,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 5918,
											"end": 6337,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6084,
											"end": 6088,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6122,
											"end": 6124,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6111,
											"end": 6120,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6107,
											"end": 6125,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6099,
											"end": 6125,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6099,
											"end": 6125,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6171,
											"end": 6180,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6165,
											"end": 6169,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6161,
											"end": 6181,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6157,
											"end": 6158,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6146,
											"end": 6155,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6142,
											"end": 6159,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6135,
											"end": 6182,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6199,
											"end": 6330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 6325,
											"end": 6329,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6199,
											"end": 6330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 6199,
											"end": 6330,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6199,
											"end": 6330,
											"name": "tag",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 6199,
											"end": 6330,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6191,
											"end": 6330,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6191,
											"end": 6330,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6089,
											"end": 6337,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6089,
											"end": 6337,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6089,
											"end": 6337,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6089,
											"end": 6337,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6343,
											"end": 6762,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 6343,
											"end": 6762,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6509,
											"end": 6513,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6547,
											"end": 6549,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6536,
											"end": 6545,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6532,
											"end": 6550,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6524,
											"end": 6550,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6524,
											"end": 6550,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6596,
											"end": 6605,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6590,
											"end": 6594,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6586,
											"end": 6606,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6582,
											"end": 6583,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6567,
											"end": 6584,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6560,
											"end": 6607,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6624,
											"end": 6755,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 6750,
											"end": 6754,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6624,
											"end": 6755,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 6624,
											"end": 6755,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6624,
											"end": 6755,
											"name": "tag",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 6624,
											"end": 6755,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6616,
											"end": 6755,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6616,
											"end": 6755,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6762,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6762,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6762,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6762,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6768,
											"end": 7187,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 6768,
											"end": 7187,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6934,
											"end": 6938,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6972,
											"end": 6974,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6961,
											"end": 6970,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6957,
											"end": 6975,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6949,
											"end": 6975,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6949,
											"end": 6975,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7015,
											"end": 7019,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7011,
											"end": 7031,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7007,
											"end": 7008,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6996,
											"end": 7005,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6992,
											"end": 7009,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6985,
											"end": 7032,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7049,
											"end": 7180,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 7175,
											"end": 7179,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7049,
											"end": 7180,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 7049,
											"end": 7180,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7049,
											"end": 7180,
											"name": "tag",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 7049,
											"end": 7180,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7041,
											"end": 7180,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7041,
											"end": 7180,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6939,
											"end": 7187,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6939,
											"end": 7187,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6939,
											"end": 7187,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6939,
											"end": 7187,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7193,
											"end": 7612,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 7193,
											"end": 7612,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7359,
											"end": 7363,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7397,
											"end": 7399,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7386,
											"end": 7395,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7382,
											"end": 7400,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7374,
											"end": 7400,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7374,
											"end": 7400,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7446,
											"end": 7455,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7440,
											"end": 7444,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7436,
											"end": 7456,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7432,
											"end": 7433,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7421,
											"end": 7430,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7417,
											"end": 7434,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7410,
											"end": 7457,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7474,
											"end": 7605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 7600,
											"end": 7604,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7474,
											"end": 7605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 7474,
											"end": 7605,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7474,
											"end": 7605,
											"name": "tag",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 7474,
											"end": 7605,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7466,
											"end": 7605,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7466,
											"end": 7605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7364,
											"end": 7612,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7364,
											"end": 7612,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7364,
											"end": 7612,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7364,
											"end": 7612,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7618,
											"end": 8037,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 7618,
											"end": 8037,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7784,
											"end": 7788,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7822,
											"end": 7824,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7811,
											"end": 7820,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7807,
											"end": 7825,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7799,
											"end": 7825,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7799,
											"end": 7825,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7871,
											"end": 7880,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7865,
											"end": 7869,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7861,
											"end": 7881,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7857,
											"end": 7858,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7846,
											"end": 7855,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7842,
											"end": 7859,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7835,
											"end": 7882,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7899,
											"end": 8030,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 8025,
											"end": 8029,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7899,
											"end": 8030,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 7899,
											"end": 8030,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7899,
											"end": 8030,
											"name": "tag",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 7899,
											"end": 8030,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7891,
											"end": 8030,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7891,
											"end": 8030,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7789,
											"end": 8037,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7789,
											"end": 8037,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7789,
											"end": 8037,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7789,
											"end": 8037,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8043,
											"end": 8462,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 8043,
											"end": 8462,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8209,
											"end": 8213,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8247,
											"end": 8249,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8236,
											"end": 8245,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8232,
											"end": 8250,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8224,
											"end": 8250,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8224,
											"end": 8250,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8296,
											"end": 8305,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8290,
											"end": 8294,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8286,
											"end": 8306,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8282,
											"end": 8283,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8271,
											"end": 8280,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8267,
											"end": 8284,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8260,
											"end": 8307,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8324,
											"end": 8455,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 8450,
											"end": 8454,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8324,
											"end": 8455,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 8324,
											"end": 8455,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8324,
											"end": 8455,
											"name": "tag",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 8324,
											"end": 8455,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8316,
											"end": 8455,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8316,
											"end": 8455,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8214,
											"end": 8462,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8214,
											"end": 8462,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8214,
											"end": 8462,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8214,
											"end": 8462,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8468,
											"end": 8887,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 8468,
											"end": 8887,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8634,
											"end": 8638,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8672,
											"end": 8674,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8661,
											"end": 8670,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8657,
											"end": 8675,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8649,
											"end": 8675,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8649,
											"end": 8675,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8721,
											"end": 8730,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8715,
											"end": 8719,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8711,
											"end": 8731,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8707,
											"end": 8708,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8696,
											"end": 8705,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8692,
											"end": 8709,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8685,
											"end": 8732,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8749,
											"end": 8880,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 8875,
											"end": 8879,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8749,
											"end": 8880,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 8749,
											"end": 8880,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8749,
											"end": 8880,
											"name": "tag",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 8749,
											"end": 8880,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8741,
											"end": 8880,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8741,
											"end": 8880,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8639,
											"end": 8887,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8639,
											"end": 8887,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8639,
											"end": 8887,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8639,
											"end": 8887,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8893,
											"end": 9312,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 8893,
											"end": 9312,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9059,
											"end": 9063,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9097,
											"end": 9099,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9086,
											"end": 9095,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9082,
											"end": 9100,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9074,
											"end": 9100,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9074,
											"end": 9100,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9146,
											"end": 9155,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9140,
											"end": 9144,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9136,
											"end": 9156,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9132,
											"end": 9133,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9121,
											"end": 9130,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9117,
											"end": 9134,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9110,
											"end": 9157,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9174,
											"end": 9305,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 9300,
											"end": 9304,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9174,
											"end": 9305,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 9174,
											"end": 9305,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9174,
											"end": 9305,
											"name": "tag",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 9174,
											"end": 9305,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9166,
											"end": 9305,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9166,
											"end": 9305,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9064,
											"end": 9312,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9064,
											"end": 9312,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9064,
											"end": 9312,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9064,
											"end": 9312,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9318,
											"end": 9540,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 9318,
											"end": 9540,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9411,
											"end": 9415,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9449,
											"end": 9451,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9438,
											"end": 9447,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9434,
											"end": 9452,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9426,
											"end": 9452,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9426,
											"end": 9452,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9462,
											"end": 9533,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 9530,
											"end": 9531,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9519,
											"end": 9528,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9515,
											"end": 9532,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9506,
											"end": 9512,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9462,
											"end": 9533,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 9462,
											"end": 9533,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9462,
											"end": 9533,
											"name": "tag",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 9462,
											"end": 9533,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9416,
											"end": 9540,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9416,
											"end": 9540,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9416,
											"end": 9540,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9416,
											"end": 9540,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9416,
											"end": 9540,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9546,
											"end": 9715,
											"name": "tag",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 9546,
											"end": 9715,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9630,
											"end": 9641,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9664,
											"end": 9670,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9659,
											"end": 9662,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9652,
											"end": 9671,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9704,
											"end": 9708,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9699,
											"end": 9702,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9695,
											"end": 9709,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9680,
											"end": 9709,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9680,
											"end": 9709,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9642,
											"end": 9715,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9642,
											"end": 9715,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9642,
											"end": 9715,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9642,
											"end": 9715,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9642,
											"end": 9715,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9721,
											"end": 10026,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 9721,
											"end": 10026,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9761,
											"end": 9764,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9780,
											"end": 9800,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 9798,
											"end": 9799,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9780,
											"end": 9800,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 9780,
											"end": 9800,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9780,
											"end": 9800,
											"name": "tag",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 9780,
											"end": 9800,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9775,
											"end": 9800,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9775,
											"end": 9800,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9814,
											"end": 9834,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 9832,
											"end": 9833,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9814,
											"end": 9834,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 9814,
											"end": 9834,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9814,
											"end": 9834,
											"name": "tag",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 9814,
											"end": 9834,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9809,
											"end": 9834,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9809,
											"end": 9834,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9968,
											"end": 9969,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9900,
											"end": 9966,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9896,
											"end": 9970,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9893,
											"end": 9894,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9890,
											"end": 9971,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 9887,
											"end": 9889,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9887,
											"end": 9889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 9887,
											"end": 9889,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9974,
											"end": 9992,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 9974,
											"end": 9992,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 9974,
											"end": 9992,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9974,
											"end": 9992,
											"name": "tag",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 9974,
											"end": 9992,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9887,
											"end": 9889,
											"name": "tag",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 9887,
											"end": 9889,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10018,
											"end": 10019,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10015,
											"end": 10016,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10011,
											"end": 10020,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10004,
											"end": 10020,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10004,
											"end": 10020,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9765,
											"end": 10026,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9765,
											"end": 10026,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9765,
											"end": 10026,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9765,
											"end": 10026,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9765,
											"end": 10026,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10032,
											"end": 10217,
											"name": "tag",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 10032,
											"end": 10217,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10072,
											"end": 10073,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10089,
											"end": 10109,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 10107,
											"end": 10108,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10089,
											"end": 10109,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 10089,
											"end": 10109,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10089,
											"end": 10109,
											"name": "tag",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 10089,
											"end": 10109,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10084,
											"end": 10109,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10084,
											"end": 10109,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10123,
											"end": 10143,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 10141,
											"end": 10142,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10123,
											"end": 10143,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 10123,
											"end": 10143,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10123,
											"end": 10143,
											"name": "tag",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 10123,
											"end": 10143,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10118,
											"end": 10143,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10118,
											"end": 10143,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10162,
											"end": 10163,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10152,
											"end": 10154,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "347"
										},
										{
											"begin": 10152,
											"end": 10154,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10167,
											"end": 10185,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "348"
										},
										{
											"begin": 10167,
											"end": 10185,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 10167,
											"end": 10185,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10167,
											"end": 10185,
											"name": "tag",
											"source": 6,
											"value": "348"
										},
										{
											"begin": 10167,
											"end": 10185,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10152,
											"end": 10154,
											"name": "tag",
											"source": 6,
											"value": "347"
										},
										{
											"begin": 10152,
											"end": 10154,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10209,
											"end": 10210,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10206,
											"end": 10207,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10202,
											"end": 10211,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 10197,
											"end": 10211,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10197,
											"end": 10211,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10074,
											"end": 10217,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10074,
											"end": 10217,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10074,
											"end": 10217,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10074,
											"end": 10217,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10074,
											"end": 10217,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10223,
											"end": 10571,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 10223,
											"end": 10571,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10263,
											"end": 10270,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10286,
											"end": 10306,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 10304,
											"end": 10305,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10286,
											"end": 10306,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 10286,
											"end": 10306,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10286,
											"end": 10306,
											"name": "tag",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 10286,
											"end": 10306,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10281,
											"end": 10306,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10281,
											"end": 10306,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10320,
											"end": 10340,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "352"
										},
										{
											"begin": 10338,
											"end": 10339,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10320,
											"end": 10340,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 10320,
											"end": 10340,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10320,
											"end": 10340,
											"name": "tag",
											"source": 6,
											"value": "352"
										},
										{
											"begin": 10320,
											"end": 10340,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10315,
											"end": 10340,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10315,
											"end": 10340,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10508,
											"end": 10509,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10440,
											"end": 10506,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10436,
											"end": 10510,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 10433,
											"end": 10434,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10430,
											"end": 10511,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 10425,
											"end": 10426,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10418,
											"end": 10427,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10411,
											"end": 10428,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10407,
											"end": 10512,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10404,
											"end": 10406,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10404,
											"end": 10406,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 10404,
											"end": 10406,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10515,
											"end": 10533,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "354"
										},
										{
											"begin": 10515,
											"end": 10533,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 10515,
											"end": 10533,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10515,
											"end": 10533,
											"name": "tag",
											"source": 6,
											"value": "354"
										},
										{
											"begin": 10515,
											"end": 10533,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10404,
											"end": 10406,
											"name": "tag",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 10404,
											"end": 10406,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10563,
											"end": 10564,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10560,
											"end": 10561,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10556,
											"end": 10565,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 10545,
											"end": 10565,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10545,
											"end": 10565,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10271,
											"end": 10571,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10271,
											"end": 10571,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10271,
											"end": 10571,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10271,
											"end": 10571,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10271,
											"end": 10571,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10577,
											"end": 10768,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 10577,
											"end": 10768,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10617,
											"end": 10621,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10637,
											"end": 10657,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "356"
										},
										{
											"begin": 10655,
											"end": 10656,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10637,
											"end": 10657,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 10637,
											"end": 10657,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10637,
											"end": 10657,
											"name": "tag",
											"source": 6,
											"value": "356"
										},
										{
											"begin": 10637,
											"end": 10657,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10632,
											"end": 10657,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10632,
											"end": 10657,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10671,
											"end": 10691,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "357"
										},
										{
											"begin": 10689,
											"end": 10690,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10671,
											"end": 10691,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 10671,
											"end": 10691,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10671,
											"end": 10691,
											"name": "tag",
											"source": 6,
											"value": "357"
										},
										{
											"begin": 10671,
											"end": 10691,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10666,
											"end": 10691,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10666,
											"end": 10691,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10710,
											"end": 10711,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10707,
											"end": 10708,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10704,
											"end": 10712,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10701,
											"end": 10703,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10701,
											"end": 10703,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "358"
										},
										{
											"begin": 10701,
											"end": 10703,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10715,
											"end": 10733,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "359"
										},
										{
											"begin": 10715,
											"end": 10733,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 10715,
											"end": 10733,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10715,
											"end": 10733,
											"name": "tag",
											"source": 6,
											"value": "359"
										},
										{
											"begin": 10715,
											"end": 10733,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10701,
											"end": 10703,
											"name": "tag",
											"source": 6,
											"value": "358"
										},
										{
											"begin": 10701,
											"end": 10703,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10760,
											"end": 10761,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10757,
											"end": 10758,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10753,
											"end": 10762,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10745,
											"end": 10762,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10745,
											"end": 10762,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10622,
											"end": 10768,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10622,
											"end": 10768,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10622,
											"end": 10768,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10622,
											"end": 10768,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10622,
											"end": 10768,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10774,
											"end": 10870,
											"name": "tag",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 10774,
											"end": 10870,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10811,
											"end": 10818,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10840,
											"end": 10864,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "361"
										},
										{
											"begin": 10858,
											"end": 10863,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10840,
											"end": 10864,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "362"
										},
										{
											"begin": 10840,
											"end": 10864,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10840,
											"end": 10864,
											"name": "tag",
											"source": 6,
											"value": "361"
										},
										{
											"begin": 10840,
											"end": 10864,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10829,
											"end": 10864,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10829,
											"end": 10864,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10819,
											"end": 10870,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10819,
											"end": 10870,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10819,
											"end": 10870,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10819,
											"end": 10870,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10876,
											"end": 10966,
											"name": "tag",
											"source": 6,
											"value": "363"
										},
										{
											"begin": 10876,
											"end": 10966,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10910,
											"end": 10917,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10953,
											"end": 10958,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10946,
											"end": 10959,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10939,
											"end": 10960,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10928,
											"end": 10960,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10928,
											"end": 10960,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10918,
											"end": 10966,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10918,
											"end": 10966,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10918,
											"end": 10966,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10918,
											"end": 10966,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10972,
											"end": 11098,
											"name": "tag",
											"source": 6,
											"value": "362"
										},
										{
											"begin": 10972,
											"end": 11098,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11009,
											"end": 11016,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11049,
											"end": 11091,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11042,
											"end": 11047,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11038,
											"end": 11092,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11027,
											"end": 11092,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11027,
											"end": 11092,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11017,
											"end": 11098,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11017,
											"end": 11098,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11017,
											"end": 11098,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11017,
											"end": 11098,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 11104,
											"end": 11181,
											"name": "tag",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 11104,
											"end": 11181,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11141,
											"end": 11148,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11170,
											"end": 11175,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11159,
											"end": 11175,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11159,
											"end": 11175,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11149,
											"end": 11181,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11149,
											"end": 11181,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11149,
											"end": 11181,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11149,
											"end": 11181,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 11187,
											"end": 11341,
											"name": "tag",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 11187,
											"end": 11341,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11251,
											"end": 11260,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11284,
											"end": 11335,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "368"
										},
										{
											"begin": 11329,
											"end": 11334,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11284,
											"end": 11335,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "369"
										},
										{
											"begin": 11284,
											"end": 11335,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11284,
											"end": 11335,
											"name": "tag",
											"source": 6,
											"value": "368"
										},
										{
											"begin": 11284,
											"end": 11335,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11271,
											"end": 11335,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11271,
											"end": 11335,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11261,
											"end": 11341,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11261,
											"end": 11341,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11261,
											"end": 11341,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11261,
											"end": 11341,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 11347,
											"end": 11474,
											"name": "tag",
											"source": 6,
											"value": "369"
										},
										{
											"begin": 11347,
											"end": 11474,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11411,
											"end": 11420,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11444,
											"end": 11468,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "371"
										},
										{
											"begin": 11462,
											"end": 11467,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11444,
											"end": 11468,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "362"
										},
										{
											"begin": 11444,
											"end": 11468,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11444,
											"end": 11468,
											"name": "tag",
											"source": 6,
											"value": "371"
										},
										{
											"begin": 11444,
											"end": 11468,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11431,
											"end": 11468,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11431,
											"end": 11468,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11421,
											"end": 11474,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11421,
											"end": 11474,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11421,
											"end": 11474,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11421,
											"end": 11474,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 11480,
											"end": 11660,
											"name": "tag",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 11480,
											"end": 11660,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11528,
											"end": 11605,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11525,
											"end": 11526,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11518,
											"end": 11606,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11625,
											"end": 11629,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 11622,
											"end": 11623,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 11615,
											"end": 11630,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11649,
											"end": 11653,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 11646,
											"end": 11647,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11639,
											"end": 11654,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 11666,
											"end": 11846,
											"name": "tag",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 11666,
											"end": 11846,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11714,
											"end": 11791,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11711,
											"end": 11712,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11704,
											"end": 11792,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11811,
											"end": 11815,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 11808,
											"end": 11809,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 11801,
											"end": 11816,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11835,
											"end": 11839,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 11832,
											"end": 11833,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11825,
											"end": 11840,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 11852,
											"end": 12008,
											"name": "tag",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 11852,
											"end": 12008,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11992,
											"end": 12000,
											"name": "PUSH",
											"source": 6,
											"value": "4C6F636B65640000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11988,
											"end": 11989,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11980,
											"end": 11986,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11976,
											"end": 11990,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11969,
											"end": 12001,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11958,
											"end": 12008,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11958,
											"end": 12008,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 12014,
											"end": 12239,
											"name": "tag",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 12014,
											"end": 12239,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12154,
											"end": 12188,
											"name": "PUSH",
											"source": 6,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 12150,
											"end": 12151,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12142,
											"end": 12148,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12138,
											"end": 12152,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12131,
											"end": 12189,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12223,
											"end": 12231,
											"name": "PUSH",
											"source": 6,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12218,
											"end": 12220,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12210,
											"end": 12216,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12206,
											"end": 12221,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12199,
											"end": 12232,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12120,
											"end": 12239,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12120,
											"end": 12239,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 12245,
											"end": 12410,
											"name": "tag",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 12245,
											"end": 12410,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12385,
											"end": 12402,
											"name": "PUSH",
											"source": 6,
											"value": "5472616E73666572206661696C65640000000000000000000000000000000000"
										},
										{
											"begin": 12381,
											"end": 12382,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12373,
											"end": 12379,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12369,
											"end": 12383,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12362,
											"end": 12403,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12351,
											"end": 12410,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12351,
											"end": 12410,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 12416,
											"end": 12586,
											"name": "tag",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 12416,
											"end": 12586,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12556,
											"end": 12578,
											"name": "PUSH",
											"source": 6,
											"value": "496E73756666696369656E742062616C616E6365000000000000000000000000"
										},
										{
											"begin": 12552,
											"end": 12553,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12544,
											"end": 12550,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12540,
											"end": 12554,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12533,
											"end": 12579,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12522,
											"end": 12586,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12522,
											"end": 12586,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 12592,
											"end": 12773,
											"name": "tag",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 12592,
											"end": 12773,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12732,
											"end": 12765,
											"name": "PUSH",
											"source": 6,
											"value": "416D6F756E742073686F756C642067726561746572207468616E207A65726F00"
										},
										{
											"begin": 12728,
											"end": 12729,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12720,
											"end": 12726,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12716,
											"end": 12730,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12709,
											"end": 12766,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12698,
											"end": 12773,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12698,
											"end": 12773,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 12779,
											"end": 12961,
											"name": "tag",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 12779,
											"end": 12961,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12919,
											"end": 12953,
											"name": "PUSH",
											"source": 6,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 12915,
											"end": 12916,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12907,
											"end": 12913,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12903,
											"end": 12917,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12896,
											"end": 12954,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12885,
											"end": 12961,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12885,
											"end": 12961,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 12967,
											"end": 13192,
											"name": "tag",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 12967,
											"end": 13192,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13107,
											"end": 13141,
											"name": "PUSH",
											"source": 6,
											"value": "5468652063757272656E74207374616B696E6720616374697669747920686173"
										},
										{
											"begin": 13103,
											"end": 13104,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13095,
											"end": 13101,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13091,
											"end": 13105,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13084,
											"end": 13142,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13176,
											"end": 13184,
											"name": "PUSH",
											"source": 6,
											"value": "20656E6465640000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13171,
											"end": 13173,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13163,
											"end": 13169,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13159,
											"end": 13174,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13152,
											"end": 13185,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13073,
											"end": 13192,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13073,
											"end": 13192,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 13198,
											"end": 13379,
											"name": "tag",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 13198,
											"end": 13379,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13338,
											"end": 13371,
											"name": "PUSH",
											"source": 6,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 13334,
											"end": 13335,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13326,
											"end": 13332,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13322,
											"end": 13336,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13315,
											"end": 13372,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13304,
											"end": 13379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13304,
											"end": 13379,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 13385,
											"end": 13507,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 13385,
											"end": 13507,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13458,
											"end": 13482,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "383"
										},
										{
											"begin": 13476,
											"end": 13481,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13458,
											"end": 13482,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 13458,
											"end": 13482,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 13458,
											"end": 13482,
											"name": "tag",
											"source": 6,
											"value": "383"
										},
										{
											"begin": 13458,
											"end": 13482,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13451,
											"end": 13456,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13448,
											"end": 13483,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 13438,
											"end": 13440,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "384"
										},
										{
											"begin": 13438,
											"end": 13440,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13497,
											"end": 13498,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13494,
											"end": 13495,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13487,
											"end": 13499,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 13438,
											"end": 13440,
											"name": "tag",
											"source": 6,
											"value": "384"
										},
										{
											"begin": 13438,
											"end": 13440,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13428,
											"end": 13507,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13428,
											"end": 13507,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 13513,
											"end": 13629,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 13513,
											"end": 13629,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13583,
											"end": 13604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "386"
										},
										{
											"begin": 13598,
											"end": 13603,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13583,
											"end": 13604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "363"
										},
										{
											"begin": 13583,
											"end": 13604,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 13583,
											"end": 13604,
											"name": "tag",
											"source": 6,
											"value": "386"
										},
										{
											"begin": 13583,
											"end": 13604,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13576,
											"end": 13581,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13573,
											"end": 13605,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 13563,
											"end": 13565,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "387"
										},
										{
											"begin": 13563,
											"end": 13565,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13619,
											"end": 13620,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13616,
											"end": 13617,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13609,
											"end": 13621,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 13563,
											"end": 13565,
											"name": "tag",
											"source": 6,
											"value": "387"
										},
										{
											"begin": 13563,
											"end": 13565,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13553,
											"end": 13629,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13553,
											"end": 13629,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 13635,
											"end": 13757,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 13635,
											"end": 13757,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13708,
											"end": 13732,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "389"
										},
										{
											"begin": 13726,
											"end": 13731,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13708,
											"end": 13732,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 13708,
											"end": 13732,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 13708,
											"end": 13732,
											"name": "tag",
											"source": 6,
											"value": "389"
										},
										{
											"begin": 13708,
											"end": 13732,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13701,
											"end": 13706,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13698,
											"end": 13733,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 13688,
											"end": 13690,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 13688,
											"end": 13690,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13747,
											"end": 13748,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13744,
											"end": 13745,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13737,
											"end": 13749,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 13688,
											"end": 13690,
											"name": "tag",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 13688,
											"end": 13690,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13678,
											"end": 13757,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13678,
											"end": 13757,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"claimReward()": "b88a802f",
							"dayTime()": "80c0976e",
							"lockupPeriod()": "ee947a7c",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"rewardRateInit()": "154a78b5",
							"rewardToken()": "f7c618c1",
							"setLockupPeriod(uint256)": "c771c390",
							"setRewardRateInit(uint256)": "fc71ae8c",
							"setRewardToken(address)": "8aee8127",
							"setStakingStartTime(uint256)": "5d90bad9",
							"stake(uint256)": "a694fc3a",
							"stakingBalance(address)": "45bc78ab",
							"stakingReward(address)": "1683153d",
							"stakingStartTime()": "6abfd183",
							"stakingTime(address)": "583d42fd",
							"token()": "fc0c546a",
							"totalReward()": "750142e6",
							"totalStake()": "8b0e9f3f",
							"transferOwnership(address)": "f2fde38b",
							"unStake(uint256)": "5d3eea91"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rewardRateInit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_lockupPeriod\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ClaimReward\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Stake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"UnStake\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dayTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockupPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardRateInit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_lockupPeriod\",\"type\":\"uint256\"}],\"name\":\"setLockupPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardRateInit\",\"type\":\"uint256\"}],\"name\":\"setRewardRateInit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardToken\",\"type\":\"address\"}],\"name\":\"setRewardToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_stakingStartTime\",\"type\":\"uint256\"}],\"name\":\"setStakingStartTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakingBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakingReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakingTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"unStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Defi/StakingPool.sol\":\"StakingPool\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"Defi/StakingPool.sol\":{\"keccak256\":\"0xda1443db2455c07e64b1fd2bd37d3c572228eeb92606601d301de1bc45297673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://55a5c6bf7f1f3e649b44e893f32c1fb7d8d85c263030a85be208c133753cb90d\",\"dweb:/ipfs/QmbFi8Dy2d2SP9ckKqRVYzMsSu2cdCwPb7WLUMCq6eX5gQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "Defi/StakingPool.sol:StakingPool",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 123,
								"contract": "Defi/StakingPool.sol:StakingPool",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 594,
								"contract": "Defi/StakingPool.sol:StakingPool",
								"label": "token",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)244"
							},
							{
								"astId": 597,
								"contract": "Defi/StakingPool.sol:StakingPool",
								"label": "rewardToken",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(IERC20)244"
							},
							{
								"astId": 599,
								"contract": "Defi/StakingPool.sol:StakingPool",
								"label": "rewardRateInit",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 601,
								"contract": "Defi/StakingPool.sol:StakingPool",
								"label": "lockupPeriod",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 603,
								"contract": "Defi/StakingPool.sol:StakingPool",
								"label": "stakingStartTime",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 607,
								"contract": "Defi/StakingPool.sol:StakingPool",
								"label": "stakingBalance",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 611,
								"contract": "Defi/StakingPool.sol:StakingPool",
								"label": "stakingTime",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 615,
								"contract": "Defi/StakingPool.sol:StakingPool",
								"label": "stakingReward",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 617,
								"contract": "Defi/StakingPool.sol:StakingPool",
								"label": "totalStake",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 619,
								"contract": "Defi/StakingPool.sol:StakingPool",
								"label": "totalReward",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 622,
								"contract": "Defi/StakingPool.sol:StakingPool",
								"label": "dayTime",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)244": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							266
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 267,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 266,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								266
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 256,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 256,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							166
						]
					},
					"id": 167,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:1",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 166,
							"linearizedBaseContracts": [
								166
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 118,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 166,
									"src": "1676:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 116,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 117,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 121,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 166,
									"src": "1723:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 119,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 120,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 123,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 166,
									"src": "1767:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 122,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "1811:39:1",
										"statements": [
											{
												"expression": {
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 126,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "1821:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 127,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "1831:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 129,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:1"
											}
										]
									},
									"id": 131,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:1"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:1"
									},
									"scope": 166,
									"src": "1797:53:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 141,
										"nodeType": "Block",
										"src": "2251:79:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 134,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 157,
														"src": "2261:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 136,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:1"
											},
											{
												"id": 137,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:1"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 138,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2303:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:1"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:1",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 142,
									"name": "nonReentrant",
									"nameLocation": "2236:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:1"
									},
									"src": "2227:103:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 156,
										"nodeType": "Block",
										"src": "2375:248:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 146,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 123,
																"src": "2468:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 147,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 121,
																"src": "2479:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 149,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 145,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 151,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:1"
											},
											{
												"expression": {
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 152,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2598:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 153,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "2608:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 155,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:1"
											}
										]
									},
									"id": 157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:1"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:1"
									},
									"scope": 166,
									"src": "2336:287:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 164,
										"nodeType": "Block",
										"src": "2667:171:1",
										"statements": [
											{
												"expression": {
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 160,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2809:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 161,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "2819:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 163,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:1"
											}
										]
									},
									"id": 165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:1"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:1"
									},
									"scope": 166,
									"src": "2629:209:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 167,
							"src": "888:1952:1",
							"usedErrors": []
						}
					],
					"src": "112:2729:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							244
						]
					},
					"id": 245,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 168,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 169,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 244,
							"linearizedBaseContracts": [
								244
							],
							"name": "IERC20",
							"nameLocation": "212:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 178,
									"name": "Transfer",
									"nameLocation": "394:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "403:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "425:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "445:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:2"
									},
									"src": "388:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 187,
									"name": "Approval",
									"nameLocation": "625:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "634:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "657:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "682:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:2"
									},
									"src": "619:78:2"
								},
								{
									"documentation": {
										"id": 188,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 193,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 244,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 194,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 201,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 244,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 211,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1211:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1223:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:2"
									},
									"returnParameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1257:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 208,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:2"
									},
									"scope": 244,
									"src": "1193:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 221,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "1557:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "1572:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:2"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "1612:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:2"
									},
									"scope": 244,
									"src": "1538:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 231,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2291:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2308:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:2"
									},
									"returnParameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2342:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 228,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:2"
									},
									"scope": 244,
									"src": "2274:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:2",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 243,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "2677:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "2699:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "2719:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:2"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "2758:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 240,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:2"
									},
									"scope": 244,
									"src": "2646:118:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 245,
							"src": "202:2564:2",
							"usedErrors": []
						}
					],
					"src": "106:2661:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							266
						]
					},
					"id": 267,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 246,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 247,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 266,
							"linearizedBaseContracts": [
								266
							],
							"name": "Context",
							"nameLocation": "626:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "702:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 252,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 251,
												"id": 254,
												"nodeType": "Return",
												"src": "712:17:3"
											}
										]
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:3"
									},
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "693:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:3"
									},
									"scope": 266,
									"src": "640:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 264,
										"nodeType": "Block",
										"src": "809:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 261,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 260,
												"id": 263,
												"nodeType": "Return",
												"src": "819:15:3"
											}
										]
									},
									"id": 265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:3"
									},
									"returnParameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "793:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 258,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:3"
									},
									"scope": 266,
									"src": "742:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 267,
							"src": "608:235:3",
							"usedErrors": []
						}
					],
					"src": "86:758:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							578
						]
					},
					"id": 579,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 268,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 269,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:4",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 578,
							"linearizedBaseContracts": [
								578
							],
							"name": "SafeMath",
							"nameLocation": "490:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "717:140:4",
										"statements": [
											{
												"id": 299,
												"nodeType": "UncheckedBlock",
												"src": "727:124:4",
												"statements": [
													{
														"assignments": [
															282
														],
														"declarations": [
															{
																"constant": false,
																"id": 282,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 299,
																"src": "751:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 281,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 286,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 283,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "763:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 284,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 274,
																"src": "767:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 289,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 287,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 282,
																"src": "786:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 288,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "790:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 294,
														"nodeType": "IfStatement",
														"src": "782:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 290,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 291,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 292,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 280,
															"id": 293,
															"nodeType": "Return",
															"src": "793:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 295,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 296,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 282,
																	"src": "838:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 297,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 280,
														"id": 298,
														"nodeType": "Return",
														"src": "824:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 270,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:4",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "657:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "668:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:4"
									},
									"returnParameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "702:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 276,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "708:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:4"
									},
									"scope": 578,
									"src": "641:216:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 328,
										"nodeType": "Block",
										"src": "1078:113:4",
										"statements": [
											{
												"id": 327,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 315,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 313,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "1116:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 314,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 304,
																"src": "1120:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 320,
														"nodeType": "IfStatement",
														"src": "1112:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 316,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 317,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 318,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 312,
															"id": 319,
															"nodeType": "Return",
															"src": "1123:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 321,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 324,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 322,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 304,
																		"src": "1168:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 323,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 306,
																		"src": "1172:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 325,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 312,
														"id": 326,
														"nodeType": "Return",
														"src": "1154:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 302,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:4",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "1018:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "1029:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:4"
									},
									"returnParameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "1063:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 308,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "1069:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:4"
									},
									"scope": 578,
									"src": "1002:189:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 370,
										"nodeType": "Block",
										"src": "1415:417:4",
										"statements": [
											{
												"id": 369,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 341,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 332,
																"src": "1683:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 342,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 348,
														"nodeType": "IfStatement",
														"src": "1679:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 344,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 345,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 346,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 340,
															"id": 347,
															"nodeType": "Return",
															"src": "1691:16:4"
														}
													},
													{
														"assignments": [
															350
														],
														"declarations": [
															{
																"constant": false,
																"id": 350,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 369,
																"src": "1721:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 349,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 354,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 351,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 332,
																"src": "1733:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 352,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 334,
																"src": "1737:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 357,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 355,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 350,
																	"src": "1756:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 356,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 332,
																	"src": "1760:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 358,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 334,
																"src": "1765:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 364,
														"nodeType": "IfStatement",
														"src": "1752:33:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 360,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 361,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 362,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 340,
															"id": 363,
															"nodeType": "Return",
															"src": "1768:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 366,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 350,
																	"src": "1813:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 367,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 340,
														"id": 368,
														"nodeType": "Return",
														"src": "1799:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:4",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 371,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "1355:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "1366:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:4"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "1400:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 336,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "1406:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:4"
									},
									"scope": 578,
									"src": "1339:493:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 398,
										"nodeType": "Block",
										"src": "2057:114:4",
										"statements": [
											{
												"id": 397,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 383,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 376,
																"src": "2095:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 384,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 390,
														"nodeType": "IfStatement",
														"src": "2091:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 386,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 388,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 382,
															"id": 389,
															"nodeType": "Return",
															"src": "2103:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 392,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 374,
																		"src": "2148:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 393,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 376,
																		"src": "2152:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 395,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 382,
														"id": 396,
														"nodeType": "Return",
														"src": "2134:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 372,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:4",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "1997:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "2008:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:4"
									},
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "2042:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 378,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "2048:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:4"
									},
									"scope": 578,
									"src": "1981:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "2406:114:4",
										"statements": [
											{
												"id": 425,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 411,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 404,
																"src": "2444:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 412,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 418,
														"nodeType": "IfStatement",
														"src": "2440:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 414,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 415,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 416,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 410,
															"id": 417,
															"nodeType": "Return",
															"src": "2452:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 419,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 422,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 420,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 402,
																		"src": "2497:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 421,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 404,
																		"src": "2501:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 423,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 410,
														"id": 424,
														"nodeType": "Return",
														"src": "2483:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "2346:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "2357:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:4"
									},
									"returnParameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "2391:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 406,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "2397:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:4"
									},
									"scope": 578,
									"src": "2330:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "2822:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 437,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 430,
														"src": "2839:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 438,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 432,
														"src": "2843:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 436,
												"id": 440,
												"nodeType": "Return",
												"src": "2832:12:4"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:4",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2768:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2779:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:4"
									},
									"returnParameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2813:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:4"
									},
									"scope": 578,
									"src": "2755:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 456,
										"nodeType": "Block",
										"src": "3189:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 452,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "3206:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 453,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "3210:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 451,
												"id": 455,
												"nodeType": "Return",
												"src": "3199:12:4"
											}
										]
									},
									"documentation": {
										"id": 443,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 457,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "3135:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "3146:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:4"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "3180:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:4"
									},
									"scope": 578,
									"src": "3122:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 471,
										"nodeType": "Block",
										"src": "3532:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 467,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 460,
														"src": "3549:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 468,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 462,
														"src": "3553:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 466,
												"id": 470,
												"nodeType": "Return",
												"src": "3542:12:4"
											}
										]
									},
									"documentation": {
										"id": 458,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:4",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 472,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "3478:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "3489:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:4"
									},
									"returnParameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "3523:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:4"
									},
									"scope": 578,
									"src": "3465:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 486,
										"nodeType": "Block",
										"src": "3917:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 482,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 475,
														"src": "3934:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 483,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 477,
														"src": "3938:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 481,
												"id": 485,
												"nodeType": "Return",
												"src": "3927:12:4"
											}
										]
									},
									"documentation": {
										"id": 473,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:4",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 487,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "3863:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "3874:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:4"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "3908:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:4"
									},
									"scope": 578,
									"src": "3850:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 501,
										"nodeType": "Block",
										"src": "4466:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 497,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 490,
														"src": "4483:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 498,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 492,
														"src": "4487:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 496,
												"id": 500,
												"nodeType": "Return",
												"src": "4476:12:4"
											}
										]
									},
									"documentation": {
										"id": 488,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 502,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "4412:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "4423:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:4"
									},
									"returnParameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "4457:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 494,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:4"
									},
									"scope": 578,
									"src": "4399:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 526,
										"nodeType": "Block",
										"src": "5084:106:4",
										"statements": [
											{
												"id": 525,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 515,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 507,
																		"src": "5126:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 516,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 505,
																		"src": "5131:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 518,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 509,
																	"src": "5134:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 514,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 520,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 521,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 505,
																"src": "5168:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 522,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 507,
																"src": "5172:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 513,
														"id": 524,
														"nodeType": "Return",
														"src": "5161:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 527,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "4981:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "5000:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "5019:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 508,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:4"
									},
									"returnParameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "5075:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:4"
									},
									"scope": 578,
									"src": "4959:231:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 551,
										"nodeType": "Block",
										"src": "5799:105:4",
										"statements": [
											{
												"id": 550,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 540,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 532,
																		"src": "5841:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 541,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 543,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 534,
																	"src": "5848:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 539,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 545,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 548,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 546,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 530,
																"src": "5882:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 547,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 532,
																"src": "5886:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 538,
														"id": 549,
														"nodeType": "Return",
														"src": "5875:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 528,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:4",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 552,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "5696:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "5715:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "5734:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 533,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:4"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "5790:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:4"
									},
									"scope": 578,
									"src": "5674:230:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 576,
										"nodeType": "Block",
										"src": "6675:105:4",
										"statements": [
											{
												"id": 575,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 567,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 565,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 557,
																		"src": "6717:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 566,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 568,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 559,
																	"src": "6724:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 564,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 570,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 571,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 555,
																"src": "6758:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 572,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 557,
																"src": "6762:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 563,
														"id": 574,
														"nodeType": "Return",
														"src": "6751:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 553,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 577,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "6572:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "6591:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 556,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "6610:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 558,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:4"
									},
									"returnParameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "6666:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:4"
									},
									"scope": 578,
									"src": "6550:230:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 579,
							"src": "482:6300:4",
							"usedErrors": []
						}
					],
					"src": "107:6676:4"
				},
				"id": 4
			},
			"Defi/StakingPool.sol": {
				"ast": {
					"absolutePath": "Defi/StakingPool.sol",
					"exportedSymbols": {
						"Context": [
							266
						],
						"IERC20": [
							244
						],
						"Ownable": [
							112
						],
						"ReentrancyGuard": [
							166
						],
						"SafeMath": [
							578
						],
						"StakingPool": [
							1001
						]
					},
					"id": 1002,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 580,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 581,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1002,
							"sourceUnit": 245,
							"src": "57:56:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 582,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1002,
							"sourceUnit": 113,
							"src": "114:52:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 583,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1002,
							"sourceUnit": 167,
							"src": "167:62:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 584,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1002,
							"sourceUnit": 579,
							"src": "230:57:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 585,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "313:7:5"
									},
									"id": 586,
									"nodeType": "InheritanceSpecifier",
									"src": "313:7:5"
								},
								{
									"baseName": {
										"id": 587,
										"name": "ReentrancyGuard",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 166,
										"src": "322:15:5"
									},
									"id": 588,
									"nodeType": "InheritanceSpecifier",
									"src": "322:15:5"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1001,
							"linearizedBaseContracts": [
								1001,
								166,
								112,
								266
							],
							"name": "StakingPool",
							"nameLocation": "298:11:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 591,
									"libraryName": {
										"id": 589,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 578,
										"src": "350:8:5"
									},
									"nodeType": "UsingForDirective",
									"src": "344:27:5",
									"typeName": {
										"id": 590,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "363:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 594,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "391:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 1001,
									"src": "377:19:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$244",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 593,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 592,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 244,
											"src": "377:6:5"
										},
										"referencedDeclaration": 244,
										"src": "377:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$244",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f7c618c1",
									"id": 597,
									"mutability": "mutable",
									"name": "rewardToken",
									"nameLocation": "456:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 1001,
									"src": "442:25:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$244",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 596,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 595,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 244,
											"src": "442:6:5"
										},
										"referencedDeclaration": 244,
										"src": "442:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$244",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "154a78b5",
									"id": 599,
									"mutability": "mutable",
									"name": "rewardRateInit",
									"nameLocation": "532:14:5",
									"nodeType": "VariableDeclaration",
									"scope": 1001,
									"src": "517:29:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 598,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "517:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ee947a7c",
									"id": 601,
									"mutability": "mutable",
									"name": "lockupPeriod",
									"nameLocation": "602:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 1001,
									"src": "587:27:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 600,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "587:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6abfd183",
									"id": 603,
									"mutability": "mutable",
									"name": "stakingStartTime",
									"nameLocation": "676:16:5",
									"nodeType": "VariableDeclaration",
									"scope": 1001,
									"src": "661:31:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 602,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "661:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "45bc78ab",
									"id": 607,
									"mutability": "mutable",
									"name": "stakingBalance",
									"nameLocation": "767:14:5",
									"nodeType": "VariableDeclaration",
									"scope": 1001,
									"src": "732:49:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 606,
										"keyType": {
											"id": 604,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "740:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "732:27:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 605,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "751:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "583d42fd",
									"id": 611,
									"mutability": "mutable",
									"name": "stakingTime",
									"nameLocation": "860:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 1001,
									"src": "825:46:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 610,
										"keyType": {
											"id": 608,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "833:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "825:27:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 609,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "844:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1683153d",
									"id": 615,
									"mutability": "mutable",
									"name": "stakingReward",
									"nameLocation": "947:13:5",
									"nodeType": "VariableDeclaration",
									"scope": 1001,
									"src": "912:48:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 614,
										"keyType": {
											"id": 612,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "920:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "912:27:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 613,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "931:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8b0e9f3f",
									"id": 617,
									"mutability": "mutable",
									"name": "totalStake",
									"nameLocation": "1027:10:5",
									"nodeType": "VariableDeclaration",
									"scope": 1001,
									"src": "1012:25:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 616,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1012:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "750142e6",
									"id": 619,
									"mutability": "mutable",
									"name": "totalReward",
									"nameLocation": "1087:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 1001,
									"src": "1072:26:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 618,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1072:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "80c0976e",
									"id": 622,
									"mutability": "mutable",
									"name": "dayTime",
									"nameLocation": "1145:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 1001,
									"src": "1130:30:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 620,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1130:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3836343030",
										"id": 621,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1155:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_86400_by_1",
											"typeString": "int_const 86400"
										},
										"value": "86400"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 628,
									"name": "Stake",
									"nameLocation": "1202:5:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1224:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "1208:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1208:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1238:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "1230:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1230:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1207:38:5"
									},
									"src": "1196:50:5"
								},
								{
									"anonymous": false,
									"id": 634,
									"name": "UnStake",
									"nameLocation": "1257:7:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1281:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "1265:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1265:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1295:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "1287:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1287:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1264:38:5"
									},
									"src": "1251:52:5"
								},
								{
									"anonymous": false,
									"id": 640,
									"name": "ClaimReward",
									"nameLocation": "1314:11:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1342:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "1326:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1326:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1356:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "1348:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1348:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1325:38:5"
									},
									"src": "1308:56:5"
								},
								{
									"body": {
										"id": 676,
										"nodeType": "Block",
										"src": "1468:207:5",
										"statements": [
											{
												"expression": {
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 651,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "1478:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$244",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 653,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 642,
																"src": "1493:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 652,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "1486:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$244_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 654,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1486:14:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$244",
															"typeString": "contract IERC20"
														}
													},
													"src": "1478:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$244",
														"typeString": "contract IERC20"
													}
												},
												"id": 656,
												"nodeType": "ExpressionStatement",
												"src": "1478:22:5"
											},
											{
												"expression": {
													"id": 661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 657,
														"name": "rewardToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "1510:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$244",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 659,
																"name": "_rewardToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 644,
																"src": "1531:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 658,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "1524:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$244_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 660,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1524:20:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$244",
															"typeString": "contract IERC20"
														}
													},
													"src": "1510:34:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$244",
														"typeString": "contract IERC20"
													}
												},
												"id": 662,
												"nodeType": "ExpressionStatement",
												"src": "1510:34:5"
											},
											{
												"expression": {
													"id": 665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 663,
														"name": "rewardRateInit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 599,
														"src": "1554:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 664,
														"name": "_rewardRateInit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 646,
														"src": "1571:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1554:32:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 666,
												"nodeType": "ExpressionStatement",
												"src": "1554:32:5"
											},
											{
												"expression": {
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 667,
														"name": "lockupPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 601,
														"src": "1596:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 668,
														"name": "_lockupPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 648,
														"src": "1611:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1596:28:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "1596:28:5"
											},
											{
												"expression": {
													"id": 674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 671,
														"name": "stakingStartTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 603,
														"src": "1634:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 672,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1653:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 673,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1653:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1634:34:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 675,
												"nodeType": "ExpressionStatement",
												"src": "1634:34:5"
											}
										]
									},
									"id": 677,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "1390:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "1382:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1382:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "_rewardToken",
												"nameLocation": "1406:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "1398:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 643,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1398:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "_rewardRateInit",
												"nameLocation": "1428:15:5",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "1420:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1420:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "_lockupPeriod",
												"nameLocation": "1453:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "1445:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1445:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1381:86:5"
									},
									"returnParameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1468:0:5"
									},
									"scope": 1001,
									"src": "1370:305:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 777,
										"nodeType": "Block",
										"src": "1755:675:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 690,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 685,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1773:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 686,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1773:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 689,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 687,
																	"name": "stakingStartTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 603,
																	"src": "1791:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 688,
																	"name": "lockupPeriod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 601,
																	"src": "1810:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1791:31:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1773:49:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5468652063757272656e74207374616b696e672061637469766974792068617320656e646564",
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1824:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bb49972f036ceb7f98bbdcfadc5b5745930b5203ea6a23b47522e300d5db612c",
																"typeString": "literal_string \"The current staking activity has ended\""
															},
															"value": "The current staking activity has ended"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bb49972f036ceb7f98bbdcfadc5b5745930b5203ea6a23b47522e300d5db612c",
																"typeString": "literal_string \"The current staking activity has ended\""
															}
														],
														"id": 684,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1765:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1765:100:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 693,
												"nodeType": "ExpressionStatement",
												"src": "1765:100:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 697,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 695,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 679,
																"src": "1883:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1893:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1883:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e742073686f756c642067726561746572207468616e207a65726f",
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1896:33:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7e6097df28dbd6e8fac3ec6a9281335c312bc8a436c798b83190edcb63f5401f",
																"typeString": "literal_string \"Amount should greater than zero\""
															},
															"value": "Amount should greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7e6097df28dbd6e8fac3ec6a9281335c312bc8a436c798b83190edcb63f5401f",
																"typeString": "literal_string \"Amount should greater than zero\""
															}
														],
														"id": 694,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1875:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1875:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 700,
												"nodeType": "ExpressionStatement",
												"src": "1875:55:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 704,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1967:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 705,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1967:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 708,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1987:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_StakingPool_$1001",
																				"typeString": "contract StakingPool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_StakingPool_$1001",
																				"typeString": "contract StakingPool"
																			}
																		],
																		"id": 707,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1979:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 706,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1979:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 709,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1979:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 710,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 679,
																	"src": "1994:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 702,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 594,
																	"src": "1948:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$244",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 703,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 243,
																"src": "1948:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 711,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1948:54:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 712,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2004:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 701,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1940:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1940:82:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 714,
												"nodeType": "ExpressionStatement",
												"src": "1940:82:5"
											},
											{
												"expression": {
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 715,
															"name": "stakingBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "2032:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 718,
														"indexExpression": {
															"expression": {
																"id": 716,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2047:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2047:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2032:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 724,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 679,
																"src": "2092:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 719,
																	"name": "stakingBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 607,
																	"src": "2061:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 722,
																"indexExpression": {
																	"expression": {
																		"id": 720,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2076:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 721,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2076:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2061:26:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 723,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 442,
															"src": "2061:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 725,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2061:39:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2032:68:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 727,
												"nodeType": "ExpressionStatement",
												"src": "2032:68:5"
											},
											{
												"expression": {
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 728,
															"name": "stakingTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "2110:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 731,
														"indexExpression": {
															"expression": {
																"id": 729,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2122:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2122:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2110:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 732,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2136:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 733,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2136:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2110:41:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 735,
												"nodeType": "ExpressionStatement",
												"src": "2110:41:5"
											},
											{
												"assignments": [
													737
												],
												"declarations": [
													{
														"constant": false,
														"id": 737,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "2169:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 777,
														"src": "2161:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 736,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2161:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 743,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 739,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2195:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 740,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2195:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 741,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "2206:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 738,
														"name": "getRewardForUser",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 938,
														"src": "2178:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) view returns (uint256)"
														}
													},
													"id": 742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2178:36:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2161:53:5"
											},
											{
												"expression": {
													"id": 755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 744,
															"name": "stakingReward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 615,
															"src": "2224:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 747,
														"indexExpression": {
															"expression": {
																"id": 745,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2238:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2238:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2224:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 753,
																"name": "reward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 737,
																"src": "2282:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 748,
																	"name": "stakingReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 615,
																	"src": "2252:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 751,
																"indexExpression": {
																	"expression": {
																		"id": 749,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2266:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 750,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2266:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2252:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 752,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 442,
															"src": "2252:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 754,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2252:37:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2224:65:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 756,
												"nodeType": "ExpressionStatement",
												"src": "2224:65:5"
											},
											{
												"expression": {
													"id": 762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 757,
														"name": "totalStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 617,
														"src": "2299:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 760,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 679,
																"src": "2327:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 758,
																"name": "totalStake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 617,
																"src": "2312:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 759,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 442,
															"src": "2312:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 761,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2312:23:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2299:36:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 763,
												"nodeType": "ExpressionStatement",
												"src": "2299:36:5"
											},
											{
												"expression": {
													"id": 769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 764,
														"name": "totalReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 619,
														"src": "2345:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 767,
																"name": "reward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 737,
																"src": "2375:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 765,
																"name": "totalReward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 619,
																"src": "2359:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 442,
															"src": "2359:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 768,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2359:23:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2345:37:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 770,
												"nodeType": "ExpressionStatement",
												"src": "2345:37:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 772,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2403:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 773,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2403:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 774,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "2415:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 771,
														"name": "Stake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 628,
														"src": "2397:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2397:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 776,
												"nodeType": "EmitStatement",
												"src": "2392:31:5"
											}
										]
									},
									"functionSelector": "a694fc3a",
									"id": 778,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 682,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 681,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 142,
												"src": "1742:12:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1742:12:5"
										}
									],
									"name": "stake",
									"nameLocation": "1710:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1724:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "1716:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1716:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1715:17:5"
									},
									"returnParameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1755:0:5"
									},
									"scope": 1001,
									"src": "1701:729:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 842,
										"nodeType": "Block",
										"src": "2539:408:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 792,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 786,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2557:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 787,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2557:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 790,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 788,
																			"name": "stakingStartTime",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 603,
																			"src": "2577:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 789,
																			"name": "lockupPeriod",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 601,
																			"src": "2596:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2577:31:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 791,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2576:33:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2557:52:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c6f636b6564",
															"id": 793,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2611:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_10bc01d611f2c803e55ff98d999836f196afae7cf91f96f3b6f511e56ba84974",
																"typeString": "literal_string \"Locked\""
															},
															"value": "Locked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_10bc01d611f2c803e55ff98d999836f196afae7cf91f96f3b6f511e56ba84974",
																"typeString": "literal_string \"Locked\""
															}
														],
														"id": 785,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2549:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2549:71:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 795,
												"nodeType": "ExpressionStatement",
												"src": "2549:71:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 797,
																	"name": "stakingBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 607,
																	"src": "2638:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 800,
																"indexExpression": {
																	"expression": {
																		"id": 798,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2653:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 799,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2653:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2638:26:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 801,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 780,
																"src": "2668:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2638:37:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 803,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2677:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 796,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2630:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2630:70:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 805,
												"nodeType": "ExpressionStatement",
												"src": "2630:70:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 809,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2733:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 810,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2733:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 811,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 780,
																	"src": "2745:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 807,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 594,
																	"src": "2718:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$244",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 808,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 211,
																"src": "2718:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2718:35:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 813,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2755:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 806,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2710:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2710:63:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 815,
												"nodeType": "ExpressionStatement",
												"src": "2710:63:5"
											},
											{
												"expression": {
													"id": 827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 816,
															"name": "stakingBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "2783:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 819,
														"indexExpression": {
															"expression": {
																"id": 817,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2798:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 818,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2798:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2783:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 825,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 780,
																"src": "2843:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 820,
																	"name": "stakingBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 607,
																	"src": "2812:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 823,
																"indexExpression": {
																	"expression": {
																		"id": 821,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2827:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 822,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2827:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2812:26:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 824,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 457,
															"src": "2812:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 826,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2812:39:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2783:68:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 828,
												"nodeType": "ExpressionStatement",
												"src": "2783:68:5"
											},
											{
												"expression": {
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 829,
														"name": "totalStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 617,
														"src": "2861:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 832,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 780,
																"src": "2889:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 830,
																"name": "totalStake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 617,
																"src": "2874:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 831,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 457,
															"src": "2874:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 833,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2874:23:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2861:36:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 835,
												"nodeType": "ExpressionStatement",
												"src": "2861:36:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 837,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2920:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 838,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2920:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 839,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 780,
															"src": "2932:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 836,
														"name": "UnStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 634,
														"src": "2912:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2912:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 841,
												"nodeType": "EmitStatement",
												"src": "2907:33:5"
											}
										]
									},
									"functionSelector": "5d3eea91",
									"id": 843,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 783,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 782,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 142,
												"src": "2526:12:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2526:12:5"
										}
									],
									"name": "unStake",
									"nameLocation": "2492:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2508:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "2500:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 779,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2500:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2499:17:5"
									},
									"returnParameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2539:0:5"
									},
									"scope": 1001,
									"src": "2483:464:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 896,
										"nodeType": "Block",
										"src": "3018:348:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 855,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 849,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "3036:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 850,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "3036:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 853,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 851,
																			"name": "stakingStartTime",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 603,
																			"src": "3056:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 852,
																			"name": "lockupPeriod",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 601,
																			"src": "3075:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3056:31:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 854,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3055:33:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3036:52:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c6f636b6564",
															"id": 856,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3090:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_10bc01d611f2c803e55ff98d999836f196afae7cf91f96f3b6f511e56ba84974",
																"typeString": "literal_string \"Locked\""
															},
															"value": "Locked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_10bc01d611f2c803e55ff98d999836f196afae7cf91f96f3b6f511e56ba84974",
																"typeString": "literal_string \"Locked\""
															}
														],
														"id": 848,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3028:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3028:71:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 858,
												"nodeType": "ExpressionStatement",
												"src": "3028:71:5"
											},
											{
												"assignments": [
													860
												],
												"declarations": [
													{
														"constant": false,
														"id": 860,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "3117:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 896,
														"src": "3109:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 859,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3109:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 865,
												"initialValue": {
													"baseExpression": {
														"id": 861,
														"name": "stakingReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "3126:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 864,
													"indexExpression": {
														"expression": {
															"id": 862,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3140:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 863,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3140:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3126:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3109:42:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 869,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3190:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 870,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3190:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 871,
																	"name": "reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 860,
																	"src": "3202:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 867,
																	"name": "rewardToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 597,
																	"src": "3169:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$244",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 868,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 211,
																"src": "3169:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3169:40:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 873,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3211:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 866,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3161:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3161:68:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 875,
												"nodeType": "ExpressionStatement",
												"src": "3161:68:5"
											},
											{
												"expression": {
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 876,
															"name": "stakingReward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 615,
															"src": "3239:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 879,
														"indexExpression": {
															"expression": {
																"id": 877,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3253:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 878,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3253:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3239:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 880,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3265:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3239:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 882,
												"nodeType": "ExpressionStatement",
												"src": "3239:27:5"
											},
											{
												"expression": {
													"id": 888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 883,
														"name": "totalReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 619,
														"src": "3276:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 886,
																"name": "reward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 860,
																"src": "3306:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 884,
																"name": "totalReward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 619,
																"src": "3290:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 885,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 457,
															"src": "3290:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 887,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3290:23:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3276:37:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 889,
												"nodeType": "ExpressionStatement",
												"src": "3276:37:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 891,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3340:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 892,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3340:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 893,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 860,
															"src": "3352:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 890,
														"name": "ClaimReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 640,
														"src": "3328:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3328:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 895,
												"nodeType": "EmitStatement",
												"src": "3323:36:5"
											}
										]
									},
									"functionSelector": "b88a802f",
									"id": 897,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 846,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 845,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 142,
												"src": "3005:12:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "3005:12:5"
										}
									],
									"name": "claimReward",
									"nameLocation": "2982:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2993:2:5"
									},
									"returnParameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3018:0:5"
									},
									"scope": 1001,
									"src": "2973:393:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 937,
										"nodeType": "Block",
										"src": "3519:401:5",
										"statements": [
											{
												"assignments": [
													907
												],
												"declarations": [
													{
														"constant": false,
														"id": 907,
														"mutability": "mutable",
														"name": "stakingDaysRemaining",
														"nameLocation": "3537:20:5",
														"nodeType": "VariableDeclaration",
														"scope": 937,
														"src": "3529:28:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 906,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3529:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 918,
												"initialValue": {
													"arguments": [
														{
															"baseExpression": {
																"id": 914,
																"name": "stakingTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 611,
																"src": "3601:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 916,
															"indexExpression": {
																"id": 915,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 899,
																"src": "3613:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3601:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"components": [
																{
																	"arguments": [
																		{
																			"id": 910,
																			"name": "stakingStartTime",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 603,
																			"src": "3578:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 908,
																			"name": "lockupPeriod",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 601,
																			"src": "3561:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 909,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 442,
																		"src": "3561:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 911,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3561:34:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 912,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3560:36:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 913,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 457,
														"src": "3560:40:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3560:62:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3529:93:5"
											},
											{
												"assignments": [
													920
												],
												"declarations": [
													{
														"constant": false,
														"id": 920,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "3806:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 937,
														"src": "3798:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 919,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3798:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 934,
												"initialValue": {
													"arguments": [
														{
															"id": 932,
															"name": "dayTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 622,
															"src": "3882:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 929,
																	"name": "stakingDaysRemaining",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 907,
																	"src": "3856:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 926,
																			"name": "rewardRateInit",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 599,
																			"src": "3836:14:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"hexValue": "316536",
																					"id": 923,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3827:3:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1000000_by_1",
																						"typeString": "int_const 1000000"
																					},
																					"value": "1e6"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_1000000_by_1",
																						"typeString": "int_const 1000000"
																					}
																				],
																				"expression": {
																					"id": 921,
																					"name": "_amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 901,
																					"src": "3815:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 922,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 487,
																				"src": "3815:11:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 924,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3815:16:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 925,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 472,
																		"src": "3815:20:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 927,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3815:36:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 928,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 472,
																"src": "3815:40:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 930,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3815:62:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 931,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 487,
														"src": "3815:66:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3815:75:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3798:92:5"
											},
											{
												"expression": {
													"id": 935,
													"name": "reward",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 920,
													"src": "3907:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 905,
												"id": 936,
												"nodeType": "Return",
												"src": "3900:13:5"
											}
										]
									},
									"id": 938,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRewardForUser",
									"nameLocation": "3437:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3462:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "3454:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 898,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3454:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "3478:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "3470:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3470:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3453:33:5"
									},
									"returnParameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "3510:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3510:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3509:9:5"
									},
									"scope": 1001,
									"src": "3428:492:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 951,
										"nodeType": "Block",
										"src": "4023:51:5",
										"statements": [
											{
												"expression": {
													"id": 949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 945,
														"name": "rewardToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "4033:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$244",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 947,
																"name": "_rewardToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 940,
																"src": "4054:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 946,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "4047:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$244_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 948,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4047:20:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$244",
															"typeString": "contract IERC20"
														}
													},
													"src": "4033:34:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$244",
														"typeString": "contract IERC20"
													}
												},
												"id": 950,
												"nodeType": "ExpressionStatement",
												"src": "4033:34:5"
											}
										]
									},
									"functionSelector": "8aee8127",
									"id": 952,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 943,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 942,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "4013:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "4013:9:5"
										}
									],
									"name": "setRewardToken",
									"nameLocation": "3967:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "_rewardToken",
												"nameLocation": "3990:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "3982:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 939,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3982:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3981:22:5"
									},
									"returnParameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4023:0:5"
									},
									"scope": 1001,
									"src": "3958:116:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 963,
										"nodeType": "Block",
										"src": "4193:53:5",
										"statements": [
											{
												"expression": {
													"id": 961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 959,
														"name": "stakingStartTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 603,
														"src": "4203:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 960,
														"name": "_stakingStartTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 954,
														"src": "4222:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4203:36:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 962,
												"nodeType": "ExpressionStatement",
												"src": "4203:36:5"
											}
										]
									},
									"functionSelector": "5d90bad9",
									"id": 964,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 957,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 956,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "4183:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "4183:9:5"
										}
									],
									"name": "setStakingStartTime",
									"nameLocation": "4127:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "_stakingStartTime",
												"nameLocation": "4155:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "4147:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4147:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4146:27:5"
									},
									"returnParameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4193:0:5"
									},
									"scope": 1001,
									"src": "4118:128:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 975,
										"nodeType": "Block",
										"src": "4359:45:5",
										"statements": [
											{
												"expression": {
													"id": 973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 971,
														"name": "lockupPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 601,
														"src": "4369:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 972,
														"name": "_lockupPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 966,
														"src": "4384:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4369:28:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 974,
												"nodeType": "ExpressionStatement",
												"src": "4369:28:5"
											}
										]
									},
									"functionSelector": "c771c390",
									"id": 976,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 969,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 968,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "4349:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "4349:9:5"
										}
									],
									"name": "setLockupPeriod",
									"nameLocation": "4301:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "_lockupPeriod",
												"nameLocation": "4325:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "4317:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 965,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4317:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4316:23:5"
									},
									"returnParameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4359:0:5"
									},
									"scope": 1001,
									"src": "4292:112:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 987,
										"nodeType": "Block",
										"src": "4515:49:5",
										"statements": [
											{
												"expression": {
													"id": 985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 983,
														"name": "rewardRateInit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 599,
														"src": "4525:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 984,
														"name": "_rewardRateInit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "4542:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4525:32:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 986,
												"nodeType": "ExpressionStatement",
												"src": "4525:32:5"
											}
										]
									},
									"functionSelector": "fc71ae8c",
									"id": 988,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 981,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 980,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "4505:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "4505:9:5"
										}
									],
									"name": "setRewardRateInit",
									"nameLocation": "4453:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "_rewardRateInit",
												"nameLocation": "4479:15:5",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "4471:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 977,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4471:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4470:25:5"
									},
									"returnParameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4515:0:5"
									},
									"scope": 1001,
									"src": "4444:120:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 999,
										"nodeType": "Block",
										"src": "4668:48:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 995,
														"name": "stakingBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 607,
														"src": "4685:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 997,
													"indexExpression": {
														"id": 996,
														"name": "_address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 990,
														"src": "4700:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4685:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 994,
												"id": 998,
												"nodeType": "Return",
												"src": "4678:31:5"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 1000,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "4609:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "4627:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "4619:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 989,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4619:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4618:18:5"
									},
									"returnParameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "4660:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 992,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4660:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4659:9:5"
									},
									"scope": 1001,
									"src": "4600:116:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1002,
							"src": "289:4429:5",
							"usedErrors": []
						}
					],
					"src": "32:4686:5"
				},
				"id": 5
			}
		}
	}
}