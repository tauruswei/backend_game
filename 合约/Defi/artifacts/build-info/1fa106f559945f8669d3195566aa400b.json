{
	"id": "1fa106f559945f8669d3195566aa400b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.1",
	"solcLongVersion": "0.8.1+commit.df193b15",
	"input": {
		"language": "Solidity",
		"sources": {
			"StakingWithRewards1.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\n\ncontract Staking is Ownable, ReentrancyGuard {\n    IERC20 public  token;                   // 要质押的 ERC20 代币\n    IERC20 public  rewardToken;             // 奖励代币，本例中是 USDT\n    uint256 public rewardRateInit;          // 第一天的奖励率，每个代币的总收益为 0.01 USDT\n    uint256 public lockupPeriod;            // 锁定期，初步设为 90 天\n    uint256 public stakingStartTime;        // 项目 staking 开始时间\n\n    mapping(address => uint256) public stakingBalance;  // 各个用户质押的代币数量\n    mapping(address => uint256) public stakingTime;     // 各个用户质押的时间\n    mapping(address => uint256) public stakingReward;   // 各个用户已经获得的奖励金额\n\n    event Stake(address indexed user, uint256 amount);\n    event UnStake(address indexed user, uint256 amount);\n    event ClaimReward(address indexed user, uint256 amount);\n\n    constructor(address _token, address _rewardToken, uint256 _rewardRateInit, uint256 _lockupPeriod) {\n        token = IERC20(_token);\n        rewardToken = IERC20(_rewardToken);\n        rewardRateInit = _rewardRateInit;\n        lockupPeriod = _lockupPeriod;\n        stakingStartTime = block.timestamp;\n    }\n\n    // 质押代币\n    function stake(uint256 _amount) external nonReentrant {\n        require(_amount > 0, \"Amount should greater than zero\");\n        require(token.transferFrom(msg.sender, address(this), _amount), \"Transfer failed\");\n        stakingBalance[msg.sender] += _amount;\n        stakingTime[msg.sender] = block.timestamp;\n        emit Stake(msg.sender, _amount);\n    }\n\n    // 撤回代币，仅在锁定期后允许\n    function withdraw(uint256 _amount) external nonReentrant {\n        require(block.timestamp >= (stakingStartTime + lockupPeriod), \"Locked\");\n        require(stakingBalance[msg.sender]>=_amount,\"Insufficient balance\");\n        require(token.transfer(msg.sender, _amount), \"Transfer failed\");\n        stakingBalance[msg.sender] -= _amount;\n        emit UnStake(msg.sender, _amount);\n    }\n\n    // 提取奖励\n    function getReward() external nonReentrant{\n        require(stakingTime[msg.sender]>0,\"Address was not staked\");\n        uint256 reward = getRewardForUser(msg.sender);\n        if (reward > 0) {\n            stakingReward[msg.sender] += reward;\n            require(rewardToken.transfer(msg.sender, reward), \"Transfer failed\");\n\n            emit ClaimReward(msg.sender, reward);\n        }\n    }\n\n    // 获取用户的累计奖励，不会实际转账\n    function getRewardForUser(address account) public view returns (uint256) {\n        uint256 stakingDaysRemaining = lockupPeriod + stakingStartTime - stakingTime[account] ; // 计算用户已经质押的天数，不足一天按1天计算\n        uint256 rewardRate = stakingDaysRemaining/lockupPeriod * rewardRateInit;\n        uint256 reward = stakingBalance[account] * rewardRate;\n        return reward;\n    }\n\n    // 获取合约中所有用户的总质押量\n    function totalStaked() external view returns (uint256) {\n        return token.balanceOf(address(this));\n    }\n\n    // 获取合约中所有用户的总奖励\n    function totalReward() external view returns (uint256) {\n        return rewardToken.balanceOf(address(this));\n    }\n\n    // 设置奖励代币实例\n    function setRewardToken(address _rewardToken) external onlyOwner{\n        rewardToken = IERC20(_rewardToken);\n    }\n\n     // 设置项目质押开始时间\n    function setStakingStartTime(uint256 _stakingStartTime) external onlyOwner{\n        stakingStartTime = _stakingStartTime;\n    }\n\n    // 设置每枚代币的分润\n    function setRewardRateInit(uint256 _rewardRateInit) external onlyOwner{\n        rewardRateInit = _rewardRateInit;\n    }\n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 123,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205d1bbcbbf69e764909250610d6fe0759ba92f17f2e3cc1e35d6d5af642f0f8f364736f6c63430008010033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205d1bbcbbf69e764909250610d6fe0759ba92f17f2e3cc1e35d6d5af642f0f8f364736f6c63430008010033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5D SHL 0xBC 0xBB 0xF6 SWAP15 PUSH23 0x4909250610D6FE0759BA92F17F2E3CC1E35D6D5AF642F0 0xF8 RETURN PUSH5 0x736F6C6343 STOP ADDMOD ADD STOP CALLER ",
							"sourceMap": "482:6300:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205d1bbcbbf69e764909250610d6fe0759ba92f17f2e3cc1e35d6d5af642f0f8f364736f6c63430008010033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5D SHL 0xBC 0xBB 0xF6 SWAP15 PUSH23 0x4909250610D6FE0759BA92F17F2E3CC1E35D6D5AF642F0 0xF8 RETURN PUSH5 0x736F6C6343 STOP ADDMOD ADD STOP CALLER ",
							"sourceMap": "482:6300:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205d1bbcbbf69e764909250610d6fe0759ba92f17f2e3cc1e35d6d5af642f0f8f364736f6c63430008010033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"StakingWithRewards1.sol": {
				"Staking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_rewardToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_rewardRateInit",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_lockupPeriod",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ClaimReward",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Stake",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "UnStake",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "getReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getRewardForUser",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lockupPeriod",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardRateInit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_rewardRateInit",
									"type": "uint256"
								}
							],
							"name": "setRewardRateInit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_rewardToken",
									"type": "address"
								}
							],
							"name": "setRewardToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_stakingStartTime",
									"type": "uint256"
								}
							],
							"name": "setStakingStartTime",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakingBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakingReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingStartTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakingTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalStaked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"StakingWithRewards1.sol\":289:4044  contract Staking is Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"StakingWithRewards1.sol\":1211:1516  constructor(address _token, address _rewardToken, uint256 _rewardRateInit, uint256 _lockupPeriod) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_9\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_10)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  dup1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"StakingWithRewards1.sol\":1334:1340  _token */\n  dup4\n    /* \"StakingWithRewards1.sol\":1319:1324  token */\n  0x02\n  0x00\n    /* \"StakingWithRewards1.sol\":1319:1341  token = IERC20(_token) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"StakingWithRewards1.sol\":1372:1384  _rewardToken */\n  dup3\n    /* \"StakingWithRewards1.sol\":1351:1362  rewardToken */\n  0x03\n  0x00\n    /* \"StakingWithRewards1.sol\":1351:1385  rewardToken = IERC20(_rewardToken) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"StakingWithRewards1.sol\":1412:1427  _rewardRateInit */\n  dup2\n    /* \"StakingWithRewards1.sol\":1395:1409  rewardRateInit */\n  0x04\n    /* \"StakingWithRewards1.sol\":1395:1427  rewardRateInit = _rewardRateInit */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"StakingWithRewards1.sol\":1452:1465  _lockupPeriod */\n  dup1\n    /* \"StakingWithRewards1.sol\":1437:1449  lockupPeriod */\n  0x05\n    /* \"StakingWithRewards1.sol\":1437:1465  lockupPeriod = _lockupPeriod */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"StakingWithRewards1.sol\":1494:1509  block.timestamp */\n  timestamp\n    /* \"StakingWithRewards1.sol\":1475:1491  stakingStartTime */\n  0x06\n    /* \"StakingWithRewards1.sol\":1475:1509  stakingStartTime = block.timestamp */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"StakingWithRewards1.sol\":1211:1516  constructor(address _token, address _rewardToken, uint256 _rewardRateInit, uint256 _lockupPeriod) {... */\n  pop\n  pop\n  pop\n  pop\n    /* \"StakingWithRewards1.sol\":289:4044  contract Staking is Ownable, ReentrancyGuard {... */\n  jump(tag_14)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_10:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:150   */\ntag_18:\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_20\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_21\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":70:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:299   */\ntag_22:\n  0x00\n    /* \"#utility.yul\":244:250   */\n  dup2\n    /* \"#utility.yul\":238:251   */\n  mload\n    /* \"#utility.yul\":229:251   */\n  swap1\n  pop\n    /* \"#utility.yul\":260:293   */\n  tag_24\n    /* \"#utility.yul\":287:292   */\n  dup2\n    /* \"#utility.yul\":260:293   */\n  tag_25\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":219:299   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":305:1058   */\ntag_3:\n  0x00\n  dup1\n  0x00\n  dup1\n    /* \"#utility.yul\":475:478   */\n  0x80\n    /* \"#utility.yul\":463:472   */\n  dup6\n    /* \"#utility.yul\":454:461   */\n  dup8\n    /* \"#utility.yul\":450:473   */\n  sub\n    /* \"#utility.yul\":446:479   */\n  slt\n    /* \"#utility.yul\":443:445   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":492:493   */\n  0x00\n    /* \"#utility.yul\":489:490   */\n  dup1\n    /* \"#utility.yul\":482:494   */\n  revert\n    /* \"#utility.yul\":443:445   */\ntag_27:\n    /* \"#utility.yul\":535:536   */\n  0x00\n    /* \"#utility.yul\":560:624   */\n  tag_28\n    /* \"#utility.yul\":616:623   */\n  dup8\n    /* \"#utility.yul\":607:613   */\n  dup3\n    /* \"#utility.yul\":596:605   */\n  dup9\n    /* \"#utility.yul\":592:614   */\n  add\n    /* \"#utility.yul\":560:624   */\n  tag_18\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":550:624   */\n  swap5\n  pop\n    /* \"#utility.yul\":506:634   */\n  pop\n    /* \"#utility.yul\":673:675   */\n  0x20\n    /* \"#utility.yul\":699:763   */\n  tag_29\n    /* \"#utility.yul\":755:762   */\n  dup8\n    /* \"#utility.yul\":746:752   */\n  dup3\n    /* \"#utility.yul\":735:744   */\n  dup9\n    /* \"#utility.yul\":731:753   */\n  add\n    /* \"#utility.yul\":699:763   */\n  tag_18\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":689:763   */\n  swap4\n  pop\n    /* \"#utility.yul\":644:773   */\n  pop\n    /* \"#utility.yul\":812:814   */\n  0x40\n    /* \"#utility.yul\":838:902   */\n  tag_30\n    /* \"#utility.yul\":894:901   */\n  dup8\n    /* \"#utility.yul\":885:891   */\n  dup3\n    /* \"#utility.yul\":874:883   */\n  dup9\n    /* \"#utility.yul\":870:892   */\n  add\n    /* \"#utility.yul\":838:902   */\n  tag_22\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":828:902   */\n  swap3\n  pop\n    /* \"#utility.yul\":783:912   */\n  pop\n    /* \"#utility.yul\":951:953   */\n  0x60\n    /* \"#utility.yul\":977:1041   */\n  tag_31\n    /* \"#utility.yul\":1033:1040   */\n  dup8\n    /* \"#utility.yul\":1024:1030   */\n  dup3\n    /* \"#utility.yul\":1013:1022   */\n  dup9\n    /* \"#utility.yul\":1009:1031   */\n  add\n    /* \"#utility.yul\":977:1041   */\n  tag_22\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":967:1041   */\n  swap2\n  pop\n    /* \"#utility.yul\":922:1051   */\n  pop\n    /* \"#utility.yul\":433:1058   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1064:1160   */\ntag_32:\n  0x00\n    /* \"#utility.yul\":1130:1154   */\n  tag_34\n    /* \"#utility.yul\":1148:1153   */\n  dup3\n    /* \"#utility.yul\":1130:1154   */\n  tag_35\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":1119:1154   */\n  swap1\n  pop\n    /* \"#utility.yul\":1109:1160   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1166:1292   */\ntag_35:\n  0x00\n    /* \"#utility.yul\":1243:1285   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1236:1241   */\n  dup3\n    /* \"#utility.yul\":1232:1286   */\n  and\n    /* \"#utility.yul\":1221:1286   */\n  swap1\n  pop\n    /* \"#utility.yul\":1211:1292   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1298:1375   */\ntag_37:\n  0x00\n    /* \"#utility.yul\":1364:1369   */\n  dup2\n    /* \"#utility.yul\":1353:1369   */\n  swap1\n  pop\n    /* \"#utility.yul\":1343:1375   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1381:1503   */\ntag_21:\n    /* \"#utility.yul\":1454:1478   */\n  tag_40\n    /* \"#utility.yul\":1472:1477   */\n  dup2\n    /* \"#utility.yul\":1454:1478   */\n  tag_32\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1447:1452   */\n  dup2\n    /* \"#utility.yul\":1444:1479   */\n  eq\n    /* \"#utility.yul\":1434:1436   */\n  tag_41\n  jumpi\n    /* \"#utility.yul\":1493:1494   */\n  0x00\n    /* \"#utility.yul\":1490:1491   */\n  dup1\n    /* \"#utility.yul\":1483:1495   */\n  revert\n    /* \"#utility.yul\":1434:1436   */\ntag_41:\n    /* \"#utility.yul\":1424:1503   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1509:1631   */\ntag_25:\n    /* \"#utility.yul\":1582:1606   */\n  tag_43\n    /* \"#utility.yul\":1600:1605   */\n  dup2\n    /* \"#utility.yul\":1582:1606   */\n  tag_37\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1575:1580   */\n  dup2\n    /* \"#utility.yul\":1572:1607   */\n  eq\n    /* \"#utility.yul\":1562:1564   */\n  tag_44\n  jumpi\n    /* \"#utility.yul\":1621:1622   */\n  0x00\n    /* \"#utility.yul\":1618:1619   */\n  dup1\n    /* \"#utility.yul\":1611:1623   */\n  revert\n    /* \"#utility.yul\":1562:1564   */\ntag_44:\n    /* \"#utility.yul\":1552:1631   */\n  pop\n  jump\t// out\n    /* \"StakingWithRewards1.sol\":289:4044  contract Staking is Ownable, ReentrancyGuard {... */\ntag_14:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"StakingWithRewards1.sol\":289:4044  contract Staking is Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x817b1cd2\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xef790a82\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xef790a82\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf7c618c1\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xfc71ae8c\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x817b1cd2\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8aee8127\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xee947a7c\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x583d42fd\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x583d42fd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x5d90bad9\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x6abfd183\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x750142e6\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x154a78b5\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1683153d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x3d18b912\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x45bc78ab\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"StakingWithRewards1.sol\":493:522  uint256 public rewardRateInit */\n    tag_3:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"StakingWithRewards1.sol\":937:985  mapping(address => uint256) public stakingReward */\n    tag_4:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"StakingWithRewards1.sol\":1952:2337  function withdraw(uint256 _amount) external nonReentrant {... */\n    tag_5:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n    tag_35:\n      stop\n        /* \"StakingWithRewards1.sol\":2363:2754  function getReward() external nonReentrant{... */\n    tag_6:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      stop\n        /* \"StakingWithRewards1.sol\":757:806  mapping(address => uint256) public stakingBalance */\n    tag_7:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_42:\n      tag_43\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"StakingWithRewards1.sol\":850:896  mapping(address => uint256) public stakingTime */\n    tag_8:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"StakingWithRewards1.sol\":3755:3882  function setStakingStartTime(uint256 _stakingStartTime) external onlyOwner{... */\n    tag_9:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_50:\n      tag_51\n      jump\t// in\n    tag_49:\n      stop\n        /* \"StakingWithRewards1.sol\":681:712  uint256 public stakingStartTime */\n    tag_10:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      stop\n        /* \"StakingWithRewards1.sol\":3442:3557  function totalReward() external view returns (uint256) {... */\n    tag_12:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"StakingWithRewards1.sol\":3280:3389  function totalStaked() external view returns (uint256) {... */\n    tag_13:\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"StakingWithRewards1.sol\":3595:3710  function setRewardToken(address _rewardToken) external onlyOwner{... */\n    tag_14:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_64:\n      tag_65\n      jump\t// in\n    tag_63:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_15:\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"StakingWithRewards1.sol\":1542:1899  function stake(uint256 _amount) external nonReentrant {... */\n    tag_16:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n    tag_70:\n      stop\n        /* \"StakingWithRewards1.sol\":602:629  uint256 public lockupPeriod */\n    tag_17:\n      tag_73\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"StakingWithRewards1.sol\":2816:3224  function getRewardForUser(address account) public view returns (uint256) {... */\n    tag_18:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_77:\n      tag_78\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_19:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_81:\n      tag_82\n      jump\t// in\n    tag_80:\n      stop\n        /* \"StakingWithRewards1.sol\":413:439  IERC20 public  rewardToken */\n    tag_20:\n      tag_83\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"StakingWithRewards1.sol\":340:360  IERC20 public  token */\n    tag_21:\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"StakingWithRewards1.sol\":3923:4042  function setRewardRateInit(uint256 _rewardRateInit) external onlyOwner{... */\n    tag_22:\n      tag_90\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_91\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_91:\n      tag_92\n      jump\t// in\n    tag_90:\n      stop\n        /* \"StakingWithRewards1.sol\":493:522  uint256 public rewardRateInit */\n    tag_27:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"StakingWithRewards1.sol\":937:985  mapping(address => uint256) public stakingReward */\n    tag_33:\n      mstore(0x20, 0x09)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"StakingWithRewards1.sol\":1952:2337  function withdraw(uint256 _amount) external nonReentrant {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_94\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_95\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_94:\n        /* \"StakingWithRewards1.sol\":2066:2078  lockupPeriod */\n      sload(0x05)\n        /* \"StakingWithRewards1.sol\":2047:2063  stakingStartTime */\n      sload(0x06)\n        /* \"StakingWithRewards1.sol\":2047:2078  stakingStartTime + lockupPeriod */\n      tag_97\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n        /* \"StakingWithRewards1.sol\":2027:2042  block.timestamp */\n      timestamp\n        /* \"StakingWithRewards1.sol\":2027:2079  block.timestamp >= (stakingStartTime + lockupPeriod) */\n      lt\n      iszero\n        /* \"StakingWithRewards1.sol\":2019:2090  require(block.timestamp >= (stakingStartTime + lockupPeriod), \"Locked\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"StakingWithRewards1.sol\":2136:2143  _amount */\n      dup1\n        /* \"StakingWithRewards1.sol\":2108:2122  stakingBalance */\n      0x07\n        /* \"StakingWithRewards1.sol\":2108:2134  stakingBalance[msg.sender] */\n      0x00\n        /* \"StakingWithRewards1.sol\":2123:2133  msg.sender */\n      caller\n        /* \"StakingWithRewards1.sol\":2108:2134  stakingBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"StakingWithRewards1.sol\":2108:2143  stakingBalance[msg.sender]>=_amount */\n      lt\n      iszero\n        /* \"StakingWithRewards1.sol\":2100:2167  require(stakingBalance[msg.sender]>=_amount,\"Insufficient balance\") */\n      tag_102\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_103\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_102:\n        /* \"StakingWithRewards1.sol\":2185:2190  token */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"StakingWithRewards1.sol\":2185:2199  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"StakingWithRewards1.sol\":2200:2210  msg.sender */\n      caller\n        /* \"StakingWithRewards1.sol\":2212:2219  _amount */\n      dup4\n        /* \"StakingWithRewards1.sol\":2185:2220  token.transfer(msg.sender, _amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap3\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_107\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_107:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_109\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_109:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_110\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n        /* \"StakingWithRewards1.sol\":2177:2240  require(token.transfer(msg.sender, _amount), \"Transfer failed\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_112:\n        /* \"StakingWithRewards1.sol\":2280:2287  _amount */\n      dup1\n        /* \"StakingWithRewards1.sol\":2250:2264  stakingBalance */\n      0x07\n        /* \"StakingWithRewards1.sol\":2250:2276  stakingBalance[msg.sender] */\n      0x00\n        /* \"StakingWithRewards1.sol\":2265:2275  msg.sender */\n      caller\n        /* \"StakingWithRewards1.sol\":2250:2276  stakingBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"StakingWithRewards1.sol\":2250:2287  stakingBalance[msg.sender] -= _amount */\n      dup3\n      dup3\n      sload\n      tag_115\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingWithRewards1.sol\":2310:2320  msg.sender */\n      caller\n        /* \"StakingWithRewards1.sol\":2302:2330  UnStake(msg.sender, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xb24546d975e2628748efc9aced80665e0fad66272033e5c0ea25fd3afac99795\n        /* \"StakingWithRewards1.sol\":2322:2329  _amount */\n      dup3\n        /* \"StakingWithRewards1.sol\":2302:2330  UnStake(msg.sender, _amount) */\n      mload(0x40)\n      tag_117\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_118\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_119\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_118:\n        /* \"StakingWithRewards1.sol\":1952:2337  function withdraw(uint256 _amount) external nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"StakingWithRewards1.sol\":2363:2754  function getReward() external nonReentrant{... */\n    tag_40:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_121\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_95\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_121:\n        /* \"StakingWithRewards1.sol\":2447:2448  0 */\n      0x00\n        /* \"StakingWithRewards1.sol\":2423:2434  stakingTime */\n      0x08\n        /* \"StakingWithRewards1.sol\":2423:2446  stakingTime[msg.sender] */\n      0x00\n        /* \"StakingWithRewards1.sol\":2435:2445  msg.sender */\n      caller\n        /* \"StakingWithRewards1.sol\":2423:2446  stakingTime[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"StakingWithRewards1.sol\":2423:2448  stakingTime[msg.sender]>0 */\n      gt\n        /* \"StakingWithRewards1.sol\":2415:2474  require(stakingTime[msg.sender]>0,\"Address was not staked\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_124\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_123:\n        /* \"StakingWithRewards1.sol\":2484:2498  uint256 reward */\n      0x00\n        /* \"StakingWithRewards1.sol\":2501:2529  getRewardForUser(msg.sender) */\n      tag_126\n        /* \"StakingWithRewards1.sol\":2518:2528  msg.sender */\n      caller\n        /* \"StakingWithRewards1.sol\":2501:2517  getRewardForUser */\n      tag_78\n        /* \"StakingWithRewards1.sol\":2501:2529  getRewardForUser(msg.sender) */\n      jump\t// in\n    tag_126:\n        /* \"StakingWithRewards1.sol\":2484:2529  uint256 reward = getRewardForUser(msg.sender) */\n      swap1\n      pop\n        /* \"StakingWithRewards1.sol\":2552:2553  0 */\n      0x00\n        /* \"StakingWithRewards1.sol\":2543:2549  reward */\n      dup2\n        /* \"StakingWithRewards1.sol\":2543:2553  reward > 0 */\n      gt\n        /* \"StakingWithRewards1.sol\":2539:2748  if (reward > 0) {... */\n      iszero\n      tag_127\n      jumpi\n        /* \"StakingWithRewards1.sol\":2598:2604  reward */\n      dup1\n        /* \"StakingWithRewards1.sol\":2569:2582  stakingReward */\n      0x09\n        /* \"StakingWithRewards1.sol\":2569:2594  stakingReward[msg.sender] */\n      0x00\n        /* \"StakingWithRewards1.sol\":2583:2593  msg.sender */\n      caller\n        /* \"StakingWithRewards1.sol\":2569:2594  stakingReward[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"StakingWithRewards1.sol\":2569:2604  stakingReward[msg.sender] += reward */\n      dup3\n      dup3\n      sload\n      tag_128\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_128:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingWithRewards1.sol\":2626:2637  rewardToken */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"StakingWithRewards1.sol\":2626:2646  rewardToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"StakingWithRewards1.sol\":2647:2657  msg.sender */\n      caller\n        /* \"StakingWithRewards1.sol\":2659:2665  reward */\n      dup4\n        /* \"StakingWithRewards1.sol\":2626:2666  rewardToken.transfer(msg.sender, reward) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_129\n      swap3\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_129:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_130\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_130:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_132\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_132:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_133\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_133:\n        /* \"StakingWithRewards1.sol\":2618:2686  require(rewardToken.transfer(msg.sender, reward), \"Transfer failed\") */\n      tag_134\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_135\n      swap1\n      tag_114\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_134:\n        /* \"StakingWithRewards1.sol\":2718:2728  msg.sender */\n      caller\n        /* \"StakingWithRewards1.sol\":2706:2737  ClaimReward(msg.sender, reward) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xba8de60c3403ec381d1d484652ea1980e3c3e56359195c92525bff4ce47ad98e\n        /* \"StakingWithRewards1.sol\":2730:2736  reward */\n      dup3\n        /* \"StakingWithRewards1.sol\":2706:2737  ClaimReward(msg.sender, reward) */\n      mload(0x40)\n      tag_136\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"StakingWithRewards1.sol\":2539:2748  if (reward > 0) {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2292:2293  _ */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_137\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_119\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_137:\n        /* \"StakingWithRewards1.sol\":2363:2754  function getReward() external nonReentrant{... */\n      jump\t// out\n        /* \"StakingWithRewards1.sol\":757:806  mapping(address => uint256) public stakingBalance */\n    tag_43:\n      mstore(0x20, 0x07)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"StakingWithRewards1.sol\":850:896  mapping(address => uint256) public stakingTime */\n    tag_47:\n      mstore(0x20, 0x08)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"StakingWithRewards1.sol\":3755:3882  function setStakingStartTime(uint256 _stakingStartTime) external onlyOwner{... */\n    tag_51:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_139\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_140\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_139:\n        /* \"StakingWithRewards1.sol\":3858:3875  _stakingStartTime */\n      dup1\n        /* \"StakingWithRewards1.sol\":3839:3855  stakingStartTime */\n      0x06\n        /* \"StakingWithRewards1.sol\":3839:3875  stakingStartTime = _stakingStartTime */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingWithRewards1.sol\":3755:3882  function setStakingStartTime(uint256 _stakingStartTime) external onlyOwner{... */\n      pop\n      jump\t// out\n        /* \"StakingWithRewards1.sol\":681:712  uint256 public stakingStartTime */\n    tag_53:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_143\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_140\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_143:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_145\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_146\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_145:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"StakingWithRewards1.sol\":3442:3557  function totalReward() external view returns (uint256) {... */\n    tag_58:\n        /* \"StakingWithRewards1.sol\":3488:3495  uint256 */\n      0x00\n        /* \"StakingWithRewards1.sol\":3514:3525  rewardToken */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"StakingWithRewards1.sol\":3514:3535  rewardToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"StakingWithRewards1.sol\":3544:3548  this */\n      address\n        /* \"StakingWithRewards1.sol\":3514:3550  rewardToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_148\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_148:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_149\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_149:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_151\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_151:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_152\n      swap2\n      swap1\n      tag_153\n      jump\t// in\n    tag_152:\n        /* \"StakingWithRewards1.sol\":3507:3550  return rewardToken.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"StakingWithRewards1.sol\":3442:3557  function totalReward() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"StakingWithRewards1.sol\":3280:3389  function totalStaked() external view returns (uint256) {... */\n    tag_61:\n        /* \"StakingWithRewards1.sol\":3326:3333  uint256 */\n      0x00\n        /* \"StakingWithRewards1.sol\":3352:3357  token */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"StakingWithRewards1.sol\":3352:3367  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"StakingWithRewards1.sol\":3376:3380  this */\n      address\n        /* \"StakingWithRewards1.sol\":3352:3382  token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_155\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_155:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_156\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_156:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_158\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_158:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_159\n      swap2\n      swap1\n      tag_153\n      jump\t// in\n    tag_159:\n        /* \"StakingWithRewards1.sol\":3345:3382  return token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"StakingWithRewards1.sol\":3280:3389  function totalStaked() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"StakingWithRewards1.sol\":3595:3710  function setRewardToken(address _rewardToken) external onlyOwner{... */\n    tag_65:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_161\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_140\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_161:\n        /* \"StakingWithRewards1.sol\":3690:3702  _rewardToken */\n      dup1\n        /* \"StakingWithRewards1.sol\":3669:3680  rewardToken */\n      0x03\n      0x00\n        /* \"StakingWithRewards1.sol\":3669:3703  rewardToken = IERC20(_rewardToken) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"StakingWithRewards1.sol\":3595:3710  function setRewardToken(address _rewardToken) external onlyOwner{... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_67:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"StakingWithRewards1.sol\":1542:1899  function stake(uint256 _amount) external nonReentrant {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_165\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_95\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_165:\n        /* \"StakingWithRewards1.sol\":1624:1625  0 */\n      0x00\n        /* \"StakingWithRewards1.sol\":1614:1621  _amount */\n      dup2\n        /* \"StakingWithRewards1.sol\":1614:1625  _amount > 0 */\n      gt\n        /* \"StakingWithRewards1.sol\":1606:1661  require(_amount > 0, \"Amount should greater than zero\") */\n      tag_167\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap1\n      tag_169\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_167:\n        /* \"StakingWithRewards1.sol\":1679:1684  token */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"StakingWithRewards1.sol\":1679:1697  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"StakingWithRewards1.sol\":1698:1708  msg.sender */\n      caller\n        /* \"StakingWithRewards1.sol\":1718:1722  this */\n      address\n        /* \"StakingWithRewards1.sol\":1725:1732  _amount */\n      dup5\n        /* \"StakingWithRewards1.sol\":1679:1733  token.transferFrom(msg.sender, address(this), _amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_170\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_171\n      jump\t// in\n    tag_170:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_172\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_172:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_174\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_174:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_175\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_175:\n        /* \"StakingWithRewards1.sol\":1671:1753  require(token.transferFrom(msg.sender, address(this), _amount), \"Transfer failed\") */\n      tag_176\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_177\n      swap1\n      tag_114\n      jump\t// in\n    tag_177:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_176:\n        /* \"StakingWithRewards1.sol\":1793:1800  _amount */\n      dup1\n        /* \"StakingWithRewards1.sol\":1763:1777  stakingBalance */\n      0x07\n        /* \"StakingWithRewards1.sol\":1763:1789  stakingBalance[msg.sender] */\n      0x00\n        /* \"StakingWithRewards1.sol\":1778:1788  msg.sender */\n      caller\n        /* \"StakingWithRewards1.sol\":1763:1789  stakingBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"StakingWithRewards1.sol\":1763:1800  stakingBalance[msg.sender] += _amount */\n      dup3\n      dup3\n      sload\n      tag_178\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_178:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingWithRewards1.sol\":1836:1851  block.timestamp */\n      timestamp\n        /* \"StakingWithRewards1.sol\":1810:1821  stakingTime */\n      0x08\n        /* \"StakingWithRewards1.sol\":1810:1833  stakingTime[msg.sender] */\n      0x00\n        /* \"StakingWithRewards1.sol\":1822:1832  msg.sender */\n      caller\n        /* \"StakingWithRewards1.sol\":1810:1833  stakingTime[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"StakingWithRewards1.sol\":1810:1851  stakingTime[msg.sender] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingWithRewards1.sol\":1872:1882  msg.sender */\n      caller\n        /* \"StakingWithRewards1.sol\":1866:1892  Stake(msg.sender, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xebedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a\n        /* \"StakingWithRewards1.sol\":1884:1891  _amount */\n      dup3\n        /* \"StakingWithRewards1.sol\":1866:1892  Stake(msg.sender, _amount) */\n      mload(0x40)\n      tag_179\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_180\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_119\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_180:\n        /* \"StakingWithRewards1.sol\":1542:1899  function stake(uint256 _amount) external nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"StakingWithRewards1.sol\":602:629  uint256 public lockupPeriod */\n    tag_74:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"StakingWithRewards1.sol\":2816:3224  function getRewardForUser(address account) public view returns (uint256) {... */\n    tag_78:\n        /* \"StakingWithRewards1.sol\":2880:2887  uint256 */\n      0x00\n        /* \"StakingWithRewards1.sol\":2899:2927  uint256 stakingDaysRemaining */\n      dup1\n        /* \"StakingWithRewards1.sol\":2964:2975  stakingTime */\n      0x08\n        /* \"StakingWithRewards1.sol\":2964:2984  stakingTime[account] */\n      0x00\n        /* \"StakingWithRewards1.sol\":2976:2983  account */\n      dup5\n        /* \"StakingWithRewards1.sol\":2964:2984  stakingTime[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"StakingWithRewards1.sol\":2945:2961  stakingStartTime */\n      sload(0x06)\n        /* \"StakingWithRewards1.sol\":2930:2942  lockupPeriod */\n      sload(0x05)\n        /* \"StakingWithRewards1.sol\":2930:2961  lockupPeriod + stakingStartTime */\n      tag_182\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_182:\n        /* \"StakingWithRewards1.sol\":2930:2984  lockupPeriod + stakingStartTime - stakingTime[account] */\n      tag_183\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_183:\n        /* \"StakingWithRewards1.sol\":2899:2984  uint256 stakingDaysRemaining = lockupPeriod + stakingStartTime - stakingTime[account] */\n      swap1\n      pop\n        /* \"StakingWithRewards1.sol\":3060:3078  uint256 rewardRate */\n      0x00\n        /* \"StakingWithRewards1.sol\":3117:3131  rewardRateInit */\n      sload(0x04)\n        /* \"StakingWithRewards1.sol\":3102:3114  lockupPeriod */\n      sload(0x05)\n        /* \"StakingWithRewards1.sol\":3081:3101  stakingDaysRemaining */\n      dup4\n        /* \"StakingWithRewards1.sol\":3081:3114  stakingDaysRemaining/lockupPeriod */\n      tag_184\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_184:\n        /* \"StakingWithRewards1.sol\":3081:3131  stakingDaysRemaining/lockupPeriod * rewardRateInit */\n      tag_186\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_186:\n        /* \"StakingWithRewards1.sol\":3060:3131  uint256 rewardRate = stakingDaysRemaining/lockupPeriod * rewardRateInit */\n      swap1\n      pop\n        /* \"StakingWithRewards1.sol\":3141:3155  uint256 reward */\n      0x00\n        /* \"StakingWithRewards1.sol\":3184:3194  rewardRate */\n      dup2\n        /* \"StakingWithRewards1.sol\":3158:3172  stakingBalance */\n      0x07\n        /* \"StakingWithRewards1.sol\":3158:3181  stakingBalance[account] */\n      0x00\n        /* \"StakingWithRewards1.sol\":3173:3180  account */\n      dup8\n        /* \"StakingWithRewards1.sol\":3158:3181  stakingBalance[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"StakingWithRewards1.sol\":3158:3194  stakingBalance[account] * rewardRate */\n      tag_188\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_188:\n        /* \"StakingWithRewards1.sol\":3141:3194  uint256 reward = stakingBalance[account] * rewardRate */\n      swap1\n      pop\n        /* \"StakingWithRewards1.sol\":3211:3217  reward */\n      dup1\n        /* \"StakingWithRewards1.sol\":3204:3217  return reward */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"StakingWithRewards1.sol\":2816:3224  function getRewardForUser(address account) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_190\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_140\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_190:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2189:2190  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2177  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_192\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_192:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_195\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_146\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_195:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"StakingWithRewards1.sol\":413:439  IERC20 public  rewardToken */\n    tag_84:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"StakingWithRewards1.sol\":340:360  IERC20 public  token */\n    tag_88:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"StakingWithRewards1.sol\":3923:4042  function setRewardRateInit(uint256 _rewardRateInit) external onlyOwner{... */\n    tag_92:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_197\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_140\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_197:\n        /* \"StakingWithRewards1.sol\":4020:4035  _rewardRateInit */\n      dup1\n        /* \"StakingWithRewards1.sol\":4003:4017  rewardRateInit */\n      0x04\n        /* \"StakingWithRewards1.sol\":4003:4035  rewardRateInit = _rewardRateInit */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingWithRewards1.sol\":3923:4042  function setRewardRateInit(uint256 _rewardRateInit) external onlyOwner{... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_200\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap1\n      tag_202\n      jump\t// in\n    tag_201:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_200:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      dup1\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_140:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_205\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_206\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_205:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      tag_207\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1427  owner */\n      tag_67\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_207:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_208\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_209\n      swap1\n      tag_210\n      jump\t// in\n    tag_209:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_208:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_146:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_206:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_214:\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_216\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_217\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":59:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:289   */\n    tag_218:\n      0x00\n        /* \"#utility.yul\":237:243   */\n      dup2\n        /* \"#utility.yul\":231:244   */\n      mload\n        /* \"#utility.yul\":222:244   */\n      swap1\n      pop\n        /* \"#utility.yul\":253:283   */\n      tag_220\n        /* \"#utility.yul\":277:282   */\n      dup2\n        /* \"#utility.yul\":253:283   */\n      tag_221\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":212:289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":295:434   */\n    tag_222:\n      0x00\n        /* \"#utility.yul\":379:385   */\n      dup2\n        /* \"#utility.yul\":366:386   */\n      calldataload\n        /* \"#utility.yul\":357:386   */\n      swap1\n      pop\n        /* \"#utility.yul\":395:428   */\n      tag_224\n        /* \"#utility.yul\":422:427   */\n      dup2\n        /* \"#utility.yul\":395:428   */\n      tag_225\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":347:434   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":440:583   */\n    tag_226:\n      0x00\n        /* \"#utility.yul\":528:534   */\n      dup2\n        /* \"#utility.yul\":522:535   */\n      mload\n        /* \"#utility.yul\":513:535   */\n      swap1\n      pop\n        /* \"#utility.yul\":544:577   */\n      tag_228\n        /* \"#utility.yul\":571:576   */\n      dup2\n        /* \"#utility.yul\":544:577   */\n      tag_225\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":503:583   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":589:851   */\n    tag_32:\n      0x00\n        /* \"#utility.yul\":697:699   */\n      0x20\n        /* \"#utility.yul\":685:694   */\n      dup3\n        /* \"#utility.yul\":676:683   */\n      dup5\n        /* \"#utility.yul\":672:695   */\n      sub\n        /* \"#utility.yul\":668:700   */\n      slt\n        /* \"#utility.yul\":665:667   */\n      iszero\n      tag_230\n      jumpi\n        /* \"#utility.yul\":713:714   */\n      0x00\n        /* \"#utility.yul\":710:711   */\n      dup1\n        /* \"#utility.yul\":703:715   */\n      revert\n        /* \"#utility.yul\":665:667   */\n    tag_230:\n        /* \"#utility.yul\":756:757   */\n      0x00\n        /* \"#utility.yul\":781:834   */\n      tag_231\n        /* \"#utility.yul\":826:833   */\n      dup5\n        /* \"#utility.yul\":817:823   */\n      dup3\n        /* \"#utility.yul\":806:815   */\n      dup6\n        /* \"#utility.yul\":802:824   */\n      add\n        /* \"#utility.yul\":781:834   */\n      tag_214\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":771:834   */\n      swap2\n      pop\n        /* \"#utility.yul\":727:844   */\n      pop\n        /* \"#utility.yul\":655:851   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":857:1135   */\n    tag_111:\n      0x00\n        /* \"#utility.yul\":973:975   */\n      0x20\n        /* \"#utility.yul\":961:970   */\n      dup3\n        /* \"#utility.yul\":952:959   */\n      dup5\n        /* \"#utility.yul\":948:971   */\n      sub\n        /* \"#utility.yul\":944:976   */\n      slt\n        /* \"#utility.yul\":941:943   */\n      iszero\n      tag_233\n      jumpi\n        /* \"#utility.yul\":989:990   */\n      0x00\n        /* \"#utility.yul\":986:987   */\n      dup1\n        /* \"#utility.yul\":979:991   */\n      revert\n        /* \"#utility.yul\":941:943   */\n    tag_233:\n        /* \"#utility.yul\":1032:1033   */\n      0x00\n        /* \"#utility.yul\":1057:1118   */\n      tag_234\n        /* \"#utility.yul\":1110:1117   */\n      dup5\n        /* \"#utility.yul\":1101:1107   */\n      dup3\n        /* \"#utility.yul\":1090:1099   */\n      dup6\n        /* \"#utility.yul\":1086:1108   */\n      add\n        /* \"#utility.yul\":1057:1118   */\n      tag_218\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":1047:1118   */\n      swap2\n      pop\n        /* \"#utility.yul\":1003:1128   */\n      pop\n        /* \"#utility.yul\":931:1135   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1141:1403   */\n    tag_37:\n      0x00\n        /* \"#utility.yul\":1249:1251   */\n      0x20\n        /* \"#utility.yul\":1237:1246   */\n      dup3\n        /* \"#utility.yul\":1228:1235   */\n      dup5\n        /* \"#utility.yul\":1224:1247   */\n      sub\n        /* \"#utility.yul\":1220:1252   */\n      slt\n        /* \"#utility.yul\":1217:1219   */\n      iszero\n      tag_236\n      jumpi\n        /* \"#utility.yul\":1265:1266   */\n      0x00\n        /* \"#utility.yul\":1262:1263   */\n      dup1\n        /* \"#utility.yul\":1255:1267   */\n      revert\n        /* \"#utility.yul\":1217:1219   */\n    tag_236:\n        /* \"#utility.yul\":1308:1309   */\n      0x00\n        /* \"#utility.yul\":1333:1386   */\n      tag_237\n        /* \"#utility.yul\":1378:1385   */\n      dup5\n        /* \"#utility.yul\":1369:1375   */\n      dup3\n        /* \"#utility.yul\":1358:1367   */\n      dup6\n        /* \"#utility.yul\":1354:1376   */\n      add\n        /* \"#utility.yul\":1333:1386   */\n      tag_222\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":1323:1386   */\n      swap2\n      pop\n        /* \"#utility.yul\":1279:1396   */\n      pop\n        /* \"#utility.yul\":1207:1403   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1409:1693   */\n    tag_153:\n      0x00\n        /* \"#utility.yul\":1528:1530   */\n      0x20\n        /* \"#utility.yul\":1516:1525   */\n      dup3\n        /* \"#utility.yul\":1507:1514   */\n      dup5\n        /* \"#utility.yul\":1503:1526   */\n      sub\n        /* \"#utility.yul\":1499:1531   */\n      slt\n        /* \"#utility.yul\":1496:1498   */\n      iszero\n      tag_239\n      jumpi\n        /* \"#utility.yul\":1544:1545   */\n      0x00\n        /* \"#utility.yul\":1541:1542   */\n      dup1\n        /* \"#utility.yul\":1534:1546   */\n      revert\n        /* \"#utility.yul\":1496:1498   */\n    tag_239:\n        /* \"#utility.yul\":1587:1588   */\n      0x00\n        /* \"#utility.yul\":1612:1676   */\n      tag_240\n        /* \"#utility.yul\":1668:1675   */\n      dup5\n        /* \"#utility.yul\":1659:1665   */\n      dup3\n        /* \"#utility.yul\":1648:1657   */\n      dup6\n        /* \"#utility.yul\":1644:1666   */\n      add\n        /* \"#utility.yul\":1612:1676   */\n      tag_226\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":1602:1676   */\n      swap2\n      pop\n        /* \"#utility.yul\":1558:1686   */\n      pop\n        /* \"#utility.yul\":1486:1693   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1699:1817   */\n    tag_241:\n        /* \"#utility.yul\":1786:1810   */\n      tag_243\n        /* \"#utility.yul\":1804:1809   */\n      dup2\n        /* \"#utility.yul\":1786:1810   */\n      tag_244\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":1781:1784   */\n      dup3\n        /* \"#utility.yul\":1774:1811   */\n      mstore\n        /* \"#utility.yul\":1764:1817   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1823:1982   */\n    tag_245:\n        /* \"#utility.yul\":1924:1975   */\n      tag_247\n        /* \"#utility.yul\":1969:1974   */\n      dup2\n        /* \"#utility.yul\":1924:1975   */\n      tag_248\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":1919:1922   */\n      dup3\n        /* \"#utility.yul\":1912:1976   */\n      mstore\n        /* \"#utility.yul\":1902:1982   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1988:2354   */\n    tag_249:\n      0x00\n        /* \"#utility.yul\":2151:2218   */\n      tag_251\n        /* \"#utility.yul\":2215:2217   */\n      0x16\n        /* \"#utility.yul\":2210:2213   */\n      dup4\n        /* \"#utility.yul\":2151:2218   */\n      tag_252\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":2144:2218   */\n      swap2\n      pop\n        /* \"#utility.yul\":2227:2320   */\n      tag_253\n        /* \"#utility.yul\":2316:2319   */\n      dup3\n        /* \"#utility.yul\":2227:2320   */\n      tag_254\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":2345:2347   */\n      0x20\n        /* \"#utility.yul\":2340:2343   */\n      dup3\n        /* \"#utility.yul\":2336:2348   */\n      add\n        /* \"#utility.yul\":2329:2348   */\n      swap1\n      pop\n        /* \"#utility.yul\":2134:2354   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2360:2725   */\n    tag_255:\n      0x00\n        /* \"#utility.yul\":2523:2589   */\n      tag_257\n        /* \"#utility.yul\":2587:2588   */\n      0x06\n        /* \"#utility.yul\":2582:2585   */\n      dup4\n        /* \"#utility.yul\":2523:2589   */\n      tag_252\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":2516:2589   */\n      swap2\n      pop\n        /* \"#utility.yul\":2598:2691   */\n      tag_258\n        /* \"#utility.yul\":2687:2690   */\n      dup3\n        /* \"#utility.yul\":2598:2691   */\n      tag_259\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":2716:2718   */\n      0x20\n        /* \"#utility.yul\":2711:2714   */\n      dup3\n        /* \"#utility.yul\":2707:2719   */\n      add\n        /* \"#utility.yul\":2700:2719   */\n      swap1\n      pop\n        /* \"#utility.yul\":2506:2725   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2731:3097   */\n    tag_260:\n      0x00\n        /* \"#utility.yul\":2894:2961   */\n      tag_262\n        /* \"#utility.yul\":2958:2960   */\n      0x26\n        /* \"#utility.yul\":2953:2956   */\n      dup4\n        /* \"#utility.yul\":2894:2961   */\n      tag_252\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":2887:2961   */\n      swap2\n      pop\n        /* \"#utility.yul\":2970:3063   */\n      tag_263\n        /* \"#utility.yul\":3059:3062   */\n      dup3\n        /* \"#utility.yul\":2970:3063   */\n      tag_264\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":3088:3090   */\n      0x40\n        /* \"#utility.yul\":3083:3086   */\n      dup3\n        /* \"#utility.yul\":3079:3091   */\n      add\n        /* \"#utility.yul\":3072:3091   */\n      swap1\n      pop\n        /* \"#utility.yul\":2877:3097   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3103:3469   */\n    tag_265:\n      0x00\n        /* \"#utility.yul\":3266:3333   */\n      tag_267\n        /* \"#utility.yul\":3330:3332   */\n      0x0f\n        /* \"#utility.yul\":3325:3328   */\n      dup4\n        /* \"#utility.yul\":3266:3333   */\n      tag_252\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":3259:3333   */\n      swap2\n      pop\n        /* \"#utility.yul\":3342:3435   */\n      tag_268\n        /* \"#utility.yul\":3431:3434   */\n      dup3\n        /* \"#utility.yul\":3342:3435   */\n      tag_269\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":3460:3462   */\n      0x20\n        /* \"#utility.yul\":3455:3458   */\n      dup3\n        /* \"#utility.yul\":3451:3463   */\n      add\n        /* \"#utility.yul\":3444:3463   */\n      swap1\n      pop\n        /* \"#utility.yul\":3249:3469   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3475:3841   */\n    tag_270:\n      0x00\n        /* \"#utility.yul\":3638:3705   */\n      tag_272\n        /* \"#utility.yul\":3702:3704   */\n      0x14\n        /* \"#utility.yul\":3697:3700   */\n      dup4\n        /* \"#utility.yul\":3638:3705   */\n      tag_252\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":3631:3705   */\n      swap2\n      pop\n        /* \"#utility.yul\":3714:3807   */\n      tag_273\n        /* \"#utility.yul\":3803:3806   */\n      dup3\n        /* \"#utility.yul\":3714:3807   */\n      tag_274\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":3832:3834   */\n      0x20\n        /* \"#utility.yul\":3827:3830   */\n      dup3\n        /* \"#utility.yul\":3823:3835   */\n      add\n        /* \"#utility.yul\":3816:3835   */\n      swap1\n      pop\n        /* \"#utility.yul\":3621:3841   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3847:4213   */\n    tag_275:\n      0x00\n        /* \"#utility.yul\":4010:4077   */\n      tag_277\n        /* \"#utility.yul\":4074:4076   */\n      0x1f\n        /* \"#utility.yul\":4069:4072   */\n      dup4\n        /* \"#utility.yul\":4010:4077   */\n      tag_252\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":4003:4077   */\n      swap2\n      pop\n        /* \"#utility.yul\":4086:4179   */\n      tag_278\n        /* \"#utility.yul\":4175:4178   */\n      dup3\n        /* \"#utility.yul\":4086:4179   */\n      tag_279\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":4204:4206   */\n      0x20\n        /* \"#utility.yul\":4199:4202   */\n      dup3\n        /* \"#utility.yul\":4195:4207   */\n      add\n        /* \"#utility.yul\":4188:4207   */\n      swap1\n      pop\n        /* \"#utility.yul\":3993:4213   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4219:4585   */\n    tag_280:\n      0x00\n        /* \"#utility.yul\":4382:4449   */\n      tag_282\n        /* \"#utility.yul\":4446:4448   */\n      0x20\n        /* \"#utility.yul\":4441:4444   */\n      dup4\n        /* \"#utility.yul\":4382:4449   */\n      tag_252\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":4375:4449   */\n      swap2\n      pop\n        /* \"#utility.yul\":4458:4551   */\n      tag_283\n        /* \"#utility.yul\":4547:4550   */\n      dup3\n        /* \"#utility.yul\":4458:4551   */\n      tag_284\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":4576:4578   */\n      0x20\n        /* \"#utility.yul\":4571:4574   */\n      dup3\n        /* \"#utility.yul\":4567:4579   */\n      add\n        /* \"#utility.yul\":4560:4579   */\n      swap1\n      pop\n        /* \"#utility.yul\":4365:4585   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4591:4957   */\n    tag_285:\n      0x00\n        /* \"#utility.yul\":4754:4821   */\n      tag_287\n        /* \"#utility.yul\":4818:4820   */\n      0x1f\n        /* \"#utility.yul\":4813:4816   */\n      dup4\n        /* \"#utility.yul\":4754:4821   */\n      tag_252\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":4747:4821   */\n      swap2\n      pop\n        /* \"#utility.yul\":4830:4923   */\n      tag_288\n        /* \"#utility.yul\":4919:4922   */\n      dup3\n        /* \"#utility.yul\":4830:4923   */\n      tag_289\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":4948:4950   */\n      0x20\n        /* \"#utility.yul\":4943:4946   */\n      dup3\n        /* \"#utility.yul\":4939:4951   */\n      add\n        /* \"#utility.yul\":4932:4951   */\n      swap1\n      pop\n        /* \"#utility.yul\":4737:4957   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4963:5081   */\n    tag_290:\n        /* \"#utility.yul\":5050:5074   */\n      tag_292\n        /* \"#utility.yul\":5068:5073   */\n      dup2\n        /* \"#utility.yul\":5050:5074   */\n      tag_293\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":5045:5048   */\n      dup3\n        /* \"#utility.yul\":5038:5075   */\n      mstore\n        /* \"#utility.yul\":5028:5081   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5087:5309   */\n    tag_69:\n      0x00\n        /* \"#utility.yul\":5218:5220   */\n      0x20\n        /* \"#utility.yul\":5207:5216   */\n      dup3\n        /* \"#utility.yul\":5203:5221   */\n      add\n        /* \"#utility.yul\":5195:5221   */\n      swap1\n      pop\n        /* \"#utility.yul\":5231:5302   */\n      tag_295\n        /* \"#utility.yul\":5299:5300   */\n      0x00\n        /* \"#utility.yul\":5288:5297   */\n      dup4\n        /* \"#utility.yul\":5284:5301   */\n      add\n        /* \"#utility.yul\":5275:5281   */\n      dup5\n        /* \"#utility.yul\":5231:5302   */\n      tag_241\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":5185:5309   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5315:5757   */\n    tag_171:\n      0x00\n        /* \"#utility.yul\":5502:5504   */\n      0x60\n        /* \"#utility.yul\":5491:5500   */\n      dup3\n        /* \"#utility.yul\":5487:5505   */\n      add\n        /* \"#utility.yul\":5479:5505   */\n      swap1\n      pop\n        /* \"#utility.yul\":5515:5586   */\n      tag_297\n        /* \"#utility.yul\":5583:5584   */\n      0x00\n        /* \"#utility.yul\":5572:5581   */\n      dup4\n        /* \"#utility.yul\":5568:5585   */\n      add\n        /* \"#utility.yul\":5559:5565   */\n      dup7\n        /* \"#utility.yul\":5515:5586   */\n      tag_241\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":5596:5668   */\n      tag_298\n        /* \"#utility.yul\":5664:5666   */\n      0x20\n        /* \"#utility.yul\":5653:5662   */\n      dup4\n        /* \"#utility.yul\":5649:5667   */\n      add\n        /* \"#utility.yul\":5640:5646   */\n      dup6\n        /* \"#utility.yul\":5596:5668   */\n      tag_241\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":5678:5750   */\n      tag_299\n        /* \"#utility.yul\":5746:5748   */\n      0x40\n        /* \"#utility.yul\":5735:5744   */\n      dup4\n        /* \"#utility.yul\":5731:5749   */\n      add\n        /* \"#utility.yul\":5722:5728   */\n      dup5\n        /* \"#utility.yul\":5678:5750   */\n      tag_290\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":5469:5757   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5763:6095   */\n    tag_106:\n      0x00\n        /* \"#utility.yul\":5922:5924   */\n      0x40\n        /* \"#utility.yul\":5911:5920   */\n      dup3\n        /* \"#utility.yul\":5907:5925   */\n      add\n        /* \"#utility.yul\":5899:5925   */\n      swap1\n      pop\n        /* \"#utility.yul\":5935:6006   */\n      tag_301\n        /* \"#utility.yul\":6003:6004   */\n      0x00\n        /* \"#utility.yul\":5992:6001   */\n      dup4\n        /* \"#utility.yul\":5988:6005   */\n      add\n        /* \"#utility.yul\":5979:5985   */\n      dup6\n        /* \"#utility.yul\":5935:6006   */\n      tag_241\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":6016:6088   */\n      tag_302\n        /* \"#utility.yul\":6084:6086   */\n      0x20\n        /* \"#utility.yul\":6073:6082   */\n      dup4\n        /* \"#utility.yul\":6069:6087   */\n      add\n        /* \"#utility.yul\":6060:6066   */\n      dup5\n        /* \"#utility.yul\":6016:6088   */\n      tag_290\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":5889:6095   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6101:6351   */\n    tag_86:\n      0x00\n        /* \"#utility.yul\":6246:6248   */\n      0x20\n        /* \"#utility.yul\":6235:6244   */\n      dup3\n        /* \"#utility.yul\":6231:6249   */\n      add\n        /* \"#utility.yul\":6223:6249   */\n      swap1\n      pop\n        /* \"#utility.yul\":6259:6344   */\n      tag_304\n        /* \"#utility.yul\":6341:6342   */\n      0x00\n        /* \"#utility.yul\":6330:6339   */\n      dup4\n        /* \"#utility.yul\":6326:6343   */\n      add\n        /* \"#utility.yul\":6317:6323   */\n      dup5\n        /* \"#utility.yul\":6259:6344   */\n      tag_245\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":6213:6351   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6357:6776   */\n    tag_125:\n      0x00\n        /* \"#utility.yul\":6561:6563   */\n      0x20\n        /* \"#utility.yul\":6550:6559   */\n      dup3\n        /* \"#utility.yul\":6546:6564   */\n      add\n        /* \"#utility.yul\":6538:6564   */\n      swap1\n      pop\n        /* \"#utility.yul\":6610:6619   */\n      dup2\n        /* \"#utility.yul\":6604:6608   */\n      dup2\n        /* \"#utility.yul\":6600:6620   */\n      sub\n        /* \"#utility.yul\":6596:6597   */\n      0x00\n        /* \"#utility.yul\":6585:6594   */\n      dup4\n        /* \"#utility.yul\":6581:6598   */\n      add\n        /* \"#utility.yul\":6574:6621   */\n      mstore\n        /* \"#utility.yul\":6638:6769   */\n      tag_306\n        /* \"#utility.yul\":6764:6768   */\n      dup2\n        /* \"#utility.yul\":6638:6769   */\n      tag_249\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":6630:6769   */\n      swap1\n      pop\n        /* \"#utility.yul\":6528:6776   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6782:7201   */\n    tag_101:\n      0x00\n        /* \"#utility.yul\":6986:6988   */\n      0x20\n        /* \"#utility.yul\":6975:6984   */\n      dup3\n        /* \"#utility.yul\":6971:6989   */\n      add\n        /* \"#utility.yul\":6963:6989   */\n      swap1\n      pop\n        /* \"#utility.yul\":7035:7044   */\n      dup2\n        /* \"#utility.yul\":7029:7033   */\n      dup2\n        /* \"#utility.yul\":7025:7045   */\n      sub\n        /* \"#utility.yul\":7021:7022   */\n      0x00\n        /* \"#utility.yul\":7010:7019   */\n      dup4\n        /* \"#utility.yul\":7006:7023   */\n      add\n        /* \"#utility.yul\":6999:7046   */\n      mstore\n        /* \"#utility.yul\":7063:7194   */\n      tag_308\n        /* \"#utility.yul\":7189:7193   */\n      dup2\n        /* \"#utility.yul\":7063:7194   */\n      tag_255\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":7055:7194   */\n      swap1\n      pop\n        /* \"#utility.yul\":6953:7201   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7207:7626   */\n    tag_194:\n      0x00\n        /* \"#utility.yul\":7411:7413   */\n      0x20\n        /* \"#utility.yul\":7400:7409   */\n      dup3\n        /* \"#utility.yul\":7396:7414   */\n      add\n        /* \"#utility.yul\":7388:7414   */\n      swap1\n      pop\n        /* \"#utility.yul\":7460:7469   */\n      dup2\n        /* \"#utility.yul\":7454:7458   */\n      dup2\n        /* \"#utility.yul\":7450:7470   */\n      sub\n        /* \"#utility.yul\":7446:7447   */\n      0x00\n        /* \"#utility.yul\":7435:7444   */\n      dup4\n        /* \"#utility.yul\":7431:7448   */\n      add\n        /* \"#utility.yul\":7424:7471   */\n      mstore\n        /* \"#utility.yul\":7488:7619   */\n      tag_310\n        /* \"#utility.yul\":7614:7618   */\n      dup2\n        /* \"#utility.yul\":7488:7619   */\n      tag_260\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":7480:7619   */\n      swap1\n      pop\n        /* \"#utility.yul\":7378:7626   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7632:8051   */\n    tag_114:\n      0x00\n        /* \"#utility.yul\":7836:7838   */\n      0x20\n        /* \"#utility.yul\":7825:7834   */\n      dup3\n        /* \"#utility.yul\":7821:7839   */\n      add\n        /* \"#utility.yul\":7813:7839   */\n      swap1\n      pop\n        /* \"#utility.yul\":7885:7894   */\n      dup2\n        /* \"#utility.yul\":7879:7883   */\n      dup2\n        /* \"#utility.yul\":7875:7895   */\n      sub\n        /* \"#utility.yul\":7871:7872   */\n      0x00\n        /* \"#utility.yul\":7860:7869   */\n      dup4\n        /* \"#utility.yul\":7856:7873   */\n      add\n        /* \"#utility.yul\":7849:7896   */\n      mstore\n        /* \"#utility.yul\":7913:8044   */\n      tag_312\n        /* \"#utility.yul\":8039:8043   */\n      dup2\n        /* \"#utility.yul\":7913:8044   */\n      tag_265\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":7905:8044   */\n      swap1\n      pop\n        /* \"#utility.yul\":7803:8051   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8057:8476   */\n    tag_104:\n      0x00\n        /* \"#utility.yul\":8261:8263   */\n      0x20\n        /* \"#utility.yul\":8250:8259   */\n      dup3\n        /* \"#utility.yul\":8246:8264   */\n      add\n        /* \"#utility.yul\":8238:8264   */\n      swap1\n      pop\n        /* \"#utility.yul\":8310:8319   */\n      dup2\n        /* \"#utility.yul\":8304:8308   */\n      dup2\n        /* \"#utility.yul\":8300:8320   */\n      sub\n        /* \"#utility.yul\":8296:8297   */\n      0x00\n        /* \"#utility.yul\":8285:8294   */\n      dup4\n        /* \"#utility.yul\":8281:8298   */\n      add\n        /* \"#utility.yul\":8274:8321   */\n      mstore\n        /* \"#utility.yul\":8338:8469   */\n      tag_314\n        /* \"#utility.yul\":8464:8468   */\n      dup2\n        /* \"#utility.yul\":8338:8469   */\n      tag_270\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":8330:8469   */\n      swap1\n      pop\n        /* \"#utility.yul\":8228:8476   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8482:8901   */\n    tag_169:\n      0x00\n        /* \"#utility.yul\":8686:8688   */\n      0x20\n        /* \"#utility.yul\":8675:8684   */\n      dup3\n        /* \"#utility.yul\":8671:8689   */\n      add\n        /* \"#utility.yul\":8663:8689   */\n      swap1\n      pop\n        /* \"#utility.yul\":8735:8744   */\n      dup2\n        /* \"#utility.yul\":8729:8733   */\n      dup2\n        /* \"#utility.yul\":8725:8745   */\n      sub\n        /* \"#utility.yul\":8721:8722   */\n      0x00\n        /* \"#utility.yul\":8710:8719   */\n      dup4\n        /* \"#utility.yul\":8706:8723   */\n      add\n        /* \"#utility.yul\":8699:8746   */\n      mstore\n        /* \"#utility.yul\":8763:8894   */\n      tag_316\n        /* \"#utility.yul\":8889:8893   */\n      dup2\n        /* \"#utility.yul\":8763:8894   */\n      tag_275\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":8755:8894   */\n      swap1\n      pop\n        /* \"#utility.yul\":8653:8901   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8907:9326   */\n    tag_210:\n      0x00\n        /* \"#utility.yul\":9111:9113   */\n      0x20\n        /* \"#utility.yul\":9100:9109   */\n      dup3\n        /* \"#utility.yul\":9096:9114   */\n      add\n        /* \"#utility.yul\":9088:9114   */\n      swap1\n      pop\n        /* \"#utility.yul\":9160:9169   */\n      dup2\n        /* \"#utility.yul\":9154:9158   */\n      dup2\n        /* \"#utility.yul\":9150:9170   */\n      sub\n        /* \"#utility.yul\":9146:9147   */\n      0x00\n        /* \"#utility.yul\":9135:9144   */\n      dup4\n        /* \"#utility.yul\":9131:9148   */\n      add\n        /* \"#utility.yul\":9124:9171   */\n      mstore\n        /* \"#utility.yul\":9188:9319   */\n      tag_318\n        /* \"#utility.yul\":9314:9318   */\n      dup2\n        /* \"#utility.yul\":9188:9319   */\n      tag_280\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":9180:9319   */\n      swap1\n      pop\n        /* \"#utility.yul\":9078:9326   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9332:9751   */\n    tag_202:\n      0x00\n        /* \"#utility.yul\":9536:9538   */\n      0x20\n        /* \"#utility.yul\":9525:9534   */\n      dup3\n        /* \"#utility.yul\":9521:9539   */\n      add\n        /* \"#utility.yul\":9513:9539   */\n      swap1\n      pop\n        /* \"#utility.yul\":9585:9594   */\n      dup2\n        /* \"#utility.yul\":9579:9583   */\n      dup2\n        /* \"#utility.yul\":9575:9595   */\n      sub\n        /* \"#utility.yul\":9571:9572   */\n      0x00\n        /* \"#utility.yul\":9560:9569   */\n      dup4\n        /* \"#utility.yul\":9556:9573   */\n      add\n        /* \"#utility.yul\":9549:9596   */\n      mstore\n        /* \"#utility.yul\":9613:9744   */\n      tag_320\n        /* \"#utility.yul\":9739:9743   */\n      dup2\n        /* \"#utility.yul\":9613:9744   */\n      tag_285\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":9605:9744   */\n      swap1\n      pop\n        /* \"#utility.yul\":9503:9751   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9757:9979   */\n    tag_29:\n      0x00\n        /* \"#utility.yul\":9888:9890   */\n      0x20\n        /* \"#utility.yul\":9877:9886   */\n      dup3\n        /* \"#utility.yul\":9873:9891   */\n      add\n        /* \"#utility.yul\":9865:9891   */\n      swap1\n      pop\n        /* \"#utility.yul\":9901:9972   */\n      tag_322\n        /* \"#utility.yul\":9969:9970   */\n      0x00\n        /* \"#utility.yul\":9958:9967   */\n      dup4\n        /* \"#utility.yul\":9954:9971   */\n      add\n        /* \"#utility.yul\":9945:9951   */\n      dup5\n        /* \"#utility.yul\":9901:9972   */\n      tag_290\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":9855:9979   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9985:10154   */\n    tag_252:\n      0x00\n        /* \"#utility.yul\":10103:10109   */\n      dup3\n        /* \"#utility.yul\":10098:10101   */\n      dup3\n        /* \"#utility.yul\":10091:10110   */\n      mstore\n        /* \"#utility.yul\":10143:10147   */\n      0x20\n        /* \"#utility.yul\":10138:10141   */\n      dup3\n        /* \"#utility.yul\":10134:10148   */\n      add\n        /* \"#utility.yul\":10119:10148   */\n      swap1\n      pop\n        /* \"#utility.yul\":10081:10154   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10160:10465   */\n    tag_98:\n      0x00\n        /* \"#utility.yul\":10219:10239   */\n      tag_325\n        /* \"#utility.yul\":10237:10238   */\n      dup3\n        /* \"#utility.yul\":10219:10239   */\n      tag_293\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":10214:10239   */\n      swap2\n      pop\n        /* \"#utility.yul\":10253:10273   */\n      tag_326\n        /* \"#utility.yul\":10271:10272   */\n      dup4\n        /* \"#utility.yul\":10253:10273   */\n      tag_293\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":10248:10273   */\n      swap3\n      pop\n        /* \"#utility.yul\":10407:10408   */\n      dup3\n        /* \"#utility.yul\":10339:10405   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10335:10409   */\n      sub\n        /* \"#utility.yul\":10332:10333   */\n      dup3\n        /* \"#utility.yul\":10329:10410   */\n      gt\n        /* \"#utility.yul\":10326:10328   */\n      iszero\n      tag_327\n      jumpi\n        /* \"#utility.yul\":10413:10431   */\n      tag_328\n      tag_329\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":10326:10328   */\n    tag_327:\n        /* \"#utility.yul\":10457:10458   */\n      dup3\n        /* \"#utility.yul\":10454:10455   */\n      dup3\n        /* \"#utility.yul\":10450:10459   */\n      add\n        /* \"#utility.yul\":10443:10459   */\n      swap1\n      pop\n        /* \"#utility.yul\":10204:10465   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10471:10656   */\n    tag_185:\n      0x00\n        /* \"#utility.yul\":10528:10548   */\n      tag_331\n        /* \"#utility.yul\":10546:10547   */\n      dup3\n        /* \"#utility.yul\":10528:10548   */\n      tag_293\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":10523:10548   */\n      swap2\n      pop\n        /* \"#utility.yul\":10562:10582   */\n      tag_332\n        /* \"#utility.yul\":10580:10581   */\n      dup4\n        /* \"#utility.yul\":10562:10582   */\n      tag_293\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":10557:10582   */\n      swap3\n      pop\n        /* \"#utility.yul\":10601:10602   */\n      dup3\n        /* \"#utility.yul\":10591:10593   */\n      tag_333\n      jumpi\n        /* \"#utility.yul\":10606:10624   */\n      tag_334\n      tag_335\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":10591:10593   */\n    tag_333:\n        /* \"#utility.yul\":10648:10649   */\n      dup3\n        /* \"#utility.yul\":10645:10646   */\n      dup3\n        /* \"#utility.yul\":10641:10650   */\n      div\n        /* \"#utility.yul\":10636:10650   */\n      swap1\n      pop\n        /* \"#utility.yul\":10513:10656   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10662:11010   */\n    tag_187:\n      0x00\n        /* \"#utility.yul\":10725:10745   */\n      tag_337\n        /* \"#utility.yul\":10743:10744   */\n      dup3\n        /* \"#utility.yul\":10725:10745   */\n      tag_293\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":10720:10745   */\n      swap2\n      pop\n        /* \"#utility.yul\":10759:10779   */\n      tag_338\n        /* \"#utility.yul\":10777:10778   */\n      dup4\n        /* \"#utility.yul\":10759:10779   */\n      tag_293\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":10754:10779   */\n      swap3\n      pop\n        /* \"#utility.yul\":10947:10948   */\n      dup2\n        /* \"#utility.yul\":10879:10945   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10875:10949   */\n      div\n        /* \"#utility.yul\":10872:10873   */\n      dup4\n        /* \"#utility.yul\":10869:10950   */\n      gt\n        /* \"#utility.yul\":10864:10865   */\n      dup3\n        /* \"#utility.yul\":10857:10866   */\n      iszero\n        /* \"#utility.yul\":10850:10867   */\n      iszero\n        /* \"#utility.yul\":10846:10951   */\n      and\n        /* \"#utility.yul\":10843:10845   */\n      iszero\n      tag_339\n      jumpi\n        /* \"#utility.yul\":10954:10972   */\n      tag_340\n      tag_329\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":10843:10845   */\n    tag_339:\n        /* \"#utility.yul\":11002:11003   */\n      dup3\n        /* \"#utility.yul\":10999:11000   */\n      dup3\n        /* \"#utility.yul\":10995:11004   */\n      mul\n        /* \"#utility.yul\":10984:11004   */\n      swap1\n      pop\n        /* \"#utility.yul\":10710:11010   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11016:11207   */\n    tag_116:\n      0x00\n        /* \"#utility.yul\":11076:11096   */\n      tag_342\n        /* \"#utility.yul\":11094:11095   */\n      dup3\n        /* \"#utility.yul\":11076:11096   */\n      tag_293\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":11071:11096   */\n      swap2\n      pop\n        /* \"#utility.yul\":11110:11130   */\n      tag_343\n        /* \"#utility.yul\":11128:11129   */\n      dup4\n        /* \"#utility.yul\":11110:11130   */\n      tag_293\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":11105:11130   */\n      swap3\n      pop\n        /* \"#utility.yul\":11149:11150   */\n      dup3\n        /* \"#utility.yul\":11146:11147   */\n      dup3\n        /* \"#utility.yul\":11143:11151   */\n      lt\n        /* \"#utility.yul\":11140:11142   */\n      iszero\n      tag_344\n      jumpi\n        /* \"#utility.yul\":11154:11172   */\n      tag_345\n      tag_329\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":11140:11142   */\n    tag_344:\n        /* \"#utility.yul\":11199:11200   */\n      dup3\n        /* \"#utility.yul\":11196:11197   */\n      dup3\n        /* \"#utility.yul\":11192:11201   */\n      sub\n        /* \"#utility.yul\":11184:11201   */\n      swap1\n      pop\n        /* \"#utility.yul\":11061:11207   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11213:11309   */\n    tag_244:\n      0x00\n        /* \"#utility.yul\":11279:11303   */\n      tag_347\n        /* \"#utility.yul\":11297:11302   */\n      dup3\n        /* \"#utility.yul\":11279:11303   */\n      tag_348\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":11268:11303   */\n      swap1\n      pop\n        /* \"#utility.yul\":11258:11309   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11315:11405   */\n    tag_349:\n      0x00\n        /* \"#utility.yul\":11392:11397   */\n      dup2\n        /* \"#utility.yul\":11385:11398   */\n      iszero\n        /* \"#utility.yul\":11378:11399   */\n      iszero\n        /* \"#utility.yul\":11367:11399   */\n      swap1\n      pop\n        /* \"#utility.yul\":11357:11405   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11411:11537   */\n    tag_348:\n      0x00\n        /* \"#utility.yul\":11488:11530   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11481:11486   */\n      dup3\n        /* \"#utility.yul\":11477:11531   */\n      and\n        /* \"#utility.yul\":11466:11531   */\n      swap1\n      pop\n        /* \"#utility.yul\":11456:11537   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11543:11620   */\n    tag_293:\n      0x00\n        /* \"#utility.yul\":11609:11614   */\n      dup2\n        /* \"#utility.yul\":11598:11614   */\n      swap1\n      pop\n        /* \"#utility.yul\":11588:11620   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11626:11780   */\n    tag_248:\n      0x00\n        /* \"#utility.yul\":11723:11774   */\n      tag_354\n        /* \"#utility.yul\":11768:11773   */\n      dup3\n        /* \"#utility.yul\":11723:11774   */\n      tag_355\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":11710:11774   */\n      swap1\n      pop\n        /* \"#utility.yul\":11700:11780   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11786:11913   */\n    tag_355:\n      0x00\n        /* \"#utility.yul\":11883:11907   */\n      tag_357\n        /* \"#utility.yul\":11901:11906   */\n      dup3\n        /* \"#utility.yul\":11883:11907   */\n      tag_348\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":11870:11907   */\n      swap1\n      pop\n        /* \"#utility.yul\":11860:11913   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11919:12099   */\n    tag_329:\n        /* \"#utility.yul\":11967:12044   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11964:11965   */\n      0x00\n        /* \"#utility.yul\":11957:12045   */\n      mstore\n        /* \"#utility.yul\":12064:12068   */\n      0x11\n        /* \"#utility.yul\":12061:12062   */\n      0x04\n        /* \"#utility.yul\":12054:12069   */\n      mstore\n        /* \"#utility.yul\":12088:12092   */\n      0x24\n        /* \"#utility.yul\":12085:12086   */\n      0x00\n        /* \"#utility.yul\":12078:12093   */\n      revert\n        /* \"#utility.yul\":12105:12285   */\n    tag_335:\n        /* \"#utility.yul\":12153:12230   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12150:12151   */\n      0x00\n        /* \"#utility.yul\":12143:12231   */\n      mstore\n        /* \"#utility.yul\":12250:12254   */\n      0x12\n        /* \"#utility.yul\":12247:12248   */\n      0x04\n        /* \"#utility.yul\":12240:12255   */\n      mstore\n        /* \"#utility.yul\":12274:12278   */\n      0x24\n        /* \"#utility.yul\":12271:12272   */\n      0x00\n        /* \"#utility.yul\":12264:12279   */\n      revert\n        /* \"#utility.yul\":12291:12463   */\n    tag_254:\n        /* \"#utility.yul\":12431:12455   */\n      0x4164647265737320776173206e6f74207374616b656400000000000000000000\n        /* \"#utility.yul\":12427:12428   */\n      0x00\n        /* \"#utility.yul\":12419:12425   */\n      dup3\n        /* \"#utility.yul\":12415:12429   */\n      add\n        /* \"#utility.yul\":12408:12456   */\n      mstore\n        /* \"#utility.yul\":12397:12463   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12469:12625   */\n    tag_259:\n        /* \"#utility.yul\":12609:12617   */\n      0x4c6f636b65640000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12605:12606   */\n      0x00\n        /* \"#utility.yul\":12597:12603   */\n      dup3\n        /* \"#utility.yul\":12593:12607   */\n      add\n        /* \"#utility.yul\":12586:12618   */\n      mstore\n        /* \"#utility.yul\":12575:12625   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12631:12856   */\n    tag_264:\n        /* \"#utility.yul\":12771:12805   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":12767:12768   */\n      0x00\n        /* \"#utility.yul\":12759:12765   */\n      dup3\n        /* \"#utility.yul\":12755:12769   */\n      add\n        /* \"#utility.yul\":12748:12806   */\n      mstore\n        /* \"#utility.yul\":12840:12848   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12835:12837   */\n      0x20\n        /* \"#utility.yul\":12827:12833   */\n      dup3\n        /* \"#utility.yul\":12823:12838   */\n      add\n        /* \"#utility.yul\":12816:12849   */\n      mstore\n        /* \"#utility.yul\":12737:12856   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12862:13027   */\n    tag_269:\n        /* \"#utility.yul\":13002:13019   */\n      0x5472616e73666572206661696c65640000000000000000000000000000000000\n        /* \"#utility.yul\":12998:12999   */\n      0x00\n        /* \"#utility.yul\":12990:12996   */\n      dup3\n        /* \"#utility.yul\":12986:13000   */\n      add\n        /* \"#utility.yul\":12979:13020   */\n      mstore\n        /* \"#utility.yul\":12968:13027   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13033:13203   */\n    tag_274:\n        /* \"#utility.yul\":13173:13195   */\n      0x496e73756666696369656e742062616c616e6365000000000000000000000000\n        /* \"#utility.yul\":13169:13170   */\n      0x00\n        /* \"#utility.yul\":13161:13167   */\n      dup3\n        /* \"#utility.yul\":13157:13171   */\n      add\n        /* \"#utility.yul\":13150:13196   */\n      mstore\n        /* \"#utility.yul\":13139:13203   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13209:13390   */\n    tag_279:\n        /* \"#utility.yul\":13349:13382   */\n      0x416d6f756e742073686f756c642067726561746572207468616e207a65726f00\n        /* \"#utility.yul\":13345:13346   */\n      0x00\n        /* \"#utility.yul\":13337:13343   */\n      dup3\n        /* \"#utility.yul\":13333:13347   */\n      add\n        /* \"#utility.yul\":13326:13383   */\n      mstore\n        /* \"#utility.yul\":13315:13390   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13396:13578   */\n    tag_284:\n        /* \"#utility.yul\":13536:13570   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":13532:13533   */\n      0x00\n        /* \"#utility.yul\":13524:13530   */\n      dup3\n        /* \"#utility.yul\":13520:13534   */\n      add\n        /* \"#utility.yul\":13513:13571   */\n      mstore\n        /* \"#utility.yul\":13502:13578   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13584:13765   */\n    tag_289:\n        /* \"#utility.yul\":13724:13757   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":13720:13721   */\n      0x00\n        /* \"#utility.yul\":13712:13718   */\n      dup3\n        /* \"#utility.yul\":13708:13722   */\n      add\n        /* \"#utility.yul\":13701:13758   */\n      mstore\n        /* \"#utility.yul\":13690:13765   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13771:13893   */\n    tag_217:\n        /* \"#utility.yul\":13844:13868   */\n      tag_369\n        /* \"#utility.yul\":13862:13867   */\n      dup2\n        /* \"#utility.yul\":13844:13868   */\n      tag_244\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":13837:13842   */\n      dup2\n        /* \"#utility.yul\":13834:13869   */\n      eq\n        /* \"#utility.yul\":13824:13826   */\n      tag_370\n      jumpi\n        /* \"#utility.yul\":13883:13884   */\n      0x00\n        /* \"#utility.yul\":13880:13881   */\n      dup1\n        /* \"#utility.yul\":13873:13885   */\n      revert\n        /* \"#utility.yul\":13824:13826   */\n    tag_370:\n        /* \"#utility.yul\":13814:13893   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13899:14015   */\n    tag_221:\n        /* \"#utility.yul\":13969:13990   */\n      tag_372\n        /* \"#utility.yul\":13984:13989   */\n      dup2\n        /* \"#utility.yul\":13969:13990   */\n      tag_349\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":13962:13967   */\n      dup2\n        /* \"#utility.yul\":13959:13991   */\n      eq\n        /* \"#utility.yul\":13949:13951   */\n      tag_373\n      jumpi\n        /* \"#utility.yul\":14005:14006   */\n      0x00\n        /* \"#utility.yul\":14002:14003   */\n      dup1\n        /* \"#utility.yul\":13995:14007   */\n      revert\n        /* \"#utility.yul\":13949:13951   */\n    tag_373:\n        /* \"#utility.yul\":13939:14015   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14021:14143   */\n    tag_225:\n        /* \"#utility.yul\":14094:14118   */\n      tag_375\n        /* \"#utility.yul\":14112:14117   */\n      dup2\n        /* \"#utility.yul\":14094:14118   */\n      tag_293\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":14087:14092   */\n      dup2\n        /* \"#utility.yul\":14084:14119   */\n      eq\n        /* \"#utility.yul\":14074:14076   */\n      tag_376\n      jumpi\n        /* \"#utility.yul\":14133:14134   */\n      0x00\n        /* \"#utility.yul\":14130:14131   */\n      dup1\n        /* \"#utility.yul\":14123:14135   */\n      revert\n        /* \"#utility.yul\":14074:14076   */\n    tag_376:\n        /* \"#utility.yul\":14064:14143   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205466ea2a966c6bd51b60e5e4c63b1efdbad08a0117cf38d60ff5dcdb2137f26364736f6c63430008010033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1634:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:6"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:6",
														"type": ""
													}
												],
												"src": "7:143:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "219:80:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "229:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "244:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "238:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "238:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "229:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "287:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "260:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "260:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "260:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "197:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "205:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "213:5:6",
														"type": ""
													}
												],
												"src": "156:143:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "433:625:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "480:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "489:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "492:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "482:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "482:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "482:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "454:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "463:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "450:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "450:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "475:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "446:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "446:33:6"
															},
															"nodeType": "YulIf",
															"src": "443:2:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "506:128:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "521:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "535:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "525:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "550:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "596:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "607:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "592:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "592:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "616:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "560:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "560:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "550:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "644:129:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "659:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "673:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "663:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "689:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "735:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "746:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "731:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "731:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "755:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "699:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "699:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "689:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "783:129:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "798:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "812:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "802:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "828:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "874:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "885:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "870:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "870:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "894:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "838:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "838:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "828:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "922:129:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "937:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "951:2:6",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "941:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "967:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1013:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1024:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1009:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1009:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1033:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "977:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "977:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "967:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "379:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "390:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "402:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "410:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "418:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "426:6:6",
														"type": ""
													}
												],
												"src": "305:753:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1109:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1119:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1148:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1130:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1130:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1119:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1091:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1101:7:6",
														"type": ""
													}
												],
												"src": "1064:96:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1211:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1221:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1236:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1243:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1232:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1232:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1221:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1193:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1203:7:6",
														"type": ""
													}
												],
												"src": "1166:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1343:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1353:16:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1364:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1353:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1325:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1335:7:6",
														"type": ""
													}
												],
												"src": "1298:77:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1424:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1481:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1490:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1493:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1483:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1483:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1483:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1447:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1472:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1454:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1454:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1444:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1444:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1437:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1437:43:6"
															},
															"nodeType": "YulIf",
															"src": "1434:2:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1417:5:6",
														"type": ""
													}
												],
												"src": "1381:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1552:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1609:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1618:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1621:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1611:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1611:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1611:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1575:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1600:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1582:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1582:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1572:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1572:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1565:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1565:43:6"
															},
															"nodeType": "YulIf",
															"src": "1562:2:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1545:5:6",
														"type": ""
													}
												],
												"src": "1509:122:6"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162001ae638038062001ae68339818101604052810190620000379190620001f9565b620000576200004b620000ff60201b60201c565b6200010760201b60201c565b6001808190555083600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600481905550806005819055504260068190555050505050620002d7565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050620001dc81620002a3565b92915050565b600081519050620001f381620002bd565b92915050565b600080600080608085870312156200021057600080fd5b60006200022087828801620001cb565b94505060206200023387828801620001cb565b93505060406200024687828801620001e2565b92505060606200025987828801620001e2565b91505092959194509250565b6000620002728262000279565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b620002ae8162000265565b8114620002ba57600080fd5b50565b620002c88162000299565b8114620002d457600080fd5b50565b6117ff80620002e76000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c8063817b1cd2116100ad578063ef790a8211610071578063ef790a82146102f9578063f2fde38b14610329578063f7c618c114610345578063fc0c546a14610363578063fc71ae8c146103815761012c565b8063817b1cd2146102675780638aee8127146102855780638da5cb5b146102a1578063a694fc3a146102bf578063ee947a7c146102db5761012c565b8063583d42fd116100f4578063583d42fd146101d55780635d90bad9146102055780636abfd18314610221578063715018a61461023f578063750142e6146102495761012c565b8063154a78b5146101315780631683153d1461014f5780632e1a7d4d1461017f5780633d18b9121461019b57806345bc78ab146101a5575b600080fd5b61013961039d565b604051610146919061140b565b60405180910390f35b6101696004803603810190610164919061108c565b6103a3565b604051610176919061140b565b60405180910390f35b610199600480360381019061019491906110de565b6103bb565b005b6101a3610634565b005b6101bf60048036038101906101ba919061108c565b610872565b6040516101cc919061140b565b60405180910390f35b6101ef60048036038101906101ea919061108c565b61088a565b6040516101fc919061140b565b60405180910390f35b61021f600480360381019061021a91906110de565b6108a2565b005b6102296108b4565b604051610236919061140b565b60405180910390f35b6102476108ba565b005b6102516108ce565b60405161025e919061140b565b60405180910390f35b61026f610980565b60405161027c919061140b565b60405180910390f35b61029f600480360381019061029a919061108c565b610a32565b005b6102a9610a7e565b6040516102b69190611275565b60405180910390f35b6102d960048036038101906102d491906110de565b610aa7565b005b6102e3610cd5565b6040516102f0919061140b565b60405180910390f35b610313600480360381019061030e919061108c565b610cdb565b604051610320919061140b565b60405180910390f35b610343600480360381019061033e919061108c565b610db3565b005b61034d610e37565b60405161035a91906112f0565b60405180910390f35b61036b610e5d565b60405161037891906112f0565b60405180910390f35b61039b600480360381019061039691906110de565b610e83565b005b60045481565b60096020528060005260406000206000915090505481565b6103c3610e95565b6005546006546103d39190611437565b421015610415576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040c9061132b565b60405180910390fd5b80600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610497576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048e9061138b565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016104f49291906112c7565b602060405180830381600087803b15801561050e57600080fd5b505af1158015610522573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054691906110b5565b610585576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057c9061136b565b60405180910390fd5b80600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105d49190611518565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167fb24546d975e2628748efc9aced80665e0fad66272033e5c0ea25fd3afac9979582604051610621919061140b565b60405180910390a2610631610ee5565b50565b61063c610e95565b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054116106be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b59061130b565b60405180910390fd5b60006106c933610cdb565b905060008111156108675780600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107239190611437565b92505081905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016107879291906112c7565b602060405180830381600087803b1580156107a157600080fd5b505af11580156107b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d991906110b5565b610818576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080f9061136b565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167fba8de60c3403ec381d1d484652ea1980e3c3e56359195c92525bff4ce47ad98e8260405161085e919061140b565b60405180910390a25b50610870610ee5565b565b60076020528060005260406000206000915090505481565b60086020528060005260406000206000915090505481565b6108aa610eee565b8060068190555050565b60065481565b6108c2610eee565b6108cc6000610f6c565b565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161092b9190611275565b60206040518083038186803b15801561094357600080fd5b505afa158015610957573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097b9190611107565b905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016109dd9190611275565b60206040518083038186803b1580156109f557600080fd5b505afa158015610a09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2d9190611107565b905090565b610a3a610eee565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610aaf610e95565b60008111610af2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae9906113ab565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610b5193929190611290565b602060405180830381600087803b158015610b6b57600080fd5b505af1158015610b7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba391906110b5565b610be2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd99061136b565b60405180910390fd5b80600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c319190611437565b9250508190555042600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff167febedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a82604051610cc2919061140b565b60405180910390a2610cd2610ee5565b50565b60055481565b600080600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600654600554610d2e9190611437565b610d389190611518565b9050600060045460055483610d4d919061148d565b610d5791906114be565b9050600081600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610da691906114be565b9050809350505050919050565b610dbb610eee565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610e2b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e229061134b565b60405180910390fd5b610e3481610f6c565b50565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610e8b610eee565b8060048190555050565b60026001541415610edb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ed2906113eb565b60405180910390fd5b6002600181905550565b60018081905550565b610ef6611030565b73ffffffffffffffffffffffffffffffffffffffff16610f14610a7e565b73ffffffffffffffffffffffffffffffffffffffff1614610f6a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f61906113cb565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b60008135905061104781611784565b92915050565b60008151905061105c8161179b565b92915050565b600081359050611071816117b2565b92915050565b600081519050611086816117b2565b92915050565b60006020828403121561109e57600080fd5b60006110ac84828501611038565b91505092915050565b6000602082840312156110c757600080fd5b60006110d58482850161104d565b91505092915050565b6000602082840312156110f057600080fd5b60006110fe84828501611062565b91505092915050565b60006020828403121561111957600080fd5b600061112784828501611077565b91505092915050565b6111398161154c565b82525050565b61114881611594565b82525050565b600061115b601683611426565b915061116682611616565b602082019050919050565b600061117e600683611426565b91506111898261163f565b602082019050919050565b60006111a1602683611426565b91506111ac82611668565b604082019050919050565b60006111c4600f83611426565b91506111cf826116b7565b602082019050919050565b60006111e7601483611426565b91506111f2826116e0565b602082019050919050565b600061120a601f83611426565b915061121582611709565b602082019050919050565b600061122d602083611426565b915061123882611732565b602082019050919050565b6000611250601f83611426565b915061125b8261175b565b602082019050919050565b61126f8161158a565b82525050565b600060208201905061128a6000830184611130565b92915050565b60006060820190506112a56000830186611130565b6112b26020830185611130565b6112bf6040830184611266565b949350505050565b60006040820190506112dc6000830185611130565b6112e96020830184611266565b9392505050565b6000602082019050611305600083018461113f565b92915050565b600060208201905081810360008301526113248161114e565b9050919050565b6000602082019050818103600083015261134481611171565b9050919050565b6000602082019050818103600083015261136481611194565b9050919050565b60006020820190508181036000830152611384816111b7565b9050919050565b600060208201905081810360008301526113a4816111da565b9050919050565b600060208201905081810360008301526113c4816111fd565b9050919050565b600060208201905081810360008301526113e481611220565b9050919050565b6000602082019050818103600083015261140481611243565b9050919050565b60006020820190506114206000830184611266565b92915050565b600082825260208201905092915050565b60006114428261158a565b915061144d8361158a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611482576114816115b8565b5b828201905092915050565b60006114988261158a565b91506114a38361158a565b9250826114b3576114b26115e7565b5b828204905092915050565b60006114c98261158a565b91506114d48361158a565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561150d5761150c6115b8565b5b828202905092915050565b60006115238261158a565b915061152e8361158a565b925082821015611541576115406115b8565b5b828203905092915050565b60006115578261156a565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061159f826115a6565b9050919050565b60006115b18261156a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4164647265737320776173206e6f74207374616b656400000000000000000000600082015250565b7f4c6f636b65640000000000000000000000000000000000000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b7f416d6f756e742073686f756c642067726561746572207468616e207a65726f00600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b61178d8161154c565b811461179857600080fd5b50565b6117a48161155e565b81146117af57600080fd5b50565b6117bb8161158a565b81146117c657600080fd5b5056fea26469706673582212205466ea2a966c6bd51b60e5e4c63b1efdbad08a0117cf38d60ff5dcdb2137f26364736f6c63430008010033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1AE6 CODESIZE SUB DUP1 PUSH3 0x1AE6 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x1F9 JUMP JUMPDEST PUSH3 0x57 PUSH3 0x4B PUSH3 0xFF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x107 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x4 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP POP POP POP PUSH3 0x2D7 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1DC DUP2 PUSH3 0x2A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1F3 DUP2 PUSH3 0x2BD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x210 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x220 DUP8 DUP3 DUP9 ADD PUSH3 0x1CB JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH3 0x233 DUP8 DUP3 DUP9 ADD PUSH3 0x1CB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH3 0x246 DUP8 DUP3 DUP9 ADD PUSH3 0x1E2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH3 0x259 DUP8 DUP3 DUP9 ADD PUSH3 0x1E2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x272 DUP3 PUSH3 0x279 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2AE DUP2 PUSH3 0x265 JUMP JUMPDEST DUP2 EQ PUSH3 0x2BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x2C8 DUP2 PUSH3 0x299 JUMP JUMPDEST DUP2 EQ PUSH3 0x2D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x17FF DUP1 PUSH3 0x2E7 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x817B1CD2 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xEF790A82 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xEF790A82 EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x329 JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x345 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x363 JUMPI DUP1 PUSH4 0xFC71AE8C EQ PUSH2 0x381 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x8AEE8127 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0xEE947A7C EQ PUSH2 0x2DB JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x583D42FD GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x583D42FD EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x5D90BAD9 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x6ABFD183 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x750142E6 EQ PUSH2 0x249 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x154A78B5 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x1683153D EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x3D18B912 EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0x45BC78AB EQ PUSH2 0x1A5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x39D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x140B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x108C JUMP JUMPDEST PUSH2 0x3A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x140B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x194 SWAP2 SWAP1 PUSH2 0x10DE JUMP JUMPDEST PUSH2 0x3BB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A3 PUSH2 0x634 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0x108C JUMP JUMPDEST PUSH2 0x872 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x140B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x108C JUMP JUMPDEST PUSH2 0x88A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x140B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x10DE JUMP JUMPDEST PUSH2 0x8A2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x229 PUSH2 0x8B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x140B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x247 PUSH2 0x8BA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x251 PUSH2 0x8CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x140B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26F PUSH2 0x980 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x140B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x108C JUMP JUMPDEST PUSH2 0xA32 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A9 PUSH2 0xA7E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B6 SWAP2 SWAP1 PUSH2 0x1275 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D4 SWAP2 SWAP1 PUSH2 0x10DE JUMP JUMPDEST PUSH2 0xAA7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E3 PUSH2 0xCD5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x140B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x313 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30E SWAP2 SWAP1 PUSH2 0x108C JUMP JUMPDEST PUSH2 0xCDB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x320 SWAP2 SWAP1 PUSH2 0x140B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x343 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33E SWAP2 SWAP1 PUSH2 0x108C JUMP JUMPDEST PUSH2 0xDB3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x34D PUSH2 0xE37 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35A SWAP2 SWAP1 PUSH2 0x12F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36B PUSH2 0xE5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x378 SWAP2 SWAP1 PUSH2 0x12F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x396 SWAP2 SWAP1 PUSH2 0x10DE JUMP JUMPDEST PUSH2 0xE83 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3C3 PUSH2 0xE95 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH2 0x3D3 SWAP2 SWAP1 PUSH2 0x1437 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x415 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40C SWAP1 PUSH2 0x132B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x497 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48E SWAP1 PUSH2 0x138B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F4 SWAP3 SWAP2 SWAP1 PUSH2 0x12C7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x50E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x522 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x546 SWAP2 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST PUSH2 0x585 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x57C SWAP1 PUSH2 0x136B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x5D4 SWAP2 SWAP1 PUSH2 0x1518 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB24546D975E2628748EFC9ACED80665E0FAD66272033E5C0EA25FD3AFAC99795 DUP3 PUSH1 0x40 MLOAD PUSH2 0x621 SWAP2 SWAP1 PUSH2 0x140B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x631 PUSH2 0xEE5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x63C PUSH2 0xE95 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT PUSH2 0x6BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B5 SWAP1 PUSH2 0x130B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6C9 CALLER PUSH2 0xCDB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x867 JUMPI DUP1 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x723 SWAP2 SWAP1 PUSH2 0x1437 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x787 SWAP3 SWAP2 SWAP1 PUSH2 0x12C7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7B5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7D9 SWAP2 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST PUSH2 0x818 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x80F SWAP1 PUSH2 0x136B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBA8DE60C3403EC381D1D484652EA1980E3C3E56359195C92525BFF4CE47AD98E DUP3 PUSH1 0x40 MLOAD PUSH2 0x85E SWAP2 SWAP1 PUSH2 0x140B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP PUSH2 0x870 PUSH2 0xEE5 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x8AA PUSH2 0xEEE JUMP JUMPDEST DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x8C2 PUSH2 0xEEE JUMP JUMPDEST PUSH2 0x8CC PUSH1 0x0 PUSH2 0xF6C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92B SWAP2 SWAP1 PUSH2 0x1275 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x943 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x957 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x97B SWAP2 SWAP1 PUSH2 0x1107 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9DD SWAP2 SWAP1 PUSH2 0x1275 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA09 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA2D SWAP2 SWAP1 PUSH2 0x1107 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA3A PUSH2 0xEEE JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xAAF PUSH2 0xE95 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xAF2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE9 SWAP1 PUSH2 0x13AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB51 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1290 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB7F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBA3 SWAP2 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST PUSH2 0xBE2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD9 SWAP1 PUSH2 0x136B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC31 SWAP2 SWAP1 PUSH2 0x1437 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEBEDB8B3C678666E7F36970BC8F57ABF6D8FA2E828C0DA91EA5B75BF68ED101A DUP3 PUSH1 0x40 MLOAD PUSH2 0xCC2 SWAP2 SWAP1 PUSH2 0x140B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0xCD2 PUSH2 0xEE5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH2 0xD2E SWAP2 SWAP1 PUSH2 0x1437 JUMP JUMPDEST PUSH2 0xD38 SWAP2 SWAP1 PUSH2 0x1518 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD DUP4 PUSH2 0xD4D SWAP2 SWAP1 PUSH2 0x148D JUMP JUMPDEST PUSH2 0xD57 SWAP2 SWAP1 PUSH2 0x14BE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x7 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xDA6 SWAP2 SWAP1 PUSH2 0x14BE JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDBB PUSH2 0xEEE JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xE2B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE22 SWAP1 PUSH2 0x134B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE34 DUP2 PUSH2 0xF6C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xE8B PUSH2 0xEEE JUMP JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xEDB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xED2 SWAP1 PUSH2 0x13EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xEF6 PUSH2 0x1030 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF14 PUSH2 0xA7E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF6A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF61 SWAP1 PUSH2 0x13CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1047 DUP2 PUSH2 0x1784 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x105C DUP2 PUSH2 0x179B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1071 DUP2 PUSH2 0x17B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1086 DUP2 PUSH2 0x17B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x109E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x10AC DUP5 DUP3 DUP6 ADD PUSH2 0x1038 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x10D5 DUP5 DUP3 DUP6 ADD PUSH2 0x104D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x10FE DUP5 DUP3 DUP6 ADD PUSH2 0x1062 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1119 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1127 DUP5 DUP3 DUP6 ADD PUSH2 0x1077 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1139 DUP2 PUSH2 0x154C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1148 DUP2 PUSH2 0x1594 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x115B PUSH1 0x16 DUP4 PUSH2 0x1426 JUMP JUMPDEST SWAP2 POP PUSH2 0x1166 DUP3 PUSH2 0x1616 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x117E PUSH1 0x6 DUP4 PUSH2 0x1426 JUMP JUMPDEST SWAP2 POP PUSH2 0x1189 DUP3 PUSH2 0x163F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11A1 PUSH1 0x26 DUP4 PUSH2 0x1426 JUMP JUMPDEST SWAP2 POP PUSH2 0x11AC DUP3 PUSH2 0x1668 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11C4 PUSH1 0xF DUP4 PUSH2 0x1426 JUMP JUMPDEST SWAP2 POP PUSH2 0x11CF DUP3 PUSH2 0x16B7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11E7 PUSH1 0x14 DUP4 PUSH2 0x1426 JUMP JUMPDEST SWAP2 POP PUSH2 0x11F2 DUP3 PUSH2 0x16E0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120A PUSH1 0x1F DUP4 PUSH2 0x1426 JUMP JUMPDEST SWAP2 POP PUSH2 0x1215 DUP3 PUSH2 0x1709 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x122D PUSH1 0x20 DUP4 PUSH2 0x1426 JUMP JUMPDEST SWAP2 POP PUSH2 0x1238 DUP3 PUSH2 0x1732 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1250 PUSH1 0x1F DUP4 PUSH2 0x1426 JUMP JUMPDEST SWAP2 POP PUSH2 0x125B DUP3 PUSH2 0x175B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x126F DUP2 PUSH2 0x158A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x128A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1130 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x12A5 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1130 JUMP JUMPDEST PUSH2 0x12B2 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1130 JUMP JUMPDEST PUSH2 0x12BF PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1266 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x12DC PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1130 JUMP JUMPDEST PUSH2 0x12E9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1266 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1305 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x113F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1324 DUP2 PUSH2 0x114E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1344 DUP2 PUSH2 0x1171 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1364 DUP2 PUSH2 0x1194 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1384 DUP2 PUSH2 0x11B7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13A4 DUP2 PUSH2 0x11DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13C4 DUP2 PUSH2 0x11FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13E4 DUP2 PUSH2 0x1220 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1404 DUP2 PUSH2 0x1243 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1420 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1266 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1442 DUP3 PUSH2 0x158A JUMP JUMPDEST SWAP2 POP PUSH2 0x144D DUP4 PUSH2 0x158A JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1482 JUMPI PUSH2 0x1481 PUSH2 0x15B8 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1498 DUP3 PUSH2 0x158A JUMP JUMPDEST SWAP2 POP PUSH2 0x14A3 DUP4 PUSH2 0x158A JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x14B3 JUMPI PUSH2 0x14B2 PUSH2 0x15E7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14C9 DUP3 PUSH2 0x158A JUMP JUMPDEST SWAP2 POP PUSH2 0x14D4 DUP4 PUSH2 0x158A JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x150D JUMPI PUSH2 0x150C PUSH2 0x15B8 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1523 DUP3 PUSH2 0x158A JUMP JUMPDEST SWAP2 POP PUSH2 0x152E DUP4 PUSH2 0x158A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1541 JUMPI PUSH2 0x1540 PUSH2 0x15B8 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1557 DUP3 PUSH2 0x156A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x159F DUP3 PUSH2 0x15A6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15B1 DUP3 PUSH2 0x156A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4164647265737320776173206E6F74207374616B656400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4C6F636B65640000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416D6F756E742073686F756C642067726561746572207468616E207A65726F00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x178D DUP2 PUSH2 0x154C JUMP JUMPDEST DUP2 EQ PUSH2 0x1798 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x17A4 DUP2 PUSH2 0x155E JUMP JUMPDEST DUP2 EQ PUSH2 0x17AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x17BB DUP2 PUSH2 0x158A JUMP JUMPDEST DUP2 EQ PUSH2 0x17C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD PUSH7 0xEA2A966C6BD51B PUSH1 0xE5 0xE4 0xC6 EXTCODESIZE 0x1E REVERT 0xBA 0xD0 DUP11 ADD OR 0xCF CODESIZE 0xD6 0xF CREATE2 0xDC 0xDB 0x21 CALLDATACOPY CALLCODE PUSH4 0x64736F6C PUSH4 0x43000801 STOP CALLER ",
							"sourceMap": "289:3755:5:-:0;;;1211:305;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;1716:1:1;1821:7;:22;;;;1334:6:5;1319:5;;:22;;;;;;;;;;;;;;;;;;1372:12;1351:11;;:34;;;;;;;;;;;;;;;;;;1412:15;1395:14;:32;;;;1452:13;1437:12;:28;;;;1494:15;1475:16;:34;;;;1211:305;;;;289:3755;;640:96:3;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2433:187;;:::o;7:143:6:-;;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:143::-;;244:6;238:13;229:22;;260:33;287:5;260:33;:::i;:::-;219:80;;;;:::o;305:753::-;;;;;475:3;463:9;454:7;450:23;446:33;443:2;;;492:1;489;482:12;443:2;535:1;560:64;616:7;607:6;596:9;592:22;560:64;:::i;:::-;550:74;;506:128;673:2;699:64;755:7;746:6;735:9;731:22;699:64;:::i;:::-;689:74;;644:129;812:2;838:64;894:7;885:6;874:9;870:22;838:64;:::i;:::-;828:74;;783:129;951:2;977:64;1033:7;1024:6;1013:9;1009:22;977:64;:::i;:::-;967:74;;922:129;433:625;;;;;;;:::o;1064:96::-;;1130:24;1148:5;1130:24;:::i;:::-;1119:35;;1109:51;;;:::o;1166:126::-;;1243:42;1236:5;1232:54;1221:65;;1211:81;;;:::o;1298:77::-;;1364:5;1353:16;;1343:32;;;:::o;1381:122::-;1454:24;1472:5;1454:24;:::i;:::-;1447:5;1444:35;1434:2;;1493:1;1490;1483:12;1434:2;1424:79;:::o;1509:122::-;1582:24;1600:5;1582:24;:::i;:::-;1575:5;1572:35;1562:2;;1621:1;1618;1611:12;1562:2;1552:79;:::o;289:3755:5:-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:14146:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:6",
														"type": ""
													}
												],
												"src": "7:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "212:77:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "222:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "237:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "231:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "222:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "277:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "253:23:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "253:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "253:30:6"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "190:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "198:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "206:5:6",
														"type": ""
													}
												],
												"src": "152:137:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "347:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "357:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "379:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "366:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "366:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "357:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "422:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "395:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "395:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "395:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "325:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "333:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "341:5:6",
														"type": ""
													}
												],
												"src": "295:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "503:80:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "513:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "528:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "522:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "522:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "513:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "571:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "544:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "544:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "481:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "489:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "497:5:6",
														"type": ""
													}
												],
												"src": "440:143:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "655:196:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "701:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "710:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "713:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "703:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "703:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "703:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "676:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "685:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "672:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "672:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "697:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "668:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "668:32:6"
															},
															"nodeType": "YulIf",
															"src": "665:2:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "727:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "742:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "756:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "746:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "771:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "806:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "817:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "802:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "802:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "826:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "781:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "781:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "771:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "625:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "636:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "648:6:6",
														"type": ""
													}
												],
												"src": "589:262:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "931:204:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "977:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "986:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "989:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "979:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "979:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "979:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "952:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "961:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "948:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "973:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "944:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "944:32:6"
															},
															"nodeType": "YulIf",
															"src": "941:2:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "1003:125:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1018:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1032:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1022:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1047:71:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1090:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1101:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1086:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1086:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1110:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1057:28:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1057:61:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1047:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "901:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "912:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "924:6:6",
														"type": ""
													}
												],
												"src": "857:278:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1207:196:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1253:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1262:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1265:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1255:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1255:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1255:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1228:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1237:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1224:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1224:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1249:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1220:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1220:32:6"
															},
															"nodeType": "YulIf",
															"src": "1217:2:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "1279:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1294:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1308:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1298:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1323:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1358:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1369:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1354:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1354:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1378:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1333:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1333:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1323:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1177:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1188:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1200:6:6",
														"type": ""
													}
												],
												"src": "1141:262:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1486:207:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1532:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1541:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1544:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1534:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1534:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1534:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1507:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1516:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1503:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1503:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1528:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1499:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1499:32:6"
															},
															"nodeType": "YulIf",
															"src": "1496:2:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "1558:128:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1573:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1587:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1577:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1602:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1648:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1659:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1644:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1644:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1668:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1612:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1612:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1602:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1456:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1467:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1479:6:6",
														"type": ""
													}
												],
												"src": "1409:284:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1764:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1781:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1804:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1786:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1786:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1774:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1774:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1774:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1752:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1759:3:6",
														"type": ""
													}
												],
												"src": "1699:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1902:80:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1919:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1969:5:6"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$244_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1924:44:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1924:51:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1912:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1912:64:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1912:64:6"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$244_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1890:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1897:3:6",
														"type": ""
													}
												],
												"src": "1823:159:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2134:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2144:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2210:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2215:2:6",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2151:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2151:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2144:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2316:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_06c91019a93dd15fbeb6eed7cf8a253c16f390d84dd42d722095ff695d0ff1eb",
																	"nodeType": "YulIdentifier",
																	"src": "2227:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2227:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2227:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2329:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2340:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2345:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2336:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2336:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2329:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_06c91019a93dd15fbeb6eed7cf8a253c16f390d84dd42d722095ff695d0ff1eb_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2122:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2130:3:6",
														"type": ""
													}
												],
												"src": "1988:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2506:219:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2516:73:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2582:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2587:1:6",
																		"type": "",
																		"value": "6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2523:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2523:66:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2516:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2687:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_10bc01d611f2c803e55ff98d999836f196afae7cf91f96f3b6f511e56ba84974",
																	"nodeType": "YulIdentifier",
																	"src": "2598:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2598:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2598:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2700:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2711:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2716:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2707:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2707:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2700:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_10bc01d611f2c803e55ff98d999836f196afae7cf91f96f3b6f511e56ba84974_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2494:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2502:3:6",
														"type": ""
													}
												],
												"src": "2360:365:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2877:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2887:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2953:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2958:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2894:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2894:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2887:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3059:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "2970:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2970:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2970:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3072:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3083:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3088:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3079:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3079:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3072:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2865:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2873:3:6",
														"type": ""
													}
												],
												"src": "2731:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3249:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3259:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3325:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3330:2:6",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3266:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3266:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3259:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3431:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																	"nodeType": "YulIdentifier",
																	"src": "3342:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3342:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3342:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3444:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3455:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3460:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3451:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3451:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3444:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3237:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3245:3:6",
														"type": ""
													}
												],
												"src": "3103:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3621:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3631:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3697:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3702:2:6",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3638:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3638:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3631:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3803:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																	"nodeType": "YulIdentifier",
																	"src": "3714:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3714:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3714:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3816:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3827:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3832:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3823:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3823:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3816:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3609:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3617:3:6",
														"type": ""
													}
												],
												"src": "3475:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3993:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4003:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4069:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4074:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4010:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4010:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4003:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4175:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7e6097df28dbd6e8fac3ec6a9281335c312bc8a436c798b83190edcb63f5401f",
																	"nodeType": "YulIdentifier",
																	"src": "4086:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4086:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4086:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4188:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4199:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4204:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4195:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4195:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4188:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7e6097df28dbd6e8fac3ec6a9281335c312bc8a436c798b83190edcb63f5401f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3981:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3989:3:6",
														"type": ""
													}
												],
												"src": "3847:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4365:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4375:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4441:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4446:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4382:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4382:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4375:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4547:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "4458:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4458:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4458:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4560:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4571:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4576:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4567:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4567:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4560:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4353:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4361:3:6",
														"type": ""
													}
												],
												"src": "4219:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4737:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4747:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4813:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4818:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4754:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4754:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4747:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4919:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nodeType": "YulIdentifier",
																	"src": "4830:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4830:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4830:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4932:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4943:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4948:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4939:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4939:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4932:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4725:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4733:3:6",
														"type": ""
													}
												],
												"src": "4591:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5028:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5045:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5068:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5050:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5050:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5038:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5038:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5038:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5016:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5023:3:6",
														"type": ""
													}
												],
												"src": "4963:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5185:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5195:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5207:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5218:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5203:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5203:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5195:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5275:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5288:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5299:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5284:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5284:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5231:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5231:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5231:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5157:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5169:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5180:4:6",
														"type": ""
													}
												],
												"src": "5087:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5469:288:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5479:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5491:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5502:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5487:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5487:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5479:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5559:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5572:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5583:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5568:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5568:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5515:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5515:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5515:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5640:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5653:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5664:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5649:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5649:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5596:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5596:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5596:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "5722:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5735:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5746:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5731:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5731:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5678:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5678:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5678:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5425:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5437:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5445:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5453:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5464:4:6",
														"type": ""
													}
												],
												"src": "5315:442:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5889:206:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5899:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5911:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5922:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5907:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5907:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5899:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5979:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5992:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6003:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5988:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5988:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5935:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5935:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5935:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6060:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6073:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6084:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6069:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6069:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6016:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6016:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6016:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5853:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5865:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5873:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5884:4:6",
														"type": ""
													}
												],
												"src": "5763:332:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6213:138:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6223:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6235:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6246:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6231:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6231:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6223:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6317:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6330:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6341:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6326:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6326:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$244_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6259:57:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6259:85:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6259:85:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$244__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6185:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6197:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6208:4:6",
														"type": ""
													}
												],
												"src": "6101:250:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6528:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6538:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6550:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6561:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6546:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6546:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6538:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6585:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6596:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6581:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6581:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6604:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6610:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6600:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6600:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6574:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6574:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6574:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6630:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6764:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_06c91019a93dd15fbeb6eed7cf8a253c16f390d84dd42d722095ff695d0ff1eb_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6638:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6638:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6630:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_06c91019a93dd15fbeb6eed7cf8a253c16f390d84dd42d722095ff695d0ff1eb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6508:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6523:4:6",
														"type": ""
													}
												],
												"src": "6357:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6953:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6963:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6975:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6986:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6971:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6971:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6963:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7010:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7021:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7006:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7006:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7029:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7035:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7025:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7025:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6999:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6999:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6999:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7055:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7189:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_10bc01d611f2c803e55ff98d999836f196afae7cf91f96f3b6f511e56ba84974_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7063:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7063:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7055:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_10bc01d611f2c803e55ff98d999836f196afae7cf91f96f3b6f511e56ba84974__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6933:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6948:4:6",
														"type": ""
													}
												],
												"src": "6782:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7378:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7388:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7400:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7411:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7396:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7396:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7388:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7435:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7446:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7431:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7431:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7454:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7460:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7450:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7450:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7424:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7424:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7424:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7480:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7614:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7488:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7488:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7480:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7358:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7373:4:6",
														"type": ""
													}
												],
												"src": "7207:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7803:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7813:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7825:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7836:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7821:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7821:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7813:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7860:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7871:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7856:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7856:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7879:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7885:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7875:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7875:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7849:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7849:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7849:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7905:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8039:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7913:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7913:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7905:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7783:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7798:4:6",
														"type": ""
													}
												],
												"src": "7632:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8228:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8238:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8250:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8261:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8246:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8246:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8238:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8285:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8296:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8281:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8281:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8304:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8310:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8300:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8300:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8274:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8274:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8274:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8330:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8464:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8338:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8338:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8330:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8208:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8223:4:6",
														"type": ""
													}
												],
												"src": "8057:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8653:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8663:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8675:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8686:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8671:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8671:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8663:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8710:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8721:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8706:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8706:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8729:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8735:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8725:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8725:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8699:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8699:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8699:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8755:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8889:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7e6097df28dbd6e8fac3ec6a9281335c312bc8a436c798b83190edcb63f5401f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8763:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8763:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8755:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7e6097df28dbd6e8fac3ec6a9281335c312bc8a436c798b83190edcb63f5401f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8633:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8648:4:6",
														"type": ""
													}
												],
												"src": "8482:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9078:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9088:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9100:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9111:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9096:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9096:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9088:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9135:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9146:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9131:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9131:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9154:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9160:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9150:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9150:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9124:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9124:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9124:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9180:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9314:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9188:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9188:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9180:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9058:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9073:4:6",
														"type": ""
													}
												],
												"src": "8907:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9503:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9513:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9525:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9536:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9521:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9521:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9513:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9560:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9571:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9556:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9556:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9579:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9585:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9575:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9575:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9549:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9549:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9549:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9605:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9739:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9613:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9613:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9605:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9483:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9498:4:6",
														"type": ""
													}
												],
												"src": "9332:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9855:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9865:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9877:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9888:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9873:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9873:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9865:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9945:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9958:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9969:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9954:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9954:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9901:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9901:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9901:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9827:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9839:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9850:4:6",
														"type": ""
													}
												],
												"src": "9757:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10081:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10098:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10103:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10091:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10091:19:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10091:19:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10119:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10138:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10143:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10134:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10134:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "10119:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10053:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10058:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "10069:11:6",
														"type": ""
													}
												],
												"src": "9985:169:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10204:261:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10214:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10237:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10219:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10219:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10214:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10248:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10271:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10253:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10253:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10248:1:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10411:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10413:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10413:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10413:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10332:1:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10339:66:6",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "10407:1:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10335:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10335:74:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10329:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10329:81:6"
															},
															"nodeType": "YulIf",
															"src": "10326:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10443:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10454:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10457:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10450:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10450:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "10443:3:6"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10191:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10194:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "10200:3:6",
														"type": ""
													}
												],
												"src": "10160:305:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10513:143:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10523:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10546:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10528:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10528:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10523:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10557:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10580:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10562:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10562:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10557:1:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10604:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "10606:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10606:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10606:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10601:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10594:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10594:9:6"
															},
															"nodeType": "YulIf",
															"src": "10591:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10636:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10645:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10648:1:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "10641:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10641:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "10636:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10502:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10505:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "10511:1:6",
														"type": ""
													}
												],
												"src": "10471:185:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10710:300:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10720:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10743:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10725:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10725:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10720:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10754:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10777:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10759:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10759:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10754:1:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10952:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10954:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10954:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10954:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "10864:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "10857:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10857:9:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "10850:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10850:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "10872:1:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10879:66:6",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "10947:1:6"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "10875:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10875:74:6"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "10869:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10869:81:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10846:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10846:105:6"
															},
															"nodeType": "YulIf",
															"src": "10843:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10984:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10999:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11002:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "10995:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10995:9:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "10984:7:6"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10693:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10696:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "10702:7:6",
														"type": ""
													}
												],
												"src": "10662:348:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11061:146:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11071:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11094:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11076:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11076:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11071:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11105:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11128:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11110:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11110:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11105:1:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11152:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11154:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11154:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11154:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11146:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11149:1:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "11143:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11143:8:6"
															},
															"nodeType": "YulIf",
															"src": "11140:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11184:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11196:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11199:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "11192:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11192:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "11184:4:6"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11047:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11050:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "11056:4:6",
														"type": ""
													}
												],
												"src": "11016:191:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11258:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11268:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11297:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "11279:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11279:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11268:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11240:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11250:7:6",
														"type": ""
													}
												],
												"src": "11213:96:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11357:48:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11367:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11392:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "11385:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11385:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11378:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11378:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11367:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11339:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11349:7:6",
														"type": ""
													}
												],
												"src": "11315:90:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11456:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11466:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11481:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11488:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11477:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11477:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11466:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11438:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11448:7:6",
														"type": ""
													}
												],
												"src": "11411:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11588:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11598:16:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "11609:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11598:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11570:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11580:7:6",
														"type": ""
													}
												],
												"src": "11543:77:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11700:80:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11710:64:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11768:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_contract$_IERC20_$244_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "11723:44:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11723:51:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "11710:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$244_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11680:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "11690:9:6",
														"type": ""
													}
												],
												"src": "11626:154:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11860:53:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11870:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11901:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "11883:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11883:24:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "11870:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$244_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11840:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "11850:9:6",
														"type": ""
													}
												],
												"src": "11786:127:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11947:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11964:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11967:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11957:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11957:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11957:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12061:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12064:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12054:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12054:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12054:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12085:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12088:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12078:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12078:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12078:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "11919:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12133:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12150:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12153:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12143:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12143:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12143:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12247:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12250:4:6",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12240:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12240:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12240:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12271:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12274:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12264:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12264:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12264:15:6"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "12105:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12397:66:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12419:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12427:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12415:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12415:14:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12431:24:6",
																		"type": "",
																		"value": "Address was not staked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12408:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12408:48:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12408:48:6"
														}
													]
												},
												"name": "store_literal_in_memory_06c91019a93dd15fbeb6eed7cf8a253c16f390d84dd42d722095ff695d0ff1eb",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12389:6:6",
														"type": ""
													}
												],
												"src": "12291:172:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12575:50:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12597:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12605:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12593:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12593:14:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12609:8:6",
																		"type": "",
																		"value": "Locked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12586:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12586:32:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12586:32:6"
														}
													]
												},
												"name": "store_literal_in_memory_10bc01d611f2c803e55ff98d999836f196afae7cf91f96f3b6f511e56ba84974",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12567:6:6",
														"type": ""
													}
												],
												"src": "12469:156:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12737:119:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12759:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12767:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12755:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12755:14:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12771:34:6",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12748:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12748:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12748:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12827:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12835:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12823:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12823:15:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12840:8:6",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12816:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12816:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12816:33:6"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12729:6:6",
														"type": ""
													}
												],
												"src": "12631:225:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12968:59:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12990:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12998:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12986:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12986:14:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13002:17:6",
																		"type": "",
																		"value": "Transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12979:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12979:41:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12979:41:6"
														}
													]
												},
												"name": "store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12960:6:6",
														"type": ""
													}
												],
												"src": "12862:165:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13139:64:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13161:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13169:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13157:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13157:14:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13173:22:6",
																		"type": "",
																		"value": "Insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13150:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13150:46:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13150:46:6"
														}
													]
												},
												"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13131:6:6",
														"type": ""
													}
												],
												"src": "13033:170:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13315:75:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13337:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13345:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13333:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13333:14:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13349:33:6",
																		"type": "",
																		"value": "Amount should greater than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13326:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13326:57:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13326:57:6"
														}
													]
												},
												"name": "store_literal_in_memory_7e6097df28dbd6e8fac3ec6a9281335c312bc8a436c798b83190edcb63f5401f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13307:6:6",
														"type": ""
													}
												],
												"src": "13209:181:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13502:76:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13524:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13532:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13520:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13520:14:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13536:34:6",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13513:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13513:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13513:58:6"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13494:6:6",
														"type": ""
													}
												],
												"src": "13396:182:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13690:75:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13712:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13720:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13708:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13708:14:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13724:33:6",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13701:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13701:57:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13701:57:6"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13682:6:6",
														"type": ""
													}
												],
												"src": "13584:181:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13814:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13871:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13880:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13883:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13873:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13873:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13873:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13837:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13862:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "13844:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13844:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13834:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13834:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13827:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13827:43:6"
															},
															"nodeType": "YulIf",
															"src": "13824:2:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13807:5:6",
														"type": ""
													}
												],
												"src": "13771:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13939:76:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13993:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14002:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14005:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13995:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13995:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13995:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13962:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13984:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "13969:14:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13969:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13959:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13959:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13952:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13952:40:6"
															},
															"nodeType": "YulIf",
															"src": "13949:2:6"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13932:5:6",
														"type": ""
													}
												],
												"src": "13899:116:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14064:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14121:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14130:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14133:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14123:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14123:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14123:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14087:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "14112:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "14094:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14094:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "14084:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14084:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14077:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14077:43:6"
															},
															"nodeType": "YulIf",
															"src": "14074:2:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14057:5:6",
														"type": ""
													}
												],
												"src": "14021:122:6"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IERC20_$244_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$244_to_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_06c91019a93dd15fbeb6eed7cf8a253c16f390d84dd42d722095ff695d0ff1eb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_06c91019a93dd15fbeb6eed7cf8a253c16f390d84dd42d722095ff695d0ff1eb(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_10bc01d611f2c803e55ff98d999836f196afae7cf91f96f3b6f511e56ba84974_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 6)\n        store_literal_in_memory_10bc01d611f2c803e55ff98d999836f196afae7cf91f96f3b6f511e56ba84974(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_7e6097df28dbd6e8fac3ec6a9281335c312bc8a436c798b83190edcb63f5401f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_7e6097df28dbd6e8fac3ec6a9281335c312bc8a436c798b83190edcb63f5401f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$244__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$244_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_06c91019a93dd15fbeb6eed7cf8a253c16f390d84dd42d722095ff695d0ff1eb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_06c91019a93dd15fbeb6eed7cf8a253c16f390d84dd42d722095ff695d0ff1eb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_10bc01d611f2c803e55ff98d999836f196afae7cf91f96f3b6f511e56ba84974__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_10bc01d611f2c803e55ff98d999836f196afae7cf91f96f3b6f511e56ba84974_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_7e6097df28dbd6e8fac3ec6a9281335c312bc8a436c798b83190edcb63f5401f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7e6097df28dbd6e8fac3ec6a9281335c312bc8a436c798b83190edcb63f5401f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IERC20_$244_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IERC20_$244_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$244_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_06c91019a93dd15fbeb6eed7cf8a253c16f390d84dd42d722095ff695d0ff1eb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address was not staked\")\n\n    }\n\n    function store_literal_in_memory_10bc01d611f2c803e55ff98d999836f196afae7cf91f96f3b6f511e56ba84974(memPtr) {\n\n        mstore(add(memPtr, 0), \"Locked\")\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer failed\")\n\n    }\n\n    function store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance\")\n\n    }\n\n    function store_literal_in_memory_7e6097df28dbd6e8fac3ec6a9281335c312bc8a436c798b83190edcb63f5401f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount should greater than zero\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061012c5760003560e01c8063817b1cd2116100ad578063ef790a8211610071578063ef790a82146102f9578063f2fde38b14610329578063f7c618c114610345578063fc0c546a14610363578063fc71ae8c146103815761012c565b8063817b1cd2146102675780638aee8127146102855780638da5cb5b146102a1578063a694fc3a146102bf578063ee947a7c146102db5761012c565b8063583d42fd116100f4578063583d42fd146101d55780635d90bad9146102055780636abfd18314610221578063715018a61461023f578063750142e6146102495761012c565b8063154a78b5146101315780631683153d1461014f5780632e1a7d4d1461017f5780633d18b9121461019b57806345bc78ab146101a5575b600080fd5b61013961039d565b604051610146919061140b565b60405180910390f35b6101696004803603810190610164919061108c565b6103a3565b604051610176919061140b565b60405180910390f35b610199600480360381019061019491906110de565b6103bb565b005b6101a3610634565b005b6101bf60048036038101906101ba919061108c565b610872565b6040516101cc919061140b565b60405180910390f35b6101ef60048036038101906101ea919061108c565b61088a565b6040516101fc919061140b565b60405180910390f35b61021f600480360381019061021a91906110de565b6108a2565b005b6102296108b4565b604051610236919061140b565b60405180910390f35b6102476108ba565b005b6102516108ce565b60405161025e919061140b565b60405180910390f35b61026f610980565b60405161027c919061140b565b60405180910390f35b61029f600480360381019061029a919061108c565b610a32565b005b6102a9610a7e565b6040516102b69190611275565b60405180910390f35b6102d960048036038101906102d491906110de565b610aa7565b005b6102e3610cd5565b6040516102f0919061140b565b60405180910390f35b610313600480360381019061030e919061108c565b610cdb565b604051610320919061140b565b60405180910390f35b610343600480360381019061033e919061108c565b610db3565b005b61034d610e37565b60405161035a91906112f0565b60405180910390f35b61036b610e5d565b60405161037891906112f0565b60405180910390f35b61039b600480360381019061039691906110de565b610e83565b005b60045481565b60096020528060005260406000206000915090505481565b6103c3610e95565b6005546006546103d39190611437565b421015610415576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040c9061132b565b60405180910390fd5b80600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610497576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048e9061138b565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016104f49291906112c7565b602060405180830381600087803b15801561050e57600080fd5b505af1158015610522573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054691906110b5565b610585576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057c9061136b565b60405180910390fd5b80600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105d49190611518565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167fb24546d975e2628748efc9aced80665e0fad66272033e5c0ea25fd3afac9979582604051610621919061140b565b60405180910390a2610631610ee5565b50565b61063c610e95565b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054116106be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b59061130b565b60405180910390fd5b60006106c933610cdb565b905060008111156108675780600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107239190611437565b92505081905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016107879291906112c7565b602060405180830381600087803b1580156107a157600080fd5b505af11580156107b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d991906110b5565b610818576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080f9061136b565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167fba8de60c3403ec381d1d484652ea1980e3c3e56359195c92525bff4ce47ad98e8260405161085e919061140b565b60405180910390a25b50610870610ee5565b565b60076020528060005260406000206000915090505481565b60086020528060005260406000206000915090505481565b6108aa610eee565b8060068190555050565b60065481565b6108c2610eee565b6108cc6000610f6c565b565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161092b9190611275565b60206040518083038186803b15801561094357600080fd5b505afa158015610957573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097b9190611107565b905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016109dd9190611275565b60206040518083038186803b1580156109f557600080fd5b505afa158015610a09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2d9190611107565b905090565b610a3a610eee565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610aaf610e95565b60008111610af2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae9906113ab565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610b5193929190611290565b602060405180830381600087803b158015610b6b57600080fd5b505af1158015610b7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba391906110b5565b610be2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd99061136b565b60405180910390fd5b80600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610c319190611437565b9250508190555042600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff167febedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a82604051610cc2919061140b565b60405180910390a2610cd2610ee5565b50565b60055481565b600080600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600654600554610d2e9190611437565b610d389190611518565b9050600060045460055483610d4d919061148d565b610d5791906114be565b9050600081600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610da691906114be565b9050809350505050919050565b610dbb610eee565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610e2b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e229061134b565b60405180910390fd5b610e3481610f6c565b50565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610e8b610eee565b8060048190555050565b60026001541415610edb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ed2906113eb565b60405180910390fd5b6002600181905550565b60018081905550565b610ef6611030565b73ffffffffffffffffffffffffffffffffffffffff16610f14610a7e565b73ffffffffffffffffffffffffffffffffffffffff1614610f6a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f61906113cb565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b60008135905061104781611784565b92915050565b60008151905061105c8161179b565b92915050565b600081359050611071816117b2565b92915050565b600081519050611086816117b2565b92915050565b60006020828403121561109e57600080fd5b60006110ac84828501611038565b91505092915050565b6000602082840312156110c757600080fd5b60006110d58482850161104d565b91505092915050565b6000602082840312156110f057600080fd5b60006110fe84828501611062565b91505092915050565b60006020828403121561111957600080fd5b600061112784828501611077565b91505092915050565b6111398161154c565b82525050565b61114881611594565b82525050565b600061115b601683611426565b915061116682611616565b602082019050919050565b600061117e600683611426565b91506111898261163f565b602082019050919050565b60006111a1602683611426565b91506111ac82611668565b604082019050919050565b60006111c4600f83611426565b91506111cf826116b7565b602082019050919050565b60006111e7601483611426565b91506111f2826116e0565b602082019050919050565b600061120a601f83611426565b915061121582611709565b602082019050919050565b600061122d602083611426565b915061123882611732565b602082019050919050565b6000611250601f83611426565b915061125b8261175b565b602082019050919050565b61126f8161158a565b82525050565b600060208201905061128a6000830184611130565b92915050565b60006060820190506112a56000830186611130565b6112b26020830185611130565b6112bf6040830184611266565b949350505050565b60006040820190506112dc6000830185611130565b6112e96020830184611266565b9392505050565b6000602082019050611305600083018461113f565b92915050565b600060208201905081810360008301526113248161114e565b9050919050565b6000602082019050818103600083015261134481611171565b9050919050565b6000602082019050818103600083015261136481611194565b9050919050565b60006020820190508181036000830152611384816111b7565b9050919050565b600060208201905081810360008301526113a4816111da565b9050919050565b600060208201905081810360008301526113c4816111fd565b9050919050565b600060208201905081810360008301526113e481611220565b9050919050565b6000602082019050818103600083015261140481611243565b9050919050565b60006020820190506114206000830184611266565b92915050565b600082825260208201905092915050565b60006114428261158a565b915061144d8361158a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611482576114816115b8565b5b828201905092915050565b60006114988261158a565b91506114a38361158a565b9250826114b3576114b26115e7565b5b828204905092915050565b60006114c98261158a565b91506114d48361158a565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561150d5761150c6115b8565b5b828202905092915050565b60006115238261158a565b915061152e8361158a565b925082821015611541576115406115b8565b5b828203905092915050565b60006115578261156a565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061159f826115a6565b9050919050565b60006115b18261156a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4164647265737320776173206e6f74207374616b656400000000000000000000600082015250565b7f4c6f636b65640000000000000000000000000000000000000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b7f416d6f756e742073686f756c642067726561746572207468616e207a65726f00600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b61178d8161154c565b811461179857600080fd5b50565b6117a48161155e565b81146117af57600080fd5b50565b6117bb8161158a565b81146117c657600080fd5b5056fea26469706673582212205466ea2a966c6bd51b60e5e4c63b1efdbad08a0117cf38d60ff5dcdb2137f26364736f6c63430008010033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x817B1CD2 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xEF790A82 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xEF790A82 EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x329 JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x345 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x363 JUMPI DUP1 PUSH4 0xFC71AE8C EQ PUSH2 0x381 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x8AEE8127 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0xEE947A7C EQ PUSH2 0x2DB JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x583D42FD GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x583D42FD EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x5D90BAD9 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x6ABFD183 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x750142E6 EQ PUSH2 0x249 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x154A78B5 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x1683153D EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x3D18B912 EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0x45BC78AB EQ PUSH2 0x1A5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x39D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x140B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x108C JUMP JUMPDEST PUSH2 0x3A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x140B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x194 SWAP2 SWAP1 PUSH2 0x10DE JUMP JUMPDEST PUSH2 0x3BB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A3 PUSH2 0x634 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0x108C JUMP JUMPDEST PUSH2 0x872 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x140B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x108C JUMP JUMPDEST PUSH2 0x88A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x140B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x10DE JUMP JUMPDEST PUSH2 0x8A2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x229 PUSH2 0x8B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x140B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x247 PUSH2 0x8BA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x251 PUSH2 0x8CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x140B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26F PUSH2 0x980 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x140B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x108C JUMP JUMPDEST PUSH2 0xA32 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A9 PUSH2 0xA7E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B6 SWAP2 SWAP1 PUSH2 0x1275 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D4 SWAP2 SWAP1 PUSH2 0x10DE JUMP JUMPDEST PUSH2 0xAA7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E3 PUSH2 0xCD5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x140B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x313 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30E SWAP2 SWAP1 PUSH2 0x108C JUMP JUMPDEST PUSH2 0xCDB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x320 SWAP2 SWAP1 PUSH2 0x140B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x343 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33E SWAP2 SWAP1 PUSH2 0x108C JUMP JUMPDEST PUSH2 0xDB3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x34D PUSH2 0xE37 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35A SWAP2 SWAP1 PUSH2 0x12F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36B PUSH2 0xE5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x378 SWAP2 SWAP1 PUSH2 0x12F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x396 SWAP2 SWAP1 PUSH2 0x10DE JUMP JUMPDEST PUSH2 0xE83 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3C3 PUSH2 0xE95 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH2 0x3D3 SWAP2 SWAP1 PUSH2 0x1437 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x415 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40C SWAP1 PUSH2 0x132B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x497 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x48E SWAP1 PUSH2 0x138B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F4 SWAP3 SWAP2 SWAP1 PUSH2 0x12C7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x50E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x522 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x546 SWAP2 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST PUSH2 0x585 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x57C SWAP1 PUSH2 0x136B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x5D4 SWAP2 SWAP1 PUSH2 0x1518 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB24546D975E2628748EFC9ACED80665E0FAD66272033E5C0EA25FD3AFAC99795 DUP3 PUSH1 0x40 MLOAD PUSH2 0x621 SWAP2 SWAP1 PUSH2 0x140B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x631 PUSH2 0xEE5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x63C PUSH2 0xE95 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT PUSH2 0x6BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B5 SWAP1 PUSH2 0x130B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6C9 CALLER PUSH2 0xCDB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x867 JUMPI DUP1 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x723 SWAP2 SWAP1 PUSH2 0x1437 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x787 SWAP3 SWAP2 SWAP1 PUSH2 0x12C7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7B5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7D9 SWAP2 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST PUSH2 0x818 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x80F SWAP1 PUSH2 0x136B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBA8DE60C3403EC381D1D484652EA1980E3C3E56359195C92525BFF4CE47AD98E DUP3 PUSH1 0x40 MLOAD PUSH2 0x85E SWAP2 SWAP1 PUSH2 0x140B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP PUSH2 0x870 PUSH2 0xEE5 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x8AA PUSH2 0xEEE JUMP JUMPDEST DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x8C2 PUSH2 0xEEE JUMP JUMPDEST PUSH2 0x8CC PUSH1 0x0 PUSH2 0xF6C JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92B SWAP2 SWAP1 PUSH2 0x1275 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x943 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x957 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x97B SWAP2 SWAP1 PUSH2 0x1107 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9DD SWAP2 SWAP1 PUSH2 0x1275 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA09 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA2D SWAP2 SWAP1 PUSH2 0x1107 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA3A PUSH2 0xEEE JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xAAF PUSH2 0xE95 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xAF2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE9 SWAP1 PUSH2 0x13AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB51 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1290 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB7F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBA3 SWAP2 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST PUSH2 0xBE2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD9 SWAP1 PUSH2 0x136B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC31 SWAP2 SWAP1 PUSH2 0x1437 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEBEDB8B3C678666E7F36970BC8F57ABF6D8FA2E828C0DA91EA5B75BF68ED101A DUP3 PUSH1 0x40 MLOAD PUSH2 0xCC2 SWAP2 SWAP1 PUSH2 0x140B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0xCD2 PUSH2 0xEE5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH2 0xD2E SWAP2 SWAP1 PUSH2 0x1437 JUMP JUMPDEST PUSH2 0xD38 SWAP2 SWAP1 PUSH2 0x1518 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD DUP4 PUSH2 0xD4D SWAP2 SWAP1 PUSH2 0x148D JUMP JUMPDEST PUSH2 0xD57 SWAP2 SWAP1 PUSH2 0x14BE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x7 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xDA6 SWAP2 SWAP1 PUSH2 0x14BE JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDBB PUSH2 0xEEE JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xE2B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE22 SWAP1 PUSH2 0x134B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE34 DUP2 PUSH2 0xF6C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xE8B PUSH2 0xEEE JUMP JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xEDB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xED2 SWAP1 PUSH2 0x13EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xEF6 PUSH2 0x1030 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF14 PUSH2 0xA7E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF6A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF61 SWAP1 PUSH2 0x13CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1047 DUP2 PUSH2 0x1784 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x105C DUP2 PUSH2 0x179B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1071 DUP2 PUSH2 0x17B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1086 DUP2 PUSH2 0x17B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x109E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x10AC DUP5 DUP3 DUP6 ADD PUSH2 0x1038 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x10D5 DUP5 DUP3 DUP6 ADD PUSH2 0x104D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x10FE DUP5 DUP3 DUP6 ADD PUSH2 0x1062 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1119 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1127 DUP5 DUP3 DUP6 ADD PUSH2 0x1077 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1139 DUP2 PUSH2 0x154C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1148 DUP2 PUSH2 0x1594 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x115B PUSH1 0x16 DUP4 PUSH2 0x1426 JUMP JUMPDEST SWAP2 POP PUSH2 0x1166 DUP3 PUSH2 0x1616 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x117E PUSH1 0x6 DUP4 PUSH2 0x1426 JUMP JUMPDEST SWAP2 POP PUSH2 0x1189 DUP3 PUSH2 0x163F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11A1 PUSH1 0x26 DUP4 PUSH2 0x1426 JUMP JUMPDEST SWAP2 POP PUSH2 0x11AC DUP3 PUSH2 0x1668 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11C4 PUSH1 0xF DUP4 PUSH2 0x1426 JUMP JUMPDEST SWAP2 POP PUSH2 0x11CF DUP3 PUSH2 0x16B7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11E7 PUSH1 0x14 DUP4 PUSH2 0x1426 JUMP JUMPDEST SWAP2 POP PUSH2 0x11F2 DUP3 PUSH2 0x16E0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120A PUSH1 0x1F DUP4 PUSH2 0x1426 JUMP JUMPDEST SWAP2 POP PUSH2 0x1215 DUP3 PUSH2 0x1709 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x122D PUSH1 0x20 DUP4 PUSH2 0x1426 JUMP JUMPDEST SWAP2 POP PUSH2 0x1238 DUP3 PUSH2 0x1732 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1250 PUSH1 0x1F DUP4 PUSH2 0x1426 JUMP JUMPDEST SWAP2 POP PUSH2 0x125B DUP3 PUSH2 0x175B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x126F DUP2 PUSH2 0x158A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x128A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1130 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x12A5 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1130 JUMP JUMPDEST PUSH2 0x12B2 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1130 JUMP JUMPDEST PUSH2 0x12BF PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1266 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x12DC PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1130 JUMP JUMPDEST PUSH2 0x12E9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1266 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1305 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x113F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1324 DUP2 PUSH2 0x114E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1344 DUP2 PUSH2 0x1171 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1364 DUP2 PUSH2 0x1194 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1384 DUP2 PUSH2 0x11B7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13A4 DUP2 PUSH2 0x11DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13C4 DUP2 PUSH2 0x11FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13E4 DUP2 PUSH2 0x1220 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1404 DUP2 PUSH2 0x1243 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1420 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1266 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1442 DUP3 PUSH2 0x158A JUMP JUMPDEST SWAP2 POP PUSH2 0x144D DUP4 PUSH2 0x158A JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1482 JUMPI PUSH2 0x1481 PUSH2 0x15B8 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1498 DUP3 PUSH2 0x158A JUMP JUMPDEST SWAP2 POP PUSH2 0x14A3 DUP4 PUSH2 0x158A JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x14B3 JUMPI PUSH2 0x14B2 PUSH2 0x15E7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14C9 DUP3 PUSH2 0x158A JUMP JUMPDEST SWAP2 POP PUSH2 0x14D4 DUP4 PUSH2 0x158A JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x150D JUMPI PUSH2 0x150C PUSH2 0x15B8 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1523 DUP3 PUSH2 0x158A JUMP JUMPDEST SWAP2 POP PUSH2 0x152E DUP4 PUSH2 0x158A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1541 JUMPI PUSH2 0x1540 PUSH2 0x15B8 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1557 DUP3 PUSH2 0x156A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x159F DUP3 PUSH2 0x15A6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15B1 DUP3 PUSH2 0x156A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4164647265737320776173206E6F74207374616B656400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4C6F636B65640000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416D6F756E742073686F756C642067726561746572207468616E207A65726F00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x178D DUP2 PUSH2 0x154C JUMP JUMPDEST DUP2 EQ PUSH2 0x1798 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x17A4 DUP2 PUSH2 0x155E JUMP JUMPDEST DUP2 EQ PUSH2 0x17AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x17BB DUP2 PUSH2 0x158A JUMP JUMPDEST DUP2 EQ PUSH2 0x17C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD PUSH7 0xEA2A966C6BD51B PUSH1 0xE5 0xE4 0xC6 EXTCODESIZE 0x1E REVERT 0xBA 0xD0 DUP11 ADD OR 0xCF CODESIZE 0xD6 0xF CREATE2 0xDC 0xDB 0x21 CALLDATACOPY CALLCODE PUSH4 0x64736F6C PUSH4 0x43000801 STOP CALLER ",
							"sourceMap": "289:3755:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;493:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;937:48;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1952:385;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2363:391;;;:::i;:::-;;757:49;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;850:46;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3755:127;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;681:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:0;;;:::i;:::-;;3442:115:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3280:109;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3595:115;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1201:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1542:357:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;602:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2816:408;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;413:26:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;340:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3923:119;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;493:29;;;;:::o;937:48::-;;;;;;;;;;;;;;;;;:::o;1952:385::-;2261:21:1;:19;:21::i;:::-;2066:12:5::1;;2047:16;;:31;;;;:::i;:::-;2027:15;:52;;2019:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;2136:7;2108:14;:26;2123:10;2108:26;;;;;;;;;;;;;;;;:35;;2100:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;2185:5;;;;;;;;;;;:14;;;2200:10;2212:7;2185:35;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2177:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;2280:7;2250:14;:26;2265:10;2250:26;;;;;;;;;;;;;;;;:37;;;;;;;:::i;:::-;;;;;;;;2310:10;2302:28;;;2322:7;2302:28;;;;;;:::i;:::-;;;;;;;;2303:20:1::0;:18;:20::i;:::-;1952:385:5;:::o;2363:391::-;2261:21:1;:19;:21::i;:::-;2447:1:5::1;2423:11;:23;2435:10;2423:23;;;;;;;;;;;;;;;;:25;2415:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;2484:14;2501:28;2518:10;2501:16;:28::i;:::-;2484:45;;2552:1;2543:6;:10;2539:209;;;2598:6;2569:13;:25;2583:10;2569:25;;;;;;;;;;;;;;;;:35;;;;;;;:::i;:::-;;;;;;;;2626:11;;;;;;;;;;;:20;;;2647:10;2659:6;2626:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2618:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2718:10;2706:31;;;2730:6;2706:31;;;;;;:::i;:::-;;;;;;;;2539:209;2292:1:1;2303:20:::0;:18;:20::i;:::-;2363:391:5:o;757:49::-;;;;;;;;;;;;;;;;;:::o;850:46::-;;;;;;;;;;;;;;;;;:::o;3755:127::-;1094:13:0;:11;:13::i;:::-;3858:17:5::1;3839:16;:36;;;;3755:127:::0;:::o;681:31::-;;;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;3442:115:5:-;3488:7;3514:11;;;;;;;;;;;:21;;;3544:4;3514:36;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3507:43;;3442:115;:::o;3280:109::-;3326:7;3352:5;;;;;;;;;;;:15;;;3376:4;3352:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3345:37;;3280:109;:::o;3595:115::-;1094:13:0;:11;:13::i;:::-;3690:12:5::1;3669:11;;:34;;;;;;;;;;;;;;;;;;3595:115:::0;:::o;1201:85:0:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;1542:357:5:-;2261:21:1;:19;:21::i;:::-;1624:1:5::1;1614:7;:11;1606:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;1679:5;;;;;;;;;;;:18;;;1698:10;1718:4;1725:7;1679:54;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1671:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;1793:7;1763:14;:26;1778:10;1763:26;;;;;;;;;;;;;;;;:37;;;;;;;:::i;:::-;;;;;;;;1836:15;1810:11;:23;1822:10;1810:23;;;;;;;;;;;;;;;:41;;;;1872:10;1866:26;;;1884:7;1866:26;;;;;;:::i;:::-;;;;;;;;2303:20:1::0;:18;:20::i;:::-;1542:357:5;:::o;602:27::-;;;;:::o;2816:408::-;2880:7;2899:28;2964:11;:20;2976:7;2964:20;;;;;;;;;;;;;;;;2945:16;;2930:12;;:31;;;;:::i;:::-;:54;;;;:::i;:::-;2899:85;;3060:18;3117:14;;3102:12;;3081:20;:33;;;;:::i;:::-;:50;;;;:::i;:::-;3060:71;;3141:14;3184:10;3158:14;:23;3173:7;3158:23;;;;;;;;;;;;;;;;:36;;;;:::i;:::-;3141:53;;3211:6;3204:13;;;;;2816:408;;;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;;;2161:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;413:26:5:-;;;;;;;;;;;;;:::o;340:20::-;;;;;;;;;;;;;:::o;3923:119::-;1094:13:0;:11;:13::i;:::-;4020:15:5::1;4003:14;:32;;;;3923:119:::0;:::o;2336:287:1:-;1759:1;2468:7;;:19;;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;2629:209::-;1716:1;2809:7;:22;;;;2629:209::o;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2433:187;;:::o;640:96:3:-;693:7;719:10;712:17;;640:96;:::o;7:139:6:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:137::-;;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;212:77;;;;:::o;295:139::-;;379:6;366:20;357:29;;395:33;422:5;395:33;:::i;:::-;347:87;;;;:::o;440:143::-;;528:6;522:13;513:22;;544:33;571:5;544:33;:::i;:::-;503:80;;;;:::o;589:262::-;;697:2;685:9;676:7;672:23;668:32;665:2;;;713:1;710;703:12;665:2;756:1;781:53;826:7;817:6;806:9;802:22;781:53;:::i;:::-;771:63;;727:117;655:196;;;;:::o;857:278::-;;973:2;961:9;952:7;948:23;944:32;941:2;;;989:1;986;979:12;941:2;1032:1;1057:61;1110:7;1101:6;1090:9;1086:22;1057:61;:::i;:::-;1047:71;;1003:125;931:204;;;;:::o;1141:262::-;;1249:2;1237:9;1228:7;1224:23;1220:32;1217:2;;;1265:1;1262;1255:12;1217:2;1308:1;1333:53;1378:7;1369:6;1358:9;1354:22;1333:53;:::i;:::-;1323:63;;1279:117;1207:196;;;;:::o;1409:284::-;;1528:2;1516:9;1507:7;1503:23;1499:32;1496:2;;;1544:1;1541;1534:12;1496:2;1587:1;1612:64;1668:7;1659:6;1648:9;1644:22;1612:64;:::i;:::-;1602:74;;1558:128;1486:207;;;;:::o;1699:118::-;1786:24;1804:5;1786:24;:::i;:::-;1781:3;1774:37;1764:53;;:::o;1823:159::-;1924:51;1969:5;1924:51;:::i;:::-;1919:3;1912:64;1902:80;;:::o;1988:366::-;;2151:67;2215:2;2210:3;2151:67;:::i;:::-;2144:74;;2227:93;2316:3;2227:93;:::i;:::-;2345:2;2340:3;2336:12;2329:19;;2134:220;;;:::o;2360:365::-;;2523:66;2587:1;2582:3;2523:66;:::i;:::-;2516:73;;2598:93;2687:3;2598:93;:::i;:::-;2716:2;2711:3;2707:12;2700:19;;2506:219;;;:::o;2731:366::-;;2894:67;2958:2;2953:3;2894:67;:::i;:::-;2887:74;;2970:93;3059:3;2970:93;:::i;:::-;3088:2;3083:3;3079:12;3072:19;;2877:220;;;:::o;3103:366::-;;3266:67;3330:2;3325:3;3266:67;:::i;:::-;3259:74;;3342:93;3431:3;3342:93;:::i;:::-;3460:2;3455:3;3451:12;3444:19;;3249:220;;;:::o;3475:366::-;;3638:67;3702:2;3697:3;3638:67;:::i;:::-;3631:74;;3714:93;3803:3;3714:93;:::i;:::-;3832:2;3827:3;3823:12;3816:19;;3621:220;;;:::o;3847:366::-;;4010:67;4074:2;4069:3;4010:67;:::i;:::-;4003:74;;4086:93;4175:3;4086:93;:::i;:::-;4204:2;4199:3;4195:12;4188:19;;3993:220;;;:::o;4219:366::-;;4382:67;4446:2;4441:3;4382:67;:::i;:::-;4375:74;;4458:93;4547:3;4458:93;:::i;:::-;4576:2;4571:3;4567:12;4560:19;;4365:220;;;:::o;4591:366::-;;4754:67;4818:2;4813:3;4754:67;:::i;:::-;4747:74;;4830:93;4919:3;4830:93;:::i;:::-;4948:2;4943:3;4939:12;4932:19;;4737:220;;;:::o;4963:118::-;5050:24;5068:5;5050:24;:::i;:::-;5045:3;5038:37;5028:53;;:::o;5087:222::-;;5218:2;5207:9;5203:18;5195:26;;5231:71;5299:1;5288:9;5284:17;5275:6;5231:71;:::i;:::-;5185:124;;;;:::o;5315:442::-;;5502:2;5491:9;5487:18;5479:26;;5515:71;5583:1;5572:9;5568:17;5559:6;5515:71;:::i;:::-;5596:72;5664:2;5653:9;5649:18;5640:6;5596:72;:::i;:::-;5678;5746:2;5735:9;5731:18;5722:6;5678:72;:::i;:::-;5469:288;;;;;;:::o;5763:332::-;;5922:2;5911:9;5907:18;5899:26;;5935:71;6003:1;5992:9;5988:17;5979:6;5935:71;:::i;:::-;6016:72;6084:2;6073:9;6069:18;6060:6;6016:72;:::i;:::-;5889:206;;;;;:::o;6101:250::-;;6246:2;6235:9;6231:18;6223:26;;6259:85;6341:1;6330:9;6326:17;6317:6;6259:85;:::i;:::-;6213:138;;;;:::o;6357:419::-;;6561:2;6550:9;6546:18;6538:26;;6610:9;6604:4;6600:20;6596:1;6585:9;6581:17;6574:47;6638:131;6764:4;6638:131;:::i;:::-;6630:139;;6528:248;;;:::o;6782:419::-;;6986:2;6975:9;6971:18;6963:26;;7035:9;7029:4;7025:20;7021:1;7010:9;7006:17;6999:47;7063:131;7189:4;7063:131;:::i;:::-;7055:139;;6953:248;;;:::o;7207:419::-;;7411:2;7400:9;7396:18;7388:26;;7460:9;7454:4;7450:20;7446:1;7435:9;7431:17;7424:47;7488:131;7614:4;7488:131;:::i;:::-;7480:139;;7378:248;;;:::o;7632:419::-;;7836:2;7825:9;7821:18;7813:26;;7885:9;7879:4;7875:20;7871:1;7860:9;7856:17;7849:47;7913:131;8039:4;7913:131;:::i;:::-;7905:139;;7803:248;;;:::o;8057:419::-;;8261:2;8250:9;8246:18;8238:26;;8310:9;8304:4;8300:20;8296:1;8285:9;8281:17;8274:47;8338:131;8464:4;8338:131;:::i;:::-;8330:139;;8228:248;;;:::o;8482:419::-;;8686:2;8675:9;8671:18;8663:26;;8735:9;8729:4;8725:20;8721:1;8710:9;8706:17;8699:47;8763:131;8889:4;8763:131;:::i;:::-;8755:139;;8653:248;;;:::o;8907:419::-;;9111:2;9100:9;9096:18;9088:26;;9160:9;9154:4;9150:20;9146:1;9135:9;9131:17;9124:47;9188:131;9314:4;9188:131;:::i;:::-;9180:139;;9078:248;;;:::o;9332:419::-;;9536:2;9525:9;9521:18;9513:26;;9585:9;9579:4;9575:20;9571:1;9560:9;9556:17;9549:47;9613:131;9739:4;9613:131;:::i;:::-;9605:139;;9503:248;;;:::o;9757:222::-;;9888:2;9877:9;9873:18;9865:26;;9901:71;9969:1;9958:9;9954:17;9945:6;9901:71;:::i;:::-;9855:124;;;;:::o;9985:169::-;;10103:6;10098:3;10091:19;10143:4;10138:3;10134:14;10119:29;;10081:73;;;;:::o;10160:305::-;;10219:20;10237:1;10219:20;:::i;:::-;10214:25;;10253:20;10271:1;10253:20;:::i;:::-;10248:25;;10407:1;10339:66;10335:74;10332:1;10329:81;10326:2;;;10413:18;;:::i;:::-;10326:2;10457:1;10454;10450:9;10443:16;;10204:261;;;;:::o;10471:185::-;;10528:20;10546:1;10528:20;:::i;:::-;10523:25;;10562:20;10580:1;10562:20;:::i;:::-;10557:25;;10601:1;10591:2;;10606:18;;:::i;:::-;10591:2;10648:1;10645;10641:9;10636:14;;10513:143;;;;:::o;10662:348::-;;10725:20;10743:1;10725:20;:::i;:::-;10720:25;;10759:20;10777:1;10759:20;:::i;:::-;10754:25;;10947:1;10879:66;10875:74;10872:1;10869:81;10864:1;10857:9;10850:17;10846:105;10843:2;;;10954:18;;:::i;:::-;10843:2;11002:1;10999;10995:9;10984:20;;10710:300;;;;:::o;11016:191::-;;11076:20;11094:1;11076:20;:::i;:::-;11071:25;;11110:20;11128:1;11110:20;:::i;:::-;11105:25;;11149:1;11146;11143:8;11140:2;;;11154:18;;:::i;:::-;11140:2;11199:1;11196;11192:9;11184:17;;11061:146;;;;:::o;11213:96::-;;11279:24;11297:5;11279:24;:::i;:::-;11268:35;;11258:51;;;:::o;11315:90::-;;11392:5;11385:13;11378:21;11367:32;;11357:48;;;:::o;11411:126::-;;11488:42;11481:5;11477:54;11466:65;;11456:81;;;:::o;11543:77::-;;11609:5;11598:16;;11588:32;;;:::o;11626:154::-;;11723:51;11768:5;11723:51;:::i;:::-;11710:64;;11700:80;;;:::o;11786:127::-;;11883:24;11901:5;11883:24;:::i;:::-;11870:37;;11860:53;;;:::o;11919:180::-;11967:77;11964:1;11957:88;12064:4;12061:1;12054:15;12088:4;12085:1;12078:15;12105:180;12153:77;12150:1;12143:88;12250:4;12247:1;12240:15;12274:4;12271:1;12264:15;12291:172;12431:24;12427:1;12419:6;12415:14;12408:48;12397:66;:::o;12469:156::-;12609:8;12605:1;12597:6;12593:14;12586:32;12575:50;:::o;12631:225::-;12771:34;12767:1;12759:6;12755:14;12748:58;12840:8;12835:2;12827:6;12823:15;12816:33;12737:119;:::o;12862:165::-;13002:17;12998:1;12990:6;12986:14;12979:41;12968:59;:::o;13033:170::-;13173:22;13169:1;13161:6;13157:14;13150:46;13139:64;:::o;13209:181::-;13349:33;13345:1;13337:6;13333:14;13326:57;13315:75;:::o;13396:182::-;13536:34;13532:1;13524:6;13520:14;13513:58;13502:76;:::o;13584:181::-;13724:33;13720:1;13712:6;13708:14;13701:57;13690:75;:::o;13771:122::-;13844:24;13862:5;13844:24;:::i;:::-;13837:5;13834:35;13824:2;;13883:1;13880;13873:12;13824:2;13814:79;:::o;13899:116::-;13969:21;13984:5;13969:21;:::i;:::-;13962:5;13959:32;13949:2;;14005:1;14002;13995:12;13949:2;13939:76;:::o;14021:122::-;14094:24;14112:5;14094:24;:::i;:::-;14087:5;14084:35;14074:2;;14133:1;14130;14123:12;14074:2;14064:79;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1228600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"getReward()": "infinite",
								"getRewardForUser(address)": "infinite",
								"lockupPeriod()": "1240",
								"owner()": "1289",
								"renounceOwnership()": "24487",
								"rewardRateInit()": "1153",
								"rewardToken()": "1323",
								"setRewardRateInit(uint256)": "21494",
								"setRewardToken(address)": "22331",
								"setStakingStartTime(uint256)": "21429",
								"stake(uint256)": "infinite",
								"stakingBalance(address)": "1626",
								"stakingReward(address)": "1560",
								"stakingStartTime()": "1196",
								"stakingTime(address)": "1537",
								"token()": "1345",
								"totalReward()": "infinite",
								"totalStaked()": "infinite",
								"transferOwnership(address)": "24791",
								"withdraw(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 289,
									"end": 4044,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 289,
									"end": 4044,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 289,
									"end": 4044,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1211,
									"end": 1516,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 1211,
									"end": 1516,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1211,
									"end": 1516,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1211,
									"end": 1516,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1211,
									"end": 1516,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1211,
									"end": 1516,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1211,
									"end": 1516,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1211,
									"end": 1516,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1211,
									"end": 1516,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1211,
									"end": 1516,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1211,
									"end": 1516,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1211,
									"end": 1516,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1211,
									"end": 1516,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1211,
									"end": 1516,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 1211,
									"end": 1516,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 1211,
									"end": 1516,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1211,
									"end": 1516,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1211,
									"end": 1516,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 1211,
									"end": 1516,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1211,
									"end": 1516,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 1211,
									"end": 1516,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1211,
									"end": 1516,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1211,
									"end": 1516,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1211,
									"end": 1516,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1211,
									"end": 1516,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1211,
									"end": 1516,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1211,
									"end": 1516,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1211,
									"end": 1516,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1211,
									"end": 1516,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1211,
									"end": 1516,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1211,
									"end": 1516,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1211,
									"end": 1516,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1211,
									"end": 1516,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1211,
									"end": 1516,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1211,
									"end": 1516,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1334,
									"end": 1340,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1319,
									"end": 1324,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1319,
									"end": 1324,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1319,
									"end": 1341,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 1319,
									"end": 1341,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 1319,
									"end": 1341,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1319,
									"end": 1341,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1319,
									"end": 1341,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1319,
									"end": 1341,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1319,
									"end": 1341,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1319,
									"end": 1341,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 1319,
									"end": 1341,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1319,
									"end": 1341,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1319,
									"end": 1341,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1319,
									"end": 1341,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1319,
									"end": 1341,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1319,
									"end": 1341,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1319,
									"end": 1341,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1319,
									"end": 1341,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1319,
									"end": 1341,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1319,
									"end": 1341,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1372,
									"end": 1384,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1351,
									"end": 1362,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1351,
									"end": 1362,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1351,
									"end": 1385,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 1351,
									"end": 1385,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 1351,
									"end": 1385,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1351,
									"end": 1385,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1351,
									"end": 1385,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1351,
									"end": 1385,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1351,
									"end": 1385,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1351,
									"end": 1385,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 1351,
									"end": 1385,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1351,
									"end": 1385,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1351,
									"end": 1385,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1351,
									"end": 1385,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1351,
									"end": 1385,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1351,
									"end": 1385,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1351,
									"end": 1385,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1351,
									"end": 1385,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1351,
									"end": 1385,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1351,
									"end": 1385,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1412,
									"end": 1427,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1395,
									"end": 1409,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1395,
									"end": 1427,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1395,
									"end": 1427,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1395,
									"end": 1427,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1395,
									"end": 1427,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1452,
									"end": 1465,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1437,
									"end": 1449,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 1437,
									"end": 1465,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1437,
									"end": 1465,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1437,
									"end": 1465,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1437,
									"end": 1465,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1494,
									"end": 1509,
									"name": "TIMESTAMP",
									"source": 5
								},
								{
									"begin": 1475,
									"end": 1491,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 1475,
									"end": 1509,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1475,
									"end": 1509,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1475,
									"end": 1509,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1475,
									"end": 1509,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1211,
									"end": 1516,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1211,
									"end": 1516,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1211,
									"end": 1516,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1211,
									"end": 1516,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 289,
									"end": 4044,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 289,
									"end": 4044,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2550,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2604,
									"end": 2612,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2594,
									"end": 2602,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7,
									"end": 150,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 70,
									"end": 150,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 70,
									"end": 150,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 70,
									"end": 150,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 70,
									"end": 150,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 70,
									"end": 150,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 299,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 156,
									"end": 299,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 156,
									"end": 299,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 250,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 238,
									"end": 251,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 229,
									"end": 251,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 229,
									"end": 251,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 260,
									"end": 293,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 287,
									"end": 292,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 260,
									"end": 293,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 260,
									"end": 293,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 260,
									"end": 293,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 260,
									"end": 293,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 219,
									"end": 299,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 219,
									"end": 299,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 219,
									"end": 299,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 219,
									"end": 299,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 219,
									"end": 299,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 305,
									"end": 1058,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 305,
									"end": 1058,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 305,
									"end": 1058,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 305,
									"end": 1058,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 305,
									"end": 1058,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 305,
									"end": 1058,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 475,
									"end": 478,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 463,
									"end": 472,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 454,
									"end": 461,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 450,
									"end": 473,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 446,
									"end": 479,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 443,
									"end": 445,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 443,
									"end": 445,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 443,
									"end": 445,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 492,
									"end": 493,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 489,
									"end": 490,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 482,
									"end": 494,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 443,
									"end": 445,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 443,
									"end": 445,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 535,
									"end": 536,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 560,
									"end": 624,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 616,
									"end": 623,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 607,
									"end": 613,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 596,
									"end": 605,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 592,
									"end": 614,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 560,
									"end": 624,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 560,
									"end": 624,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 560,
									"end": 624,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 560,
									"end": 624,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 550,
									"end": 624,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 550,
									"end": 624,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 506,
									"end": 634,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 673,
									"end": 675,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 699,
									"end": 763,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 755,
									"end": 762,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 746,
									"end": 752,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 735,
									"end": 744,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 731,
									"end": 753,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 699,
									"end": 763,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 699,
									"end": 763,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 699,
									"end": 763,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 699,
									"end": 763,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 689,
									"end": 763,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 689,
									"end": 763,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 644,
									"end": 773,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 812,
									"end": 814,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 838,
									"end": 902,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 894,
									"end": 901,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 885,
									"end": 891,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 874,
									"end": 883,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 870,
									"end": 892,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 838,
									"end": 902,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 838,
									"end": 902,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 838,
									"end": 902,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 838,
									"end": 902,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 828,
									"end": 902,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 828,
									"end": 902,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 783,
									"end": 912,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 951,
									"end": 953,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 977,
									"end": 1041,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 1033,
									"end": 1040,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 1024,
									"end": 1030,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1013,
									"end": 1022,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 1009,
									"end": 1031,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 977,
									"end": 1041,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 977,
									"end": 1041,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 977,
									"end": 1041,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 977,
									"end": 1041,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 967,
									"end": 1041,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 967,
									"end": 1041,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 922,
									"end": 1051,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 433,
									"end": 1058,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 433,
									"end": 1058,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 433,
									"end": 1058,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 433,
									"end": 1058,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 433,
									"end": 1058,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 433,
									"end": 1058,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 433,
									"end": 1058,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 433,
									"end": 1058,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 1064,
									"end": 1160,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 1064,
									"end": 1160,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1064,
									"end": 1160,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1130,
									"end": 1154,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 1148,
									"end": 1153,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1130,
									"end": 1154,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 1130,
									"end": 1154,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 1130,
									"end": 1154,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 1130,
									"end": 1154,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1119,
									"end": 1154,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1119,
									"end": 1154,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1109,
									"end": 1160,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1109,
									"end": 1160,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1109,
									"end": 1160,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1109,
									"end": 1160,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 1166,
									"end": 1292,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 1166,
									"end": 1292,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1166,
									"end": 1292,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1243,
									"end": 1285,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1236,
									"end": 1241,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1232,
									"end": 1286,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1221,
									"end": 1286,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1221,
									"end": 1286,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1211,
									"end": 1292,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1211,
									"end": 1292,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1211,
									"end": 1292,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1211,
									"end": 1292,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 1298,
									"end": 1375,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 1298,
									"end": 1375,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1298,
									"end": 1375,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1364,
									"end": 1369,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1353,
									"end": 1369,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1353,
									"end": 1369,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1343,
									"end": 1375,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1343,
									"end": 1375,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1343,
									"end": 1375,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1343,
									"end": 1375,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 1381,
									"end": 1503,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1381,
									"end": 1503,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1454,
									"end": 1478,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1472,
									"end": 1477,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1454,
									"end": 1478,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 1454,
									"end": 1478,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 1454,
									"end": 1478,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1454,
									"end": 1478,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1447,
									"end": 1452,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1444,
									"end": 1479,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1436,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1434,
									"end": 1436,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1493,
									"end": 1494,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1490,
									"end": 1491,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1483,
									"end": 1495,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1436,
									"name": "tag",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1434,
									"end": 1436,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1424,
									"end": 1503,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1424,
									"end": 1503,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 1509,
									"end": 1631,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 1509,
									"end": 1631,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1606,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 1600,
									"end": 1605,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1606,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 1582,
									"end": 1606,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 1582,
									"end": 1606,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 1582,
									"end": 1606,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1575,
									"end": 1580,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1572,
									"end": 1607,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 1562,
									"end": 1564,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 1562,
									"end": 1564,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1621,
									"end": 1622,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1618,
									"end": 1619,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1611,
									"end": 1623,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1562,
									"end": 1564,
									"name": "tag",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 1562,
									"end": 1564,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1552,
									"end": 1631,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1552,
									"end": 1631,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 289,
									"end": 4044,
									"name": "tag",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 289,
									"end": 4044,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 289,
									"end": 4044,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 289,
									"end": 4044,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 289,
									"end": 4044,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 289,
									"end": 4044,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 289,
									"end": 4044,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 289,
									"end": 4044,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 289,
									"end": 4044,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205466ea2a966c6bd51b60e5e4c63b1efdbad08a0117cf38d60ff5dcdb2137f26364736f6c63430008010033",
									".code": [
										{
											"begin": 289,
											"end": 4044,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "PUSH",
											"source": 5,
											"value": "817B1CD2"
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "PUSH",
											"source": 5,
											"value": "EF790A82"
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "PUSH",
											"source": 5,
											"value": "EF790A82"
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "PUSH",
											"source": 5,
											"value": "F2FDE38B"
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "PUSH",
											"source": 5,
											"value": "F7C618C1"
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "PUSH",
											"source": 5,
											"value": "FC0C546A"
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "PUSH",
											"source": 5,
											"value": "FC71AE8C"
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "PUSH",
											"source": 5,
											"value": "817B1CD2"
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "PUSH",
											"source": 5,
											"value": "8AEE8127"
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "PUSH",
											"source": 5,
											"value": "8DA5CB5B"
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "PUSH",
											"source": 5,
											"value": "A694FC3A"
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "PUSH",
											"source": 5,
											"value": "EE947A7C"
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "PUSH",
											"source": 5,
											"value": "583D42FD"
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "PUSH",
											"source": 5,
											"value": "583D42FD"
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "PUSH",
											"source": 5,
											"value": "5D90BAD9"
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "PUSH",
											"source": 5,
											"value": "6ABFD183"
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "PUSH",
											"source": 5,
											"value": "715018A6"
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "PUSH",
											"source": 5,
											"value": "750142E6"
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "PUSH",
											"source": 5,
											"value": "154A78B5"
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "PUSH",
											"source": 5,
											"value": "1683153D"
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "PUSH",
											"source": 5,
											"value": "2E1A7D4D"
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "PUSH",
											"source": 5,
											"value": "3D18B912"
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "PUSH",
											"source": 5,
											"value": "45BC78AB"
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4044,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 493,
											"end": 522,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 493,
											"end": 522,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 493,
											"end": 522,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 493,
											"end": 522,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 493,
											"end": 522,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 493,
											"end": 522,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 493,
											"end": 522,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 493,
											"end": 522,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 493,
											"end": 522,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 493,
											"end": 522,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 493,
											"end": 522,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 493,
											"end": 522,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 493,
											"end": 522,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 493,
											"end": 522,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 493,
											"end": 522,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 493,
											"end": 522,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 493,
											"end": 522,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 493,
											"end": 522,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 493,
											"end": 522,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 493,
											"end": 522,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 493,
											"end": 522,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 493,
											"end": 522,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 493,
											"end": 522,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 937,
											"end": 985,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 937,
											"end": 985,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 937,
											"end": 985,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 937,
											"end": 985,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 937,
											"end": 985,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 937,
											"end": 985,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 937,
											"end": 985,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 937,
											"end": 985,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 937,
											"end": 985,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 937,
											"end": 985,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 937,
											"end": 985,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 937,
											"end": 985,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 937,
											"end": 985,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 937,
											"end": 985,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 937,
											"end": 985,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 937,
											"end": 985,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 937,
											"end": 985,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 937,
											"end": 985,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 937,
											"end": 985,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 937,
											"end": 985,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 937,
											"end": 985,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 937,
											"end": 985,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 937,
											"end": 985,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 937,
											"end": 985,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 937,
											"end": 985,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 937,
											"end": 985,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 937,
											"end": 985,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 937,
											"end": 985,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 937,
											"end": 985,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 937,
											"end": 985,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 937,
											"end": 985,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 937,
											"end": 985,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 937,
											"end": 985,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 937,
											"end": 985,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 937,
											"end": 985,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 937,
											"end": 985,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 937,
											"end": 985,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1952,
											"end": 2337,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1952,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1952,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 1952,
											"end": 2337,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1952,
											"end": 2337,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1952,
											"end": 2337,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1952,
											"end": 2337,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1952,
											"end": 2337,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1952,
											"end": 2337,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1952,
											"end": 2337,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1952,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 1952,
											"end": 2337,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1952,
											"end": 2337,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1952,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 1952,
											"end": 2337,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1952,
											"end": 2337,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 1952,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1952,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 1952,
											"end": 2337,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1952,
											"end": 2337,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 1952,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1952,
											"end": 2337,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 2363,
											"end": 2754,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 2363,
											"end": 2754,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2363,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 2363,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2363,
											"end": 2754,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2363,
											"end": 2754,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 2363,
											"end": 2754,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2363,
											"end": 2754,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 757,
											"end": 806,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 757,
											"end": 806,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 757,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 757,
											"end": 806,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 757,
											"end": 806,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 757,
											"end": 806,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 757,
											"end": 806,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 757,
											"end": 806,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 757,
											"end": 806,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 757,
											"end": 806,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 757,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 757,
											"end": 806,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 757,
											"end": 806,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 757,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 757,
											"end": 806,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 757,
											"end": 806,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 757,
											"end": 806,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 757,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 757,
											"end": 806,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 757,
											"end": 806,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 757,
											"end": 806,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 757,
											"end": 806,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 757,
											"end": 806,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 757,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 757,
											"end": 806,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 757,
											"end": 806,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 757,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 757,
											"end": 806,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 757,
											"end": 806,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 757,
											"end": 806,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 757,
											"end": 806,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 757,
											"end": 806,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 757,
											"end": 806,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 757,
											"end": 806,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 757,
											"end": 806,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 757,
											"end": 806,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 757,
											"end": 806,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 850,
											"end": 896,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 850,
											"end": 896,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 850,
											"end": 896,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 850,
											"end": 896,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 850,
											"end": 896,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 850,
											"end": 896,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 850,
											"end": 896,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 850,
											"end": 896,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 850,
											"end": 896,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 850,
											"end": 896,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 850,
											"end": 896,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 850,
											"end": 896,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 850,
											"end": 896,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 850,
											"end": 896,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 850,
											"end": 896,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 850,
											"end": 896,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 850,
											"end": 896,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 850,
											"end": 896,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 850,
											"end": 896,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 850,
											"end": 896,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 850,
											"end": 896,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 850,
											"end": 896,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 850,
											"end": 896,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 850,
											"end": 896,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 850,
											"end": 896,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 850,
											"end": 896,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 850,
											"end": 896,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 850,
											"end": 896,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 850,
											"end": 896,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 850,
											"end": 896,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 850,
											"end": 896,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 850,
											"end": 896,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 850,
											"end": 896,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 850,
											"end": 896,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 850,
											"end": 896,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 850,
											"end": 896,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 850,
											"end": 896,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3755,
											"end": 3882,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 3755,
											"end": 3882,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3755,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 3755,
											"end": 3882,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3755,
											"end": 3882,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3755,
											"end": 3882,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3755,
											"end": 3882,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3755,
											"end": 3882,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3755,
											"end": 3882,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3755,
											"end": 3882,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3755,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 3755,
											"end": 3882,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3755,
											"end": 3882,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3755,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 3755,
											"end": 3882,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3755,
											"end": 3882,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 3755,
											"end": 3882,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3755,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 3755,
											"end": 3882,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3755,
											"end": 3882,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 3755,
											"end": 3882,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3755,
											"end": 3882,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 681,
											"end": 712,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 681,
											"end": 712,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 681,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 681,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 681,
											"end": 712,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 681,
											"end": 712,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 681,
											"end": 712,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 681,
											"end": 712,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 681,
											"end": 712,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 681,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 681,
											"end": 712,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 681,
											"end": 712,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 681,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 681,
											"end": 712,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 681,
											"end": 712,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 681,
											"end": 712,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 681,
											"end": 712,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 681,
											"end": 712,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 681,
											"end": 712,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 681,
											"end": 712,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 681,
											"end": 712,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 681,
											"end": 712,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 681,
											"end": 712,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3442,
											"end": 3557,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 3442,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3442,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 3442,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 3442,
											"end": 3557,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3442,
											"end": 3557,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 3442,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3442,
											"end": 3557,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3442,
											"end": 3557,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3442,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 3442,
											"end": 3557,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3442,
											"end": 3557,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3442,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 3442,
											"end": 3557,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3442,
											"end": 3557,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 3442,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3442,
											"end": 3557,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3442,
											"end": 3557,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3442,
											"end": 3557,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3442,
											"end": 3557,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3442,
											"end": 3557,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3442,
											"end": 3557,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3442,
											"end": 3557,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3280,
											"end": 3389,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 3280,
											"end": 3389,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3280,
											"end": 3389,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3280,
											"end": 3389,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 3280,
											"end": 3389,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3280,
											"end": 3389,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3280,
											"end": 3389,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3280,
											"end": 3389,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3280,
											"end": 3389,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3280,
											"end": 3389,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 3280,
											"end": 3389,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3280,
											"end": 3389,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3280,
											"end": 3389,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 3280,
											"end": 3389,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3280,
											"end": 3389,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 3280,
											"end": 3389,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3280,
											"end": 3389,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3280,
											"end": 3389,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3280,
											"end": 3389,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3280,
											"end": 3389,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3280,
											"end": 3389,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3280,
											"end": 3389,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3280,
											"end": 3389,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3595,
											"end": 3710,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 3595,
											"end": 3710,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3595,
											"end": 3710,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 3595,
											"end": 3710,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3595,
											"end": 3710,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3595,
											"end": 3710,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3595,
											"end": 3710,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3595,
											"end": 3710,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3595,
											"end": 3710,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3595,
											"end": 3710,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3595,
											"end": 3710,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3595,
											"end": 3710,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3595,
											"end": 3710,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3595,
											"end": 3710,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 3595,
											"end": 3710,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3595,
											"end": 3710,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3595,
											"end": 3710,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3595,
											"end": 3710,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 3595,
											"end": 3710,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3595,
											"end": 3710,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 3595,
											"end": 3710,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3595,
											"end": 3710,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1899,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 1542,
											"end": 1899,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1542,
											"end": 1899,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 1542,
											"end": 1899,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1542,
											"end": 1899,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1542,
											"end": 1899,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1542,
											"end": 1899,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1542,
											"end": 1899,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1542,
											"end": 1899,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1542,
											"end": 1899,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1542,
											"end": 1899,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 1542,
											"end": 1899,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1542,
											"end": 1899,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1542,
											"end": 1899,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 1542,
											"end": 1899,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1542,
											"end": 1899,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 1542,
											"end": 1899,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1542,
											"end": 1899,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1542,
											"end": 1899,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1542,
											"end": 1899,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 1542,
											"end": 1899,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1542,
											"end": 1899,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 602,
											"end": 629,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 602,
											"end": 629,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 602,
											"end": 629,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 602,
											"end": 629,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 602,
											"end": 629,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 602,
											"end": 629,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 602,
											"end": 629,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 602,
											"end": 629,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 602,
											"end": 629,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 602,
											"end": 629,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 602,
											"end": 629,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 602,
											"end": 629,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 602,
											"end": 629,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 602,
											"end": 629,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 602,
											"end": 629,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 602,
											"end": 629,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 602,
											"end": 629,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 602,
											"end": 629,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 602,
											"end": 629,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 602,
											"end": 629,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 602,
											"end": 629,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 602,
											"end": 629,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 602,
											"end": 629,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2816,
											"end": 3224,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 2816,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2816,
											"end": 3224,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 2816,
											"end": 3224,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2816,
											"end": 3224,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2816,
											"end": 3224,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2816,
											"end": 3224,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2816,
											"end": 3224,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2816,
											"end": 3224,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2816,
											"end": 3224,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2816,
											"end": 3224,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 2816,
											"end": 3224,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2816,
											"end": 3224,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2816,
											"end": 3224,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 2816,
											"end": 3224,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2816,
											"end": 3224,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 2816,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2816,
											"end": 3224,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 2816,
											"end": 3224,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2816,
											"end": 3224,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 2816,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2816,
											"end": 3224,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2816,
											"end": 3224,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2816,
											"end": 3224,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 2816,
											"end": 3224,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2816,
											"end": 3224,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2816,
											"end": 3224,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 2816,
											"end": 3224,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2816,
											"end": 3224,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 2816,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2816,
											"end": 3224,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2816,
											"end": 3224,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2816,
											"end": 3224,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2816,
											"end": 3224,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2816,
											"end": 3224,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2816,
											"end": 3224,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2816,
											"end": 3224,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 413,
											"end": 439,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 413,
											"end": 439,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 413,
											"end": 439,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 413,
											"end": 439,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 413,
											"end": 439,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 413,
											"end": 439,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 413,
											"end": 439,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 413,
											"end": 439,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 413,
											"end": 439,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 413,
											"end": 439,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 413,
											"end": 439,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 413,
											"end": 439,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 413,
											"end": 439,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 413,
											"end": 439,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 413,
											"end": 439,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 413,
											"end": 439,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 413,
											"end": 439,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 413,
											"end": 439,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 413,
											"end": 439,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 413,
											"end": 439,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 413,
											"end": 439,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 413,
											"end": 439,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 413,
											"end": 439,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 340,
											"end": 360,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 340,
											"end": 360,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 340,
											"end": 360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 340,
											"end": 360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 340,
											"end": 360,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 340,
											"end": 360,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 340,
											"end": 360,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 340,
											"end": 360,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 340,
											"end": 360,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 340,
											"end": 360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 340,
											"end": 360,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 340,
											"end": 360,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 340,
											"end": 360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 340,
											"end": 360,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 340,
											"end": 360,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 340,
											"end": 360,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 340,
											"end": 360,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 340,
											"end": 360,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 340,
											"end": 360,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 340,
											"end": 360,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 340,
											"end": 360,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 340,
											"end": 360,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 340,
											"end": 360,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 4042,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 3923,
											"end": 4042,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 4042,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 3923,
											"end": 4042,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3923,
											"end": 4042,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 4042,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 4042,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 4042,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 4042,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 4042,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 4042,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 3923,
											"end": 4042,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 4042,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 4042,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 3923,
											"end": 4042,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3923,
											"end": 4042,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 3923,
											"end": 4042,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 4042,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 3923,
											"end": 4042,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3923,
											"end": 4042,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 3923,
											"end": 4042,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 4042,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 493,
											"end": 522,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 493,
											"end": 522,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 493,
											"end": 522,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 493,
											"end": 522,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 493,
											"end": 522,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 493,
											"end": 522,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 937,
											"end": 985,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 937,
											"end": 985,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 937,
											"end": 985,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 937,
											"end": 985,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 985,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 937,
											"end": 985,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 937,
											"end": 985,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 937,
											"end": 985,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 937,
											"end": 985,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 937,
											"end": 985,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 937,
											"end": 985,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 937,
											"end": 985,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 937,
											"end": 985,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 937,
											"end": 985,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 937,
											"end": 985,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 937,
											"end": 985,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 937,
											"end": 985,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 937,
											"end": 985,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 937,
											"end": 985,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1952,
											"end": 2337,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 1952,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2066,
											"end": 2078,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2066,
											"end": 2078,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2047,
											"end": 2063,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 2047,
											"end": 2063,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2047,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 2047,
											"end": 2078,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2047,
											"end": 2078,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2047,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 2047,
											"end": 2078,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2047,
											"end": 2078,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 2047,
											"end": 2078,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2027,
											"end": 2042,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 2027,
											"end": 2079,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2027,
											"end": 2079,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2019,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 2019,
											"end": 2090,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2019,
											"end": 2090,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2019,
											"end": 2090,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2019,
											"end": 2090,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2019,
											"end": 2090,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2019,
											"end": 2090,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2019,
											"end": 2090,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2019,
											"end": 2090,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2019,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2019,
											"end": 2090,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2019,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 2019,
											"end": 2090,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2019,
											"end": 2090,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2019,
											"end": 2090,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2019,
											"end": 2090,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2019,
											"end": 2090,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2019,
											"end": 2090,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2019,
											"end": 2090,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2019,
											"end": 2090,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2019,
											"end": 2090,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2019,
											"end": 2090,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2019,
											"end": 2090,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 2019,
											"end": 2090,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2136,
											"end": 2143,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2108,
											"end": 2122,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 2108,
											"end": 2134,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2123,
											"end": 2133,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2108,
											"end": 2134,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2108,
											"end": 2134,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2108,
											"end": 2134,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2108,
											"end": 2134,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2108,
											"end": 2134,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2108,
											"end": 2134,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2108,
											"end": 2134,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2108,
											"end": 2134,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2108,
											"end": 2134,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2108,
											"end": 2134,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2108,
											"end": 2134,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2108,
											"end": 2134,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2108,
											"end": 2134,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2108,
											"end": 2134,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2108,
											"end": 2134,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2108,
											"end": 2134,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2108,
											"end": 2143,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2108,
											"end": 2143,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2100,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 2100,
											"end": 2167,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2100,
											"end": 2167,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2100,
											"end": 2167,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2100,
											"end": 2167,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2100,
											"end": 2167,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2100,
											"end": 2167,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2100,
											"end": 2167,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2100,
											"end": 2167,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2100,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 2100,
											"end": 2167,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2100,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 2100,
											"end": 2167,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2100,
											"end": 2167,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 2100,
											"end": 2167,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2100,
											"end": 2167,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2100,
											"end": 2167,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2100,
											"end": 2167,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2100,
											"end": 2167,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2100,
											"end": 2167,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2100,
											"end": 2167,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2100,
											"end": 2167,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2100,
											"end": 2167,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 2100,
											"end": 2167,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2190,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2185,
											"end": 2190,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2185,
											"end": 2190,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2190,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2190,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2190,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2185,
											"end": 2190,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2190,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2190,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2190,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2185,
											"end": 2190,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2199,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2185,
											"end": 2199,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2199,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 2200,
											"end": 2210,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2212,
											"end": 2219,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 2185,
											"end": 2220,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2177,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 2177,
											"end": 2240,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2177,
											"end": 2240,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2177,
											"end": 2240,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2177,
											"end": 2240,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2177,
											"end": 2240,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2177,
											"end": 2240,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2177,
											"end": 2240,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2177,
											"end": 2240,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2177,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 2177,
											"end": 2240,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2177,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 2177,
											"end": 2240,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2177,
											"end": 2240,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 2177,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2177,
											"end": 2240,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2177,
											"end": 2240,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2177,
											"end": 2240,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2177,
											"end": 2240,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2177,
											"end": 2240,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2177,
											"end": 2240,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2177,
											"end": 2240,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2177,
											"end": 2240,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 2177,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2280,
											"end": 2287,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2250,
											"end": 2264,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 2250,
											"end": 2276,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2265,
											"end": 2275,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2250,
											"end": 2276,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2250,
											"end": 2276,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2250,
											"end": 2276,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2250,
											"end": 2276,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2250,
											"end": 2276,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2250,
											"end": 2276,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2250,
											"end": 2276,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2250,
											"end": 2276,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2250,
											"end": 2276,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2250,
											"end": 2276,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2250,
											"end": 2276,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2250,
											"end": 2276,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2250,
											"end": 2276,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2250,
											"end": 2276,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2250,
											"end": 2276,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2250,
											"end": 2276,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2250,
											"end": 2287,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2250,
											"end": 2287,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2250,
											"end": 2287,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2250,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 2250,
											"end": 2287,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2250,
											"end": 2287,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2250,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 2250,
											"end": 2287,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2250,
											"end": 2287,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 2250,
											"end": 2287,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2250,
											"end": 2287,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2250,
											"end": 2287,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2250,
											"end": 2287,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2250,
											"end": 2287,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2250,
											"end": 2287,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2250,
											"end": 2287,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2250,
											"end": 2287,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2320,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2302,
											"end": 2330,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2302,
											"end": 2330,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2302,
											"end": 2330,
											"name": "PUSH",
											"source": 5,
											"value": "B24546D975E2628748EFC9ACED80665E0FAD66272033E5C0EA25FD3AFAC99795"
										},
										{
											"begin": 2322,
											"end": 2329,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2302,
											"end": 2330,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2302,
											"end": 2330,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2302,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 2302,
											"end": 2330,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2302,
											"end": 2330,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2302,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 2302,
											"end": 2330,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2302,
											"end": 2330,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 2302,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2302,
											"end": 2330,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2302,
											"end": 2330,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2302,
											"end": 2330,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2302,
											"end": 2330,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2302,
											"end": 2330,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2302,
											"end": 2330,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2302,
											"end": 2330,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1952,
											"end": 2337,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1952,
											"end": 2337,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2363,
											"end": 2754,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2363,
											"end": 2754,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2447,
											"end": 2448,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2423,
											"end": 2434,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 2423,
											"end": 2446,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2445,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2423,
											"end": 2446,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2423,
											"end": 2446,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2423,
											"end": 2446,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2423,
											"end": 2446,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2423,
											"end": 2446,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2423,
											"end": 2446,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2423,
											"end": 2446,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2423,
											"end": 2446,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2423,
											"end": 2446,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2423,
											"end": 2446,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2423,
											"end": 2446,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2423,
											"end": 2446,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2423,
											"end": 2446,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2423,
											"end": 2446,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2423,
											"end": 2446,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2423,
											"end": 2446,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2423,
											"end": 2448,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2415,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 2415,
											"end": 2474,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2415,
											"end": 2474,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2415,
											"end": 2474,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2415,
											"end": 2474,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2415,
											"end": 2474,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2415,
											"end": 2474,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2415,
											"end": 2474,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2415,
											"end": 2474,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2415,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 2415,
											"end": 2474,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2415,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 2415,
											"end": 2474,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2415,
											"end": 2474,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 2415,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2415,
											"end": 2474,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2415,
											"end": 2474,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2415,
											"end": 2474,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2415,
											"end": 2474,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2415,
											"end": 2474,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2415,
											"end": 2474,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2415,
											"end": 2474,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2415,
											"end": 2474,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 2415,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2484,
											"end": 2498,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2501,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 2518,
											"end": 2528,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2501,
											"end": 2517,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 2501,
											"end": 2529,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2501,
											"end": 2529,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 2501,
											"end": 2529,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2484,
											"end": 2529,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2484,
											"end": 2529,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2552,
											"end": 2553,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2549,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2543,
											"end": 2553,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2539,
											"end": 2748,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2539,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 2539,
											"end": 2748,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2598,
											"end": 2604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2582,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 2569,
											"end": 2594,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2583,
											"end": 2593,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2594,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2569,
											"end": 2594,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2594,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2569,
											"end": 2594,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2594,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2594,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2594,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2569,
											"end": 2594,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2594,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2594,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2594,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2594,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2569,
											"end": 2594,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2594,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2569,
											"end": 2594,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2594,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2569,
											"end": 2604,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2604,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2604,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 2569,
											"end": 2604,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 2569,
											"end": 2604,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2569,
											"end": 2604,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 2569,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2604,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2604,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2604,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2637,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2626,
											"end": 2637,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2626,
											"end": 2637,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2637,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2637,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2637,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2626,
											"end": 2637,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2637,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2637,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2637,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2626,
											"end": 2637,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2646,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2626,
											"end": 2646,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2646,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 2647,
											"end": 2657,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2659,
											"end": 2665,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 2626,
											"end": 2666,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 2618,
											"end": 2686,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2686,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2618,
											"end": 2686,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2686,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2618,
											"end": 2686,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2686,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2686,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2618,
											"end": 2686,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 2618,
											"end": 2686,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 2618,
											"end": 2686,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2618,
											"end": 2686,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 2618,
											"end": 2686,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2686,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2618,
											"end": 2686,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2686,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2686,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2686,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2686,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2686,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2686,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 2618,
											"end": 2686,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2718,
											"end": 2728,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2706,
											"end": 2737,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2706,
											"end": 2737,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2706,
											"end": 2737,
											"name": "PUSH",
											"source": 5,
											"value": "BA8DE60C3403EC381D1D484652EA1980E3C3E56359195C92525BFF4CE47AD98E"
										},
										{
											"begin": 2730,
											"end": 2736,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2706,
											"end": 2737,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2706,
											"end": 2737,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2706,
											"end": 2737,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 2706,
											"end": 2737,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2706,
											"end": 2737,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2706,
											"end": 2737,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 2706,
											"end": 2737,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2706,
											"end": 2737,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 2706,
											"end": 2737,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2706,
											"end": 2737,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2706,
											"end": 2737,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2706,
											"end": 2737,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2706,
											"end": 2737,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2706,
											"end": 2737,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2706,
											"end": 2737,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2706,
											"end": 2737,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 2539,
											"end": 2748,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 2539,
											"end": 2748,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2293,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2363,
											"end": 2754,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 757,
											"end": 806,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 757,
											"end": 806,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 757,
											"end": 806,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 757,
											"end": 806,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 757,
											"end": 806,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 757,
											"end": 806,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 757,
											"end": 806,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 757,
											"end": 806,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 757,
											"end": 806,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 757,
											"end": 806,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 757,
											"end": 806,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 757,
											"end": 806,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 757,
											"end": 806,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 757,
											"end": 806,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 757,
											"end": 806,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 757,
											"end": 806,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 757,
											"end": 806,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 757,
											"end": 806,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 757,
											"end": 806,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 850,
											"end": 896,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 850,
											"end": 896,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 850,
											"end": 896,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 850,
											"end": 896,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 850,
											"end": 896,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 850,
											"end": 896,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 850,
											"end": 896,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 850,
											"end": 896,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 850,
											"end": 896,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 850,
											"end": 896,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 850,
											"end": 896,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 850,
											"end": 896,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 850,
											"end": 896,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 850,
											"end": 896,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 850,
											"end": 896,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 850,
											"end": 896,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 850,
											"end": 896,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 850,
											"end": 896,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 850,
											"end": 896,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3755,
											"end": 3882,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 3755,
											"end": 3882,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3858,
											"end": 3875,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3839,
											"end": 3855,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 3839,
											"end": 3875,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3839,
											"end": 3875,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3839,
											"end": 3875,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3839,
											"end": 3875,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3755,
											"end": 3882,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3755,
											"end": 3882,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 681,
											"end": 712,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 681,
											"end": 712,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 681,
											"end": 712,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 681,
											"end": 712,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 681,
											"end": 712,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 681,
											"end": 712,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3442,
											"end": 3557,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 3442,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3488,
											"end": 3495,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3514,
											"end": 3525,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 3514,
											"end": 3525,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3514,
											"end": 3525,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3525,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3525,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3525,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3514,
											"end": 3525,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3525,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3525,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3525,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3514,
											"end": 3525,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3535,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3514,
											"end": 3535,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3535,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 3544,
											"end": 3548,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 3514,
											"end": 3550,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3507,
											"end": 3550,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3507,
											"end": 3550,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3442,
											"end": 3557,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3442,
											"end": 3557,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3280,
											"end": 3389,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 3280,
											"end": 3389,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3326,
											"end": 3333,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3352,
											"end": 3357,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 3352,
											"end": 3357,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3352,
											"end": 3357,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3357,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3357,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3357,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3352,
											"end": 3357,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3357,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3357,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3357,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3352,
											"end": 3357,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3367,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3352,
											"end": 3367,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3367,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 3376,
											"end": 3380,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 3352,
											"end": 3382,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3345,
											"end": 3382,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3345,
											"end": 3382,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3280,
											"end": 3389,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3280,
											"end": 3389,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3595,
											"end": 3710,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 3595,
											"end": 3710,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3690,
											"end": 3702,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3669,
											"end": 3680,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 3669,
											"end": 3680,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3703,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3669,
											"end": 3703,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 3669,
											"end": 3703,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3669,
											"end": 3703,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3669,
											"end": 3703,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3669,
											"end": 3703,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3669,
											"end": 3703,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 3669,
											"end": 3703,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3669,
											"end": 3703,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3669,
											"end": 3703,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3669,
											"end": 3703,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3669,
											"end": 3703,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3669,
											"end": 3703,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3669,
											"end": 3703,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 3669,
											"end": 3703,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 3669,
											"end": 3703,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3669,
											"end": 3703,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3669,
											"end": 3703,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3595,
											"end": 3710,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3595,
											"end": 3710,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1542,
											"end": 1899,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1542,
											"end": 1899,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1625,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1614,
											"end": 1621,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1614,
											"end": 1625,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1606,
											"end": 1661,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 1606,
											"end": 1661,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1606,
											"end": 1661,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1606,
											"end": 1661,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1606,
											"end": 1661,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1606,
											"end": 1661,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1606,
											"end": 1661,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1606,
											"end": 1661,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1606,
											"end": 1661,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1606,
											"end": 1661,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 1606,
											"end": 1661,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1606,
											"end": 1661,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 1606,
											"end": 1661,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1606,
											"end": 1661,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 1606,
											"end": 1661,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1606,
											"end": 1661,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1606,
											"end": 1661,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1606,
											"end": 1661,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1606,
											"end": 1661,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1606,
											"end": 1661,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1606,
											"end": 1661,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1606,
											"end": 1661,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1606,
											"end": 1661,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 1606,
											"end": 1661,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1684,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1679,
											"end": 1684,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1679,
											"end": 1684,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1684,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1684,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1684,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1679,
											"end": 1684,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1684,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1684,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1684,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1679,
											"end": 1684,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1697,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1679,
											"end": 1697,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1697,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 1698,
											"end": 1708,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1718,
											"end": 1722,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 1725,
											"end": 1732,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 1679,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1671,
											"end": 1753,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 1671,
											"end": 1753,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1671,
											"end": 1753,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1671,
											"end": 1753,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1671,
											"end": 1753,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1671,
											"end": 1753,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1671,
											"end": 1753,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1671,
											"end": 1753,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1671,
											"end": 1753,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1671,
											"end": 1753,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 1671,
											"end": 1753,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1671,
											"end": 1753,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 1671,
											"end": 1753,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1671,
											"end": 1753,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 1671,
											"end": 1753,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1671,
											"end": 1753,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1671,
											"end": 1753,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1671,
											"end": 1753,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1671,
											"end": 1753,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1671,
											"end": 1753,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1671,
											"end": 1753,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1671,
											"end": 1753,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1671,
											"end": 1753,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 1671,
											"end": 1753,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1793,
											"end": 1800,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1763,
											"end": 1777,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 1763,
											"end": 1789,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1778,
											"end": 1788,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1763,
											"end": 1789,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1763,
											"end": 1789,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1763,
											"end": 1789,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1763,
											"end": 1789,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1763,
											"end": 1789,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1763,
											"end": 1789,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1763,
											"end": 1789,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1763,
											"end": 1789,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1763,
											"end": 1789,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1763,
											"end": 1789,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1763,
											"end": 1789,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1763,
											"end": 1789,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1763,
											"end": 1789,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1763,
											"end": 1789,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1763,
											"end": 1789,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1763,
											"end": 1789,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1763,
											"end": 1800,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1763,
											"end": 1800,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1763,
											"end": 1800,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1763,
											"end": 1800,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 1763,
											"end": 1800,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1763,
											"end": 1800,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1763,
											"end": 1800,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 1763,
											"end": 1800,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1763,
											"end": 1800,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 1763,
											"end": 1800,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1763,
											"end": 1800,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1763,
											"end": 1800,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1763,
											"end": 1800,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1763,
											"end": 1800,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1763,
											"end": 1800,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1763,
											"end": 1800,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1763,
											"end": 1800,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1836,
											"end": 1851,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1821,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 1810,
											"end": 1833,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1822,
											"end": 1832,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1833,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1810,
											"end": 1833,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1833,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1810,
											"end": 1833,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1833,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1833,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1833,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1810,
											"end": 1833,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1833,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1833,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1833,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1833,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1810,
											"end": 1833,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1833,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1810,
											"end": 1833,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1851,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1851,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1851,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1810,
											"end": 1851,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1872,
											"end": 1882,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1866,
											"end": 1892,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1866,
											"end": 1892,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1866,
											"end": 1892,
											"name": "PUSH",
											"source": 5,
											"value": "EBEDB8B3C678666E7F36970BC8F57ABF6D8FA2E828C0DA91EA5B75BF68ED101A"
										},
										{
											"begin": 1884,
											"end": 1891,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1866,
											"end": 1892,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1866,
											"end": 1892,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1866,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 1866,
											"end": 1892,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1866,
											"end": 1892,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1866,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 1866,
											"end": 1892,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1866,
											"end": 1892,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 1866,
											"end": 1892,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1866,
											"end": 1892,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1866,
											"end": 1892,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1866,
											"end": 1892,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1866,
											"end": 1892,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1866,
											"end": 1892,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1866,
											"end": 1892,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1866,
											"end": 1892,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1542,
											"end": 1899,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1542,
											"end": 1899,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 602,
											"end": 629,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 602,
											"end": 629,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 602,
											"end": 629,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 602,
											"end": 629,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 602,
											"end": 629,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 602,
											"end": 629,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2816,
											"end": 3224,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 2816,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2880,
											"end": 2887,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2899,
											"end": 2927,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2964,
											"end": 2975,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 2964,
											"end": 2984,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2976,
											"end": 2983,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2964,
											"end": 2984,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2964,
											"end": 2984,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2964,
											"end": 2984,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2964,
											"end": 2984,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2964,
											"end": 2984,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2964,
											"end": 2984,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2964,
											"end": 2984,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2964,
											"end": 2984,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2964,
											"end": 2984,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2964,
											"end": 2984,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2964,
											"end": 2984,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2964,
											"end": 2984,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2964,
											"end": 2984,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2964,
											"end": 2984,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2964,
											"end": 2984,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2964,
											"end": 2984,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2945,
											"end": 2961,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 2945,
											"end": 2961,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2930,
											"end": 2961,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 2930,
											"end": 2961,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2930,
											"end": 2961,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2930,
											"end": 2961,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 2930,
											"end": 2961,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2930,
											"end": 2961,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 2930,
											"end": 2961,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2930,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 2930,
											"end": 2984,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2930,
											"end": 2984,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2930,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 2930,
											"end": 2984,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2930,
											"end": 2984,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 2930,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2899,
											"end": 2984,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2899,
											"end": 2984,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3060,
											"end": 3078,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3117,
											"end": 3131,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3117,
											"end": 3131,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3102,
											"end": 3114,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3102,
											"end": 3114,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3081,
											"end": 3101,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3081,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 3081,
											"end": 3114,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3081,
											"end": 3114,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3081,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 3081,
											"end": 3114,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3081,
											"end": 3114,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 3081,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3081,
											"end": 3131,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 3081,
											"end": 3131,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3081,
											"end": 3131,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3081,
											"end": 3131,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 3081,
											"end": 3131,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3081,
											"end": 3131,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 3081,
											"end": 3131,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3060,
											"end": 3131,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3060,
											"end": 3131,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3141,
											"end": 3155,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3184,
											"end": 3194,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3158,
											"end": 3172,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 3158,
											"end": 3181,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3173,
											"end": 3180,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3158,
											"end": 3181,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3158,
											"end": 3181,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3158,
											"end": 3181,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3158,
											"end": 3181,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3158,
											"end": 3181,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3158,
											"end": 3181,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3158,
											"end": 3181,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3158,
											"end": 3181,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3158,
											"end": 3181,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3158,
											"end": 3181,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3158,
											"end": 3181,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3158,
											"end": 3181,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3158,
											"end": 3181,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3158,
											"end": 3181,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3158,
											"end": 3181,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3158,
											"end": 3181,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3158,
											"end": 3194,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 3158,
											"end": 3194,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3158,
											"end": 3194,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3158,
											"end": 3194,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 3158,
											"end": 3194,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3158,
											"end": 3194,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 3158,
											"end": 3194,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3141,
											"end": 3194,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3141,
											"end": 3194,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3211,
											"end": 3217,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3204,
											"end": 3217,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3204,
											"end": 3217,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3204,
											"end": 3217,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3204,
											"end": 3217,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3204,
											"end": 3217,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2816,
											"end": 3224,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2816,
											"end": 3224,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2816,
											"end": 3224,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2816,
											"end": 3224,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2190,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2177,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 2263,
											"end": 2271,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 413,
											"end": 439,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 413,
											"end": 439,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 413,
											"end": 439,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 413,
											"end": 439,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 413,
											"end": 439,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 413,
											"end": 439,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 413,
											"end": 439,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 413,
											"end": 439,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 413,
											"end": 439,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 413,
											"end": 439,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 413,
											"end": 439,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 413,
											"end": 439,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 413,
											"end": 439,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 413,
											"end": 439,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 413,
											"end": 439,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 340,
											"end": 360,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 340,
											"end": 360,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 340,
											"end": 360,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 340,
											"end": 360,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 340,
											"end": 360,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 340,
											"end": 360,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 340,
											"end": 360,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 340,
											"end": 360,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 340,
											"end": 360,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 340,
											"end": 360,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 340,
											"end": 360,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 340,
											"end": 360,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 340,
											"end": 360,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 340,
											"end": 360,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 340,
											"end": 360,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3923,
											"end": 4042,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 3923,
											"end": 4042,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4035,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4003,
											"end": 4017,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4003,
											"end": 4035,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4003,
											"end": 4035,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4003,
											"end": 4035,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4003,
											"end": 4035,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 4042,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 4042,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7,
											"end": 146,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 59,
											"end": 146,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 152,
											"end": 289,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 237,
											"end": 243,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 231,
											"end": 244,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 222,
											"end": 244,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 222,
											"end": 244,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 277,
											"end": 282,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 212,
											"end": 289,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 212,
											"end": 289,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 212,
											"end": 289,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 212,
											"end": 289,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 212,
											"end": 289,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 295,
											"end": 434,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 385,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 366,
											"end": 386,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 357,
											"end": 386,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 422,
											"end": 427,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 347,
											"end": 434,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 347,
											"end": 434,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 347,
											"end": 434,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 347,
											"end": 434,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 347,
											"end": 434,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 440,
											"end": 583,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 440,
											"end": 583,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 440,
											"end": 583,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 534,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 522,
											"end": 535,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 513,
											"end": 535,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 513,
											"end": 535,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 544,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 571,
											"end": 576,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 544,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 503,
											"end": 583,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 503,
											"end": 583,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 503,
											"end": 583,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 503,
											"end": 583,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 503,
											"end": 583,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 589,
											"end": 851,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 589,
											"end": 851,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 589,
											"end": 851,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 697,
											"end": 699,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 685,
											"end": 694,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 676,
											"end": 683,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 672,
											"end": 695,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 668,
											"end": 700,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 665,
											"end": 667,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 665,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 665,
											"end": 667,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 713,
											"end": 714,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 710,
											"end": 711,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 703,
											"end": 715,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 665,
											"end": 667,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 665,
											"end": 667,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 756,
											"end": 757,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 826,
											"end": 833,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 817,
											"end": 823,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 806,
											"end": 815,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 802,
											"end": 824,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 781,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 781,
											"end": 834,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 781,
											"end": 834,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 781,
											"end": 834,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 771,
											"end": 834,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 771,
											"end": 834,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 727,
											"end": 844,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 655,
											"end": 851,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 655,
											"end": 851,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 655,
											"end": 851,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 655,
											"end": 851,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 655,
											"end": 851,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 857,
											"end": 1135,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 857,
											"end": 1135,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 857,
											"end": 1135,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 973,
											"end": 975,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 961,
											"end": 970,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 952,
											"end": 959,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 948,
											"end": 971,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 944,
											"end": 976,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 941,
											"end": 943,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 941,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 941,
											"end": 943,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 989,
											"end": 990,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 986,
											"end": 987,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 979,
											"end": 991,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 941,
											"end": 943,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 941,
											"end": 943,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1032,
											"end": 1033,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1057,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 1110,
											"end": 1117,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1090,
											"end": 1099,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1086,
											"end": 1108,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1057,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 1057,
											"end": 1118,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1057,
											"end": 1118,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 1057,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1118,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1118,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1003,
											"end": 1128,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 931,
											"end": 1135,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 931,
											"end": 1135,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 931,
											"end": 1135,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 931,
											"end": 1135,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 931,
											"end": 1135,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1141,
											"end": 1403,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 1141,
											"end": 1403,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1141,
											"end": 1403,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1249,
											"end": 1251,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1237,
											"end": 1246,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1228,
											"end": 1235,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1224,
											"end": 1247,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1220,
											"end": 1252,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1219,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1219,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 1217,
											"end": 1219,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1266,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1262,
											"end": 1263,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1255,
											"end": 1267,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1219,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 1217,
											"end": 1219,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1308,
											"end": 1309,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1333,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 1378,
											"end": 1385,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1369,
											"end": 1375,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1358,
											"end": 1367,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1354,
											"end": 1376,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1333,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 1333,
											"end": 1386,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1333,
											"end": 1386,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 1333,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1323,
											"end": 1386,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1323,
											"end": 1386,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1279,
											"end": 1396,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1207,
											"end": 1403,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1207,
											"end": 1403,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1207,
											"end": 1403,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1207,
											"end": 1403,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1207,
											"end": 1403,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1409,
											"end": 1693,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 1409,
											"end": 1693,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1409,
											"end": 1693,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1528,
											"end": 1530,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1516,
											"end": 1525,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1507,
											"end": 1514,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1503,
											"end": 1526,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1499,
											"end": 1531,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1496,
											"end": 1498,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1496,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 1496,
											"end": 1498,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1544,
											"end": 1545,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1541,
											"end": 1542,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1534,
											"end": 1546,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1496,
											"end": 1498,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 1496,
											"end": 1498,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1587,
											"end": 1588,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1612,
											"end": 1676,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 1668,
											"end": 1675,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1659,
											"end": 1665,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1648,
											"end": 1657,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1644,
											"end": 1666,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1612,
											"end": 1676,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 1612,
											"end": 1676,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1612,
											"end": 1676,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 1612,
											"end": 1676,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1602,
											"end": 1676,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1602,
											"end": 1676,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1558,
											"end": 1686,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1486,
											"end": 1693,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1486,
											"end": 1693,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1486,
											"end": 1693,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1486,
											"end": 1693,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1486,
											"end": 1693,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1699,
											"end": 1817,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 1699,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1786,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 1804,
											"end": 1809,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1786,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 1786,
											"end": 1810,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1786,
											"end": 1810,
											"name": "tag",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 1786,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1781,
											"end": 1784,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1774,
											"end": 1811,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1764,
											"end": 1817,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1764,
											"end": 1817,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1764,
											"end": 1817,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1823,
											"end": 1982,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 1823,
											"end": 1982,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 1975,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 1969,
											"end": 1974,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 1975,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 1924,
											"end": 1975,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1924,
											"end": 1975,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 1924,
											"end": 1975,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1919,
											"end": 1922,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1976,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1902,
											"end": 1982,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1902,
											"end": 1982,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1902,
											"end": 1982,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1988,
											"end": 2354,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 1988,
											"end": 2354,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1988,
											"end": 2354,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2151,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 2215,
											"end": 2217,
											"name": "PUSH",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 2210,
											"end": 2213,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2151,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 2151,
											"end": 2218,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2151,
											"end": 2218,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 2151,
											"end": 2218,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2144,
											"end": 2218,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2144,
											"end": 2218,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2227,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 2316,
											"end": 2319,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2227,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 2227,
											"end": 2320,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2227,
											"end": 2320,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 2227,
											"end": 2320,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2345,
											"end": 2347,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2340,
											"end": 2343,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2336,
											"end": 2348,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2329,
											"end": 2348,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2329,
											"end": 2348,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2134,
											"end": 2354,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2134,
											"end": 2354,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2134,
											"end": 2354,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2134,
											"end": 2354,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2360,
											"end": 2725,
											"name": "tag",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 2360,
											"end": 2725,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2725,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2523,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 2587,
											"end": 2588,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2582,
											"end": 2585,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2523,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 2523,
											"end": 2589,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2523,
											"end": 2589,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 2523,
											"end": 2589,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2516,
											"end": 2589,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2516,
											"end": 2589,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2691,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 2687,
											"end": 2690,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2691,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 2598,
											"end": 2691,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2598,
											"end": 2691,
											"name": "tag",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 2598,
											"end": 2691,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2718,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2711,
											"end": 2714,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2719,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 2719,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 2719,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2506,
											"end": 2725,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2506,
											"end": 2725,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2506,
											"end": 2725,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2506,
											"end": 2725,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2731,
											"end": 3097,
											"name": "tag",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 2731,
											"end": 3097,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2731,
											"end": 3097,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2894,
											"end": 2961,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 2958,
											"end": 2960,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 2953,
											"end": 2956,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2894,
											"end": 2961,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 2894,
											"end": 2961,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2894,
											"end": 2961,
											"name": "tag",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 2894,
											"end": 2961,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2887,
											"end": 2961,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2887,
											"end": 2961,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2970,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 3059,
											"end": 3062,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2970,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 2970,
											"end": 3063,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2970,
											"end": 3063,
											"name": "tag",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 2970,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3088,
											"end": 3090,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3083,
											"end": 3086,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3079,
											"end": 3091,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3072,
											"end": 3091,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3072,
											"end": 3091,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2877,
											"end": 3097,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2877,
											"end": 3097,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2877,
											"end": 3097,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2877,
											"end": 3097,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3103,
											"end": 3469,
											"name": "tag",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 3103,
											"end": 3469,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3103,
											"end": 3469,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3266,
											"end": 3333,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 3330,
											"end": 3332,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 3325,
											"end": 3328,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3266,
											"end": 3333,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 3266,
											"end": 3333,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3266,
											"end": 3333,
											"name": "tag",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 3266,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3259,
											"end": 3333,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3259,
											"end": 3333,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3342,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 3431,
											"end": 3434,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3342,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 3342,
											"end": 3435,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3342,
											"end": 3435,
											"name": "tag",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 3342,
											"end": 3435,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3460,
											"end": 3462,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3455,
											"end": 3458,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3451,
											"end": 3463,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3444,
											"end": 3463,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3444,
											"end": 3463,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3249,
											"end": 3469,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3249,
											"end": 3469,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3249,
											"end": 3469,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3249,
											"end": 3469,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3475,
											"end": 3841,
											"name": "tag",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 3475,
											"end": 3841,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3475,
											"end": 3841,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3705,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 3702,
											"end": 3704,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 3697,
											"end": 3700,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3638,
											"end": 3705,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 3638,
											"end": 3705,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3638,
											"end": 3705,
											"name": "tag",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 3638,
											"end": 3705,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3631,
											"end": 3705,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3631,
											"end": 3705,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3714,
											"end": 3807,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 3803,
											"end": 3806,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3714,
											"end": 3807,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 3714,
											"end": 3807,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3714,
											"end": 3807,
											"name": "tag",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 3714,
											"end": 3807,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3832,
											"end": 3834,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3827,
											"end": 3830,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3835,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3816,
											"end": 3835,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3816,
											"end": 3835,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3841,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3841,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3841,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3841,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3847,
											"end": 4213,
											"name": "tag",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 3847,
											"end": 4213,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3847,
											"end": 4213,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4010,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 4074,
											"end": 4076,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4069,
											"end": 4072,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4010,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 4010,
											"end": 4077,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4010,
											"end": 4077,
											"name": "tag",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 4010,
											"end": 4077,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4003,
											"end": 4077,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4003,
											"end": 4077,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4086,
											"end": 4179,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 4175,
											"end": 4178,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4086,
											"end": 4179,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 4086,
											"end": 4179,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4086,
											"end": 4179,
											"name": "tag",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 4086,
											"end": 4179,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4204,
											"end": 4206,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4199,
											"end": 4202,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4195,
											"end": 4207,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4188,
											"end": 4207,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4188,
											"end": 4207,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3993,
											"end": 4213,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3993,
											"end": 4213,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3993,
											"end": 4213,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3993,
											"end": 4213,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4219,
											"end": 4585,
											"name": "tag",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 4219,
											"end": 4585,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4219,
											"end": 4585,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4449,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 4446,
											"end": 4448,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4441,
											"end": 4444,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4382,
											"end": 4449,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 4382,
											"end": 4449,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4382,
											"end": 4449,
											"name": "tag",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 4382,
											"end": 4449,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4375,
											"end": 4449,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4375,
											"end": 4449,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4458,
											"end": 4551,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 4547,
											"end": 4550,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4458,
											"end": 4551,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 4458,
											"end": 4551,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4458,
											"end": 4551,
											"name": "tag",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 4458,
											"end": 4551,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4576,
											"end": 4578,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4571,
											"end": 4574,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4567,
											"end": 4579,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4560,
											"end": 4579,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4560,
											"end": 4579,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4365,
											"end": 4585,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4365,
											"end": 4585,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4365,
											"end": 4585,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4365,
											"end": 4585,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4591,
											"end": 4957,
											"name": "tag",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 4591,
											"end": 4957,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4591,
											"end": 4957,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4754,
											"end": 4821,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 4818,
											"end": 4820,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4813,
											"end": 4816,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4754,
											"end": 4821,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 4754,
											"end": 4821,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4754,
											"end": 4821,
											"name": "tag",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 4754,
											"end": 4821,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4747,
											"end": 4821,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4747,
											"end": 4821,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4830,
											"end": 4923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 4919,
											"end": 4922,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4830,
											"end": 4923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 4830,
											"end": 4923,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4830,
											"end": 4923,
											"name": "tag",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 4830,
											"end": 4923,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4948,
											"end": 4950,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4943,
											"end": 4946,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4939,
											"end": 4951,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4932,
											"end": 4951,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4932,
											"end": 4951,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4737,
											"end": 4957,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4737,
											"end": 4957,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4737,
											"end": 4957,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4737,
											"end": 4957,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4963,
											"end": 5081,
											"name": "tag",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 4963,
											"end": 5081,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5050,
											"end": 5074,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 5068,
											"end": 5073,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5050,
											"end": 5074,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 5050,
											"end": 5074,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5050,
											"end": 5074,
											"name": "tag",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 5050,
											"end": 5074,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5045,
											"end": 5048,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5038,
											"end": 5075,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5028,
											"end": 5081,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5028,
											"end": 5081,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5028,
											"end": 5081,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5087,
											"end": 5309,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 5087,
											"end": 5309,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5087,
											"end": 5309,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5218,
											"end": 5220,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5207,
											"end": 5216,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5203,
											"end": 5221,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5195,
											"end": 5221,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5195,
											"end": 5221,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5231,
											"end": 5302,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 5299,
											"end": 5300,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5288,
											"end": 5297,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5284,
											"end": 5301,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5275,
											"end": 5281,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5231,
											"end": 5302,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 5231,
											"end": 5302,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5231,
											"end": 5302,
											"name": "tag",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 5231,
											"end": 5302,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5185,
											"end": 5309,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5185,
											"end": 5309,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5185,
											"end": 5309,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5185,
											"end": 5309,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5185,
											"end": 5309,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5315,
											"end": 5757,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 5315,
											"end": 5757,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5315,
											"end": 5757,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5502,
											"end": 5504,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5491,
											"end": 5500,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5505,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5479,
											"end": 5505,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5479,
											"end": 5505,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5515,
											"end": 5586,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 5583,
											"end": 5584,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5572,
											"end": 5581,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5568,
											"end": 5585,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5559,
											"end": 5565,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5515,
											"end": 5586,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 5515,
											"end": 5586,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5515,
											"end": 5586,
											"name": "tag",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 5515,
											"end": 5586,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5596,
											"end": 5668,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 5664,
											"end": 5666,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5653,
											"end": 5662,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5649,
											"end": 5667,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5640,
											"end": 5646,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5596,
											"end": 5668,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 5596,
											"end": 5668,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5596,
											"end": 5668,
											"name": "tag",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 5596,
											"end": 5668,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5678,
											"end": 5750,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 5746,
											"end": 5748,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5735,
											"end": 5744,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5731,
											"end": 5749,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5722,
											"end": 5728,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5678,
											"end": 5750,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 5678,
											"end": 5750,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5678,
											"end": 5750,
											"name": "tag",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 5678,
											"end": 5750,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5469,
											"end": 5757,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 5469,
											"end": 5757,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5469,
											"end": 5757,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5469,
											"end": 5757,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5469,
											"end": 5757,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5469,
											"end": 5757,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5469,
											"end": 5757,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5763,
											"end": 6095,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 5763,
											"end": 6095,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5763,
											"end": 6095,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5922,
											"end": 5924,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5911,
											"end": 5920,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5907,
											"end": 5925,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5899,
											"end": 5925,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5899,
											"end": 5925,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5935,
											"end": 6006,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 6003,
											"end": 6004,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5992,
											"end": 6001,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5988,
											"end": 6005,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5979,
											"end": 5985,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5935,
											"end": 6006,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 5935,
											"end": 6006,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5935,
											"end": 6006,
											"name": "tag",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 5935,
											"end": 6006,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6016,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 6084,
											"end": 6086,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6073,
											"end": 6082,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6069,
											"end": 6087,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6060,
											"end": 6066,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6016,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 6016,
											"end": 6088,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6016,
											"end": 6088,
											"name": "tag",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 6016,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5889,
											"end": 6095,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5889,
											"end": 6095,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5889,
											"end": 6095,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5889,
											"end": 6095,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5889,
											"end": 6095,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5889,
											"end": 6095,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6101,
											"end": 6351,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 6101,
											"end": 6351,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6101,
											"end": 6351,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6246,
											"end": 6248,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6235,
											"end": 6244,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6231,
											"end": 6249,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6223,
											"end": 6249,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6223,
											"end": 6249,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6259,
											"end": 6344,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 6341,
											"end": 6342,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6330,
											"end": 6339,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6326,
											"end": 6343,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6317,
											"end": 6323,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6259,
											"end": 6344,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 6259,
											"end": 6344,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6259,
											"end": 6344,
											"name": "tag",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 6259,
											"end": 6344,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6213,
											"end": 6351,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6213,
											"end": 6351,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6213,
											"end": 6351,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6213,
											"end": 6351,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6213,
											"end": 6351,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6357,
											"end": 6776,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 6357,
											"end": 6776,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6357,
											"end": 6776,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6561,
											"end": 6563,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6550,
											"end": 6559,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6546,
											"end": 6564,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6538,
											"end": 6564,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6538,
											"end": 6564,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6619,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6604,
											"end": 6608,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6600,
											"end": 6620,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6596,
											"end": 6597,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6585,
											"end": 6594,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6581,
											"end": 6598,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6574,
											"end": 6621,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6638,
											"end": 6769,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 6764,
											"end": 6768,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6638,
											"end": 6769,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 6638,
											"end": 6769,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6638,
											"end": 6769,
											"name": "tag",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 6638,
											"end": 6769,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6630,
											"end": 6769,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6630,
											"end": 6769,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6528,
											"end": 6776,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6528,
											"end": 6776,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6528,
											"end": 6776,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6528,
											"end": 6776,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6782,
											"end": 7201,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 6782,
											"end": 7201,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6782,
											"end": 7201,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6986,
											"end": 6988,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6975,
											"end": 6984,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6971,
											"end": 6989,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6963,
											"end": 6989,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6963,
											"end": 6989,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7035,
											"end": 7044,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7029,
											"end": 7033,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7025,
											"end": 7045,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7021,
											"end": 7022,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7010,
											"end": 7019,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7006,
											"end": 7023,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6999,
											"end": 7046,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7063,
											"end": 7194,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 7189,
											"end": 7193,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7063,
											"end": 7194,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 7063,
											"end": 7194,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7063,
											"end": 7194,
											"name": "tag",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 7063,
											"end": 7194,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7055,
											"end": 7194,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7055,
											"end": 7194,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6953,
											"end": 7201,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6953,
											"end": 7201,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6953,
											"end": 7201,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6953,
											"end": 7201,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7207,
											"end": 7626,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 7207,
											"end": 7626,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7207,
											"end": 7626,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7411,
											"end": 7413,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7400,
											"end": 7409,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7396,
											"end": 7414,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7388,
											"end": 7414,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7388,
											"end": 7414,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7460,
											"end": 7469,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7454,
											"end": 7458,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7450,
											"end": 7470,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7446,
											"end": 7447,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7435,
											"end": 7444,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7431,
											"end": 7448,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7424,
											"end": 7471,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7488,
											"end": 7619,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 7614,
											"end": 7618,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7488,
											"end": 7619,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 7488,
											"end": 7619,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7488,
											"end": 7619,
											"name": "tag",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 7488,
											"end": 7619,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7480,
											"end": 7619,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7480,
											"end": 7619,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7378,
											"end": 7626,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7378,
											"end": 7626,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7378,
											"end": 7626,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7378,
											"end": 7626,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7632,
											"end": 8051,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 7632,
											"end": 8051,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7632,
											"end": 8051,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7836,
											"end": 7838,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7825,
											"end": 7834,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7821,
											"end": 7839,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7813,
											"end": 7839,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7813,
											"end": 7839,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7885,
											"end": 7894,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7879,
											"end": 7883,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7875,
											"end": 7895,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7871,
											"end": 7872,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7860,
											"end": 7869,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7856,
											"end": 7873,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7849,
											"end": 7896,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7913,
											"end": 8044,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 8039,
											"end": 8043,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7913,
											"end": 8044,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 7913,
											"end": 8044,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7913,
											"end": 8044,
											"name": "tag",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 7913,
											"end": 8044,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7905,
											"end": 8044,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7905,
											"end": 8044,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7803,
											"end": 8051,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7803,
											"end": 8051,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7803,
											"end": 8051,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7803,
											"end": 8051,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8057,
											"end": 8476,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 8057,
											"end": 8476,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8057,
											"end": 8476,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8261,
											"end": 8263,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8250,
											"end": 8259,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8246,
											"end": 8264,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8238,
											"end": 8264,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8238,
											"end": 8264,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8310,
											"end": 8319,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8304,
											"end": 8308,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8300,
											"end": 8320,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8296,
											"end": 8297,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8285,
											"end": 8294,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8281,
											"end": 8298,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8274,
											"end": 8321,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8338,
											"end": 8469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 8464,
											"end": 8468,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8338,
											"end": 8469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 8338,
											"end": 8469,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8338,
											"end": 8469,
											"name": "tag",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 8338,
											"end": 8469,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8330,
											"end": 8469,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8330,
											"end": 8469,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8228,
											"end": 8476,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8228,
											"end": 8476,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8228,
											"end": 8476,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8228,
											"end": 8476,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8482,
											"end": 8901,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 8482,
											"end": 8901,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8482,
											"end": 8901,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8686,
											"end": 8688,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8675,
											"end": 8684,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8671,
											"end": 8689,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8663,
											"end": 8689,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8663,
											"end": 8689,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8735,
											"end": 8744,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8729,
											"end": 8733,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8725,
											"end": 8745,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8721,
											"end": 8722,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8710,
											"end": 8719,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8706,
											"end": 8723,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8699,
											"end": 8746,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8763,
											"end": 8894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 8889,
											"end": 8893,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8763,
											"end": 8894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 8763,
											"end": 8894,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8763,
											"end": 8894,
											"name": "tag",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 8763,
											"end": 8894,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8755,
											"end": 8894,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8755,
											"end": 8894,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8653,
											"end": 8901,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8653,
											"end": 8901,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8653,
											"end": 8901,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8653,
											"end": 8901,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8907,
											"end": 9326,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 8907,
											"end": 9326,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8907,
											"end": 9326,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9111,
											"end": 9113,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9100,
											"end": 9109,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9096,
											"end": 9114,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9088,
											"end": 9114,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9088,
											"end": 9114,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9160,
											"end": 9169,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9154,
											"end": 9158,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9150,
											"end": 9170,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9146,
											"end": 9147,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9135,
											"end": 9144,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9131,
											"end": 9148,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9124,
											"end": 9171,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9188,
											"end": 9319,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 9314,
											"end": 9318,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9188,
											"end": 9319,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 9188,
											"end": 9319,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9188,
											"end": 9319,
											"name": "tag",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 9188,
											"end": 9319,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9180,
											"end": 9319,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9180,
											"end": 9319,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9078,
											"end": 9326,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9078,
											"end": 9326,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9078,
											"end": 9326,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9078,
											"end": 9326,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9332,
											"end": 9751,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 9332,
											"end": 9751,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9332,
											"end": 9751,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9536,
											"end": 9538,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9525,
											"end": 9534,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9521,
											"end": 9539,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9513,
											"end": 9539,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9513,
											"end": 9539,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9585,
											"end": 9594,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9579,
											"end": 9583,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9575,
											"end": 9595,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9571,
											"end": 9572,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9560,
											"end": 9569,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9556,
											"end": 9573,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9549,
											"end": 9596,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9613,
											"end": 9744,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 9739,
											"end": 9743,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9613,
											"end": 9744,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 9613,
											"end": 9744,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9613,
											"end": 9744,
											"name": "tag",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 9613,
											"end": 9744,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9605,
											"end": 9744,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9605,
											"end": 9744,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9503,
											"end": 9751,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9503,
											"end": 9751,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9503,
											"end": 9751,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9503,
											"end": 9751,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9757,
											"end": 9979,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 9757,
											"end": 9979,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9757,
											"end": 9979,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9888,
											"end": 9890,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9877,
											"end": 9886,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9873,
											"end": 9891,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9865,
											"end": 9891,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9865,
											"end": 9891,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9901,
											"end": 9972,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 9969,
											"end": 9970,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9958,
											"end": 9967,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9954,
											"end": 9971,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9945,
											"end": 9951,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9901,
											"end": 9972,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 9901,
											"end": 9972,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9901,
											"end": 9972,
											"name": "tag",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 9901,
											"end": 9972,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9855,
											"end": 9979,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9855,
											"end": 9979,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9855,
											"end": 9979,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9855,
											"end": 9979,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9855,
											"end": 9979,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9985,
											"end": 10154,
											"name": "tag",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 9985,
											"end": 10154,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9985,
											"end": 10154,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10109,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10098,
											"end": 10101,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10091,
											"end": 10110,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10143,
											"end": 10147,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10138,
											"end": 10141,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10134,
											"end": 10148,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10119,
											"end": 10148,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10119,
											"end": 10148,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10081,
											"end": 10154,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10081,
											"end": 10154,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10081,
											"end": 10154,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10081,
											"end": 10154,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10081,
											"end": 10154,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10160,
											"end": 10465,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 10160,
											"end": 10465,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10160,
											"end": 10465,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10219,
											"end": 10239,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 10237,
											"end": 10238,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10219,
											"end": 10239,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 10219,
											"end": 10239,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10219,
											"end": 10239,
											"name": "tag",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 10219,
											"end": 10239,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10214,
											"end": 10239,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10214,
											"end": 10239,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10253,
											"end": 10273,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 10271,
											"end": 10272,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10253,
											"end": 10273,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 10253,
											"end": 10273,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10253,
											"end": 10273,
											"name": "tag",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 10253,
											"end": 10273,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10248,
											"end": 10273,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10248,
											"end": 10273,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10407,
											"end": 10408,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10339,
											"end": 10405,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10335,
											"end": 10409,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10332,
											"end": 10333,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10329,
											"end": 10410,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 10326,
											"end": 10328,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10326,
											"end": 10328,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 10326,
											"end": 10328,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10413,
											"end": 10431,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 10413,
											"end": 10431,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 10413,
											"end": 10431,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10413,
											"end": 10431,
											"name": "tag",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 10413,
											"end": 10431,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10326,
											"end": 10328,
											"name": "tag",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 10326,
											"end": 10328,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10457,
											"end": 10458,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10454,
											"end": 10455,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10450,
											"end": 10459,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10443,
											"end": 10459,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10443,
											"end": 10459,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10204,
											"end": 10465,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10204,
											"end": 10465,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10204,
											"end": 10465,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10204,
											"end": 10465,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10204,
											"end": 10465,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10471,
											"end": 10656,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 10471,
											"end": 10656,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10471,
											"end": 10656,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10528,
											"end": 10548,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "331"
										},
										{
											"begin": 10546,
											"end": 10547,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10528,
											"end": 10548,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 10528,
											"end": 10548,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10528,
											"end": 10548,
											"name": "tag",
											"source": 6,
											"value": "331"
										},
										{
											"begin": 10528,
											"end": 10548,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10523,
											"end": 10548,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10523,
											"end": 10548,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10562,
											"end": 10582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 10580,
											"end": 10581,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10562,
											"end": 10582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 10562,
											"end": 10582,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10562,
											"end": 10582,
											"name": "tag",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 10562,
											"end": 10582,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10557,
											"end": 10582,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10557,
											"end": 10582,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10601,
											"end": 10602,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10591,
											"end": 10593,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 10591,
											"end": 10593,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10606,
											"end": 10624,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 10606,
											"end": 10624,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 10606,
											"end": 10624,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10606,
											"end": 10624,
											"name": "tag",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 10606,
											"end": 10624,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10591,
											"end": 10593,
											"name": "tag",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 10591,
											"end": 10593,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10648,
											"end": 10649,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10645,
											"end": 10646,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10641,
											"end": 10650,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 10636,
											"end": 10650,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10636,
											"end": 10650,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10513,
											"end": 10656,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10513,
											"end": 10656,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10513,
											"end": 10656,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10513,
											"end": 10656,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10513,
											"end": 10656,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10662,
											"end": 11010,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 10662,
											"end": 11010,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10662,
											"end": 11010,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10725,
											"end": 10745,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 10743,
											"end": 10744,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10725,
											"end": 10745,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 10725,
											"end": 10745,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10725,
											"end": 10745,
											"name": "tag",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 10725,
											"end": 10745,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10720,
											"end": 10745,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10720,
											"end": 10745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10759,
											"end": 10779,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 10777,
											"end": 10778,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10759,
											"end": 10779,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 10759,
											"end": 10779,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10759,
											"end": 10779,
											"name": "tag",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 10759,
											"end": 10779,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10754,
											"end": 10779,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10754,
											"end": 10779,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10947,
											"end": 10948,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10879,
											"end": 10945,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10875,
											"end": 10949,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 10872,
											"end": 10873,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10869,
											"end": 10950,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 10864,
											"end": 10865,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10857,
											"end": 10866,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10850,
											"end": 10867,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10846,
											"end": 10951,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10843,
											"end": 10845,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10843,
											"end": 10845,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 10843,
											"end": 10845,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10954,
											"end": 10972,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 10954,
											"end": 10972,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 10954,
											"end": 10972,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10954,
											"end": 10972,
											"name": "tag",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 10954,
											"end": 10972,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10843,
											"end": 10845,
											"name": "tag",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 10843,
											"end": 10845,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11002,
											"end": 11003,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10999,
											"end": 11000,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10995,
											"end": 11004,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 10984,
											"end": 11004,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10984,
											"end": 11004,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10710,
											"end": 11010,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10710,
											"end": 11010,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10710,
											"end": 11010,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10710,
											"end": 11010,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10710,
											"end": 11010,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 11016,
											"end": 11207,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 11016,
											"end": 11207,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11016,
											"end": 11207,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11076,
											"end": 11096,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 11094,
											"end": 11095,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11076,
											"end": 11096,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 11076,
											"end": 11096,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11076,
											"end": 11096,
											"name": "tag",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 11076,
											"end": 11096,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11071,
											"end": 11096,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11071,
											"end": 11096,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11110,
											"end": 11130,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 11128,
											"end": 11129,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11110,
											"end": 11130,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 11110,
											"end": 11130,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11110,
											"end": 11130,
											"name": "tag",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 11110,
											"end": 11130,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11105,
											"end": 11130,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11105,
											"end": 11130,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11149,
											"end": 11150,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11146,
											"end": 11147,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11143,
											"end": 11151,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 11140,
											"end": 11142,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11140,
											"end": 11142,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "344"
										},
										{
											"begin": 11140,
											"end": 11142,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11154,
											"end": 11172,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 11154,
											"end": 11172,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 11154,
											"end": 11172,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11154,
											"end": 11172,
											"name": "tag",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 11154,
											"end": 11172,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11140,
											"end": 11142,
											"name": "tag",
											"source": 6,
											"value": "344"
										},
										{
											"begin": 11140,
											"end": 11142,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11199,
											"end": 11200,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11196,
											"end": 11197,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11192,
											"end": 11201,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11184,
											"end": 11201,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11184,
											"end": 11201,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11061,
											"end": 11207,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11061,
											"end": 11207,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11061,
											"end": 11207,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11061,
											"end": 11207,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11061,
											"end": 11207,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 11213,
											"end": 11309,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 11213,
											"end": 11309,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11213,
											"end": 11309,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11279,
											"end": 11303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "347"
										},
										{
											"begin": 11297,
											"end": 11302,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11279,
											"end": 11303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "348"
										},
										{
											"begin": 11279,
											"end": 11303,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11279,
											"end": 11303,
											"name": "tag",
											"source": 6,
											"value": "347"
										},
										{
											"begin": 11279,
											"end": 11303,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11268,
											"end": 11303,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11268,
											"end": 11303,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11258,
											"end": 11309,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11258,
											"end": 11309,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11258,
											"end": 11309,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11258,
											"end": 11309,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 11315,
											"end": 11405,
											"name": "tag",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 11315,
											"end": 11405,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11315,
											"end": 11405,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11392,
											"end": 11397,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11385,
											"end": 11398,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11378,
											"end": 11399,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11367,
											"end": 11399,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11367,
											"end": 11399,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11357,
											"end": 11405,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11357,
											"end": 11405,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11357,
											"end": 11405,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11357,
											"end": 11405,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 11411,
											"end": 11537,
											"name": "tag",
											"source": 6,
											"value": "348"
										},
										{
											"begin": 11411,
											"end": 11537,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11411,
											"end": 11537,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11488,
											"end": 11530,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11481,
											"end": 11486,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11477,
											"end": 11531,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11466,
											"end": 11531,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11466,
											"end": 11531,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11456,
											"end": 11537,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11456,
											"end": 11537,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11456,
											"end": 11537,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11456,
											"end": 11537,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 11543,
											"end": 11620,
											"name": "tag",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 11543,
											"end": 11620,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11543,
											"end": 11620,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11609,
											"end": 11614,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11598,
											"end": 11614,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11598,
											"end": 11614,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11588,
											"end": 11620,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11588,
											"end": 11620,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11588,
											"end": 11620,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11588,
											"end": 11620,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 11626,
											"end": 11780,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 11626,
											"end": 11780,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11626,
											"end": 11780,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11723,
											"end": 11774,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "354"
										},
										{
											"begin": 11768,
											"end": 11773,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11723,
											"end": 11774,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 11723,
											"end": 11774,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11723,
											"end": 11774,
											"name": "tag",
											"source": 6,
											"value": "354"
										},
										{
											"begin": 11723,
											"end": 11774,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11710,
											"end": 11774,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11710,
											"end": 11774,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11700,
											"end": 11780,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11700,
											"end": 11780,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11700,
											"end": 11780,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11700,
											"end": 11780,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 11786,
											"end": 11913,
											"name": "tag",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 11786,
											"end": 11913,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11786,
											"end": 11913,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11883,
											"end": 11907,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "357"
										},
										{
											"begin": 11901,
											"end": 11906,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11883,
											"end": 11907,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "348"
										},
										{
											"begin": 11883,
											"end": 11907,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11883,
											"end": 11907,
											"name": "tag",
											"source": 6,
											"value": "357"
										},
										{
											"begin": 11883,
											"end": 11907,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11870,
											"end": 11907,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11870,
											"end": 11907,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11860,
											"end": 11913,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11860,
											"end": 11913,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11860,
											"end": 11913,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11860,
											"end": 11913,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 11919,
											"end": 12099,
											"name": "tag",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 11919,
											"end": 12099,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11967,
											"end": 12044,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11964,
											"end": 11965,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11957,
											"end": 12045,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12064,
											"end": 12068,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 12061,
											"end": 12062,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 12054,
											"end": 12069,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12088,
											"end": 12092,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 12085,
											"end": 12086,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12078,
											"end": 12093,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 12105,
											"end": 12285,
											"name": "tag",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 12105,
											"end": 12285,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12153,
											"end": 12230,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12150,
											"end": 12151,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12143,
											"end": 12231,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12250,
											"end": 12254,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 12247,
											"end": 12248,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 12240,
											"end": 12255,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12274,
											"end": 12278,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 12271,
											"end": 12272,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12264,
											"end": 12279,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 12291,
											"end": 12463,
											"name": "tag",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 12291,
											"end": 12463,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12431,
											"end": 12455,
											"name": "PUSH",
											"source": 6,
											"value": "4164647265737320776173206E6F74207374616B656400000000000000000000"
										},
										{
											"begin": 12427,
											"end": 12428,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12419,
											"end": 12425,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12415,
											"end": 12429,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12408,
											"end": 12456,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12397,
											"end": 12463,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12397,
											"end": 12463,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 12469,
											"end": 12625,
											"name": "tag",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 12469,
											"end": 12625,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12609,
											"end": 12617,
											"name": "PUSH",
											"source": 6,
											"value": "4C6F636B65640000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12605,
											"end": 12606,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12597,
											"end": 12603,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12593,
											"end": 12607,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12586,
											"end": 12618,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12575,
											"end": 12625,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12575,
											"end": 12625,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 12631,
											"end": 12856,
											"name": "tag",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 12631,
											"end": 12856,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12771,
											"end": 12805,
											"name": "PUSH",
											"source": 6,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 12767,
											"end": 12768,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12759,
											"end": 12765,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12755,
											"end": 12769,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12748,
											"end": 12806,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12840,
											"end": 12848,
											"name": "PUSH",
											"source": 6,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12835,
											"end": 12837,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12827,
											"end": 12833,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12823,
											"end": 12838,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12816,
											"end": 12849,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12737,
											"end": 12856,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12737,
											"end": 12856,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 12862,
											"end": 13027,
											"name": "tag",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 12862,
											"end": 13027,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13002,
											"end": 13019,
											"name": "PUSH",
											"source": 6,
											"value": "5472616E73666572206661696C65640000000000000000000000000000000000"
										},
										{
											"begin": 12998,
											"end": 12999,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12990,
											"end": 12996,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12986,
											"end": 13000,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12979,
											"end": 13020,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12968,
											"end": 13027,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12968,
											"end": 13027,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 13033,
											"end": 13203,
											"name": "tag",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 13033,
											"end": 13203,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13173,
											"end": 13195,
											"name": "PUSH",
											"source": 6,
											"value": "496E73756666696369656E742062616C616E6365000000000000000000000000"
										},
										{
											"begin": 13169,
											"end": 13170,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13161,
											"end": 13167,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13157,
											"end": 13171,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13150,
											"end": 13196,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13139,
											"end": 13203,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13139,
											"end": 13203,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 13209,
											"end": 13390,
											"name": "tag",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 13209,
											"end": 13390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13349,
											"end": 13382,
											"name": "PUSH",
											"source": 6,
											"value": "416D6F756E742073686F756C642067726561746572207468616E207A65726F00"
										},
										{
											"begin": 13345,
											"end": 13346,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13337,
											"end": 13343,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13333,
											"end": 13347,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13326,
											"end": 13383,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13315,
											"end": 13390,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13315,
											"end": 13390,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 13396,
											"end": 13578,
											"name": "tag",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 13396,
											"end": 13578,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13536,
											"end": 13570,
											"name": "PUSH",
											"source": 6,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 13532,
											"end": 13533,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13524,
											"end": 13530,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13520,
											"end": 13534,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13513,
											"end": 13571,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13502,
											"end": 13578,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13502,
											"end": 13578,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 13584,
											"end": 13765,
											"name": "tag",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 13584,
											"end": 13765,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13724,
											"end": 13757,
											"name": "PUSH",
											"source": 6,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 13720,
											"end": 13721,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13712,
											"end": 13718,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13708,
											"end": 13722,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13701,
											"end": 13758,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13690,
											"end": 13765,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13690,
											"end": 13765,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 13771,
											"end": 13893,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 13771,
											"end": 13893,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13844,
											"end": 13868,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "369"
										},
										{
											"begin": 13862,
											"end": 13867,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13844,
											"end": 13868,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 13844,
											"end": 13868,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 13844,
											"end": 13868,
											"name": "tag",
											"source": 6,
											"value": "369"
										},
										{
											"begin": 13844,
											"end": 13868,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13837,
											"end": 13842,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13834,
											"end": 13869,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 13824,
											"end": 13826,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "370"
										},
										{
											"begin": 13824,
											"end": 13826,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13883,
											"end": 13884,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13880,
											"end": 13881,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13873,
											"end": 13885,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 13824,
											"end": 13826,
											"name": "tag",
											"source": 6,
											"value": "370"
										},
										{
											"begin": 13824,
											"end": 13826,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13814,
											"end": 13893,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13814,
											"end": 13893,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 13899,
											"end": 14015,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 13899,
											"end": 14015,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13969,
											"end": 13990,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "372"
										},
										{
											"begin": 13984,
											"end": 13989,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13969,
											"end": 13990,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 13969,
											"end": 13990,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 13969,
											"end": 13990,
											"name": "tag",
											"source": 6,
											"value": "372"
										},
										{
											"begin": 13969,
											"end": 13990,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13962,
											"end": 13967,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13959,
											"end": 13991,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 13949,
											"end": 13951,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "373"
										},
										{
											"begin": 13949,
											"end": 13951,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 14005,
											"end": 14006,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14002,
											"end": 14003,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13995,
											"end": 14007,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 13949,
											"end": 13951,
											"name": "tag",
											"source": 6,
											"value": "373"
										},
										{
											"begin": 13949,
											"end": 13951,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13939,
											"end": 14015,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13939,
											"end": 14015,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 14021,
											"end": 14143,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 14021,
											"end": 14143,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14094,
											"end": 14118,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "375"
										},
										{
											"begin": 14112,
											"end": 14117,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14094,
											"end": 14118,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 14094,
											"end": 14118,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 14094,
											"end": 14118,
											"name": "tag",
											"source": 6,
											"value": "375"
										},
										{
											"begin": 14094,
											"end": 14118,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14087,
											"end": 14092,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14084,
											"end": 14119,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 14074,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "376"
										},
										{
											"begin": 14074,
											"end": 14076,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 14133,
											"end": 14134,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14130,
											"end": 14131,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 14123,
											"end": 14135,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 14074,
											"end": 14076,
											"name": "tag",
											"source": 6,
											"value": "376"
										},
										{
											"begin": 14074,
											"end": 14076,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14064,
											"end": 14143,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14064,
											"end": 14143,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getReward()": "3d18b912",
							"getRewardForUser(address)": "ef790a82",
							"lockupPeriod()": "ee947a7c",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"rewardRateInit()": "154a78b5",
							"rewardToken()": "f7c618c1",
							"setRewardRateInit(uint256)": "fc71ae8c",
							"setRewardToken(address)": "8aee8127",
							"setStakingStartTime(uint256)": "5d90bad9",
							"stake(uint256)": "a694fc3a",
							"stakingBalance(address)": "45bc78ab",
							"stakingReward(address)": "1683153d",
							"stakingStartTime()": "6abfd183",
							"stakingTime(address)": "583d42fd",
							"token()": "fc0c546a",
							"totalReward()": "750142e6",
							"totalStaked()": "817b1cd2",
							"transferOwnership(address)": "f2fde38b",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rewardRateInit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_lockupPeriod\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ClaimReward\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Stake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"UnStake\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getRewardForUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockupPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardRateInit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardRateInit\",\"type\":\"uint256\"}],\"name\":\"setRewardRateInit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardToken\",\"type\":\"address\"}],\"name\":\"setRewardToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_stakingStartTime\",\"type\":\"uint256\"}],\"name\":\"setStakingStartTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakingBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakingReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakingTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"StakingWithRewards1.sol\":\"Staking\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"StakingWithRewards1.sol\":{\"keccak256\":\"0xc037544e46ec57e7ac02a3a17e723e225283df51060e01139f557415cb433fa3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96b8a002e85bab26f613f06eca2dda17a2342ed442aac69bced54d0d35219e7d\",\"dweb:/ipfs/QmRRaTxDbd7i8WGbnietNPxYyLXLHZAdhse7j1ZWPouSEu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "StakingWithRewards1.sol:Staking",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 123,
								"contract": "StakingWithRewards1.sol:Staking",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 591,
								"contract": "StakingWithRewards1.sol:Staking",
								"label": "token",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)244"
							},
							{
								"astId": 594,
								"contract": "StakingWithRewards1.sol:Staking",
								"label": "rewardToken",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(IERC20)244"
							},
							{
								"astId": 596,
								"contract": "StakingWithRewards1.sol:Staking",
								"label": "rewardRateInit",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 598,
								"contract": "StakingWithRewards1.sol:Staking",
								"label": "lockupPeriod",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 600,
								"contract": "StakingWithRewards1.sol:Staking",
								"label": "stakingStartTime",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 604,
								"contract": "StakingWithRewards1.sol:Staking",
								"label": "stakingBalance",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 608,
								"contract": "StakingWithRewards1.sol:Staking",
								"label": "stakingTime",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 612,
								"contract": "StakingWithRewards1.sol:Staking",
								"label": "stakingReward",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)244": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							266
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 267,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 266,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"contractDependencies": [
								266
							],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								266
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 256,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 256,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0"
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							166
						]
					},
					"id": 167,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:1",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 166,
							"linearizedBaseContracts": [
								166
							],
							"name": "ReentrancyGuard",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 118,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nodeType": "VariableDeclaration",
									"scope": 166,
									"src": "1676:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 116,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 117,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 121,
									"mutability": "constant",
									"name": "_ENTERED",
									"nodeType": "VariableDeclaration",
									"scope": 166,
									"src": "1723:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 119,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 120,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 123,
									"mutability": "mutable",
									"name": "_status",
									"nodeType": "VariableDeclaration",
									"scope": 166,
									"src": "1767:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 122,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "1811:39:1",
										"statements": [
											{
												"expression": {
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 126,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "1821:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 127,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "1831:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 129,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:1"
											}
										]
									},
									"id": 131,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:1"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:1"
									},
									"scope": 166,
									"src": "1797:53:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 141,
										"nodeType": "Block",
										"src": "2251:79:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 134,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 157,
														"src": "2261:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 136,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:1"
											},
											{
												"id": 137,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:1"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 138,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2303:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:1"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:1",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 142,
									"name": "nonReentrant",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:1"
									},
									"src": "2227:103:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 156,
										"nodeType": "Block",
										"src": "2375:248:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 146,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 123,
																"src": "2468:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 147,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 121,
																"src": "2479:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 149,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 145,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 151,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:1"
											},
											{
												"expression": {
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 152,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2598:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 153,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "2608:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 155,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:1"
											}
										]
									},
									"id": 157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:1"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:1"
									},
									"scope": 166,
									"src": "2336:287:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 164,
										"nodeType": "Block",
										"src": "2667:171:1",
										"statements": [
											{
												"expression": {
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 160,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2809:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 161,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "2819:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 163,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:1"
											}
										]
									},
									"id": 165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:1"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:1"
									},
									"scope": 166,
									"src": "2629:209:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 167,
							"src": "888:1952:1"
						}
					],
					"src": "112:2729:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							244
						]
					},
					"id": 245,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 168,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 169,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 244,
							"linearizedBaseContracts": [
								244
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 178,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "403:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "425:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "445:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:2"
									},
									"src": "388:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 187,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "634:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "657:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "682:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:2"
									},
									"src": "619:78:2"
								},
								{
									"documentation": {
										"id": 188,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 193,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 244,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 194,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 201,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 244,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 211,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1211:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1223:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:2"
									},
									"returnParameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1257:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 208,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:2"
									},
									"scope": 244,
									"src": "1193:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 221,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "1557:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "1572:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:2"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "1612:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:2"
									},
									"scope": 244,
									"src": "1538:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 231,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2291:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2308:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:2"
									},
									"returnParameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2342:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 228,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:2"
									},
									"scope": 244,
									"src": "2274:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:2",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 243,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "2677:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "2699:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "2719:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:2"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "2758:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 240,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:2"
									},
									"scope": 244,
									"src": "2646:118:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 245,
							"src": "202:2564:2"
						}
					],
					"src": "106:2661:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							266
						]
					},
					"id": 267,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 246,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 247,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 266,
							"linearizedBaseContracts": [
								266
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "702:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 252,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 251,
												"id": 254,
												"nodeType": "Return",
												"src": "712:17:3"
											}
										]
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:3"
									},
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "693:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:3"
									},
									"scope": 266,
									"src": "640:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 264,
										"nodeType": "Block",
										"src": "809:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 261,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 260,
												"id": 263,
												"nodeType": "Return",
												"src": "819:15:3"
											}
										]
									},
									"id": 265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:3"
									},
									"returnParameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "793:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 258,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:3"
									},
									"scope": 266,
									"src": "742:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 267,
							"src": "608:235:3"
						}
					],
					"src": "86:758:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							578
						]
					},
					"id": 579,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 268,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 269,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:4",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 578,
							"linearizedBaseContracts": [
								578
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "717:140:4",
										"statements": [
											{
												"id": 299,
												"nodeType": "UncheckedBlock",
												"src": "727:124:4",
												"statements": [
													{
														"assignments": [
															282
														],
														"declarations": [
															{
																"constant": false,
																"id": 282,
																"mutability": "mutable",
																"name": "c",
																"nodeType": "VariableDeclaration",
																"scope": 299,
																"src": "751:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 281,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 286,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 283,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "763:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 284,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 274,
																"src": "767:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 289,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 287,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 282,
																"src": "786:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 288,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "790:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 294,
														"nodeType": "IfStatement",
														"src": "782:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 290,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 291,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 292,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 280,
															"id": 293,
															"nodeType": "Return",
															"src": "793:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 295,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 296,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 282,
																	"src": "838:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 297,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 280,
														"id": 298,
														"nodeType": "Return",
														"src": "824:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 270,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:4",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "657:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "668:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:4"
									},
									"returnParameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "702:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 276,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "708:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:4"
									},
									"scope": 578,
									"src": "641:216:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 328,
										"nodeType": "Block",
										"src": "1078:113:4",
										"statements": [
											{
												"id": 327,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 315,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 313,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "1116:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 314,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 304,
																"src": "1120:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 320,
														"nodeType": "IfStatement",
														"src": "1112:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 316,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 317,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 318,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 312,
															"id": 319,
															"nodeType": "Return",
															"src": "1123:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 321,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 324,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 322,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 304,
																		"src": "1168:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 323,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 306,
																		"src": "1172:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 325,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 312,
														"id": 326,
														"nodeType": "Return",
														"src": "1154:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 302,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:4",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "1018:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "1029:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:4"
									},
									"returnParameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "1063:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 308,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "1069:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:4"
									},
									"scope": 578,
									"src": "1002:189:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 370,
										"nodeType": "Block",
										"src": "1415:417:4",
										"statements": [
											{
												"id": 369,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 341,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 332,
																"src": "1683:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 342,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 348,
														"nodeType": "IfStatement",
														"src": "1679:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 344,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 345,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 346,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 340,
															"id": 347,
															"nodeType": "Return",
															"src": "1691:16:4"
														}
													},
													{
														"assignments": [
															350
														],
														"declarations": [
															{
																"constant": false,
																"id": 350,
																"mutability": "mutable",
																"name": "c",
																"nodeType": "VariableDeclaration",
																"scope": 369,
																"src": "1721:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 349,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 354,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 351,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 332,
																"src": "1733:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 352,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 334,
																"src": "1737:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 357,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 355,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 350,
																	"src": "1756:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 356,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 332,
																	"src": "1760:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 358,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 334,
																"src": "1765:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 364,
														"nodeType": "IfStatement",
														"src": "1752:33:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 360,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 361,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 362,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 340,
															"id": 363,
															"nodeType": "Return",
															"src": "1768:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 366,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 350,
																	"src": "1813:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 367,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 340,
														"id": 368,
														"nodeType": "Return",
														"src": "1799:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:4",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 371,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "1355:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "1366:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:4"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "1400:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 336,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "1406:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:4"
									},
									"scope": 578,
									"src": "1339:493:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 398,
										"nodeType": "Block",
										"src": "2057:114:4",
										"statements": [
											{
												"id": 397,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 383,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 376,
																"src": "2095:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 384,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 390,
														"nodeType": "IfStatement",
														"src": "2091:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 386,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 388,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 382,
															"id": 389,
															"nodeType": "Return",
															"src": "2103:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 392,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 374,
																		"src": "2148:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 393,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 376,
																		"src": "2152:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 395,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 382,
														"id": 396,
														"nodeType": "Return",
														"src": "2134:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 372,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:4",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "1997:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "2008:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:4"
									},
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "2042:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 378,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "2048:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:4"
									},
									"scope": 578,
									"src": "1981:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "2406:114:4",
										"statements": [
											{
												"id": 425,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 411,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 404,
																"src": "2444:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 412,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 418,
														"nodeType": "IfStatement",
														"src": "2440:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 414,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 415,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 416,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 410,
															"id": 417,
															"nodeType": "Return",
															"src": "2452:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 419,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 422,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 420,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 402,
																		"src": "2497:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 421,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 404,
																		"src": "2501:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 423,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 410,
														"id": 424,
														"nodeType": "Return",
														"src": "2483:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "2346:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "2357:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:4"
									},
									"returnParameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "2391:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 406,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "2397:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:4"
									},
									"scope": 578,
									"src": "2330:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "2822:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 437,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 430,
														"src": "2839:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 438,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 432,
														"src": "2843:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 436,
												"id": 440,
												"nodeType": "Return",
												"src": "2832:12:4"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:4",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2768:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2779:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:4"
									},
									"returnParameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2813:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:4"
									},
									"scope": 578,
									"src": "2755:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 456,
										"nodeType": "Block",
										"src": "3189:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 452,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "3206:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 453,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "3210:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 451,
												"id": 455,
												"nodeType": "Return",
												"src": "3199:12:4"
											}
										]
									},
									"documentation": {
										"id": 443,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 457,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "3135:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "3146:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:4"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "3180:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:4"
									},
									"scope": 578,
									"src": "3122:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 471,
										"nodeType": "Block",
										"src": "3532:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 467,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 460,
														"src": "3549:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 468,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 462,
														"src": "3553:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 466,
												"id": 470,
												"nodeType": "Return",
												"src": "3542:12:4"
											}
										]
									},
									"documentation": {
										"id": 458,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:4",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 472,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "3478:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "3489:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:4"
									},
									"returnParameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "3523:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:4"
									},
									"scope": 578,
									"src": "3465:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 486,
										"nodeType": "Block",
										"src": "3917:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 482,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 475,
														"src": "3934:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 483,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 477,
														"src": "3938:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 481,
												"id": 485,
												"nodeType": "Return",
												"src": "3927:12:4"
											}
										]
									},
									"documentation": {
										"id": 473,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:4",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 487,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "3863:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "3874:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:4"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "3908:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:4"
									},
									"scope": 578,
									"src": "3850:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 501,
										"nodeType": "Block",
										"src": "4466:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 497,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 490,
														"src": "4483:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 498,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 492,
														"src": "4487:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 496,
												"id": 500,
												"nodeType": "Return",
												"src": "4476:12:4"
											}
										]
									},
									"documentation": {
										"id": 488,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 502,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "4412:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "4423:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:4"
									},
									"returnParameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "4457:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 494,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:4"
									},
									"scope": 578,
									"src": "4399:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 526,
										"nodeType": "Block",
										"src": "5084:106:4",
										"statements": [
											{
												"id": 525,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 515,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 507,
																		"src": "5126:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 516,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 505,
																		"src": "5131:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 518,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 509,
																	"src": "5134:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 514,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 520,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 521,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 505,
																"src": "5168:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 522,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 507,
																"src": "5172:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 513,
														"id": 524,
														"nodeType": "Return",
														"src": "5161:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 527,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "4981:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "5000:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "5019:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 508,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:4"
									},
									"returnParameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "5075:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:4"
									},
									"scope": 578,
									"src": "4959:231:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 551,
										"nodeType": "Block",
										"src": "5799:105:4",
										"statements": [
											{
												"id": 550,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 540,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 532,
																		"src": "5841:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 541,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 543,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 534,
																	"src": "5848:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 539,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 545,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 548,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 546,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 530,
																"src": "5882:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 547,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 532,
																"src": "5886:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 538,
														"id": 549,
														"nodeType": "Return",
														"src": "5875:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 528,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:4",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 552,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "5696:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "5715:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "5734:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 533,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:4"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "5790:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:4"
									},
									"scope": 578,
									"src": "5674:230:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 576,
										"nodeType": "Block",
										"src": "6675:105:4",
										"statements": [
											{
												"id": 575,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 567,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 565,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 557,
																		"src": "6717:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 566,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 568,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 559,
																	"src": "6724:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 564,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 570,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 571,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 555,
																"src": "6758:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 572,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 557,
																"src": "6762:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 563,
														"id": 574,
														"nodeType": "Return",
														"src": "6751:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 553,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 577,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "6572:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "6591:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 556,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "6610:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 558,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:4"
									},
									"returnParameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "6666:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:4"
									},
									"scope": 578,
									"src": "6550:230:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 579,
							"src": "482:6300:4"
						}
					],
					"src": "107:6676:4"
				},
				"id": 4
			},
			"StakingWithRewards1.sol": {
				"ast": {
					"absolutePath": "StakingWithRewards1.sol",
					"exportedSymbols": {
						"Context": [
							266
						],
						"IERC20": [
							244
						],
						"Ownable": [
							112
						],
						"ReentrancyGuard": [
							166
						],
						"SafeMath": [
							578
						],
						"Staking": [
							923
						]
					},
					"id": 924,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 580,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 581,
							"nodeType": "ImportDirective",
							"scope": 924,
							"sourceUnit": 245,
							"src": "57:56:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 582,
							"nodeType": "ImportDirective",
							"scope": 924,
							"sourceUnit": 113,
							"src": "114:52:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 583,
							"nodeType": "ImportDirective",
							"scope": 924,
							"sourceUnit": 167,
							"src": "167:62:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 584,
							"nodeType": "ImportDirective",
							"scope": 924,
							"sourceUnit": 579,
							"src": "230:57:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 585,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "309:7:5"
									},
									"id": 586,
									"nodeType": "InheritanceSpecifier",
									"src": "309:7:5"
								},
								{
									"baseName": {
										"id": 587,
										"name": "ReentrancyGuard",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 166,
										"src": "318:15:5"
									},
									"id": 588,
									"nodeType": "InheritanceSpecifier",
									"src": "318:15:5"
								}
							],
							"contractDependencies": [
								112,
								166,
								266
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 923,
							"linearizedBaseContracts": [
								923,
								166,
								112,
								266
							],
							"name": "Staking",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 591,
									"mutability": "mutable",
									"name": "token",
									"nodeType": "VariableDeclaration",
									"scope": 923,
									"src": "340:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$244",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 590,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 589,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 244,
											"src": "340:6:5"
										},
										"referencedDeclaration": 244,
										"src": "340:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$244",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f7c618c1",
									"id": 594,
									"mutability": "mutable",
									"name": "rewardToken",
									"nodeType": "VariableDeclaration",
									"scope": 923,
									"src": "413:26:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$244",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 593,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 592,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 244,
											"src": "413:6:5"
										},
										"referencedDeclaration": 244,
										"src": "413:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$244",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "154a78b5",
									"id": 596,
									"mutability": "mutable",
									"name": "rewardRateInit",
									"nodeType": "VariableDeclaration",
									"scope": 923,
									"src": "493:29:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 595,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "493:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ee947a7c",
									"id": 598,
									"mutability": "mutable",
									"name": "lockupPeriod",
									"nodeType": "VariableDeclaration",
									"scope": 923,
									"src": "602:27:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 597,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "602:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6abfd183",
									"id": 600,
									"mutability": "mutable",
									"name": "stakingStartTime",
									"nodeType": "VariableDeclaration",
									"scope": 923,
									"src": "681:31:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 599,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "681:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "45bc78ab",
									"id": 604,
									"mutability": "mutable",
									"name": "stakingBalance",
									"nodeType": "VariableDeclaration",
									"scope": 923,
									"src": "757:49:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 603,
										"keyType": {
											"id": 601,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "765:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "757:27:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 602,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "776:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "583d42fd",
									"id": 608,
									"mutability": "mutable",
									"name": "stakingTime",
									"nodeType": "VariableDeclaration",
									"scope": 923,
									"src": "850:46:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 607,
										"keyType": {
											"id": 605,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "858:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "850:27:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 606,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "869:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1683153d",
									"id": 612,
									"mutability": "mutable",
									"name": "stakingReward",
									"nodeType": "VariableDeclaration",
									"scope": 923,
									"src": "937:48:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 611,
										"keyType": {
											"id": 609,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "945:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "937:27:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 610,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "956:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 618,
									"name": "Stake",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "1049:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1049:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "1071:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1071:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1048:38:5"
									},
									"src": "1037:50:5"
								},
								{
									"anonymous": false,
									"id": 624,
									"name": "UnStake",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "1106:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 619,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1106:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 622,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "1128:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1128:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1105:38:5"
									},
									"src": "1092:52:5"
								},
								{
									"anonymous": false,
									"id": 630,
									"name": "ClaimReward",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "1167:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1167:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "1189:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1189:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1166:38:5"
									},
									"src": "1149:56:5"
								},
								{
									"body": {
										"id": 666,
										"nodeType": "Block",
										"src": "1309:207:5",
										"statements": [
											{
												"expression": {
													"id": 645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 641,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 591,
														"src": "1319:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$244",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 643,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 632,
																"src": "1334:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 642,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "1327:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$244_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 644,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1327:14:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$244",
															"typeString": "contract IERC20"
														}
													},
													"src": "1319:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$244",
														"typeString": "contract IERC20"
													}
												},
												"id": 646,
												"nodeType": "ExpressionStatement",
												"src": "1319:22:5"
											},
											{
												"expression": {
													"id": 651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 647,
														"name": "rewardToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "1351:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$244",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 649,
																"name": "_rewardToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 634,
																"src": "1372:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 648,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "1365:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$244_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 650,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1365:20:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$244",
															"typeString": "contract IERC20"
														}
													},
													"src": "1351:34:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$244",
														"typeString": "contract IERC20"
													}
												},
												"id": 652,
												"nodeType": "ExpressionStatement",
												"src": "1351:34:5"
											},
											{
												"expression": {
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 653,
														"name": "rewardRateInit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 596,
														"src": "1395:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 654,
														"name": "_rewardRateInit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 636,
														"src": "1412:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1395:32:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 656,
												"nodeType": "ExpressionStatement",
												"src": "1395:32:5"
											},
											{
												"expression": {
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 657,
														"name": "lockupPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "1437:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 658,
														"name": "_lockupPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 638,
														"src": "1452:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1437:28:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 660,
												"nodeType": "ExpressionStatement",
												"src": "1437:28:5"
											},
											{
												"expression": {
													"id": 664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 661,
														"name": "stakingStartTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 600,
														"src": "1475:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 662,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1494:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 663,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1494:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1475:34:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 665,
												"nodeType": "ExpressionStatement",
												"src": "1475:34:5"
											}
										]
									},
									"id": 667,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "_token",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "1223:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "_rewardToken",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "1239:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1239:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "_rewardRateInit",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "1261:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1261:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "_lockupPeriod",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "1286:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1286:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:86:5"
									},
									"returnParameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1309:0:5"
									},
									"scope": 923,
									"src": "1211:305:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 716,
										"nodeType": "Block",
										"src": "1596:303:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 677,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 675,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 669,
																"src": "1614:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 676,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1624:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1614:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e742073686f756c642067726561746572207468616e207a65726f",
															"id": 678,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1627:33:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7e6097df28dbd6e8fac3ec6a9281335c312bc8a436c798b83190edcb63f5401f",
																"typeString": "literal_string \"Amount should greater than zero\""
															},
															"value": "Amount should greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7e6097df28dbd6e8fac3ec6a9281335c312bc8a436c798b83190edcb63f5401f",
																"typeString": "literal_string \"Amount should greater than zero\""
															}
														],
														"id": 674,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1606:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1606:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 680,
												"nodeType": "ExpressionStatement",
												"src": "1606:55:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 684,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1698:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 685,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1698:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 688,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1718:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Staking_$923",
																				"typeString": "contract Staking"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Staking_$923",
																				"typeString": "contract Staking"
																			}
																		],
																		"id": 687,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1710:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 686,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1710:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 689,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1710:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 690,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 669,
																	"src": "1725:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 682,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 591,
																	"src": "1679:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$244",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 683,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 243,
																"src": "1679:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1679:54:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 692,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1735:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 681,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1671:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1671:82:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 694,
												"nodeType": "ExpressionStatement",
												"src": "1671:82:5"
											},
											{
												"expression": {
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 695,
															"name": "stakingBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "1763:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 698,
														"indexExpression": {
															"expression": {
																"id": 696,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1778:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 697,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1778:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1763:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 699,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "1793:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1763:37:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 701,
												"nodeType": "ExpressionStatement",
												"src": "1763:37:5"
											},
											{
												"expression": {
													"id": 708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 702,
															"name": "stakingTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "1810:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 705,
														"indexExpression": {
															"expression": {
																"id": 703,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1822:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1822:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1810:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 706,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1836:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 707,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1836:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1810:41:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 709,
												"nodeType": "ExpressionStatement",
												"src": "1810:41:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 711,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1872:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 712,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1872:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 713,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "1884:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 710,
														"name": "Stake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 618,
														"src": "1866:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1866:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 715,
												"nodeType": "EmitStatement",
												"src": "1861:31:5"
											}
										]
									},
									"functionSelector": "a694fc3a",
									"id": 717,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 672,
											"modifierName": {
												"id": 671,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 142,
												"src": "1583:12:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1583:12:5"
										}
									],
									"name": "stake",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "1557:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:17:5"
									},
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1596:0:5"
									},
									"scope": 923,
									"src": "1542:357:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 768,
										"nodeType": "Block",
										"src": "2009:328:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 731,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 725,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2027:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 726,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2027:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 729,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 727,
																			"name": "stakingStartTime",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 600,
																			"src": "2047:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 728,
																			"name": "lockupPeriod",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 598,
																			"src": "2066:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2047:31:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 730,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2046:33:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2027:52:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c6f636b6564",
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2081:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_10bc01d611f2c803e55ff98d999836f196afae7cf91f96f3b6f511e56ba84974",
																"typeString": "literal_string \"Locked\""
															},
															"value": "Locked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_10bc01d611f2c803e55ff98d999836f196afae7cf91f96f3b6f511e56ba84974",
																"typeString": "literal_string \"Locked\""
															}
														],
														"id": 724,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2019:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2019:71:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 734,
												"nodeType": "ExpressionStatement",
												"src": "2019:71:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 741,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 736,
																	"name": "stakingBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 604,
																	"src": "2108:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 739,
																"indexExpression": {
																	"expression": {
																		"id": 737,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2123:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 738,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2123:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2108:26:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 740,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 719,
																"src": "2136:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2108:35:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 742,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2144:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 735,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2100:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2100:67:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 744,
												"nodeType": "ExpressionStatement",
												"src": "2100:67:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 748,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2200:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 749,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2200:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 750,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 719,
																	"src": "2212:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 746,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 591,
																	"src": "2185:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$244",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 747,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 211,
																"src": "2185:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 751,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2185:35:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 752,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2222:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 745,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2177:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2177:63:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 754,
												"nodeType": "ExpressionStatement",
												"src": "2177:63:5"
											},
											{
												"expression": {
													"id": 760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 755,
															"name": "stakingBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "2250:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 758,
														"indexExpression": {
															"expression": {
																"id": 756,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2265:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 757,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2265:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2250:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 759,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 719,
														"src": "2280:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2250:37:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 761,
												"nodeType": "ExpressionStatement",
												"src": "2250:37:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 763,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2310:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 764,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2310:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 765,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 719,
															"src": "2322:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 762,
														"name": "UnStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 624,
														"src": "2302:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2302:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 767,
												"nodeType": "EmitStatement",
												"src": "2297:33:5"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 769,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 722,
											"modifierName": {
												"id": 721,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 142,
												"src": "1996:12:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1996:12:5"
										}
									],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "1970:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1970:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1969:17:5"
									},
									"returnParameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2009:0:5"
									},
									"scope": 923,
									"src": "1952:385:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 819,
										"nodeType": "Block",
										"src": "2405:349:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 780,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 775,
																	"name": "stakingTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 608,
																	"src": "2423:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 778,
																"indexExpression": {
																	"expression": {
																		"id": 776,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2435:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 777,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2435:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2423:23:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 779,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2447:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2423:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4164647265737320776173206e6f74207374616b6564",
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2449:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_06c91019a93dd15fbeb6eed7cf8a253c16f390d84dd42d722095ff695d0ff1eb",
																"typeString": "literal_string \"Address was not staked\""
															},
															"value": "Address was not staked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_06c91019a93dd15fbeb6eed7cf8a253c16f390d84dd42d722095ff695d0ff1eb",
																"typeString": "literal_string \"Address was not staked\""
															}
														],
														"id": 774,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2415:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2415:59:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 783,
												"nodeType": "ExpressionStatement",
												"src": "2415:59:5"
											},
											{
												"assignments": [
													785
												],
												"declarations": [
													{
														"constant": false,
														"id": 785,
														"mutability": "mutable",
														"name": "reward",
														"nodeType": "VariableDeclaration",
														"scope": 819,
														"src": "2484:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 784,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2484:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 790,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 787,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2518:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2518:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 786,
														"name": "getRewardForUser",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 856,
														"src": "2501:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2501:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2484:45:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 791,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 785,
														"src": "2543:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 792,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2552:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2543:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 818,
												"nodeType": "IfStatement",
												"src": "2539:209:5",
												"trueBody": {
													"id": 817,
													"nodeType": "Block",
													"src": "2555:193:5",
													"statements": [
														{
															"expression": {
																"id": 799,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 794,
																		"name": "stakingReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 612,
																		"src": "2569:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 797,
																	"indexExpression": {
																		"expression": {
																			"id": 795,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2583:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 796,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2583:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2569:25:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 798,
																	"name": "reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 785,
																	"src": "2598:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2569:35:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 800,
															"nodeType": "ExpressionStatement",
															"src": "2569:35:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 804,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "2647:3:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 805,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "2647:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 806,
																				"name": "reward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 785,
																				"src": "2659:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 802,
																				"name": "rewardToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 594,
																				"src": "2626:11:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$244",
																					"typeString": "contract IERC20"
																				}
																			},
																			"id": 803,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "transfer",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 211,
																			"src": "2626:20:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																				"typeString": "function (address,uint256) external returns (bool)"
																			}
																		},
																		"id": 807,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2626:40:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5472616e73666572206661696c6564",
																		"id": 808,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2668:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																			"typeString": "literal_string \"Transfer failed\""
																		},
																		"value": "Transfer failed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																			"typeString": "literal_string \"Transfer failed\""
																		}
																	],
																	"id": 801,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2618:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 809,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2618:68:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 810,
															"nodeType": "ExpressionStatement",
															"src": "2618:68:5"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 812,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2718:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 813,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2718:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 814,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 785,
																		"src": "2730:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 811,
																	"name": "ClaimReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 630,
																	"src": "2706:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 815,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2706:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 816,
															"nodeType": "EmitStatement",
															"src": "2701:36:5"
														}
													]
												}
											}
										]
									},
									"functionSelector": "3d18b912",
									"id": 820,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 772,
											"modifierName": {
												"id": 771,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 142,
												"src": "2393:12:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2393:12:5"
										}
									],
									"name": "getReward",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2381:2:5"
									},
									"returnParameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2405:0:5"
									},
									"scope": 923,
									"src": "2363:391:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 855,
										"nodeType": "Block",
										"src": "2889:335:5",
										"statements": [
											{
												"assignments": [
													828
												],
												"declarations": [
													{
														"constant": false,
														"id": 828,
														"mutability": "mutable",
														"name": "stakingDaysRemaining",
														"nodeType": "VariableDeclaration",
														"scope": 855,
														"src": "2899:28:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 827,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2899:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 836,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 831,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 829,
															"name": "lockupPeriod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "2930:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 830,
															"name": "stakingStartTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 600,
															"src": "2945:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2930:31:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"baseExpression": {
															"id": 832,
															"name": "stakingTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "2964:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 834,
														"indexExpression": {
															"id": 833,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 822,
															"src": "2976:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2964:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2930:54:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2899:85:5"
											},
											{
												"assignments": [
													838
												],
												"declarations": [
													{
														"constant": false,
														"id": 838,
														"mutability": "mutable",
														"name": "rewardRate",
														"nodeType": "VariableDeclaration",
														"scope": 855,
														"src": "3060:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 837,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3060:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 844,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 841,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 839,
															"name": "stakingDaysRemaining",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 828,
															"src": "3081:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 840,
															"name": "lockupPeriod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "3102:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3081:33:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 842,
														"name": "rewardRateInit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 596,
														"src": "3117:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3081:50:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3060:71:5"
											},
											{
												"assignments": [
													846
												],
												"declarations": [
													{
														"constant": false,
														"id": 846,
														"mutability": "mutable",
														"name": "reward",
														"nodeType": "VariableDeclaration",
														"scope": 855,
														"src": "3141:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 845,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3141:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 852,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 847,
															"name": "stakingBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "3158:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 849,
														"indexExpression": {
															"id": 848,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 822,
															"src": "3173:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3158:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 850,
														"name": "rewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 838,
														"src": "3184:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3158:36:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3141:53:5"
											},
											{
												"expression": {
													"id": 853,
													"name": "reward",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 846,
													"src": "3211:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 826,
												"id": 854,
												"nodeType": "Return",
												"src": "3204:13:5"
											}
										]
									},
									"functionSelector": "ef790a82",
									"id": 856,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRewardForUser",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "2842:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2842:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2841:17:5"
									},
									"returnParameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "2880:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2880:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2879:9:5"
									},
									"scope": 923,
									"src": "2816:408:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 869,
										"nodeType": "Block",
										"src": "3335:54:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 865,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3376:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Staking_$923",
																		"typeString": "contract Staking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Staking_$923",
																		"typeString": "contract Staking"
																	}
																],
																"id": 864,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3368:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 863,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3368:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 866,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3368:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 861,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 591,
															"src": "3352:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$244",
																"typeString": "contract IERC20"
															}
														},
														"id": 862,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "3352:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3352:30:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 860,
												"id": 868,
												"nodeType": "Return",
												"src": "3345:37:5"
											}
										]
									},
									"functionSelector": "817b1cd2",
									"id": 870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalStaked",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3300:2:5"
									},
									"returnParameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "3326:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3326:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3325:9:5"
									},
									"scope": 923,
									"src": "3280:109:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 883,
										"nodeType": "Block",
										"src": "3497:60:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 879,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3544:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Staking_$923",
																		"typeString": "contract Staking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Staking_$923",
																		"typeString": "contract Staking"
																	}
																],
																"id": 878,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3536:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 877,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3536:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 880,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3536:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 875,
															"name": "rewardToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 594,
															"src": "3514:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$244",
																"typeString": "contract IERC20"
															}
														},
														"id": 876,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "3514:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3514:36:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 874,
												"id": 882,
												"nodeType": "Return",
												"src": "3507:43:5"
											}
										]
									},
									"functionSelector": "750142e6",
									"id": 884,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalReward",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3462:2:5"
									},
									"returnParameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "3488:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 872,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:9:5"
									},
									"scope": 923,
									"src": "3442:115:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 897,
										"nodeType": "Block",
										"src": "3659:51:5",
										"statements": [
											{
												"expression": {
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 891,
														"name": "rewardToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "3669:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$244",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 893,
																"name": "_rewardToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 886,
																"src": "3690:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 892,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "3683:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$244_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 894,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3683:20:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$244",
															"typeString": "contract IERC20"
														}
													},
													"src": "3669:34:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$244",
														"typeString": "contract IERC20"
													}
												},
												"id": 896,
												"nodeType": "ExpressionStatement",
												"src": "3669:34:5"
											}
										]
									},
									"functionSelector": "8aee8127",
									"id": 898,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 889,
											"modifierName": {
												"id": 888,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "3650:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "3650:9:5"
										}
									],
									"name": "setRewardToken",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "_rewardToken",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "3619:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 885,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3619:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3618:22:5"
									},
									"returnParameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3659:0:5"
									},
									"scope": 923,
									"src": "3595:115:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 909,
										"nodeType": "Block",
										"src": "3829:53:5",
										"statements": [
											{
												"expression": {
													"id": 907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 905,
														"name": "stakingStartTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 600,
														"src": "3839:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 906,
														"name": "_stakingStartTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 900,
														"src": "3858:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3839:36:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 908,
												"nodeType": "ExpressionStatement",
												"src": "3839:36:5"
											}
										]
									},
									"functionSelector": "5d90bad9",
									"id": 910,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 903,
											"modifierName": {
												"id": 902,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "3820:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "3820:9:5"
										}
									],
									"name": "setStakingStartTime",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "_stakingStartTime",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "3784:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3784:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3783:27:5"
									},
									"returnParameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3829:0:5"
									},
									"scope": 923,
									"src": "3755:127:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 921,
										"nodeType": "Block",
										"src": "3993:49:5",
										"statements": [
											{
												"expression": {
													"id": 919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 917,
														"name": "rewardRateInit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 596,
														"src": "4003:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 918,
														"name": "_rewardRateInit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 912,
														"src": "4020:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4003:32:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 920,
												"nodeType": "ExpressionStatement",
												"src": "4003:32:5"
											}
										]
									},
									"functionSelector": "fc71ae8c",
									"id": 922,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 915,
											"modifierName": {
												"id": 914,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "3984:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "3984:9:5"
										}
									],
									"name": "setRewardRateInit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "_rewardRateInit",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "3950:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 911,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3950:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3949:25:5"
									},
									"returnParameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3993:0:5"
									},
									"scope": 923,
									"src": "3923:119:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 924,
							"src": "289:3755:5"
						}
					],
					"src": "32:4012:5"
				},
				"id": 5
			}
		}
	}
}