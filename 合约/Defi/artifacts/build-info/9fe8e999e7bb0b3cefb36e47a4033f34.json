{
	"id": "9fe8e999e7bb0b3cefb36e47a4033f34",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.1",
	"solcLongVersion": "0.8.1+commit.df193b15",
	"input": {
		"language": "Solidity",
		"sources": {
			"StakingPool.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\n\ncontract StakingPool is Ownable, ReentrancyGuard {\n    using SafeMath for uint256;\n\n    IERC20 public token;               // 导入的 ERC20 代币\n    IERC20 public rewardToken;         // 奖励代币，本例中是 USDT\n    uint256 public rewardRateInit;     // 每个代币每天的分润\n    uint256 public lockupPeriod;       // 锁定期，初步设为 90 天\n    uint256 public stakingStartTime;   // 项目 staking 开始时间\n\n    mapping(address => uint256) public stakingBalance;  // 各个用户质押的代币数量\n    mapping(address => uint256) public stakingTime;     // 各个用户质押的时间\n    mapping(address => uint256) public stakingReward;   // 各个用户已经获得的奖励金额\n\n    uint256 public totalStake;  // 池子中的总质押量\n    uint256 public totalReward; // 池子中的总奖励\n\n    uint256 public dayTime = 86400; // 每天一共有 86400 秒\n\n    event Stake(address indexed user, uint256 amount);\n    event UnStake(address indexed user, uint256 amount);\n    event ClaimReward(address indexed user, uint256 amount);\n\n    constructor(address _token, address _rewardToken, uint256 _rewardRateInit, uint256 _lockupPeriod) {\n        token = IERC20(_token);\n        rewardToken = IERC20(_rewardToken);\n        rewardRateInit = _rewardRateInit;\n        lockupPeriod = _lockupPeriod;\n        stakingStartTime = block.timestamp;\n    }\n\n    // 质押代币\n    function stake(uint256 _amount) external nonReentrant {\n        require(block.timestamp < stakingStartTime + lockupPeriod, \"The current staking activity has ended\");\n        require(_amount > 0, \"Amount should greater than zero\");\n        require(token.transferFrom(msg.sender, address(this), _amount), \"Transfer failed\");\n        stakingBalance[msg.sender] = stakingBalance[msg.sender].add(_amount);\n        stakingTime[msg.sender] = block.timestamp;\n        uint256 reward = getRewardForUser(msg.sender);\n        stakingReward[msg.sender] = stakingReward[msg.sender].add(reward);\n        totalStake = totalStake.add(_amount);\n        totalReward = totalReward.add(reward);\n        emit Stake(msg.sender, _amount);\n    }\n\n    // 撤回代币，仅在锁定期后允许\n    function unStake(uint256 _amount) external nonReentrant {\n        require(block.timestamp >= (stakingStartTime + lockupPeriod), \"Locked\");\n        require(stakingBalance[msg.sender] >= _amount, \"Insufficient balance\");\n        require(token.transfer(msg.sender, _amount), \"Transfer failed\");\n        stakingBalance[msg.sender] = stakingBalance[msg.sender].sub(_amount);\n        totalStake = totalStake.sub(_amount);\n        emit UnStake(msg.sender, _amount);\n    }\n\n    // 提取奖励\n    function claimReward() external nonReentrant {\n        require(stakingTime[msg.sender] > 0, \"Address was not staked\");\n        uint256 reward = stakingReward[msg.sender];\n        require(rewardToken.transfer(msg.sender, reward), \"Transfer failed\");\n        stakingReward[msg.sender]=0;\n        totalReward = totalReward.sub(reward);\n        emit ClaimReward(msg.sender, reward);\n    }\n\n    // 获取用户的累计奖励，不会实际转账\n    function getRewardForUser(address account) internal view returns (uint256) {\n        uint256 stakingDaysRemaining = (lockupPeriod.add(stakingStartTime)).sub(stakingTime[account]); // 计算用户已经质押的天数，不足一天按1天计算\n        // uint256 rewardRate = (stakingDaysRemaining.div(60)).add(1).mul(rewardRateInit).div(1e18);\n        uint256 reward = stakingBalance[account].div(1e6).mul(rewardRateInit).mul(stakingDaysRemaining).div(dayTime);\n        return reward;\n    }\n\n    // 设置奖励代币实例\n    function setRewardToken(address _rewardToken) external onlyOwner {\n        rewardToken = IERC20(_rewardToken);\n    }\n\n    // 设置项目质押开始时间\n    function setStakingStartTime(uint256 _stakingStartTime) external onlyOwner {\n        stakingStartTime = _stakingStartTime;\n    }\n    // 设置每枚代币的分润\n    function setRewardRateInit(uint256 _rewardRateInit) external onlyOwner {\n        rewardRateInit = _rewardRateInit;\n    }\n    \n}"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 123,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205d1bbcbbf69e764909250610d6fe0759ba92f17f2e3cc1e35d6d5af642f0f8f364736f6c63430008010033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205d1bbcbbf69e764909250610d6fe0759ba92f17f2e3cc1e35d6d5af642f0f8f364736f6c63430008010033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5D SHL 0xBC 0xBB 0xF6 SWAP15 PUSH23 0x4909250610D6FE0759BA92F17F2E3CC1E35D6D5AF642F0 0xF8 RETURN PUSH5 0x736F6C6343 STOP ADDMOD ADD STOP CALLER ",
							"sourceMap": "482:6300:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205d1bbcbbf69e764909250610d6fe0759ba92f17f2e3cc1e35d6d5af642f0f8f364736f6c63430008010033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5D SHL 0xBC 0xBB 0xF6 SWAP15 PUSH23 0x4909250610D6FE0759BA92F17F2E3CC1E35D6D5AF642F0 0xF8 RETURN PUSH5 0x736F6C6343 STOP ADDMOD ADD STOP CALLER ",
							"sourceMap": "482:6300:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205d1bbcbbf69e764909250610d6fe0759ba92f17f2e3cc1e35d6d5af642f0f8f364736f6c63430008010033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"StakingPool.sol": {
				"StakingPool": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_rewardToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_rewardRateInit",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_lockupPeriod",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ClaimReward",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Stake",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "UnStake",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "claimReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "dayTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lockupPeriod",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardRateInit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_rewardRateInit",
									"type": "uint256"
								}
							],
							"name": "setRewardRateInit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_rewardToken",
									"type": "address"
								}
							],
							"name": "setRewardToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_stakingStartTime",
									"type": "uint256"
								}
							],
							"name": "setStakingStartTime",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakingBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakingReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingStartTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakingTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalStake",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "unStake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"StakingPool.sol\":289:4396  contract StakingPool is Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"StakingPool.sol\":1155:1160  86400 */\n  0x015180\n    /* \"StakingPool.sol\":1130:1160  uint256 public dayTime = 86400 */\n  0x0c\n  sstore\n    /* \"StakingPool.sol\":1370:1675  constructor(address _token, address _rewardToken, uint256 _rewardRateInit, uint256 _lockupPeriod) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_9\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_10)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  dup1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"StakingPool.sol\":1493:1499  _token */\n  dup4\n    /* \"StakingPool.sol\":1478:1483  token */\n  0x02\n  0x00\n    /* \"StakingPool.sol\":1478:1500  token = IERC20(_token) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"StakingPool.sol\":1531:1543  _rewardToken */\n  dup3\n    /* \"StakingPool.sol\":1510:1521  rewardToken */\n  0x03\n  0x00\n    /* \"StakingPool.sol\":1510:1544  rewardToken = IERC20(_rewardToken) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"StakingPool.sol\":1571:1586  _rewardRateInit */\n  dup2\n    /* \"StakingPool.sol\":1554:1568  rewardRateInit */\n  0x04\n    /* \"StakingPool.sol\":1554:1586  rewardRateInit = _rewardRateInit */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"StakingPool.sol\":1611:1624  _lockupPeriod */\n  dup1\n    /* \"StakingPool.sol\":1596:1608  lockupPeriod */\n  0x05\n    /* \"StakingPool.sol\":1596:1624  lockupPeriod = _lockupPeriod */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"StakingPool.sol\":1653:1668  block.timestamp */\n  timestamp\n    /* \"StakingPool.sol\":1634:1650  stakingStartTime */\n  0x06\n    /* \"StakingPool.sol\":1634:1668  stakingStartTime = block.timestamp */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"StakingPool.sol\":1370:1675  constructor(address _token, address _rewardToken, uint256 _rewardRateInit, uint256 _lockupPeriod) {... */\n  pop\n  pop\n  pop\n  pop\n    /* \"StakingPool.sol\":289:4396  contract StakingPool is Ownable, ReentrancyGuard {... */\n  jump(tag_14)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_10:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:150   */\ntag_18:\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_20\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_21\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":70:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:299   */\ntag_22:\n  0x00\n    /* \"#utility.yul\":244:250   */\n  dup2\n    /* \"#utility.yul\":238:251   */\n  mload\n    /* \"#utility.yul\":229:251   */\n  swap1\n  pop\n    /* \"#utility.yul\":260:293   */\n  tag_24\n    /* \"#utility.yul\":287:292   */\n  dup2\n    /* \"#utility.yul\":260:293   */\n  tag_25\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":219:299   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":305:1058   */\ntag_3:\n  0x00\n  dup1\n  0x00\n  dup1\n    /* \"#utility.yul\":475:478   */\n  0x80\n    /* \"#utility.yul\":463:472   */\n  dup6\n    /* \"#utility.yul\":454:461   */\n  dup8\n    /* \"#utility.yul\":450:473   */\n  sub\n    /* \"#utility.yul\":446:479   */\n  slt\n    /* \"#utility.yul\":443:445   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":492:493   */\n  0x00\n    /* \"#utility.yul\":489:490   */\n  dup1\n    /* \"#utility.yul\":482:494   */\n  revert\n    /* \"#utility.yul\":443:445   */\ntag_27:\n    /* \"#utility.yul\":535:536   */\n  0x00\n    /* \"#utility.yul\":560:624   */\n  tag_28\n    /* \"#utility.yul\":616:623   */\n  dup8\n    /* \"#utility.yul\":607:613   */\n  dup3\n    /* \"#utility.yul\":596:605   */\n  dup9\n    /* \"#utility.yul\":592:614   */\n  add\n    /* \"#utility.yul\":560:624   */\n  tag_18\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":550:624   */\n  swap5\n  pop\n    /* \"#utility.yul\":506:634   */\n  pop\n    /* \"#utility.yul\":673:675   */\n  0x20\n    /* \"#utility.yul\":699:763   */\n  tag_29\n    /* \"#utility.yul\":755:762   */\n  dup8\n    /* \"#utility.yul\":746:752   */\n  dup3\n    /* \"#utility.yul\":735:744   */\n  dup9\n    /* \"#utility.yul\":731:753   */\n  add\n    /* \"#utility.yul\":699:763   */\n  tag_18\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":689:763   */\n  swap4\n  pop\n    /* \"#utility.yul\":644:773   */\n  pop\n    /* \"#utility.yul\":812:814   */\n  0x40\n    /* \"#utility.yul\":838:902   */\n  tag_30\n    /* \"#utility.yul\":894:901   */\n  dup8\n    /* \"#utility.yul\":885:891   */\n  dup3\n    /* \"#utility.yul\":874:883   */\n  dup9\n    /* \"#utility.yul\":870:892   */\n  add\n    /* \"#utility.yul\":838:902   */\n  tag_22\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":828:902   */\n  swap3\n  pop\n    /* \"#utility.yul\":783:912   */\n  pop\n    /* \"#utility.yul\":951:953   */\n  0x60\n    /* \"#utility.yul\":977:1041   */\n  tag_31\n    /* \"#utility.yul\":1033:1040   */\n  dup8\n    /* \"#utility.yul\":1024:1030   */\n  dup3\n    /* \"#utility.yul\":1013:1022   */\n  dup9\n    /* \"#utility.yul\":1009:1031   */\n  add\n    /* \"#utility.yul\":977:1041   */\n  tag_22\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":967:1041   */\n  swap2\n  pop\n    /* \"#utility.yul\":922:1051   */\n  pop\n    /* \"#utility.yul\":433:1058   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1064:1160   */\ntag_32:\n  0x00\n    /* \"#utility.yul\":1130:1154   */\n  tag_34\n    /* \"#utility.yul\":1148:1153   */\n  dup3\n    /* \"#utility.yul\":1130:1154   */\n  tag_35\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":1119:1154   */\n  swap1\n  pop\n    /* \"#utility.yul\":1109:1160   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1166:1292   */\ntag_35:\n  0x00\n    /* \"#utility.yul\":1243:1285   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1236:1241   */\n  dup3\n    /* \"#utility.yul\":1232:1286   */\n  and\n    /* \"#utility.yul\":1221:1286   */\n  swap1\n  pop\n    /* \"#utility.yul\":1211:1292   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1298:1375   */\ntag_37:\n  0x00\n    /* \"#utility.yul\":1364:1369   */\n  dup2\n    /* \"#utility.yul\":1353:1369   */\n  swap1\n  pop\n    /* \"#utility.yul\":1343:1375   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1381:1503   */\ntag_21:\n    /* \"#utility.yul\":1454:1478   */\n  tag_40\n    /* \"#utility.yul\":1472:1477   */\n  dup2\n    /* \"#utility.yul\":1454:1478   */\n  tag_32\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1447:1452   */\n  dup2\n    /* \"#utility.yul\":1444:1479   */\n  eq\n    /* \"#utility.yul\":1434:1436   */\n  tag_41\n  jumpi\n    /* \"#utility.yul\":1493:1494   */\n  0x00\n    /* \"#utility.yul\":1490:1491   */\n  dup1\n    /* \"#utility.yul\":1483:1495   */\n  revert\n    /* \"#utility.yul\":1434:1436   */\ntag_41:\n    /* \"#utility.yul\":1424:1503   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1509:1631   */\ntag_25:\n    /* \"#utility.yul\":1582:1606   */\n  tag_43\n    /* \"#utility.yul\":1600:1605   */\n  dup2\n    /* \"#utility.yul\":1582:1606   */\n  tag_37\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1575:1580   */\n  dup2\n    /* \"#utility.yul\":1572:1607   */\n  eq\n    /* \"#utility.yul\":1562:1564   */\n  tag_44\n  jumpi\n    /* \"#utility.yul\":1621:1622   */\n  0x00\n    /* \"#utility.yul\":1618:1619   */\n  dup1\n    /* \"#utility.yul\":1611:1623   */\n  revert\n    /* \"#utility.yul\":1562:1564   */\ntag_44:\n    /* \"#utility.yul\":1552:1631   */\n  pop\n  jump\t// out\n    /* \"StakingPool.sol\":289:4396  contract StakingPool is Ownable, ReentrancyGuard {... */\ntag_14:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"StakingPool.sol\":289:4396  contract StakingPool is Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8aee8127\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xee947a7c\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xee947a7c\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf7c618c1\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xfc71ae8c\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x8aee8127\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8b0e9f3f\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xb88a802f\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x5d90bad9\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x5d90bad9\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x6abfd183\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x750142e6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x80c0976e\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x154a78b5\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1683153d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x45bc78ab\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x583d42fd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x5d3eea91\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"StakingPool.sol\":517:546  uint256 public rewardRateInit */\n    tag_3:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"StakingPool.sol\":912:960  mapping(address => uint256) public stakingReward */\n    tag_4:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"StakingPool.sol\":732:781  mapping(address => uint256) public stakingBalance */\n    tag_5:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_36:\n      tag_37\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"StakingPool.sol\":825:871  mapping(address => uint256) public stakingTime */\n    tag_6:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_40:\n      tag_41\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"StakingPool.sol\":2475:2939  function unStake(uint256 _amount) external nonReentrant {... */\n    tag_7:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      stop\n        /* \"StakingPool.sol\":4101:4229  function setStakingStartTime(uint256 _stakingStartTime) external onlyOwner {... */\n    tag_8:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_48:\n      tag_49\n      jump\t// in\n    tag_47:\n      stop\n        /* \"StakingPool.sol\":661:692  uint256 public stakingStartTime */\n    tag_9:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      stop\n        /* \"StakingPool.sol\":1072:1098  uint256 public totalReward */\n    tag_11:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"StakingPool.sol\":1130:1160  uint256 public dayTime = 86400 */\n    tag_12:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"StakingPool.sol\":3941:4057  function setRewardToken(address _rewardToken) external onlyOwner {... */\n    tag_13:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_62:\n      tag_63\n      jump\t// in\n    tag_61:\n      stop\n        /* \"StakingPool.sol\":1012:1037  uint256 public totalStake */\n    tag_14:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_15:\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"StakingPool.sol\":1701:2422  function stake(uint256 _amount) external nonReentrant {... */\n    tag_16:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n    tag_71:\n      stop\n        /* \"StakingPool.sol\":2965:3349  function claimReward() external nonReentrant {... */\n    tag_17:\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      stop\n        /* \"StakingPool.sol\":587:614  uint256 public lockupPeriod */\n    tag_18:\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_19:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n    tag_79:\n      stop\n        /* \"StakingPool.sol\":442:467  IERC20 public rewardToken */\n    tag_20:\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"StakingPool.sol\":377:396  IERC20 public token */\n    tag_21:\n      tag_86\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"StakingPool.sol\":4269:4389  function setRewardRateInit(uint256 _rewardRateInit) external onlyOwner {... */\n    tag_22:\n      tag_89\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_90\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_90:\n      tag_91\n      jump\t// in\n    tag_89:\n      stop\n        /* \"StakingPool.sol\":517:546  uint256 public rewardRateInit */\n    tag_27:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"StakingPool.sol\":912:960  mapping(address => uint256) public stakingReward */\n    tag_33:\n      mstore(0x20, 0x09)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"StakingPool.sol\":732:781  mapping(address => uint256) public stakingBalance */\n    tag_37:\n      mstore(0x20, 0x07)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"StakingPool.sol\":825:871  mapping(address => uint256) public stakingTime */\n    tag_41:\n      mstore(0x20, 0x08)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"StakingPool.sol\":2475:2939  function unStake(uint256 _amount) external nonReentrant {... */\n    tag_46:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_93\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_94\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_93:\n        /* \"StakingPool.sol\":2588:2600  lockupPeriod */\n      sload(0x05)\n        /* \"StakingPool.sol\":2569:2585  stakingStartTime */\n      sload(0x06)\n        /* \"StakingPool.sol\":2569:2600  stakingStartTime + lockupPeriod */\n      tag_96\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n        /* \"StakingPool.sol\":2549:2564  block.timestamp */\n      timestamp\n        /* \"StakingPool.sol\":2549:2601  block.timestamp >= (stakingStartTime + lockupPeriod) */\n      lt\n      iszero\n        /* \"StakingPool.sol\":2541:2612  require(block.timestamp >= (stakingStartTime + lockupPeriod), \"Locked\") */\n      tag_98\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_99\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_98:\n        /* \"StakingPool.sol\":2660:2667  _amount */\n      dup1\n        /* \"StakingPool.sol\":2630:2644  stakingBalance */\n      0x07\n        /* \"StakingPool.sol\":2630:2656  stakingBalance[msg.sender] */\n      0x00\n        /* \"StakingPool.sol\":2645:2655  msg.sender */\n      caller\n        /* \"StakingPool.sol\":2630:2656  stakingBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"StakingPool.sol\":2630:2667  stakingBalance[msg.sender] >= _amount */\n      lt\n      iszero\n        /* \"StakingPool.sol\":2622:2692  require(stakingBalance[msg.sender] >= _amount, \"Insufficient balance\") */\n      tag_101\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_101:\n        /* \"StakingPool.sol\":2710:2715  token */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"StakingPool.sol\":2710:2724  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"StakingPool.sol\":2725:2735  msg.sender */\n      caller\n        /* \"StakingPool.sol\":2737:2744  _amount */\n      dup4\n        /* \"StakingPool.sol\":2710:2745  token.transfer(msg.sender, _amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_104\n      swap3\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_106\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_106:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_108\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_108:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_109\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n        /* \"StakingPool.sol\":2702:2765  require(token.transfer(msg.sender, _amount), \"Transfer failed\") */\n      tag_111\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_111:\n        /* \"StakingPool.sol\":2804:2843  stakingBalance[msg.sender].sub(_amount) */\n      tag_114\n        /* \"StakingPool.sol\":2835:2842  _amount */\n      dup2\n        /* \"StakingPool.sol\":2804:2818  stakingBalance */\n      0x07\n        /* \"StakingPool.sol\":2804:2830  stakingBalance[msg.sender] */\n      0x00\n        /* \"StakingPool.sol\":2819:2829  msg.sender */\n      caller\n        /* \"StakingPool.sol\":2804:2830  stakingBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"StakingPool.sol\":2804:2834  stakingBalance[msg.sender].sub */\n      tag_115\n      swap1\n        /* \"StakingPool.sol\":2804:2843  stakingBalance[msg.sender].sub(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_114:\n        /* \"StakingPool.sol\":2775:2789  stakingBalance */\n      0x07\n        /* \"StakingPool.sol\":2775:2801  stakingBalance[msg.sender] */\n      0x00\n        /* \"StakingPool.sol\":2790:2800  msg.sender */\n      caller\n        /* \"StakingPool.sol\":2775:2801  stakingBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"StakingPool.sol\":2775:2843  stakingBalance[msg.sender] = stakingBalance[msg.sender].sub(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingPool.sol\":2866:2889  totalStake.sub(_amount) */\n      tag_116\n        /* \"StakingPool.sol\":2881:2888  _amount */\n      dup2\n        /* \"StakingPool.sol\":2866:2876  totalStake */\n      sload(0x0a)\n        /* \"StakingPool.sol\":2866:2880  totalStake.sub */\n      tag_115\n      swap1\n        /* \"StakingPool.sol\":2866:2889  totalStake.sub(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_116:\n        /* \"StakingPool.sol\":2853:2863  totalStake */\n      0x0a\n        /* \"StakingPool.sol\":2853:2889  totalStake = totalStake.sub(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingPool.sol\":2912:2922  msg.sender */\n      caller\n        /* \"StakingPool.sol\":2904:2932  UnStake(msg.sender, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xb24546d975e2628748efc9aced80665e0fad66272033e5c0ea25fd3afac99795\n        /* \"StakingPool.sol\":2924:2931  _amount */\n      dup3\n        /* \"StakingPool.sol\":2904:2932  UnStake(msg.sender, _amount) */\n      mload(0x40)\n      tag_117\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_118\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_119\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_118:\n        /* \"StakingPool.sol\":2475:2939  function unStake(uint256 _amount) external nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"StakingPool.sol\":4101:4229  function setStakingStartTime(uint256 _stakingStartTime) external onlyOwner {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_121\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_122\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_121:\n        /* \"StakingPool.sol\":4205:4222  _stakingStartTime */\n      dup1\n        /* \"StakingPool.sol\":4186:4202  stakingStartTime */\n      0x06\n        /* \"StakingPool.sol\":4186:4222  stakingStartTime = _stakingStartTime */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingPool.sol\":4101:4229  function setStakingStartTime(uint256 _stakingStartTime) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"StakingPool.sol\":661:692  uint256 public stakingStartTime */\n    tag_51:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_125\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_122\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_125:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_127\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_128\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_127:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"StakingPool.sol\":1072:1098  uint256 public totalReward */\n    tag_56:\n      sload(0x0b)\n      dup2\n      jump\t// out\n        /* \"StakingPool.sol\":1130:1160  uint256 public dayTime = 86400 */\n    tag_59:\n      sload(0x0c)\n      dup2\n      jump\t// out\n        /* \"StakingPool.sol\":3941:4057  function setRewardToken(address _rewardToken) external onlyOwner {... */\n    tag_63:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_130\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_122\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_130:\n        /* \"StakingPool.sol\":4037:4049  _rewardToken */\n      dup1\n        /* \"StakingPool.sol\":4016:4027  rewardToken */\n      0x03\n      0x00\n        /* \"StakingPool.sol\":4016:4050  rewardToken = IERC20(_rewardToken) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"StakingPool.sol\":3941:4057  function setRewardToken(address _rewardToken) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"StakingPool.sol\":1012:1037  uint256 public totalStake */\n    tag_65:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"StakingPool.sol\":1701:2422  function stake(uint256 _amount) external nonReentrant {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_134\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_94\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_134:\n        /* \"StakingPool.sol\":1810:1822  lockupPeriod */\n      sload(0x05)\n        /* \"StakingPool.sol\":1791:1807  stakingStartTime */\n      sload(0x06)\n        /* \"StakingPool.sol\":1791:1822  stakingStartTime + lockupPeriod */\n      tag_136\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_136:\n        /* \"StakingPool.sol\":1773:1788  block.timestamp */\n      timestamp\n        /* \"StakingPool.sol\":1773:1822  block.timestamp < stakingStartTime + lockupPeriod */\n      lt\n        /* \"StakingPool.sol\":1765:1865  require(block.timestamp < stakingStartTime + lockupPeriod, \"The current staking activity has ended\") */\n      tag_137\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_138\n      swap1\n      tag_139\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_137:\n        /* \"StakingPool.sol\":1893:1894  0 */\n      0x00\n        /* \"StakingPool.sol\":1883:1890  _amount */\n      dup2\n        /* \"StakingPool.sol\":1883:1894  _amount > 0 */\n      gt\n        /* \"StakingPool.sol\":1875:1930  require(_amount > 0, \"Amount should greater than zero\") */\n      tag_140\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_141\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_140:\n        /* \"StakingPool.sol\":1948:1953  token */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"StakingPool.sol\":1948:1966  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"StakingPool.sol\":1967:1977  msg.sender */\n      caller\n        /* \"StakingPool.sol\":1987:1991  this */\n      address\n        /* \"StakingPool.sol\":1994:2001  _amount */\n      dup5\n        /* \"StakingPool.sol\":1948:2002  token.transferFrom(msg.sender, address(this), _amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_143\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_143:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_145\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_145:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_147\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_147:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_148\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_148:\n        /* \"StakingPool.sol\":1940:2022  require(token.transferFrom(msg.sender, address(this), _amount), \"Transfer failed\") */\n      tag_149\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_150\n      swap1\n      tag_113\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_149:\n        /* \"StakingPool.sol\":2061:2100  stakingBalance[msg.sender].add(_amount) */\n      tag_151\n        /* \"StakingPool.sol\":2092:2099  _amount */\n      dup2\n        /* \"StakingPool.sol\":2061:2075  stakingBalance */\n      0x07\n        /* \"StakingPool.sol\":2061:2087  stakingBalance[msg.sender] */\n      0x00\n        /* \"StakingPool.sol\":2076:2086  msg.sender */\n      caller\n        /* \"StakingPool.sol\":2061:2087  stakingBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"StakingPool.sol\":2061:2091  stakingBalance[msg.sender].add */\n      tag_152\n      swap1\n        /* \"StakingPool.sol\":2061:2100  stakingBalance[msg.sender].add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_151:\n        /* \"StakingPool.sol\":2032:2046  stakingBalance */\n      0x07\n        /* \"StakingPool.sol\":2032:2058  stakingBalance[msg.sender] */\n      0x00\n        /* \"StakingPool.sol\":2047:2057  msg.sender */\n      caller\n        /* \"StakingPool.sol\":2032:2058  stakingBalance[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"StakingPool.sol\":2032:2100  stakingBalance[msg.sender] = stakingBalance[msg.sender].add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingPool.sol\":2136:2151  block.timestamp */\n      timestamp\n        /* \"StakingPool.sol\":2110:2121  stakingTime */\n      0x08\n        /* \"StakingPool.sol\":2110:2133  stakingTime[msg.sender] */\n      0x00\n        /* \"StakingPool.sol\":2122:2132  msg.sender */\n      caller\n        /* \"StakingPool.sol\":2110:2133  stakingTime[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"StakingPool.sol\":2110:2151  stakingTime[msg.sender] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingPool.sol\":2161:2175  uint256 reward */\n      0x00\n        /* \"StakingPool.sol\":2178:2206  getRewardForUser(msg.sender) */\n      tag_153\n        /* \"StakingPool.sol\":2195:2205  msg.sender */\n      caller\n        /* \"StakingPool.sol\":2178:2194  getRewardForUser */\n      tag_154\n        /* \"StakingPool.sol\":2178:2206  getRewardForUser(msg.sender) */\n      jump\t// in\n    tag_153:\n        /* \"StakingPool.sol\":2161:2206  uint256 reward = getRewardForUser(msg.sender) */\n      swap1\n      pop\n        /* \"StakingPool.sol\":2244:2281  stakingReward[msg.sender].add(reward) */\n      tag_155\n        /* \"StakingPool.sol\":2274:2280  reward */\n      dup2\n        /* \"StakingPool.sol\":2244:2257  stakingReward */\n      0x09\n        /* \"StakingPool.sol\":2244:2269  stakingReward[msg.sender] */\n      0x00\n        /* \"StakingPool.sol\":2258:2268  msg.sender */\n      caller\n        /* \"StakingPool.sol\":2244:2269  stakingReward[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"StakingPool.sol\":2244:2273  stakingReward[msg.sender].add */\n      tag_152\n      swap1\n        /* \"StakingPool.sol\":2244:2281  stakingReward[msg.sender].add(reward) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_155:\n        /* \"StakingPool.sol\":2216:2229  stakingReward */\n      0x09\n        /* \"StakingPool.sol\":2216:2241  stakingReward[msg.sender] */\n      0x00\n        /* \"StakingPool.sol\":2230:2240  msg.sender */\n      caller\n        /* \"StakingPool.sol\":2216:2241  stakingReward[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"StakingPool.sol\":2216:2281  stakingReward[msg.sender] = stakingReward[msg.sender].add(reward) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingPool.sol\":2304:2327  totalStake.add(_amount) */\n      tag_156\n        /* \"StakingPool.sol\":2319:2326  _amount */\n      dup3\n        /* \"StakingPool.sol\":2304:2314  totalStake */\n      sload(0x0a)\n        /* \"StakingPool.sol\":2304:2318  totalStake.add */\n      tag_152\n      swap1\n        /* \"StakingPool.sol\":2304:2327  totalStake.add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_156:\n        /* \"StakingPool.sol\":2291:2301  totalStake */\n      0x0a\n        /* \"StakingPool.sol\":2291:2327  totalStake = totalStake.add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingPool.sol\":2351:2374  totalReward.add(reward) */\n      tag_157\n        /* \"StakingPool.sol\":2367:2373  reward */\n      dup2\n        /* \"StakingPool.sol\":2351:2362  totalReward */\n      sload(0x0b)\n        /* \"StakingPool.sol\":2351:2366  totalReward.add */\n      tag_152\n      swap1\n        /* \"StakingPool.sol\":2351:2374  totalReward.add(reward) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_157:\n        /* \"StakingPool.sol\":2337:2348  totalReward */\n      0x0b\n        /* \"StakingPool.sol\":2337:2374  totalReward = totalReward.add(reward) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingPool.sol\":2395:2405  msg.sender */\n      caller\n        /* \"StakingPool.sol\":2389:2415  Stake(msg.sender, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xebedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a\n        /* \"StakingPool.sol\":2407:2414  _amount */\n      dup4\n        /* \"StakingPool.sol\":2389:2415  Stake(msg.sender, _amount) */\n      mload(0x40)\n      tag_158\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2292:2293  _ */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_159\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_119\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_159:\n        /* \"StakingPool.sol\":1701:2422  function stake(uint256 _amount) external nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"StakingPool.sol\":2965:3349  function claimReward() external nonReentrant {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_161\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_94\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_161:\n        /* \"StakingPool.sol\":3054:3055  0 */\n      0x00\n        /* \"StakingPool.sol\":3028:3039  stakingTime */\n      0x08\n        /* \"StakingPool.sol\":3028:3051  stakingTime[msg.sender] */\n      0x00\n        /* \"StakingPool.sol\":3040:3050  msg.sender */\n      caller\n        /* \"StakingPool.sol\":3028:3051  stakingTime[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"StakingPool.sol\":3028:3055  stakingTime[msg.sender] > 0 */\n      gt\n        /* \"StakingPool.sol\":3020:3082  require(stakingTime[msg.sender] > 0, \"Address was not staked\") */\n      tag_163\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_164\n      swap1\n      tag_165\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_163:\n        /* \"StakingPool.sol\":3092:3106  uint256 reward */\n      0x00\n        /* \"StakingPool.sol\":3109:3122  stakingReward */\n      0x09\n        /* \"StakingPool.sol\":3109:3134  stakingReward[msg.sender] */\n      0x00\n        /* \"StakingPool.sol\":3123:3133  msg.sender */\n      caller\n        /* \"StakingPool.sol\":3109:3134  stakingReward[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"StakingPool.sol\":3092:3134  uint256 reward = stakingReward[msg.sender] */\n      swap1\n      pop\n        /* \"StakingPool.sol\":3152:3163  rewardToken */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"StakingPool.sol\":3152:3172  rewardToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"StakingPool.sol\":3173:3183  msg.sender */\n      caller\n        /* \"StakingPool.sol\":3185:3191  reward */\n      dup4\n        /* \"StakingPool.sol\":3152:3192  rewardToken.transfer(msg.sender, reward) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap3\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_166:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_167\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_167:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_169\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_169:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_170\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_170:\n        /* \"StakingPool.sol\":3144:3212  require(rewardToken.transfer(msg.sender, reward), \"Transfer failed\") */\n      tag_171\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_172\n      swap1\n      tag_113\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_171:\n        /* \"StakingPool.sol\":3248:3249  0 */\n      0x00\n        /* \"StakingPool.sol\":3222:3235  stakingReward */\n      0x09\n        /* \"StakingPool.sol\":3222:3247  stakingReward[msg.sender] */\n      0x00\n        /* \"StakingPool.sol\":3236:3246  msg.sender */\n      caller\n        /* \"StakingPool.sol\":3222:3247  stakingReward[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"StakingPool.sol\":3222:3249  stakingReward[msg.sender]=0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingPool.sol\":3273:3296  totalReward.sub(reward) */\n      tag_173\n        /* \"StakingPool.sol\":3289:3295  reward */\n      dup2\n        /* \"StakingPool.sol\":3273:3284  totalReward */\n      sload(0x0b)\n        /* \"StakingPool.sol\":3273:3288  totalReward.sub */\n      tag_115\n      swap1\n        /* \"StakingPool.sol\":3273:3296  totalReward.sub(reward) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_173:\n        /* \"StakingPool.sol\":3259:3270  totalReward */\n      0x0b\n        /* \"StakingPool.sol\":3259:3296  totalReward = totalReward.sub(reward) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingPool.sol\":3323:3333  msg.sender */\n      caller\n        /* \"StakingPool.sol\":3311:3342  ClaimReward(msg.sender, reward) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xba8de60c3403ec381d1d484652ea1980e3c3e56359195c92525bff4ce47ad98e\n        /* \"StakingPool.sol\":3335:3341  reward */\n      dup3\n        /* \"StakingPool.sol\":3311:3342  ClaimReward(msg.sender, reward) */\n      mload(0x40)\n      tag_174\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2292:2293  _ */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_175\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_119\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_175:\n        /* \"StakingPool.sol\":2965:3349  function claimReward() external nonReentrant {... */\n      jump\t// out\n        /* \"StakingPool.sol\":587:614  uint256 public lockupPeriod */\n    tag_77:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_177\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_122\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_177:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2189:2190  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2177  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_179\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_180\n      swap1\n      tag_181\n      jump\t// in\n    tag_180:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_179:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_182\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_128\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_182:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"StakingPool.sol\":442:467  IERC20 public rewardToken */\n    tag_83:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"StakingPool.sol\":377:396  IERC20 public token */\n    tag_87:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"StakingPool.sol\":4269:4389  function setRewardRateInit(uint256 _rewardRateInit) external onlyOwner {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_184\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_122\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_184:\n        /* \"StakingPool.sol\":4367:4382  _rewardRateInit */\n      dup1\n        /* \"StakingPool.sol\":4350:4364  rewardRateInit */\n      0x04\n        /* \"StakingPool.sol\":4350:4382  rewardRateInit = _rewardRateInit */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"StakingPool.sol\":4269:4389  function setRewardRateInit(uint256 _rewardRateInit) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_187\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_188\n      swap1\n      tag_189\n      jump\t// in\n    tag_188:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_187:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_115:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_191\n      swap2\n      swap1\n      tag_192\n      jump\t// in\n    tag_191:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      dup1\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_122:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_195\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_196\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_195:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      tag_197\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1427  owner */\n      tag_68\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_197:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_198\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_199\n      swap1\n      tag_200\n      jump\t// in\n    tag_199:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_198:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_152:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_203\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_203:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"StakingPool.sol\":3411:3903  function getRewardForUser(address account) internal view returns (uint256) {... */\n    tag_154:\n        /* \"StakingPool.sol\":3477:3484  uint256 */\n      0x00\n        /* \"StakingPool.sol\":3496:3524  uint256 stakingDaysRemaining */\n      dup1\n        /* \"StakingPool.sol\":3527:3589  (lockupPeriod.add(stakingStartTime)).sub(stakingTime[account]) */\n      tag_205\n        /* \"StakingPool.sol\":3568:3579  stakingTime */\n      0x08\n        /* \"StakingPool.sol\":3568:3588  stakingTime[account] */\n      0x00\n        /* \"StakingPool.sol\":3580:3587  account */\n      dup6\n        /* \"StakingPool.sol\":3568:3588  stakingTime[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"StakingPool.sol\":3528:3562  lockupPeriod.add(stakingStartTime) */\n      tag_206\n        /* \"StakingPool.sol\":3545:3561  stakingStartTime */\n      sload(0x06)\n        /* \"StakingPool.sol\":3528:3540  lockupPeriod */\n      sload(0x05)\n        /* \"StakingPool.sol\":3528:3544  lockupPeriod.add */\n      tag_152\n      swap1\n        /* \"StakingPool.sol\":3528:3562  lockupPeriod.add(stakingStartTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_206:\n        /* \"StakingPool.sol\":3527:3567  (lockupPeriod.add(stakingStartTime)).sub */\n      tag_115\n      swap1\n        /* \"StakingPool.sol\":3527:3589  (lockupPeriod.add(stakingStartTime)).sub(stakingTime[account]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_205:\n        /* \"StakingPool.sol\":3496:3589  uint256 stakingDaysRemaining = (lockupPeriod.add(stakingStartTime)).sub(stakingTime[account]) */\n      swap1\n      pop\n        /* \"StakingPool.sol\":3765:3779  uint256 reward */\n      0x00\n        /* \"StakingPool.sol\":3782:3873  stakingBalance[account].div(1e6).mul(rewardRateInit).mul(stakingDaysRemaining).div(dayTime) */\n      tag_207\n        /* \"StakingPool.sol\":3865:3872  dayTime */\n      sload(0x0c)\n        /* \"StakingPool.sol\":3782:3860  stakingBalance[account].div(1e6).mul(rewardRateInit).mul(stakingDaysRemaining) */\n      tag_208\n        /* \"StakingPool.sol\":3839:3859  stakingDaysRemaining */\n      dup5\n        /* \"StakingPool.sol\":3782:3834  stakingBalance[account].div(1e6).mul(rewardRateInit) */\n      tag_209\n        /* \"StakingPool.sol\":3819:3833  rewardRateInit */\n      sload(0x04)\n        /* \"StakingPool.sol\":3782:3814  stakingBalance[account].div(1e6) */\n      tag_210\n        /* \"StakingPool.sol\":3810:3813  1e6 */\n      0x0f4240\n        /* \"StakingPool.sol\":3782:3796  stakingBalance */\n      0x07\n        /* \"StakingPool.sol\":3782:3805  stakingBalance[account] */\n      0x00\n        /* \"StakingPool.sol\":3797:3804  account */\n      dup14\n        /* \"StakingPool.sol\":3782:3805  stakingBalance[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"StakingPool.sol\":3782:3809  stakingBalance[account].div */\n      tag_211\n      swap1\n        /* \"StakingPool.sol\":3782:3814  stakingBalance[account].div(1e6) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_210:\n        /* \"StakingPool.sol\":3782:3818  stakingBalance[account].div(1e6).mul */\n      tag_212\n      swap1\n        /* \"StakingPool.sol\":3782:3834  stakingBalance[account].div(1e6).mul(rewardRateInit) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_209:\n        /* \"StakingPool.sol\":3782:3838  stakingBalance[account].div(1e6).mul(rewardRateInit).mul */\n      tag_212\n      swap1\n        /* \"StakingPool.sol\":3782:3860  stakingBalance[account].div(1e6).mul(rewardRateInit).mul(stakingDaysRemaining) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_208:\n        /* \"StakingPool.sol\":3782:3864  stakingBalance[account].div(1e6).mul(rewardRateInit).mul(stakingDaysRemaining).div */\n      tag_211\n      swap1\n        /* \"StakingPool.sol\":3782:3873  stakingBalance[account].div(1e6).mul(rewardRateInit).mul(stakingDaysRemaining).div(dayTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_207:\n        /* \"StakingPool.sol\":3765:3873  uint256 reward = stakingBalance[account].div(1e6).mul(rewardRateInit).mul(stakingDaysRemaining).div(dayTime) */\n      swap1\n      pop\n        /* \"StakingPool.sol\":3890:3896  reward */\n      dup1\n        /* \"StakingPool.sol\":3883:3896  return reward */\n      swap3\n      pop\n      pop\n      pop\n        /* \"StakingPool.sol\":3411:3903  function getRewardForUser(address account) internal view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_196:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_211:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_215\n      swap2\n      swap1\n      tag_216\n      jump\t// in\n    tag_215:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3927:3939  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_212:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_218\n      swap2\n      swap1\n      tag_219\n      jump\t// in\n    tag_218:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3542:3554  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_221:\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_223\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_224\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":59:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:289   */\n    tag_225:\n      0x00\n        /* \"#utility.yul\":237:243   */\n      dup2\n        /* \"#utility.yul\":231:244   */\n      mload\n        /* \"#utility.yul\":222:244   */\n      swap1\n      pop\n        /* \"#utility.yul\":253:283   */\n      tag_227\n        /* \"#utility.yul\":277:282   */\n      dup2\n        /* \"#utility.yul\":253:283   */\n      tag_228\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":212:289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":295:434   */\n    tag_229:\n      0x00\n        /* \"#utility.yul\":379:385   */\n      dup2\n        /* \"#utility.yul\":366:386   */\n      calldataload\n        /* \"#utility.yul\":357:386   */\n      swap1\n      pop\n        /* \"#utility.yul\":395:428   */\n      tag_231\n        /* \"#utility.yul\":422:427   */\n      dup2\n        /* \"#utility.yul\":395:428   */\n      tag_232\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":347:434   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":440:702   */\n    tag_32:\n      0x00\n        /* \"#utility.yul\":548:550   */\n      0x20\n        /* \"#utility.yul\":536:545   */\n      dup3\n        /* \"#utility.yul\":527:534   */\n      dup5\n        /* \"#utility.yul\":523:546   */\n      sub\n        /* \"#utility.yul\":519:551   */\n      slt\n        /* \"#utility.yul\":516:518   */\n      iszero\n      tag_234\n      jumpi\n        /* \"#utility.yul\":564:565   */\n      0x00\n        /* \"#utility.yul\":561:562   */\n      dup1\n        /* \"#utility.yul\":554:566   */\n      revert\n        /* \"#utility.yul\":516:518   */\n    tag_234:\n        /* \"#utility.yul\":607:608   */\n      0x00\n        /* \"#utility.yul\":632:685   */\n      tag_235\n        /* \"#utility.yul\":677:684   */\n      dup5\n        /* \"#utility.yul\":668:674   */\n      dup3\n        /* \"#utility.yul\":657:666   */\n      dup6\n        /* \"#utility.yul\":653:675   */\n      add\n        /* \"#utility.yul\":632:685   */\n      tag_221\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":622:685   */\n      swap2\n      pop\n        /* \"#utility.yul\":578:695   */\n      pop\n        /* \"#utility.yul\":506:702   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":708:986   */\n    tag_110:\n      0x00\n        /* \"#utility.yul\":824:826   */\n      0x20\n        /* \"#utility.yul\":812:821   */\n      dup3\n        /* \"#utility.yul\":803:810   */\n      dup5\n        /* \"#utility.yul\":799:822   */\n      sub\n        /* \"#utility.yul\":795:827   */\n      slt\n        /* \"#utility.yul\":792:794   */\n      iszero\n      tag_237\n      jumpi\n        /* \"#utility.yul\":840:841   */\n      0x00\n        /* \"#utility.yul\":837:838   */\n      dup1\n        /* \"#utility.yul\":830:842   */\n      revert\n        /* \"#utility.yul\":792:794   */\n    tag_237:\n        /* \"#utility.yul\":883:884   */\n      0x00\n        /* \"#utility.yul\":908:969   */\n      tag_238\n        /* \"#utility.yul\":961:968   */\n      dup5\n        /* \"#utility.yul\":952:958   */\n      dup3\n        /* \"#utility.yul\":941:950   */\n      dup6\n        /* \"#utility.yul\":937:959   */\n      add\n        /* \"#utility.yul\":908:969   */\n      tag_225\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":898:969   */\n      swap2\n      pop\n        /* \"#utility.yul\":854:979   */\n      pop\n        /* \"#utility.yul\":782:986   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":992:1254   */\n    tag_45:\n      0x00\n        /* \"#utility.yul\":1100:1102   */\n      0x20\n        /* \"#utility.yul\":1088:1097   */\n      dup3\n        /* \"#utility.yul\":1079:1086   */\n      dup5\n        /* \"#utility.yul\":1075:1098   */\n      sub\n        /* \"#utility.yul\":1071:1103   */\n      slt\n        /* \"#utility.yul\":1068:1070   */\n      iszero\n      tag_240\n      jumpi\n        /* \"#utility.yul\":1116:1117   */\n      0x00\n        /* \"#utility.yul\":1113:1114   */\n      dup1\n        /* \"#utility.yul\":1106:1118   */\n      revert\n        /* \"#utility.yul\":1068:1070   */\n    tag_240:\n        /* \"#utility.yul\":1159:1160   */\n      0x00\n        /* \"#utility.yul\":1184:1237   */\n      tag_241\n        /* \"#utility.yul\":1229:1236   */\n      dup5\n        /* \"#utility.yul\":1220:1226   */\n      dup3\n        /* \"#utility.yul\":1209:1218   */\n      dup6\n        /* \"#utility.yul\":1205:1227   */\n      add\n        /* \"#utility.yul\":1184:1237   */\n      tag_229\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":1174:1237   */\n      swap2\n      pop\n        /* \"#utility.yul\":1130:1247   */\n      pop\n        /* \"#utility.yul\":1058:1254   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1260:1378   */\n    tag_242:\n        /* \"#utility.yul\":1347:1371   */\n      tag_244\n        /* \"#utility.yul\":1365:1370   */\n      dup2\n        /* \"#utility.yul\":1347:1371   */\n      tag_245\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":1342:1345   */\n      dup3\n        /* \"#utility.yul\":1335:1372   */\n      mstore\n        /* \"#utility.yul\":1325:1378   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1384:1543   */\n    tag_246:\n        /* \"#utility.yul\":1485:1536   */\n      tag_248\n        /* \"#utility.yul\":1530:1535   */\n      dup2\n        /* \"#utility.yul\":1485:1536   */\n      tag_249\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":1480:1483   */\n      dup3\n        /* \"#utility.yul\":1473:1537   */\n      mstore\n        /* \"#utility.yul\":1463:1543   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1549:1915   */\n    tag_250:\n      0x00\n        /* \"#utility.yul\":1712:1779   */\n      tag_252\n        /* \"#utility.yul\":1776:1778   */\n      0x16\n        /* \"#utility.yul\":1771:1774   */\n      dup4\n        /* \"#utility.yul\":1712:1779   */\n      tag_253\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":1705:1779   */\n      swap2\n      pop\n        /* \"#utility.yul\":1788:1881   */\n      tag_254\n        /* \"#utility.yul\":1877:1880   */\n      dup3\n        /* \"#utility.yul\":1788:1881   */\n      tag_255\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":1906:1908   */\n      0x20\n        /* \"#utility.yul\":1901:1904   */\n      dup3\n        /* \"#utility.yul\":1897:1909   */\n      add\n        /* \"#utility.yul\":1890:1909   */\n      swap1\n      pop\n        /* \"#utility.yul\":1695:1915   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1921:2286   */\n    tag_256:\n      0x00\n        /* \"#utility.yul\":2084:2150   */\n      tag_258\n        /* \"#utility.yul\":2148:2149   */\n      0x06\n        /* \"#utility.yul\":2143:2146   */\n      dup4\n        /* \"#utility.yul\":2084:2150   */\n      tag_253\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":2077:2150   */\n      swap2\n      pop\n        /* \"#utility.yul\":2159:2252   */\n      tag_259\n        /* \"#utility.yul\":2248:2251   */\n      dup3\n        /* \"#utility.yul\":2159:2252   */\n      tag_260\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":2277:2279   */\n      0x20\n        /* \"#utility.yul\":2272:2275   */\n      dup3\n        /* \"#utility.yul\":2268:2280   */\n      add\n        /* \"#utility.yul\":2261:2280   */\n      swap1\n      pop\n        /* \"#utility.yul\":2067:2286   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2292:2658   */\n    tag_261:\n      0x00\n        /* \"#utility.yul\":2455:2522   */\n      tag_263\n        /* \"#utility.yul\":2519:2521   */\n      0x26\n        /* \"#utility.yul\":2514:2517   */\n      dup4\n        /* \"#utility.yul\":2455:2522   */\n      tag_253\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":2448:2522   */\n      swap2\n      pop\n        /* \"#utility.yul\":2531:2624   */\n      tag_264\n        /* \"#utility.yul\":2620:2623   */\n      dup3\n        /* \"#utility.yul\":2531:2624   */\n      tag_265\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":2649:2651   */\n      0x40\n        /* \"#utility.yul\":2644:2647   */\n      dup3\n        /* \"#utility.yul\":2640:2652   */\n      add\n        /* \"#utility.yul\":2633:2652   */\n      swap1\n      pop\n        /* \"#utility.yul\":2438:2658   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2664:3030   */\n    tag_266:\n      0x00\n        /* \"#utility.yul\":2827:2894   */\n      tag_268\n        /* \"#utility.yul\":2891:2893   */\n      0x0f\n        /* \"#utility.yul\":2886:2889   */\n      dup4\n        /* \"#utility.yul\":2827:2894   */\n      tag_253\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":2820:2894   */\n      swap2\n      pop\n        /* \"#utility.yul\":2903:2996   */\n      tag_269\n        /* \"#utility.yul\":2992:2995   */\n      dup3\n        /* \"#utility.yul\":2903:2996   */\n      tag_270\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":3021:3023   */\n      0x20\n        /* \"#utility.yul\":3016:3019   */\n      dup3\n        /* \"#utility.yul\":3012:3024   */\n      add\n        /* \"#utility.yul\":3005:3024   */\n      swap1\n      pop\n        /* \"#utility.yul\":2810:3030   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3036:3402   */\n    tag_271:\n      0x00\n        /* \"#utility.yul\":3199:3266   */\n      tag_273\n        /* \"#utility.yul\":3263:3265   */\n      0x14\n        /* \"#utility.yul\":3258:3261   */\n      dup4\n        /* \"#utility.yul\":3199:3266   */\n      tag_253\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":3192:3266   */\n      swap2\n      pop\n        /* \"#utility.yul\":3275:3368   */\n      tag_274\n        /* \"#utility.yul\":3364:3367   */\n      dup3\n        /* \"#utility.yul\":3275:3368   */\n      tag_275\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":3393:3395   */\n      0x20\n        /* \"#utility.yul\":3388:3391   */\n      dup3\n        /* \"#utility.yul\":3384:3396   */\n      add\n        /* \"#utility.yul\":3377:3396   */\n      swap1\n      pop\n        /* \"#utility.yul\":3182:3402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3408:3774   */\n    tag_276:\n      0x00\n        /* \"#utility.yul\":3571:3638   */\n      tag_278\n        /* \"#utility.yul\":3635:3637   */\n      0x1f\n        /* \"#utility.yul\":3630:3633   */\n      dup4\n        /* \"#utility.yul\":3571:3638   */\n      tag_253\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":3564:3638   */\n      swap2\n      pop\n        /* \"#utility.yul\":3647:3740   */\n      tag_279\n        /* \"#utility.yul\":3736:3739   */\n      dup3\n        /* \"#utility.yul\":3647:3740   */\n      tag_280\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":3765:3767   */\n      0x20\n        /* \"#utility.yul\":3760:3763   */\n      dup3\n        /* \"#utility.yul\":3756:3768   */\n      add\n        /* \"#utility.yul\":3749:3768   */\n      swap1\n      pop\n        /* \"#utility.yul\":3554:3774   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3780:4146   */\n    tag_281:\n      0x00\n        /* \"#utility.yul\":3943:4010   */\n      tag_283\n        /* \"#utility.yul\":4007:4009   */\n      0x20\n        /* \"#utility.yul\":4002:4005   */\n      dup4\n        /* \"#utility.yul\":3943:4010   */\n      tag_253\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":3936:4010   */\n      swap2\n      pop\n        /* \"#utility.yul\":4019:4112   */\n      tag_284\n        /* \"#utility.yul\":4108:4111   */\n      dup3\n        /* \"#utility.yul\":4019:4112   */\n      tag_285\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":4137:4139   */\n      0x20\n        /* \"#utility.yul\":4132:4135   */\n      dup3\n        /* \"#utility.yul\":4128:4140   */\n      add\n        /* \"#utility.yul\":4121:4140   */\n      swap1\n      pop\n        /* \"#utility.yul\":3926:4146   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4152:4518   */\n    tag_286:\n      0x00\n        /* \"#utility.yul\":4315:4382   */\n      tag_288\n        /* \"#utility.yul\":4379:4381   */\n      0x26\n        /* \"#utility.yul\":4374:4377   */\n      dup4\n        /* \"#utility.yul\":4315:4382   */\n      tag_253\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":4308:4382   */\n      swap2\n      pop\n        /* \"#utility.yul\":4391:4484   */\n      tag_289\n        /* \"#utility.yul\":4480:4483   */\n      dup3\n        /* \"#utility.yul\":4391:4484   */\n      tag_290\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":4509:4511   */\n      0x40\n        /* \"#utility.yul\":4504:4507   */\n      dup3\n        /* \"#utility.yul\":4500:4512   */\n      add\n        /* \"#utility.yul\":4493:4512   */\n      swap1\n      pop\n        /* \"#utility.yul\":4298:4518   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4524:4890   */\n    tag_291:\n      0x00\n        /* \"#utility.yul\":4687:4754   */\n      tag_293\n        /* \"#utility.yul\":4751:4753   */\n      0x1f\n        /* \"#utility.yul\":4746:4749   */\n      dup4\n        /* \"#utility.yul\":4687:4754   */\n      tag_253\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":4680:4754   */\n      swap2\n      pop\n        /* \"#utility.yul\":4763:4856   */\n      tag_294\n        /* \"#utility.yul\":4852:4855   */\n      dup3\n        /* \"#utility.yul\":4763:4856   */\n      tag_295\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":4881:4883   */\n      0x20\n        /* \"#utility.yul\":4876:4879   */\n      dup3\n        /* \"#utility.yul\":4872:4884   */\n      add\n        /* \"#utility.yul\":4865:4884   */\n      swap1\n      pop\n        /* \"#utility.yul\":4670:4890   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4896:5014   */\n    tag_296:\n        /* \"#utility.yul\":4983:5007   */\n      tag_298\n        /* \"#utility.yul\":5001:5006   */\n      dup2\n        /* \"#utility.yul\":4983:5007   */\n      tag_299\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":4978:4981   */\n      dup3\n        /* \"#utility.yul\":4971:5008   */\n      mstore\n        /* \"#utility.yul\":4961:5014   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5020:5242   */\n    tag_70:\n      0x00\n        /* \"#utility.yul\":5151:5153   */\n      0x20\n        /* \"#utility.yul\":5140:5149   */\n      dup3\n        /* \"#utility.yul\":5136:5154   */\n      add\n        /* \"#utility.yul\":5128:5154   */\n      swap1\n      pop\n        /* \"#utility.yul\":5164:5235   */\n      tag_301\n        /* \"#utility.yul\":5232:5233   */\n      0x00\n        /* \"#utility.yul\":5221:5230   */\n      dup4\n        /* \"#utility.yul\":5217:5234   */\n      add\n        /* \"#utility.yul\":5208:5214   */\n      dup5\n        /* \"#utility.yul\":5164:5235   */\n      tag_242\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":5118:5242   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5248:5690   */\n    tag_144:\n      0x00\n        /* \"#utility.yul\":5435:5437   */\n      0x60\n        /* \"#utility.yul\":5424:5433   */\n      dup3\n        /* \"#utility.yul\":5420:5438   */\n      add\n        /* \"#utility.yul\":5412:5438   */\n      swap1\n      pop\n        /* \"#utility.yul\":5448:5519   */\n      tag_303\n        /* \"#utility.yul\":5516:5517   */\n      0x00\n        /* \"#utility.yul\":5505:5514   */\n      dup4\n        /* \"#utility.yul\":5501:5518   */\n      add\n        /* \"#utility.yul\":5492:5498   */\n      dup7\n        /* \"#utility.yul\":5448:5519   */\n      tag_242\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":5529:5601   */\n      tag_304\n        /* \"#utility.yul\":5597:5599   */\n      0x20\n        /* \"#utility.yul\":5586:5595   */\n      dup4\n        /* \"#utility.yul\":5582:5600   */\n      add\n        /* \"#utility.yul\":5573:5579   */\n      dup6\n        /* \"#utility.yul\":5529:5601   */\n      tag_242\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":5611:5683   */\n      tag_305\n        /* \"#utility.yul\":5679:5681   */\n      0x40\n        /* \"#utility.yul\":5668:5677   */\n      dup4\n        /* \"#utility.yul\":5664:5682   */\n      add\n        /* \"#utility.yul\":5655:5661   */\n      dup5\n        /* \"#utility.yul\":5611:5683   */\n      tag_296\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":5402:5690   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5696:6028   */\n    tag_105:\n      0x00\n        /* \"#utility.yul\":5855:5857   */\n      0x40\n        /* \"#utility.yul\":5844:5853   */\n      dup3\n        /* \"#utility.yul\":5840:5858   */\n      add\n        /* \"#utility.yul\":5832:5858   */\n      swap1\n      pop\n        /* \"#utility.yul\":5868:5939   */\n      tag_307\n        /* \"#utility.yul\":5936:5937   */\n      0x00\n        /* \"#utility.yul\":5925:5934   */\n      dup4\n        /* \"#utility.yul\":5921:5938   */\n      add\n        /* \"#utility.yul\":5912:5918   */\n      dup6\n        /* \"#utility.yul\":5868:5939   */\n      tag_242\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":5949:6021   */\n      tag_308\n        /* \"#utility.yul\":6017:6019   */\n      0x20\n        /* \"#utility.yul\":6006:6015   */\n      dup4\n        /* \"#utility.yul\":6002:6020   */\n      add\n        /* \"#utility.yul\":5993:5999   */\n      dup5\n        /* \"#utility.yul\":5949:6021   */\n      tag_296\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":5822:6028   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6034:6284   */\n    tag_85:\n      0x00\n        /* \"#utility.yul\":6179:6181   */\n      0x20\n        /* \"#utility.yul\":6168:6177   */\n      dup3\n        /* \"#utility.yul\":6164:6182   */\n      add\n        /* \"#utility.yul\":6156:6182   */\n      swap1\n      pop\n        /* \"#utility.yul\":6192:6277   */\n      tag_310\n        /* \"#utility.yul\":6274:6275   */\n      0x00\n        /* \"#utility.yul\":6263:6272   */\n      dup4\n        /* \"#utility.yul\":6259:6276   */\n      add\n        /* \"#utility.yul\":6250:6256   */\n      dup5\n        /* \"#utility.yul\":6192:6277   */\n      tag_246\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":6146:6284   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6290:6709   */\n    tag_165:\n      0x00\n        /* \"#utility.yul\":6494:6496   */\n      0x20\n        /* \"#utility.yul\":6483:6492   */\n      dup3\n        /* \"#utility.yul\":6479:6497   */\n      add\n        /* \"#utility.yul\":6471:6497   */\n      swap1\n      pop\n        /* \"#utility.yul\":6543:6552   */\n      dup2\n        /* \"#utility.yul\":6537:6541   */\n      dup2\n        /* \"#utility.yul\":6533:6553   */\n      sub\n        /* \"#utility.yul\":6529:6530   */\n      0x00\n        /* \"#utility.yul\":6518:6527   */\n      dup4\n        /* \"#utility.yul\":6514:6531   */\n      add\n        /* \"#utility.yul\":6507:6554   */\n      mstore\n        /* \"#utility.yul\":6571:6702   */\n      tag_312\n        /* \"#utility.yul\":6697:6701   */\n      dup2\n        /* \"#utility.yul\":6571:6702   */\n      tag_250\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":6563:6702   */\n      swap1\n      pop\n        /* \"#utility.yul\":6461:6709   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6715:7134   */\n    tag_100:\n      0x00\n        /* \"#utility.yul\":6919:6921   */\n      0x20\n        /* \"#utility.yul\":6908:6917   */\n      dup3\n        /* \"#utility.yul\":6904:6922   */\n      add\n        /* \"#utility.yul\":6896:6922   */\n      swap1\n      pop\n        /* \"#utility.yul\":6968:6977   */\n      dup2\n        /* \"#utility.yul\":6962:6966   */\n      dup2\n        /* \"#utility.yul\":6958:6978   */\n      sub\n        /* \"#utility.yul\":6954:6955   */\n      0x00\n        /* \"#utility.yul\":6943:6952   */\n      dup4\n        /* \"#utility.yul\":6939:6956   */\n      add\n        /* \"#utility.yul\":6932:6979   */\n      mstore\n        /* \"#utility.yul\":6996:7127   */\n      tag_314\n        /* \"#utility.yul\":7122:7126   */\n      dup2\n        /* \"#utility.yul\":6996:7127   */\n      tag_256\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":6988:7127   */\n      swap1\n      pop\n        /* \"#utility.yul\":6886:7134   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7140:7559   */\n    tag_181:\n      0x00\n        /* \"#utility.yul\":7344:7346   */\n      0x20\n        /* \"#utility.yul\":7333:7342   */\n      dup3\n        /* \"#utility.yul\":7329:7347   */\n      add\n        /* \"#utility.yul\":7321:7347   */\n      swap1\n      pop\n        /* \"#utility.yul\":7393:7402   */\n      dup2\n        /* \"#utility.yul\":7387:7391   */\n      dup2\n        /* \"#utility.yul\":7383:7403   */\n      sub\n        /* \"#utility.yul\":7379:7380   */\n      0x00\n        /* \"#utility.yul\":7368:7377   */\n      dup4\n        /* \"#utility.yul\":7364:7381   */\n      add\n        /* \"#utility.yul\":7357:7404   */\n      mstore\n        /* \"#utility.yul\":7421:7552   */\n      tag_316\n        /* \"#utility.yul\":7547:7551   */\n      dup2\n        /* \"#utility.yul\":7421:7552   */\n      tag_261\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":7413:7552   */\n      swap1\n      pop\n        /* \"#utility.yul\":7311:7559   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7565:7984   */\n    tag_113:\n      0x00\n        /* \"#utility.yul\":7769:7771   */\n      0x20\n        /* \"#utility.yul\":7758:7767   */\n      dup3\n        /* \"#utility.yul\":7754:7772   */\n      add\n        /* \"#utility.yul\":7746:7772   */\n      swap1\n      pop\n        /* \"#utility.yul\":7818:7827   */\n      dup2\n        /* \"#utility.yul\":7812:7816   */\n      dup2\n        /* \"#utility.yul\":7808:7828   */\n      sub\n        /* \"#utility.yul\":7804:7805   */\n      0x00\n        /* \"#utility.yul\":7793:7802   */\n      dup4\n        /* \"#utility.yul\":7789:7806   */\n      add\n        /* \"#utility.yul\":7782:7829   */\n      mstore\n        /* \"#utility.yul\":7846:7977   */\n      tag_318\n        /* \"#utility.yul\":7972:7976   */\n      dup2\n        /* \"#utility.yul\":7846:7977   */\n      tag_266\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":7838:7977   */\n      swap1\n      pop\n        /* \"#utility.yul\":7736:7984   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7990:8409   */\n    tag_103:\n      0x00\n        /* \"#utility.yul\":8194:8196   */\n      0x20\n        /* \"#utility.yul\":8183:8192   */\n      dup3\n        /* \"#utility.yul\":8179:8197   */\n      add\n        /* \"#utility.yul\":8171:8197   */\n      swap1\n      pop\n        /* \"#utility.yul\":8243:8252   */\n      dup2\n        /* \"#utility.yul\":8237:8241   */\n      dup2\n        /* \"#utility.yul\":8233:8253   */\n      sub\n        /* \"#utility.yul\":8229:8230   */\n      0x00\n        /* \"#utility.yul\":8218:8227   */\n      dup4\n        /* \"#utility.yul\":8214:8231   */\n      add\n        /* \"#utility.yul\":8207:8254   */\n      mstore\n        /* \"#utility.yul\":8271:8402   */\n      tag_320\n        /* \"#utility.yul\":8397:8401   */\n      dup2\n        /* \"#utility.yul\":8271:8402   */\n      tag_271\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":8263:8402   */\n      swap1\n      pop\n        /* \"#utility.yul\":8161:8409   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8415:8834   */\n    tag_142:\n      0x00\n        /* \"#utility.yul\":8619:8621   */\n      0x20\n        /* \"#utility.yul\":8608:8617   */\n      dup3\n        /* \"#utility.yul\":8604:8622   */\n      add\n        /* \"#utility.yul\":8596:8622   */\n      swap1\n      pop\n        /* \"#utility.yul\":8668:8677   */\n      dup2\n        /* \"#utility.yul\":8662:8666   */\n      dup2\n        /* \"#utility.yul\":8658:8678   */\n      sub\n        /* \"#utility.yul\":8654:8655   */\n      0x00\n        /* \"#utility.yul\":8643:8652   */\n      dup4\n        /* \"#utility.yul\":8639:8656   */\n      add\n        /* \"#utility.yul\":8632:8679   */\n      mstore\n        /* \"#utility.yul\":8696:8827   */\n      tag_322\n        /* \"#utility.yul\":8822:8826   */\n      dup2\n        /* \"#utility.yul\":8696:8827   */\n      tag_276\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":8688:8827   */\n      swap1\n      pop\n        /* \"#utility.yul\":8586:8834   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8840:9259   */\n    tag_200:\n      0x00\n        /* \"#utility.yul\":9044:9046   */\n      0x20\n        /* \"#utility.yul\":9033:9042   */\n      dup3\n        /* \"#utility.yul\":9029:9047   */\n      add\n        /* \"#utility.yul\":9021:9047   */\n      swap1\n      pop\n        /* \"#utility.yul\":9093:9102   */\n      dup2\n        /* \"#utility.yul\":9087:9091   */\n      dup2\n        /* \"#utility.yul\":9083:9103   */\n      sub\n        /* \"#utility.yul\":9079:9080   */\n      0x00\n        /* \"#utility.yul\":9068:9077   */\n      dup4\n        /* \"#utility.yul\":9064:9081   */\n      add\n        /* \"#utility.yul\":9057:9104   */\n      mstore\n        /* \"#utility.yul\":9121:9252   */\n      tag_324\n        /* \"#utility.yul\":9247:9251   */\n      dup2\n        /* \"#utility.yul\":9121:9252   */\n      tag_281\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":9113:9252   */\n      swap1\n      pop\n        /* \"#utility.yul\":9011:9259   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9265:9684   */\n    tag_139:\n      0x00\n        /* \"#utility.yul\":9469:9471   */\n      0x20\n        /* \"#utility.yul\":9458:9467   */\n      dup3\n        /* \"#utility.yul\":9454:9472   */\n      add\n        /* \"#utility.yul\":9446:9472   */\n      swap1\n      pop\n        /* \"#utility.yul\":9518:9527   */\n      dup2\n        /* \"#utility.yul\":9512:9516   */\n      dup2\n        /* \"#utility.yul\":9508:9528   */\n      sub\n        /* \"#utility.yul\":9504:9505   */\n      0x00\n        /* \"#utility.yul\":9493:9502   */\n      dup4\n        /* \"#utility.yul\":9489:9506   */\n      add\n        /* \"#utility.yul\":9482:9529   */\n      mstore\n        /* \"#utility.yul\":9546:9677   */\n      tag_326\n        /* \"#utility.yul\":9672:9676   */\n      dup2\n        /* \"#utility.yul\":9546:9677   */\n      tag_286\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":9538:9677   */\n      swap1\n      pop\n        /* \"#utility.yul\":9436:9684   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9690:10109   */\n    tag_189:\n      0x00\n        /* \"#utility.yul\":9894:9896   */\n      0x20\n        /* \"#utility.yul\":9883:9892   */\n      dup3\n        /* \"#utility.yul\":9879:9897   */\n      add\n        /* \"#utility.yul\":9871:9897   */\n      swap1\n      pop\n        /* \"#utility.yul\":9943:9952   */\n      dup2\n        /* \"#utility.yul\":9937:9941   */\n      dup2\n        /* \"#utility.yul\":9933:9953   */\n      sub\n        /* \"#utility.yul\":9929:9930   */\n      0x00\n        /* \"#utility.yul\":9918:9927   */\n      dup4\n        /* \"#utility.yul\":9914:9931   */\n      add\n        /* \"#utility.yul\":9907:9954   */\n      mstore\n        /* \"#utility.yul\":9971:10102   */\n      tag_328\n        /* \"#utility.yul\":10097:10101   */\n      dup2\n        /* \"#utility.yul\":9971:10102   */\n      tag_291\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":9963:10102   */\n      swap1\n      pop\n        /* \"#utility.yul\":9861:10109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10115:10337   */\n    tag_29:\n      0x00\n        /* \"#utility.yul\":10246:10248   */\n      0x20\n        /* \"#utility.yul\":10235:10244   */\n      dup3\n        /* \"#utility.yul\":10231:10249   */\n      add\n        /* \"#utility.yul\":10223:10249   */\n      swap1\n      pop\n        /* \"#utility.yul\":10259:10330   */\n      tag_330\n        /* \"#utility.yul\":10327:10328   */\n      0x00\n        /* \"#utility.yul\":10316:10325   */\n      dup4\n        /* \"#utility.yul\":10312:10329   */\n      add\n        /* \"#utility.yul\":10303:10309   */\n      dup5\n        /* \"#utility.yul\":10259:10330   */\n      tag_296\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":10213:10337   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10343:10512   */\n    tag_253:\n      0x00\n        /* \"#utility.yul\":10461:10467   */\n      dup3\n        /* \"#utility.yul\":10456:10459   */\n      dup3\n        /* \"#utility.yul\":10449:10468   */\n      mstore\n        /* \"#utility.yul\":10501:10505   */\n      0x20\n        /* \"#utility.yul\":10496:10499   */\n      dup3\n        /* \"#utility.yul\":10492:10506   */\n      add\n        /* \"#utility.yul\":10477:10506   */\n      swap1\n      pop\n        /* \"#utility.yul\":10439:10512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10518:10823   */\n    tag_97:\n      0x00\n        /* \"#utility.yul\":10577:10597   */\n      tag_333\n        /* \"#utility.yul\":10595:10596   */\n      dup3\n        /* \"#utility.yul\":10577:10597   */\n      tag_299\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":10572:10597   */\n      swap2\n      pop\n        /* \"#utility.yul\":10611:10631   */\n      tag_334\n        /* \"#utility.yul\":10629:10630   */\n      dup4\n        /* \"#utility.yul\":10611:10631   */\n      tag_299\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":10606:10631   */\n      swap3\n      pop\n        /* \"#utility.yul\":10765:10766   */\n      dup3\n        /* \"#utility.yul\":10697:10763   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10693:10767   */\n      sub\n        /* \"#utility.yul\":10690:10691   */\n      dup3\n        /* \"#utility.yul\":10687:10768   */\n      gt\n        /* \"#utility.yul\":10684:10686   */\n      iszero\n      tag_335\n      jumpi\n        /* \"#utility.yul\":10771:10789   */\n      tag_336\n      tag_337\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":10684:10686   */\n    tag_335:\n        /* \"#utility.yul\":10815:10816   */\n      dup3\n        /* \"#utility.yul\":10812:10813   */\n      dup3\n        /* \"#utility.yul\":10808:10817   */\n      add\n        /* \"#utility.yul\":10801:10817   */\n      swap1\n      pop\n        /* \"#utility.yul\":10562:10823   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10829:11014   */\n    tag_216:\n      0x00\n        /* \"#utility.yul\":10886:10906   */\n      tag_339\n        /* \"#utility.yul\":10904:10905   */\n      dup3\n        /* \"#utility.yul\":10886:10906   */\n      tag_299\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":10881:10906   */\n      swap2\n      pop\n        /* \"#utility.yul\":10920:10940   */\n      tag_340\n        /* \"#utility.yul\":10938:10939   */\n      dup4\n        /* \"#utility.yul\":10920:10940   */\n      tag_299\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":10915:10940   */\n      swap3\n      pop\n        /* \"#utility.yul\":10959:10960   */\n      dup3\n        /* \"#utility.yul\":10949:10951   */\n      tag_341\n      jumpi\n        /* \"#utility.yul\":10964:10982   */\n      tag_342\n      tag_343\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":10949:10951   */\n    tag_341:\n        /* \"#utility.yul\":11006:11007   */\n      dup3\n        /* \"#utility.yul\":11003:11004   */\n      dup3\n        /* \"#utility.yul\":10999:11008   */\n      div\n        /* \"#utility.yul\":10994:11008   */\n      swap1\n      pop\n        /* \"#utility.yul\":10871:11014   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11020:11368   */\n    tag_219:\n      0x00\n        /* \"#utility.yul\":11083:11103   */\n      tag_345\n        /* \"#utility.yul\":11101:11102   */\n      dup3\n        /* \"#utility.yul\":11083:11103   */\n      tag_299\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":11078:11103   */\n      swap2\n      pop\n        /* \"#utility.yul\":11117:11137   */\n      tag_346\n        /* \"#utility.yul\":11135:11136   */\n      dup4\n        /* \"#utility.yul\":11117:11137   */\n      tag_299\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":11112:11137   */\n      swap3\n      pop\n        /* \"#utility.yul\":11305:11306   */\n      dup2\n        /* \"#utility.yul\":11237:11303   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11233:11307   */\n      div\n        /* \"#utility.yul\":11230:11231   */\n      dup4\n        /* \"#utility.yul\":11227:11308   */\n      gt\n        /* \"#utility.yul\":11222:11223   */\n      dup3\n        /* \"#utility.yul\":11215:11224   */\n      iszero\n        /* \"#utility.yul\":11208:11225   */\n      iszero\n        /* \"#utility.yul\":11204:11309   */\n      and\n        /* \"#utility.yul\":11201:11203   */\n      iszero\n      tag_347\n      jumpi\n        /* \"#utility.yul\":11312:11330   */\n      tag_348\n      tag_337\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":11201:11203   */\n    tag_347:\n        /* \"#utility.yul\":11360:11361   */\n      dup3\n        /* \"#utility.yul\":11357:11358   */\n      dup3\n        /* \"#utility.yul\":11353:11362   */\n      mul\n        /* \"#utility.yul\":11342:11362   */\n      swap1\n      pop\n        /* \"#utility.yul\":11068:11368   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11374:11565   */\n    tag_192:\n      0x00\n        /* \"#utility.yul\":11434:11454   */\n      tag_350\n        /* \"#utility.yul\":11452:11453   */\n      dup3\n        /* \"#utility.yul\":11434:11454   */\n      tag_299\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":11429:11454   */\n      swap2\n      pop\n        /* \"#utility.yul\":11468:11488   */\n      tag_351\n        /* \"#utility.yul\":11486:11487   */\n      dup4\n        /* \"#utility.yul\":11468:11488   */\n      tag_299\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":11463:11488   */\n      swap3\n      pop\n        /* \"#utility.yul\":11507:11508   */\n      dup3\n        /* \"#utility.yul\":11504:11505   */\n      dup3\n        /* \"#utility.yul\":11501:11509   */\n      lt\n        /* \"#utility.yul\":11498:11500   */\n      iszero\n      tag_352\n      jumpi\n        /* \"#utility.yul\":11512:11530   */\n      tag_353\n      tag_337\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":11498:11500   */\n    tag_352:\n        /* \"#utility.yul\":11557:11558   */\n      dup3\n        /* \"#utility.yul\":11554:11555   */\n      dup3\n        /* \"#utility.yul\":11550:11559   */\n      sub\n        /* \"#utility.yul\":11542:11559   */\n      swap1\n      pop\n        /* \"#utility.yul\":11419:11565   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11571:11667   */\n    tag_245:\n      0x00\n        /* \"#utility.yul\":11637:11661   */\n      tag_355\n        /* \"#utility.yul\":11655:11660   */\n      dup3\n        /* \"#utility.yul\":11637:11661   */\n      tag_356\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":11626:11661   */\n      swap1\n      pop\n        /* \"#utility.yul\":11616:11667   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11673:11763   */\n    tag_357:\n      0x00\n        /* \"#utility.yul\":11750:11755   */\n      dup2\n        /* \"#utility.yul\":11743:11756   */\n      iszero\n        /* \"#utility.yul\":11736:11757   */\n      iszero\n        /* \"#utility.yul\":11725:11757   */\n      swap1\n      pop\n        /* \"#utility.yul\":11715:11763   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11769:11895   */\n    tag_356:\n      0x00\n        /* \"#utility.yul\":11846:11888   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11839:11844   */\n      dup3\n        /* \"#utility.yul\":11835:11889   */\n      and\n        /* \"#utility.yul\":11824:11889   */\n      swap1\n      pop\n        /* \"#utility.yul\":11814:11895   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11901:11978   */\n    tag_299:\n      0x00\n        /* \"#utility.yul\":11967:11972   */\n      dup2\n        /* \"#utility.yul\":11956:11972   */\n      swap1\n      pop\n        /* \"#utility.yul\":11946:11978   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11984:12138   */\n    tag_249:\n      0x00\n        /* \"#utility.yul\":12081:12132   */\n      tag_362\n        /* \"#utility.yul\":12126:12131   */\n      dup3\n        /* \"#utility.yul\":12081:12132   */\n      tag_363\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":12068:12132   */\n      swap1\n      pop\n        /* \"#utility.yul\":12058:12138   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12144:12271   */\n    tag_363:\n      0x00\n        /* \"#utility.yul\":12241:12265   */\n      tag_365\n        /* \"#utility.yul\":12259:12264   */\n      dup3\n        /* \"#utility.yul\":12241:12265   */\n      tag_356\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":12228:12265   */\n      swap1\n      pop\n        /* \"#utility.yul\":12218:12271   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12277:12457   */\n    tag_337:\n        /* \"#utility.yul\":12325:12402   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12322:12323   */\n      0x00\n        /* \"#utility.yul\":12315:12403   */\n      mstore\n        /* \"#utility.yul\":12422:12426   */\n      0x11\n        /* \"#utility.yul\":12419:12420   */\n      0x04\n        /* \"#utility.yul\":12412:12427   */\n      mstore\n        /* \"#utility.yul\":12446:12450   */\n      0x24\n        /* \"#utility.yul\":12443:12444   */\n      0x00\n        /* \"#utility.yul\":12436:12451   */\n      revert\n        /* \"#utility.yul\":12463:12643   */\n    tag_343:\n        /* \"#utility.yul\":12511:12588   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12508:12509   */\n      0x00\n        /* \"#utility.yul\":12501:12589   */\n      mstore\n        /* \"#utility.yul\":12608:12612   */\n      0x12\n        /* \"#utility.yul\":12605:12606   */\n      0x04\n        /* \"#utility.yul\":12598:12613   */\n      mstore\n        /* \"#utility.yul\":12632:12636   */\n      0x24\n        /* \"#utility.yul\":12629:12630   */\n      0x00\n        /* \"#utility.yul\":12622:12637   */\n      revert\n        /* \"#utility.yul\":12649:12821   */\n    tag_255:\n        /* \"#utility.yul\":12789:12813   */\n      0x4164647265737320776173206e6f74207374616b656400000000000000000000\n        /* \"#utility.yul\":12785:12786   */\n      0x00\n        /* \"#utility.yul\":12777:12783   */\n      dup3\n        /* \"#utility.yul\":12773:12787   */\n      add\n        /* \"#utility.yul\":12766:12814   */\n      mstore\n        /* \"#utility.yul\":12755:12821   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12827:12983   */\n    tag_260:\n        /* \"#utility.yul\":12967:12975   */\n      0x4c6f636b65640000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12963:12964   */\n      0x00\n        /* \"#utility.yul\":12955:12961   */\n      dup3\n        /* \"#utility.yul\":12951:12965   */\n      add\n        /* \"#utility.yul\":12944:12976   */\n      mstore\n        /* \"#utility.yul\":12933:12983   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12989:13214   */\n    tag_265:\n        /* \"#utility.yul\":13129:13163   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":13125:13126   */\n      0x00\n        /* \"#utility.yul\":13117:13123   */\n      dup3\n        /* \"#utility.yul\":13113:13127   */\n      add\n        /* \"#utility.yul\":13106:13164   */\n      mstore\n        /* \"#utility.yul\":13198:13206   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13193:13195   */\n      0x20\n        /* \"#utility.yul\":13185:13191   */\n      dup3\n        /* \"#utility.yul\":13181:13196   */\n      add\n        /* \"#utility.yul\":13174:13207   */\n      mstore\n        /* \"#utility.yul\":13095:13214   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13220:13385   */\n    tag_270:\n        /* \"#utility.yul\":13360:13377   */\n      0x5472616e73666572206661696c65640000000000000000000000000000000000\n        /* \"#utility.yul\":13356:13357   */\n      0x00\n        /* \"#utility.yul\":13348:13354   */\n      dup3\n        /* \"#utility.yul\":13344:13358   */\n      add\n        /* \"#utility.yul\":13337:13378   */\n      mstore\n        /* \"#utility.yul\":13326:13385   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13391:13561   */\n    tag_275:\n        /* \"#utility.yul\":13531:13553   */\n      0x496e73756666696369656e742062616c616e6365000000000000000000000000\n        /* \"#utility.yul\":13527:13528   */\n      0x00\n        /* \"#utility.yul\":13519:13525   */\n      dup3\n        /* \"#utility.yul\":13515:13529   */\n      add\n        /* \"#utility.yul\":13508:13554   */\n      mstore\n        /* \"#utility.yul\":13497:13561   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13567:13748   */\n    tag_280:\n        /* \"#utility.yul\":13707:13740   */\n      0x416d6f756e742073686f756c642067726561746572207468616e207a65726f00\n        /* \"#utility.yul\":13703:13704   */\n      0x00\n        /* \"#utility.yul\":13695:13701   */\n      dup3\n        /* \"#utility.yul\":13691:13705   */\n      add\n        /* \"#utility.yul\":13684:13741   */\n      mstore\n        /* \"#utility.yul\":13673:13748   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13754:13936   */\n    tag_285:\n        /* \"#utility.yul\":13894:13928   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":13890:13891   */\n      0x00\n        /* \"#utility.yul\":13882:13888   */\n      dup3\n        /* \"#utility.yul\":13878:13892   */\n      add\n        /* \"#utility.yul\":13871:13929   */\n      mstore\n        /* \"#utility.yul\":13860:13936   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13942:14167   */\n    tag_290:\n        /* \"#utility.yul\":14082:14116   */\n      0x5468652063757272656e74207374616b696e6720616374697669747920686173\n        /* \"#utility.yul\":14078:14079   */\n      0x00\n        /* \"#utility.yul\":14070:14076   */\n      dup3\n        /* \"#utility.yul\":14066:14080   */\n      add\n        /* \"#utility.yul\":14059:14117   */\n      mstore\n        /* \"#utility.yul\":14151:14159   */\n      0x20656e6465640000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14146:14148   */\n      0x20\n        /* \"#utility.yul\":14138:14144   */\n      dup3\n        /* \"#utility.yul\":14134:14149   */\n      add\n        /* \"#utility.yul\":14127:14160   */\n      mstore\n        /* \"#utility.yul\":14048:14167   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14173:14354   */\n    tag_295:\n        /* \"#utility.yul\":14313:14346   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":14309:14310   */\n      0x00\n        /* \"#utility.yul\":14301:14307   */\n      dup3\n        /* \"#utility.yul\":14297:14311   */\n      add\n        /* \"#utility.yul\":14290:14347   */\n      mstore\n        /* \"#utility.yul\":14279:14354   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14360:14482   */\n    tag_224:\n        /* \"#utility.yul\":14433:14457   */\n      tag_378\n        /* \"#utility.yul\":14451:14456   */\n      dup2\n        /* \"#utility.yul\":14433:14457   */\n      tag_245\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":14426:14431   */\n      dup2\n        /* \"#utility.yul\":14423:14458   */\n      eq\n        /* \"#utility.yul\":14413:14415   */\n      tag_379\n      jumpi\n        /* \"#utility.yul\":14472:14473   */\n      0x00\n        /* \"#utility.yul\":14469:14470   */\n      dup1\n        /* \"#utility.yul\":14462:14474   */\n      revert\n        /* \"#utility.yul\":14413:14415   */\n    tag_379:\n        /* \"#utility.yul\":14403:14482   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14488:14604   */\n    tag_228:\n        /* \"#utility.yul\":14558:14579   */\n      tag_381\n        /* \"#utility.yul\":14573:14578   */\n      dup2\n        /* \"#utility.yul\":14558:14579   */\n      tag_357\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":14551:14556   */\n      dup2\n        /* \"#utility.yul\":14548:14580   */\n      eq\n        /* \"#utility.yul\":14538:14540   */\n      tag_382\n      jumpi\n        /* \"#utility.yul\":14594:14595   */\n      0x00\n        /* \"#utility.yul\":14591:14592   */\n      dup1\n        /* \"#utility.yul\":14584:14596   */\n      revert\n        /* \"#utility.yul\":14538:14540   */\n    tag_382:\n        /* \"#utility.yul\":14528:14604   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14610:14732   */\n    tag_232:\n        /* \"#utility.yul\":14683:14707   */\n      tag_384\n        /* \"#utility.yul\":14701:14706   */\n      dup2\n        /* \"#utility.yul\":14683:14707   */\n      tag_299\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":14676:14681   */\n      dup2\n        /* \"#utility.yul\":14673:14708   */\n      eq\n        /* \"#utility.yul\":14663:14665   */\n      tag_385\n      jumpi\n        /* \"#utility.yul\":14722:14723   */\n      0x00\n        /* \"#utility.yul\":14719:14720   */\n      dup1\n        /* \"#utility.yul\":14712:14724   */\n      revert\n        /* \"#utility.yul\":14663:14665   */\n    tag_385:\n        /* \"#utility.yul\":14653:14732   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122078ac86065fed6dfb0293c59edee0f441711d57c23b37542aa816a1a3bf5a750764736f6c63430008010033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1634:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:6"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:6",
														"type": ""
													}
												],
												"src": "7:143:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "219:80:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "229:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "244:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "238:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "238:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "229:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "287:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "260:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "260:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "260:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "197:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "205:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "213:5:6",
														"type": ""
													}
												],
												"src": "156:143:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "433:625:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "480:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "489:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "492:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "482:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "482:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "482:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "454:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "463:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "450:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "450:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "475:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "446:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "446:33:6"
															},
															"nodeType": "YulIf",
															"src": "443:2:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "506:128:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "521:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "535:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "525:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "550:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "596:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "607:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "592:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "592:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "616:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "560:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "560:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "550:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "644:129:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "659:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "673:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "663:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "689:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "735:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "746:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "731:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "731:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "755:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "699:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "699:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "689:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "783:129:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "798:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "812:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "802:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "828:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "874:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "885:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "870:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "870:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "894:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "838:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "838:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "828:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "922:129:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "937:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "951:2:6",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "941:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "967:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1013:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1024:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1009:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1009:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1033:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "977:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "977:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "967:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "379:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "390:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "402:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "410:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "418:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "426:6:6",
														"type": ""
													}
												],
												"src": "305:753:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1109:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1119:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1148:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1130:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1130:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1119:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1091:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1101:7:6",
														"type": ""
													}
												],
												"src": "1064:96:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1211:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1221:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1236:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1243:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1232:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1232:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1221:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1193:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1203:7:6",
														"type": ""
													}
												],
												"src": "1166:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1343:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1353:16:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1364:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1353:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1325:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1335:7:6",
														"type": ""
													}
												],
												"src": "1298:77:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1424:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1481:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1490:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1493:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1483:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1483:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1483:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1447:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1472:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1454:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1454:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1444:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1444:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1437:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1437:43:6"
															},
															"nodeType": "YulIf",
															"src": "1434:2:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1417:5:6",
														"type": ""
													}
												],
												"src": "1381:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1552:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1609:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1618:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1621:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1611:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1611:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1611:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1575:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1600:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1582:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1582:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1572:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1572:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1565:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1565:43:6"
															},
															"nodeType": "YulIf",
															"src": "1562:2:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1545:5:6",
														"type": ""
													}
												],
												"src": "1509:122:6"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405262015180600c553480156200001857600080fd5b5060405162001c6138038062001c6183398181016040528101906200003e919062000200565b6200005e620000526200010660201b60201c565b6200010e60201b60201c565b6001808190555083600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600481905550806005819055504260068190555050505050620002de565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050620001e381620002aa565b92915050565b600081519050620001fa81620002c4565b92915050565b600080600080608085870312156200021757600080fd5b60006200022787828801620001d2565b94505060206200023a87828801620001d2565b93505060406200024d87828801620001e9565b92505060606200026087828801620001e9565b91505092959194509250565b6000620002798262000280565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b620002b5816200026c565b8114620002c157600080fd5b50565b620002cf81620002a0565b8114620002db57600080fd5b50565b61197380620002ee6000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c80638aee8127116100ad578063ee947a7c11610071578063ee947a7c146102f9578063f2fde38b14610317578063f7c618c114610333578063fc0c546a14610351578063fc71ae8c1461036f5761012c565b80638aee81271461027b5780638b0e9f3f146102975780638da5cb5b146102b5578063a694fc3a146102d3578063b88a802f146102ef5761012c565b80635d90bad9116100f45780635d90bad9146101fb5780636abfd18314610217578063715018a614610235578063750142e61461023f57806380c0976e1461025d5761012c565b8063154a78b5146101315780631683153d1461014f57806345bc78ab1461017f578063583d42fd146101af5780635d3eea91146101df575b600080fd5b61013961038b565b6040516101469190611530565b60405180910390f35b61016960048036038101906101649190611197565b610391565b6040516101769190611530565b60405180910390f35b61019960048036038101906101949190611197565b6103a9565b6040516101a69190611530565b60405180910390f35b6101c960048036038101906101c49190611197565b6103c1565b6040516101d69190611530565b60405180910390f35b6101f960048036038101906101f491906111e9565b6103d9565b005b610215600480360381019061021091906111e9565b6106ac565b005b61021f6106be565b60405161022c9190611530565b60405180910390f35b61023d6106c4565b005b6102476106d8565b6040516102549190611530565b60405180910390f35b6102656106de565b6040516102729190611530565b60405180910390f35b61029560048036038101906102909190611197565b6106e4565b005b61029f610730565b6040516102ac9190611530565b60405180910390f35b6102bd610736565b6040516102ca919061137a565b60405180910390f35b6102ed60048036038101906102e891906111e9565b61075f565b005b6102f7610af6565b005b610301610d6b565b60405161030e9190611530565b60405180910390f35b610331600480360381019061032c9190611197565b610d71565b005b61033b610df5565b60405161034891906113f5565b60405180910390f35b610359610e1b565b60405161036691906113f5565b60405180910390f35b610389600480360381019061038491906111e9565b610e41565b005b60045481565b60096020528060005260406000206000915090505481565b60076020528060005260406000206000915090505481565b60086020528060005260406000206000915090505481565b6103e1610e53565b6005546006546103f1919061155c565b421015610433576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042a90611430565b60405180910390fd5b80600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156104b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ac90611490565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016105129291906113cc565b602060405180830381600087803b15801561052c57600080fd5b505af1158015610540573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056491906111c0565b6105a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059a90611470565b60405180910390fd5b6105f581600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ea390919063ffffffff16565b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061064d81600a54610ea390919063ffffffff16565b600a819055503373ffffffffffffffffffffffffffffffffffffffff167fb24546d975e2628748efc9aced80665e0fad66272033e5c0ea25fd3afac99795826040516106999190611530565b60405180910390a26106a9610eb9565b50565b6106b4610ec2565b8060068190555050565b60065481565b6106cc610ec2565b6106d66000610f40565b565b600b5481565b600c5481565b6106ec610ec2565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600a5481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610767610e53565b600554600654610777919061155c565b42106107b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107af906114f0565b60405180910390fd5b600081116107fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f2906114b0565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161085a93929190611395565b602060405180830381600087803b15801561087457600080fd5b505af1158015610888573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ac91906111c0565b6108eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e290611470565b60405180910390fd5b61093d81600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461100490919063ffffffff16565b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555042600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060006109cf3361101a565b9050610a2381600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461100490919063ffffffff16565b600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610a7b82600a5461100490919063ffffffff16565b600a81905550610a9681600b5461100490919063ffffffff16565b600b819055503373ffffffffffffffffffffffffffffffffffffffff167febedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a83604051610ae29190611530565b60405180910390a250610af3610eb9565b50565b610afe610e53565b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411610b80576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7790611410565b60405180910390fd5b6000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610c219291906113cc565b602060405180830381600087803b158015610c3b57600080fd5b505af1158015610c4f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c7391906111c0565b610cb2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca990611470565b60405180910390fd5b6000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610d0c81600b54610ea390919063ffffffff16565b600b819055503373ffffffffffffffffffffffffffffffffffffffff167fba8de60c3403ec381d1d484652ea1980e3c3e56359195c92525bff4ce47ad98e82604051610d589190611530565b60405180910390a250610d69610eb9565b565b60055481565b610d79610ec2565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610de9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610de090611450565b60405180910390fd5b610df281610f40565b50565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610e49610ec2565b8060048190555050565b60026001541415610e99576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e9090611510565b60405180910390fd5b6002600181905550565b60008183610eb1919061163d565b905092915050565b60018081905550565b610eca611124565b73ffffffffffffffffffffffffffffffffffffffff16610ee8610736565b73ffffffffffffffffffffffffffffffffffffffff1614610f3e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f35906114d0565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008183611012919061155c565b905092915050565b600080611085600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461107760065460055461100490919063ffffffff16565b610ea390919063ffffffff16565b90506000611118600c5461110a846110fc6004546110ee620f4240600760008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461112c90919063ffffffff16565b61114290919063ffffffff16565b61114290919063ffffffff16565b61112c90919063ffffffff16565b90508092505050919050565b600033905090565b6000818361113a91906115b2565b905092915050565b6000818361115091906115e3565b905092915050565b600081359050611167816118f8565b92915050565b60008151905061117c8161190f565b92915050565b60008135905061119181611926565b92915050565b6000602082840312156111a957600080fd5b60006111b784828501611158565b91505092915050565b6000602082840312156111d257600080fd5b60006111e08482850161116d565b91505092915050565b6000602082840312156111fb57600080fd5b600061120984828501611182565b91505092915050565b61121b81611671565b82525050565b61122a816116b9565b82525050565b600061123d60168361154b565b91506112488261173b565b602082019050919050565b600061126060068361154b565b915061126b82611764565b602082019050919050565b600061128360268361154b565b915061128e8261178d565b604082019050919050565b60006112a6600f8361154b565b91506112b1826117dc565b602082019050919050565b60006112c960148361154b565b91506112d482611805565b602082019050919050565b60006112ec601f8361154b565b91506112f78261182e565b602082019050919050565b600061130f60208361154b565b915061131a82611857565b602082019050919050565b600061133260268361154b565b915061133d82611880565b604082019050919050565b6000611355601f8361154b565b9150611360826118cf565b602082019050919050565b611374816116af565b82525050565b600060208201905061138f6000830184611212565b92915050565b60006060820190506113aa6000830186611212565b6113b76020830185611212565b6113c4604083018461136b565b949350505050565b60006040820190506113e16000830185611212565b6113ee602083018461136b565b9392505050565b600060208201905061140a6000830184611221565b92915050565b6000602082019050818103600083015261142981611230565b9050919050565b6000602082019050818103600083015261144981611253565b9050919050565b6000602082019050818103600083015261146981611276565b9050919050565b6000602082019050818103600083015261148981611299565b9050919050565b600060208201905081810360008301526114a9816112bc565b9050919050565b600060208201905081810360008301526114c9816112df565b9050919050565b600060208201905081810360008301526114e981611302565b9050919050565b6000602082019050818103600083015261150981611325565b9050919050565b6000602082019050818103600083015261152981611348565b9050919050565b6000602082019050611545600083018461136b565b92915050565b600082825260208201905092915050565b6000611567826116af565b9150611572836116af565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156115a7576115a66116dd565b5b828201905092915050565b60006115bd826116af565b91506115c8836116af565b9250826115d8576115d761170c565b5b828204905092915050565b60006115ee826116af565b91506115f9836116af565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611632576116316116dd565b5b828202905092915050565b6000611648826116af565b9150611653836116af565b925082821015611666576116656116dd565b5b828203905092915050565b600061167c8261168f565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006116c4826116cb565b9050919050565b60006116d68261168f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4164647265737320776173206e6f74207374616b656400000000000000000000600082015250565b7f4c6f636b65640000000000000000000000000000000000000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b7f416d6f756e742073686f756c642067726561746572207468616e207a65726f00600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f5468652063757272656e74207374616b696e672061637469766974792068617360008201527f20656e6465640000000000000000000000000000000000000000000000000000602082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b61190181611671565b811461190c57600080fd5b50565b61191881611683565b811461192357600080fd5b50565b61192f816116af565b811461193a57600080fd5b5056fea264697066735822122078ac86065fed6dfb0293c59edee0f441711d57c23b37542aa816a1a3bf5a750764736f6c63430008010033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH3 0x15180 PUSH1 0xC SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1C61 CODESIZE SUB DUP1 PUSH3 0x1C61 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x3E SWAP2 SWAP1 PUSH3 0x200 JUMP JUMPDEST PUSH3 0x5E PUSH3 0x52 PUSH3 0x106 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x10E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x4 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP POP POP POP PUSH3 0x2DE JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1E3 DUP2 PUSH3 0x2AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1FA DUP2 PUSH3 0x2C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x217 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x227 DUP8 DUP3 DUP9 ADD PUSH3 0x1D2 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH3 0x23A DUP8 DUP3 DUP9 ADD PUSH3 0x1D2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH3 0x24D DUP8 DUP3 DUP9 ADD PUSH3 0x1E9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH3 0x260 DUP8 DUP3 DUP9 ADD PUSH3 0x1E9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x279 DUP3 PUSH3 0x280 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2B5 DUP2 PUSH3 0x26C JUMP JUMPDEST DUP2 EQ PUSH3 0x2C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x2CF DUP2 PUSH3 0x2A0 JUMP JUMPDEST DUP2 EQ PUSH3 0x2DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1973 DUP1 PUSH3 0x2EE PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8AEE8127 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xEE947A7C GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xEE947A7C EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x317 JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0xFC71AE8C EQ PUSH2 0x36F JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x8AEE8127 EQ PUSH2 0x27B JUMPI DUP1 PUSH4 0x8B0E9F3F EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0xB88A802F EQ PUSH2 0x2EF JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x5D90BAD9 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x5D90BAD9 EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0x6ABFD183 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x750142E6 EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x80C0976E EQ PUSH2 0x25D JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x154A78B5 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x1683153D EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x45BC78AB EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x583D42FD EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0x5D3EEA91 EQ PUSH2 0x1DF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x38B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x1530 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x1197 JUMP JUMPDEST PUSH2 0x391 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x1530 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x194 SWAP2 SWAP1 PUSH2 0x1197 JUMP JUMPDEST PUSH2 0x3A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x1530 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x1197 JUMP JUMPDEST PUSH2 0x3C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D6 SWAP2 SWAP1 PUSH2 0x1530 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x11E9 JUMP JUMPDEST PUSH2 0x3D9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x215 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x210 SWAP2 SWAP1 PUSH2 0x11E9 JUMP JUMPDEST PUSH2 0x6AC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21F PUSH2 0x6BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22C SWAP2 SWAP1 PUSH2 0x1530 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23D PUSH2 0x6C4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x247 PUSH2 0x6D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x1530 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x265 PUSH2 0x6DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x1530 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x295 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x290 SWAP2 SWAP1 PUSH2 0x1197 JUMP JUMPDEST PUSH2 0x6E4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x29F PUSH2 0x730 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AC SWAP2 SWAP1 PUSH2 0x1530 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BD PUSH2 0x736 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0x137A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E8 SWAP2 SWAP1 PUSH2 0x11E9 JUMP JUMPDEST PUSH2 0x75F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F7 PUSH2 0xAF6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x301 PUSH2 0xD6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30E SWAP2 SWAP1 PUSH2 0x1530 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x331 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32C SWAP2 SWAP1 PUSH2 0x1197 JUMP JUMPDEST PUSH2 0xD71 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x33B PUSH2 0xDF5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x348 SWAP2 SWAP1 PUSH2 0x13F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x359 PUSH2 0xE1B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x366 SWAP2 SWAP1 PUSH2 0x13F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x389 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x384 SWAP2 SWAP1 PUSH2 0x11E9 JUMP JUMPDEST PUSH2 0xE41 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3E1 PUSH2 0xE53 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH2 0x3F1 SWAP2 SWAP1 PUSH2 0x155C JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x433 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x42A SWAP1 PUSH2 0x1430 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x4B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4AC SWAP1 PUSH2 0x1490 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x512 SWAP3 SWAP2 SWAP1 PUSH2 0x13CC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x52C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x540 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x564 SWAP2 SWAP1 PUSH2 0x11C0 JUMP JUMPDEST PUSH2 0x5A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59A SWAP1 PUSH2 0x1470 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5F5 DUP2 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xEA3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x64D DUP2 PUSH1 0xA SLOAD PUSH2 0xEA3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB24546D975E2628748EFC9ACED80665E0FAD66272033E5C0EA25FD3AFAC99795 DUP3 PUSH1 0x40 MLOAD PUSH2 0x699 SWAP2 SWAP1 PUSH2 0x1530 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x6A9 PUSH2 0xEB9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x6B4 PUSH2 0xEC2 JUMP JUMPDEST DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x6CC PUSH2 0xEC2 JUMP JUMPDEST PUSH2 0x6D6 PUSH1 0x0 PUSH2 0xF40 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH2 0x6EC PUSH2 0xEC2 JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x767 PUSH2 0xE53 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH2 0x777 SWAP2 SWAP1 PUSH2 0x155C JUMP JUMPDEST TIMESTAMP LT PUSH2 0x7B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AF SWAP1 PUSH2 0x14F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x7FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F2 SWAP1 PUSH2 0x14B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x85A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1395 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x874 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x888 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8AC SWAP2 SWAP1 PUSH2 0x11C0 JUMP JUMPDEST PUSH2 0x8EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E2 SWAP1 PUSH2 0x1470 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x93D DUP2 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1004 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x9CF CALLER PUSH2 0x101A JUMP JUMPDEST SWAP1 POP PUSH2 0xA23 DUP2 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1004 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xA7B DUP3 PUSH1 0xA SLOAD PUSH2 0x1004 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH2 0xA96 DUP2 PUSH1 0xB SLOAD PUSH2 0x1004 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEBEDB8B3C678666E7F36970BC8F57ABF6D8FA2E828C0DA91EA5B75BF68ED101A DUP4 PUSH1 0x40 MLOAD PUSH2 0xAE2 SWAP2 SWAP1 PUSH2 0x1530 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0xAF3 PUSH2 0xEB9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xAFE PUSH2 0xE53 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT PUSH2 0xB80 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB77 SWAP1 PUSH2 0x1410 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC21 SWAP3 SWAP2 SWAP1 PUSH2 0x13CC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC4F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC73 SWAP2 SWAP1 PUSH2 0x11C0 JUMP JUMPDEST PUSH2 0xCB2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCA9 SWAP1 PUSH2 0x1470 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xD0C DUP2 PUSH1 0xB SLOAD PUSH2 0xEA3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBA8DE60C3403EC381D1D484652EA1980E3C3E56359195C92525BFF4CE47AD98E DUP3 PUSH1 0x40 MLOAD PUSH2 0xD58 SWAP2 SWAP1 PUSH2 0x1530 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0xD69 PUSH2 0xEB9 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xD79 PUSH2 0xEC2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xDE9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDE0 SWAP1 PUSH2 0x1450 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDF2 DUP2 PUSH2 0xF40 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xE49 PUSH2 0xEC2 JUMP JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xE99 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE90 SWAP1 PUSH2 0x1510 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xEB1 SWAP2 SWAP1 PUSH2 0x163D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xECA PUSH2 0x1124 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEE8 PUSH2 0x736 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF3E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF35 SWAP1 PUSH2 0x14D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1012 SWAP2 SWAP1 PUSH2 0x155C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1085 PUSH1 0x8 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1077 PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH2 0x1004 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xEA3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1118 PUSH1 0xC SLOAD PUSH2 0x110A DUP5 PUSH2 0x10FC PUSH1 0x4 SLOAD PUSH2 0x10EE PUSH3 0xF4240 PUSH1 0x7 PUSH1 0x0 DUP14 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x112C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1142 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1142 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x112C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x113A SWAP2 SWAP1 PUSH2 0x15B2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1150 SWAP2 SWAP1 PUSH2 0x15E3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1167 DUP2 PUSH2 0x18F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x117C DUP2 PUSH2 0x190F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1191 DUP2 PUSH2 0x1926 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x11B7 DUP5 DUP3 DUP6 ADD PUSH2 0x1158 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x11E0 DUP5 DUP3 DUP6 ADD PUSH2 0x116D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1209 DUP5 DUP3 DUP6 ADD PUSH2 0x1182 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x121B DUP2 PUSH2 0x1671 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x122A DUP2 PUSH2 0x16B9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x123D PUSH1 0x16 DUP4 PUSH2 0x154B JUMP JUMPDEST SWAP2 POP PUSH2 0x1248 DUP3 PUSH2 0x173B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1260 PUSH1 0x6 DUP4 PUSH2 0x154B JUMP JUMPDEST SWAP2 POP PUSH2 0x126B DUP3 PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1283 PUSH1 0x26 DUP4 PUSH2 0x154B JUMP JUMPDEST SWAP2 POP PUSH2 0x128E DUP3 PUSH2 0x178D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12A6 PUSH1 0xF DUP4 PUSH2 0x154B JUMP JUMPDEST SWAP2 POP PUSH2 0x12B1 DUP3 PUSH2 0x17DC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12C9 PUSH1 0x14 DUP4 PUSH2 0x154B JUMP JUMPDEST SWAP2 POP PUSH2 0x12D4 DUP3 PUSH2 0x1805 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12EC PUSH1 0x1F DUP4 PUSH2 0x154B JUMP JUMPDEST SWAP2 POP PUSH2 0x12F7 DUP3 PUSH2 0x182E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x130F PUSH1 0x20 DUP4 PUSH2 0x154B JUMP JUMPDEST SWAP2 POP PUSH2 0x131A DUP3 PUSH2 0x1857 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1332 PUSH1 0x26 DUP4 PUSH2 0x154B JUMP JUMPDEST SWAP2 POP PUSH2 0x133D DUP3 PUSH2 0x1880 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1355 PUSH1 0x1F DUP4 PUSH2 0x154B JUMP JUMPDEST SWAP2 POP PUSH2 0x1360 DUP3 PUSH2 0x18CF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1374 DUP2 PUSH2 0x16AF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x138F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1212 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x13AA PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1212 JUMP JUMPDEST PUSH2 0x13B7 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1212 JUMP JUMPDEST PUSH2 0x13C4 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x136B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x13E1 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1212 JUMP JUMPDEST PUSH2 0x13EE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x136B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x140A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1221 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1429 DUP2 PUSH2 0x1230 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1449 DUP2 PUSH2 0x1253 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1469 DUP2 PUSH2 0x1276 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1489 DUP2 PUSH2 0x1299 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14A9 DUP2 PUSH2 0x12BC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14C9 DUP2 PUSH2 0x12DF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14E9 DUP2 PUSH2 0x1302 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1509 DUP2 PUSH2 0x1325 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1529 DUP2 PUSH2 0x1348 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1545 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x136B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1567 DUP3 PUSH2 0x16AF JUMP JUMPDEST SWAP2 POP PUSH2 0x1572 DUP4 PUSH2 0x16AF JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x15A7 JUMPI PUSH2 0x15A6 PUSH2 0x16DD JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15BD DUP3 PUSH2 0x16AF JUMP JUMPDEST SWAP2 POP PUSH2 0x15C8 DUP4 PUSH2 0x16AF JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x15D8 JUMPI PUSH2 0x15D7 PUSH2 0x170C JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15EE DUP3 PUSH2 0x16AF JUMP JUMPDEST SWAP2 POP PUSH2 0x15F9 DUP4 PUSH2 0x16AF JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1632 JUMPI PUSH2 0x1631 PUSH2 0x16DD JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1648 DUP3 PUSH2 0x16AF JUMP JUMPDEST SWAP2 POP PUSH2 0x1653 DUP4 PUSH2 0x16AF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1666 JUMPI PUSH2 0x1665 PUSH2 0x16DD JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x167C DUP3 PUSH2 0x168F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16C4 DUP3 PUSH2 0x16CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16D6 DUP3 PUSH2 0x168F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4164647265737320776173206E6F74207374616B656400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4C6F636B65640000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416D6F756E742073686F756C642067726561746572207468616E207A65726F00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5468652063757272656E74207374616B696E6720616374697669747920686173 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20656E6465640000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x1901 DUP2 PUSH2 0x1671 JUMP JUMPDEST DUP2 EQ PUSH2 0x190C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1918 DUP2 PUSH2 0x1683 JUMP JUMPDEST DUP2 EQ PUSH2 0x1923 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x192F DUP2 PUSH2 0x16AF JUMP JUMPDEST DUP2 EQ PUSH2 0x193A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH25 0xAC86065FED6DFB0293C59EDEE0F441711D57C23B37542AA816 LOG1 LOG3 0xBF GAS PUSH22 0x764736F6C6343000801003300000000000000000000 ",
							"sourceMap": "289:4107:5:-:0;;;1155:5;1130:30;;1370:305;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;1716:1:1;1821:7;:22;;;;1493:6:5;1478:5;;:22;;;;;;;;;;;;;;;;;;1531:12;1510:11;;:34;;;;;;;;;;;;;;;;;;1571:15;1554:14;:32;;;;1611:13;1596:12;:28;;;;1653:15;1634:16;:34;;;;1370:305;;;;289:4107;;640:96:3;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2433:187;;:::o;7:143:6:-;;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:143::-;;244:6;238:13;229:22;;260:33;287:5;260:33;:::i;:::-;219:80;;;;:::o;305:753::-;;;;;475:3;463:9;454:7;450:23;446:33;443:2;;;492:1;489;482:12;443:2;535:1;560:64;616:7;607:6;596:9;592:22;560:64;:::i;:::-;550:74;;506:128;673:2;699:64;755:7;746:6;735:9;731:22;699:64;:::i;:::-;689:74;;644:129;812:2;838:64;894:7;885:6;874:9;870:22;838:64;:::i;:::-;828:74;;783:129;951:2;977:64;1033:7;1024:6;1013:9;1009:22;977:64;:::i;:::-;967:74;;922:129;433:625;;;;;;;:::o;1064:96::-;;1130:24;1148:5;1130:24;:::i;:::-;1119:35;;1109:51;;;:::o;1166:126::-;;1243:42;1236:5;1232:54;1221:65;;1211:81;;;:::o;1298:77::-;;1364:5;1353:16;;1343:32;;;:::o;1381:122::-;1454:24;1472:5;1454:24;:::i;:::-;1447:5;1444:35;1434:2;;1493:1;1490;1483:12;1434:2;1424:79;:::o;1509:122::-;1582:24;1600:5;1582:24;:::i;:::-;1575:5;1572:35;1562:2;;1621:1;1618;1611:12;1562:2;1552:79;:::o;289:4107:5:-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:14735:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:6",
														"type": ""
													}
												],
												"src": "7:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "212:77:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "222:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "237:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "231:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "222:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "277:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "253:23:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "253:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "253:30:6"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "190:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "198:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "206:5:6",
														"type": ""
													}
												],
												"src": "152:137:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "347:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "357:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "379:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "366:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "366:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "357:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "422:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "395:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "395:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "395:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "325:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "333:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "341:5:6",
														"type": ""
													}
												],
												"src": "295:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "506:196:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "552:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "561:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "564:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "554:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "554:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "554:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "527:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "536:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "523:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "523:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "548:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "519:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "519:32:6"
															},
															"nodeType": "YulIf",
															"src": "516:2:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "578:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "593:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "607:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "597:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "622:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "657:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "668:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "653:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "653:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "677:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "632:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "632:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "622:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "476:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "487:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "499:6:6",
														"type": ""
													}
												],
												"src": "440:262:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "782:204:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "828:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "837:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "840:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "830:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "830:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "830:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "803:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "812:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "799:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "799:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "824:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "795:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "795:32:6"
															},
															"nodeType": "YulIf",
															"src": "792:2:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "854:125:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "869:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "883:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "873:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "898:71:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "941:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "952:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "937:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "937:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "961:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "908:28:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "908:61:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "898:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "752:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "763:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "775:6:6",
														"type": ""
													}
												],
												"src": "708:278:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1058:196:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1104:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1113:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1116:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1106:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1106:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1106:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1079:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1088:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1075:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1075:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1100:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1071:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1071:32:6"
															},
															"nodeType": "YulIf",
															"src": "1068:2:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "1130:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1145:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1159:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1149:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1174:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1209:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1220:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1205:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1205:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1229:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1184:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1184:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1174:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1028:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1039:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1051:6:6",
														"type": ""
													}
												],
												"src": "992:262:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1325:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1342:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1365:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1347:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1347:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1335:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1335:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1335:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1313:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1320:3:6",
														"type": ""
													}
												],
												"src": "1260:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1463:80:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1480:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1530:5:6"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$244_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1485:44:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1485:51:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1473:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1473:64:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1473:64:6"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$244_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1451:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1458:3:6",
														"type": ""
													}
												],
												"src": "1384:159:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1695:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1705:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1771:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1776:2:6",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1712:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1712:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1705:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1877:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_06c91019a93dd15fbeb6eed7cf8a253c16f390d84dd42d722095ff695d0ff1eb",
																	"nodeType": "YulIdentifier",
																	"src": "1788:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1788:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1788:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1890:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1901:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1906:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1897:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1897:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1890:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_06c91019a93dd15fbeb6eed7cf8a253c16f390d84dd42d722095ff695d0ff1eb_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1683:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1691:3:6",
														"type": ""
													}
												],
												"src": "1549:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2067:219:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2077:73:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2143:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2148:1:6",
																		"type": "",
																		"value": "6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2084:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2084:66:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2077:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2248:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_10bc01d611f2c803e55ff98d999836f196afae7cf91f96f3b6f511e56ba84974",
																	"nodeType": "YulIdentifier",
																	"src": "2159:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2159:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2159:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2261:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2272:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2277:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2268:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2268:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2261:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_10bc01d611f2c803e55ff98d999836f196afae7cf91f96f3b6f511e56ba84974_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2055:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2063:3:6",
														"type": ""
													}
												],
												"src": "1921:365:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2438:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2448:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2514:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2519:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2455:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2455:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2448:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2620:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "2531:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2531:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2531:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2633:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2644:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2649:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2640:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2640:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2633:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2426:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2434:3:6",
														"type": ""
													}
												],
												"src": "2292:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2810:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2820:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2886:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2891:2:6",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2827:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2827:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2820:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2992:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																	"nodeType": "YulIdentifier",
																	"src": "2903:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2903:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2903:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3005:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3016:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3021:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3012:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3012:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3005:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2798:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2806:3:6",
														"type": ""
													}
												],
												"src": "2664:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3182:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3192:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3258:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3263:2:6",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3199:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3199:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3192:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3364:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																	"nodeType": "YulIdentifier",
																	"src": "3275:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3275:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3275:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3377:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3388:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3393:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3384:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3384:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3377:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3170:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3178:3:6",
														"type": ""
													}
												],
												"src": "3036:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3554:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3564:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3630:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3635:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3571:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3571:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3564:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3736:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7e6097df28dbd6e8fac3ec6a9281335c312bc8a436c798b83190edcb63f5401f",
																	"nodeType": "YulIdentifier",
																	"src": "3647:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3647:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3647:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3749:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3760:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3765:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3756:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3756:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3749:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7e6097df28dbd6e8fac3ec6a9281335c312bc8a436c798b83190edcb63f5401f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3542:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3550:3:6",
														"type": ""
													}
												],
												"src": "3408:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3926:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3936:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4002:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4007:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3943:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3943:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3936:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4108:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "4019:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4019:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4019:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4121:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4132:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4137:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4128:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4128:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4121:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3914:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3922:3:6",
														"type": ""
													}
												],
												"src": "3780:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4298:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4308:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4374:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4379:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4315:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4315:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4308:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4480:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_bb49972f036ceb7f98bbdcfadc5b5745930b5203ea6a23b47522e300d5db612c",
																	"nodeType": "YulIdentifier",
																	"src": "4391:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4391:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4391:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4493:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4504:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4509:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4500:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4500:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4493:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_bb49972f036ceb7f98bbdcfadc5b5745930b5203ea6a23b47522e300d5db612c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4286:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4294:3:6",
														"type": ""
													}
												],
												"src": "4152:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4670:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4680:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4746:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4751:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4687:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4687:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4680:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4852:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nodeType": "YulIdentifier",
																	"src": "4763:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4763:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4763:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4865:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4876:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4881:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4872:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4872:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4865:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4658:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4666:3:6",
														"type": ""
													}
												],
												"src": "4524:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4961:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4978:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5001:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4983:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4983:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4971:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4971:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4971:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4949:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4956:3:6",
														"type": ""
													}
												],
												"src": "4896:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5118:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5128:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5140:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5151:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5136:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5136:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5128:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5208:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5221:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5232:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5217:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5217:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5164:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5164:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5164:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5090:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5102:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5113:4:6",
														"type": ""
													}
												],
												"src": "5020:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5402:288:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5412:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5424:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5435:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5420:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5420:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5412:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5492:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5505:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5516:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5501:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5501:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5448:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5448:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5448:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5573:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5586:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5597:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5582:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5582:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5529:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5529:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5529:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "5655:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5668:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5679:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5664:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5664:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5611:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5611:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5611:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5358:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5370:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5378:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5386:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5397:4:6",
														"type": ""
													}
												],
												"src": "5248:442:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5822:206:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5832:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5844:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5855:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5840:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5840:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5832:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5912:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5925:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5936:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5921:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5921:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5868:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5868:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5868:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5993:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6006:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6017:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6002:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6002:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5949:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5949:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5949:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5786:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5798:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5806:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5817:4:6",
														"type": ""
													}
												],
												"src": "5696:332:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6146:138:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6156:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6168:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6179:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6164:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6164:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6156:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6250:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6263:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6274:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6259:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6259:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$244_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6192:57:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6192:85:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6192:85:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$244__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6118:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6130:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6141:4:6",
														"type": ""
													}
												],
												"src": "6034:250:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6461:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6471:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6483:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6494:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6479:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6479:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6471:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6518:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6529:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6514:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6514:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6537:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6543:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6533:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6533:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6507:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6507:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6507:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6563:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6697:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_06c91019a93dd15fbeb6eed7cf8a253c16f390d84dd42d722095ff695d0ff1eb_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6571:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6571:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6563:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_06c91019a93dd15fbeb6eed7cf8a253c16f390d84dd42d722095ff695d0ff1eb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6441:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6456:4:6",
														"type": ""
													}
												],
												"src": "6290:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6886:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6896:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6908:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6919:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6904:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6904:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6896:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6943:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6954:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6939:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6939:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6962:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6968:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6958:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6958:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6932:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6932:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6932:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6988:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7122:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_10bc01d611f2c803e55ff98d999836f196afae7cf91f96f3b6f511e56ba84974_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6996:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6996:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6988:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_10bc01d611f2c803e55ff98d999836f196afae7cf91f96f3b6f511e56ba84974__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6866:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6881:4:6",
														"type": ""
													}
												],
												"src": "6715:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7311:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7321:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7333:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7344:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7329:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7329:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7321:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7368:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7379:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7364:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7364:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7387:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7393:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7383:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7383:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7357:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7357:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7357:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7413:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7547:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7421:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7421:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7413:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7291:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7306:4:6",
														"type": ""
													}
												],
												"src": "7140:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7736:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7746:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7758:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7769:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7754:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7754:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7746:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7793:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7804:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7789:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7789:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7812:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7818:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7808:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7808:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7782:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7782:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7782:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7838:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7972:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7846:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7846:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7838:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7716:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7731:4:6",
														"type": ""
													}
												],
												"src": "7565:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8161:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8171:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8183:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8194:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8179:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8179:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8171:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8218:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8229:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8214:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8214:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8237:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8243:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8233:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8233:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8207:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8207:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8207:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8263:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8397:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8271:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8271:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8263:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8141:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8156:4:6",
														"type": ""
													}
												],
												"src": "7990:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8586:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8596:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8608:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8619:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8604:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8604:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8596:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8643:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8654:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8639:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8639:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8662:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8668:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8658:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8658:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8632:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8632:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8632:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8688:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8822:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7e6097df28dbd6e8fac3ec6a9281335c312bc8a436c798b83190edcb63f5401f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8696:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8696:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8688:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7e6097df28dbd6e8fac3ec6a9281335c312bc8a436c798b83190edcb63f5401f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8566:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8581:4:6",
														"type": ""
													}
												],
												"src": "8415:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9011:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9021:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9033:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9044:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9029:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9029:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9021:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9068:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9079:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9064:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9064:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9087:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9093:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9083:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9083:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9057:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9057:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9057:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9113:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9247:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9121:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9121:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9113:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8991:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9006:4:6",
														"type": ""
													}
												],
												"src": "8840:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9436:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9446:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9458:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9469:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9454:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9454:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9446:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9493:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9504:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9489:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9489:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9512:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9518:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9508:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9508:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9482:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9482:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9482:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9538:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9672:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_bb49972f036ceb7f98bbdcfadc5b5745930b5203ea6a23b47522e300d5db612c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9546:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9546:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9538:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bb49972f036ceb7f98bbdcfadc5b5745930b5203ea6a23b47522e300d5db612c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9416:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9431:4:6",
														"type": ""
													}
												],
												"src": "9265:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9861:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9871:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9883:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9894:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9879:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9879:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9871:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9918:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9929:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9914:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9914:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9937:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9943:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9933:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9933:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9907:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9907:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9907:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9963:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10097:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9971:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9971:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9963:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9841:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9856:4:6",
														"type": ""
													}
												],
												"src": "9690:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10213:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10223:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10235:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10246:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10231:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10231:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10223:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10303:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10316:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10327:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10312:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10312:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10259:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10259:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10259:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10185:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10197:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10208:4:6",
														"type": ""
													}
												],
												"src": "10115:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10439:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10456:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10461:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10449:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10449:19:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10449:19:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10477:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10496:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10501:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10492:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10492:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "10477:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10411:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10416:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "10427:11:6",
														"type": ""
													}
												],
												"src": "10343:169:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10562:261:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10572:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10595:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10577:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10577:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10572:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10606:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10629:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10611:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10611:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10606:1:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10769:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10771:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10771:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10771:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10690:1:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10697:66:6",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "10765:1:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10693:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10693:74:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10687:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10687:81:6"
															},
															"nodeType": "YulIf",
															"src": "10684:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10801:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10812:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10815:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10808:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10808:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "10801:3:6"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10549:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10552:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "10558:3:6",
														"type": ""
													}
												],
												"src": "10518:305:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10871:143:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10881:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10904:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10886:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10886:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10881:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10915:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10938:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10920:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10920:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10915:1:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10962:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "10964:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10964:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10964:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10959:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10952:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10952:9:6"
															},
															"nodeType": "YulIf",
															"src": "10949:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10994:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11003:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11006:1:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "10999:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10999:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "10994:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10860:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10863:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "10869:1:6",
														"type": ""
													}
												],
												"src": "10829:185:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11068:300:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11078:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11101:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11083:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11083:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11078:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11112:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11135:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11117:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11117:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11112:1:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11310:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11312:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11312:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11312:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "11222:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "11215:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11215:9:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "11208:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11208:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "11230:1:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11237:66:6",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "11305:1:6"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "11233:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11233:74:6"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "11227:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11227:81:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11204:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11204:105:6"
															},
															"nodeType": "YulIf",
															"src": "11201:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11342:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11357:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11360:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "11353:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11353:9:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "11342:7:6"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11051:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11054:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "11060:7:6",
														"type": ""
													}
												],
												"src": "11020:348:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11419:146:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11429:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11452:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11434:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11434:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11429:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11463:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11486:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11468:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11468:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11463:1:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11510:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11512:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11512:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11512:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11504:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11507:1:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "11501:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11501:8:6"
															},
															"nodeType": "YulIf",
															"src": "11498:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11542:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11554:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11557:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "11550:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11550:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "11542:4:6"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11405:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11408:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "11414:4:6",
														"type": ""
													}
												],
												"src": "11374:191:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11616:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11626:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11655:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "11637:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11637:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11626:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11598:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11608:7:6",
														"type": ""
													}
												],
												"src": "11571:96:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11715:48:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11725:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11750:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "11743:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11743:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11736:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11736:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11725:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11697:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11707:7:6",
														"type": ""
													}
												],
												"src": "11673:90:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11814:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11824:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11839:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11846:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11835:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11835:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11824:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11796:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11806:7:6",
														"type": ""
													}
												],
												"src": "11769:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11946:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11956:16:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "11967:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11956:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11928:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11938:7:6",
														"type": ""
													}
												],
												"src": "11901:77:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12058:80:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12068:64:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12126:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_contract$_IERC20_$244_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "12081:44:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12081:51:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "12068:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$244_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12038:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "12048:9:6",
														"type": ""
													}
												],
												"src": "11984:154:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12218:53:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12228:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12259:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "12241:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12241:24:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "12228:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$244_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12198:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "12208:9:6",
														"type": ""
													}
												],
												"src": "12144:127:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12305:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12322:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12325:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12315:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12315:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12315:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12419:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12422:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12412:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12412:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12412:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12443:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12446:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12436:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12436:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12436:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "12277:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12491:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12508:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12511:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12501:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12501:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12501:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12605:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12608:4:6",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12598:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12598:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12598:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12629:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12632:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12622:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12622:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12622:15:6"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "12463:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12755:66:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12777:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12785:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12773:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12773:14:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12789:24:6",
																		"type": "",
																		"value": "Address was not staked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12766:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12766:48:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12766:48:6"
														}
													]
												},
												"name": "store_literal_in_memory_06c91019a93dd15fbeb6eed7cf8a253c16f390d84dd42d722095ff695d0ff1eb",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12747:6:6",
														"type": ""
													}
												],
												"src": "12649:172:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12933:50:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12955:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12963:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12951:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12951:14:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12967:8:6",
																		"type": "",
																		"value": "Locked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12944:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12944:32:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12944:32:6"
														}
													]
												},
												"name": "store_literal_in_memory_10bc01d611f2c803e55ff98d999836f196afae7cf91f96f3b6f511e56ba84974",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12925:6:6",
														"type": ""
													}
												],
												"src": "12827:156:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13095:119:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13117:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13125:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13113:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13113:14:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13129:34:6",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13106:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13106:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13106:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13185:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13193:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13181:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13181:15:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13198:8:6",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13174:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13174:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13174:33:6"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13087:6:6",
														"type": ""
													}
												],
												"src": "12989:225:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13326:59:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13348:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13356:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13344:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13344:14:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13360:17:6",
																		"type": "",
																		"value": "Transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13337:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13337:41:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13337:41:6"
														}
													]
												},
												"name": "store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13318:6:6",
														"type": ""
													}
												],
												"src": "13220:165:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13497:64:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13519:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13527:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13515:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13515:14:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13531:22:6",
																		"type": "",
																		"value": "Insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13508:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13508:46:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13508:46:6"
														}
													]
												},
												"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13489:6:6",
														"type": ""
													}
												],
												"src": "13391:170:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13673:75:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13695:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13703:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13691:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13691:14:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13707:33:6",
																		"type": "",
																		"value": "Amount should greater than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13684:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13684:57:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13684:57:6"
														}
													]
												},
												"name": "store_literal_in_memory_7e6097df28dbd6e8fac3ec6a9281335c312bc8a436c798b83190edcb63f5401f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13665:6:6",
														"type": ""
													}
												],
												"src": "13567:181:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13860:76:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13882:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13890:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13878:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13878:14:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13894:34:6",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13871:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13871:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13871:58:6"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13852:6:6",
														"type": ""
													}
												],
												"src": "13754:182:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14048:119:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14070:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14078:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14066:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14066:14:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14082:34:6",
																		"type": "",
																		"value": "The current staking activity has"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14059:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14059:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14059:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14138:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14146:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14134:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14134:15:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14151:8:6",
																		"type": "",
																		"value": " ended"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14127:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14127:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14127:33:6"
														}
													]
												},
												"name": "store_literal_in_memory_bb49972f036ceb7f98bbdcfadc5b5745930b5203ea6a23b47522e300d5db612c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14040:6:6",
														"type": ""
													}
												],
												"src": "13942:225:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14279:75:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14301:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14309:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14297:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14297:14:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14313:33:6",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14290:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14290:57:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14290:57:6"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14271:6:6",
														"type": ""
													}
												],
												"src": "14173:181:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14403:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14460:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14469:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14472:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14462:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14462:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14462:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14426:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "14451:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "14433:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14433:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "14423:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14423:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14416:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14416:43:6"
															},
															"nodeType": "YulIf",
															"src": "14413:2:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14396:5:6",
														"type": ""
													}
												],
												"src": "14360:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14528:76:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14582:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14591:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14594:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14584:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14584:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14584:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14551:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "14573:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "14558:14:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14558:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "14548:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14548:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14541:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14541:40:6"
															},
															"nodeType": "YulIf",
															"src": "14538:2:6"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14521:5:6",
														"type": ""
													}
												],
												"src": "14488:116:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14653:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14710:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14719:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14722:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14712:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14712:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14712:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14676:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "14701:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "14683:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14683:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "14673:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14673:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14666:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14666:43:6"
															},
															"nodeType": "YulIf",
															"src": "14663:2:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14646:5:6",
														"type": ""
													}
												],
												"src": "14610:122:6"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IERC20_$244_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$244_to_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_06c91019a93dd15fbeb6eed7cf8a253c16f390d84dd42d722095ff695d0ff1eb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_06c91019a93dd15fbeb6eed7cf8a253c16f390d84dd42d722095ff695d0ff1eb(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_10bc01d611f2c803e55ff98d999836f196afae7cf91f96f3b6f511e56ba84974_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 6)\n        store_literal_in_memory_10bc01d611f2c803e55ff98d999836f196afae7cf91f96f3b6f511e56ba84974(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_7e6097df28dbd6e8fac3ec6a9281335c312bc8a436c798b83190edcb63f5401f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_7e6097df28dbd6e8fac3ec6a9281335c312bc8a436c798b83190edcb63f5401f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_bb49972f036ceb7f98bbdcfadc5b5745930b5203ea6a23b47522e300d5db612c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_bb49972f036ceb7f98bbdcfadc5b5745930b5203ea6a23b47522e300d5db612c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$244__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$244_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_06c91019a93dd15fbeb6eed7cf8a253c16f390d84dd42d722095ff695d0ff1eb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_06c91019a93dd15fbeb6eed7cf8a253c16f390d84dd42d722095ff695d0ff1eb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_10bc01d611f2c803e55ff98d999836f196afae7cf91f96f3b6f511e56ba84974__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_10bc01d611f2c803e55ff98d999836f196afae7cf91f96f3b6f511e56ba84974_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_7e6097df28dbd6e8fac3ec6a9281335c312bc8a436c798b83190edcb63f5401f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7e6097df28dbd6e8fac3ec6a9281335c312bc8a436c798b83190edcb63f5401f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_bb49972f036ceb7f98bbdcfadc5b5745930b5203ea6a23b47522e300d5db612c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bb49972f036ceb7f98bbdcfadc5b5745930b5203ea6a23b47522e300d5db612c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IERC20_$244_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IERC20_$244_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$244_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_06c91019a93dd15fbeb6eed7cf8a253c16f390d84dd42d722095ff695d0ff1eb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address was not staked\")\n\n    }\n\n    function store_literal_in_memory_10bc01d611f2c803e55ff98d999836f196afae7cf91f96f3b6f511e56ba84974(memPtr) {\n\n        mstore(add(memPtr, 0), \"Locked\")\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer failed\")\n\n    }\n\n    function store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance\")\n\n    }\n\n    function store_literal_in_memory_7e6097df28dbd6e8fac3ec6a9281335c312bc8a436c798b83190edcb63f5401f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount should greater than zero\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_bb49972f036ceb7f98bbdcfadc5b5745930b5203ea6a23b47522e300d5db612c(memPtr) {\n\n        mstore(add(memPtr, 0), \"The current staking activity has\")\n\n        mstore(add(memPtr, 32), \" ended\")\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061012c5760003560e01c80638aee8127116100ad578063ee947a7c11610071578063ee947a7c146102f9578063f2fde38b14610317578063f7c618c114610333578063fc0c546a14610351578063fc71ae8c1461036f5761012c565b80638aee81271461027b5780638b0e9f3f146102975780638da5cb5b146102b5578063a694fc3a146102d3578063b88a802f146102ef5761012c565b80635d90bad9116100f45780635d90bad9146101fb5780636abfd18314610217578063715018a614610235578063750142e61461023f57806380c0976e1461025d5761012c565b8063154a78b5146101315780631683153d1461014f57806345bc78ab1461017f578063583d42fd146101af5780635d3eea91146101df575b600080fd5b61013961038b565b6040516101469190611530565b60405180910390f35b61016960048036038101906101649190611197565b610391565b6040516101769190611530565b60405180910390f35b61019960048036038101906101949190611197565b6103a9565b6040516101a69190611530565b60405180910390f35b6101c960048036038101906101c49190611197565b6103c1565b6040516101d69190611530565b60405180910390f35b6101f960048036038101906101f491906111e9565b6103d9565b005b610215600480360381019061021091906111e9565b6106ac565b005b61021f6106be565b60405161022c9190611530565b60405180910390f35b61023d6106c4565b005b6102476106d8565b6040516102549190611530565b60405180910390f35b6102656106de565b6040516102729190611530565b60405180910390f35b61029560048036038101906102909190611197565b6106e4565b005b61029f610730565b6040516102ac9190611530565b60405180910390f35b6102bd610736565b6040516102ca919061137a565b60405180910390f35b6102ed60048036038101906102e891906111e9565b61075f565b005b6102f7610af6565b005b610301610d6b565b60405161030e9190611530565b60405180910390f35b610331600480360381019061032c9190611197565b610d71565b005b61033b610df5565b60405161034891906113f5565b60405180910390f35b610359610e1b565b60405161036691906113f5565b60405180910390f35b610389600480360381019061038491906111e9565b610e41565b005b60045481565b60096020528060005260406000206000915090505481565b60076020528060005260406000206000915090505481565b60086020528060005260406000206000915090505481565b6103e1610e53565b6005546006546103f1919061155c565b421015610433576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042a90611430565b60405180910390fd5b80600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156104b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ac90611490565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016105129291906113cc565b602060405180830381600087803b15801561052c57600080fd5b505af1158015610540573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056491906111c0565b6105a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059a90611470565b60405180910390fd5b6105f581600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ea390919063ffffffff16565b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061064d81600a54610ea390919063ffffffff16565b600a819055503373ffffffffffffffffffffffffffffffffffffffff167fb24546d975e2628748efc9aced80665e0fad66272033e5c0ea25fd3afac99795826040516106999190611530565b60405180910390a26106a9610eb9565b50565b6106b4610ec2565b8060068190555050565b60065481565b6106cc610ec2565b6106d66000610f40565b565b600b5481565b600c5481565b6106ec610ec2565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600a5481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610767610e53565b600554600654610777919061155c565b42106107b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107af906114f0565b60405180910390fd5b600081116107fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f2906114b0565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161085a93929190611395565b602060405180830381600087803b15801561087457600080fd5b505af1158015610888573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ac91906111c0565b6108eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e290611470565b60405180910390fd5b61093d81600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461100490919063ffffffff16565b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555042600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060006109cf3361101a565b9050610a2381600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461100490919063ffffffff16565b600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610a7b82600a5461100490919063ffffffff16565b600a81905550610a9681600b5461100490919063ffffffff16565b600b819055503373ffffffffffffffffffffffffffffffffffffffff167febedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a83604051610ae29190611530565b60405180910390a250610af3610eb9565b50565b610afe610e53565b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411610b80576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7790611410565b60405180910390fd5b6000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610c219291906113cc565b602060405180830381600087803b158015610c3b57600080fd5b505af1158015610c4f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c7391906111c0565b610cb2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca990611470565b60405180910390fd5b6000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610d0c81600b54610ea390919063ffffffff16565b600b819055503373ffffffffffffffffffffffffffffffffffffffff167fba8de60c3403ec381d1d484652ea1980e3c3e56359195c92525bff4ce47ad98e82604051610d589190611530565b60405180910390a250610d69610eb9565b565b60055481565b610d79610ec2565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610de9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610de090611450565b60405180910390fd5b610df281610f40565b50565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610e49610ec2565b8060048190555050565b60026001541415610e99576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e9090611510565b60405180910390fd5b6002600181905550565b60008183610eb1919061163d565b905092915050565b60018081905550565b610eca611124565b73ffffffffffffffffffffffffffffffffffffffff16610ee8610736565b73ffffffffffffffffffffffffffffffffffffffff1614610f3e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f35906114d0565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008183611012919061155c565b905092915050565b600080611085600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461107760065460055461100490919063ffffffff16565b610ea390919063ffffffff16565b90506000611118600c5461110a846110fc6004546110ee620f4240600760008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461112c90919063ffffffff16565b61114290919063ffffffff16565b61114290919063ffffffff16565b61112c90919063ffffffff16565b90508092505050919050565b600033905090565b6000818361113a91906115b2565b905092915050565b6000818361115091906115e3565b905092915050565b600081359050611167816118f8565b92915050565b60008151905061117c8161190f565b92915050565b60008135905061119181611926565b92915050565b6000602082840312156111a957600080fd5b60006111b784828501611158565b91505092915050565b6000602082840312156111d257600080fd5b60006111e08482850161116d565b91505092915050565b6000602082840312156111fb57600080fd5b600061120984828501611182565b91505092915050565b61121b81611671565b82525050565b61122a816116b9565b82525050565b600061123d60168361154b565b91506112488261173b565b602082019050919050565b600061126060068361154b565b915061126b82611764565b602082019050919050565b600061128360268361154b565b915061128e8261178d565b604082019050919050565b60006112a6600f8361154b565b91506112b1826117dc565b602082019050919050565b60006112c960148361154b565b91506112d482611805565b602082019050919050565b60006112ec601f8361154b565b91506112f78261182e565b602082019050919050565b600061130f60208361154b565b915061131a82611857565b602082019050919050565b600061133260268361154b565b915061133d82611880565b604082019050919050565b6000611355601f8361154b565b9150611360826118cf565b602082019050919050565b611374816116af565b82525050565b600060208201905061138f6000830184611212565b92915050565b60006060820190506113aa6000830186611212565b6113b76020830185611212565b6113c4604083018461136b565b949350505050565b60006040820190506113e16000830185611212565b6113ee602083018461136b565b9392505050565b600060208201905061140a6000830184611221565b92915050565b6000602082019050818103600083015261142981611230565b9050919050565b6000602082019050818103600083015261144981611253565b9050919050565b6000602082019050818103600083015261146981611276565b9050919050565b6000602082019050818103600083015261148981611299565b9050919050565b600060208201905081810360008301526114a9816112bc565b9050919050565b600060208201905081810360008301526114c9816112df565b9050919050565b600060208201905081810360008301526114e981611302565b9050919050565b6000602082019050818103600083015261150981611325565b9050919050565b6000602082019050818103600083015261152981611348565b9050919050565b6000602082019050611545600083018461136b565b92915050565b600082825260208201905092915050565b6000611567826116af565b9150611572836116af565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156115a7576115a66116dd565b5b828201905092915050565b60006115bd826116af565b91506115c8836116af565b9250826115d8576115d761170c565b5b828204905092915050565b60006115ee826116af565b91506115f9836116af565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611632576116316116dd565b5b828202905092915050565b6000611648826116af565b9150611653836116af565b925082821015611666576116656116dd565b5b828203905092915050565b600061167c8261168f565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006116c4826116cb565b9050919050565b60006116d68261168f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4164647265737320776173206e6f74207374616b656400000000000000000000600082015250565b7f4c6f636b65640000000000000000000000000000000000000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b7f416d6f756e742073686f756c642067726561746572207468616e207a65726f00600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f5468652063757272656e74207374616b696e672061637469766974792068617360008201527f20656e6465640000000000000000000000000000000000000000000000000000602082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b61190181611671565b811461190c57600080fd5b50565b61191881611683565b811461192357600080fd5b50565b61192f816116af565b811461193a57600080fd5b5056fea264697066735822122078ac86065fed6dfb0293c59edee0f441711d57c23b37542aa816a1a3bf5a750764736f6c63430008010033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8AEE8127 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xEE947A7C GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xEE947A7C EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x317 JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0xFC71AE8C EQ PUSH2 0x36F JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x8AEE8127 EQ PUSH2 0x27B JUMPI DUP1 PUSH4 0x8B0E9F3F EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0xB88A802F EQ PUSH2 0x2EF JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x5D90BAD9 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x5D90BAD9 EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0x6ABFD183 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x750142E6 EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x80C0976E EQ PUSH2 0x25D JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x154A78B5 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x1683153D EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x45BC78AB EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x583D42FD EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0x5D3EEA91 EQ PUSH2 0x1DF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x38B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x1530 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x1197 JUMP JUMPDEST PUSH2 0x391 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x1530 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x194 SWAP2 SWAP1 PUSH2 0x1197 JUMP JUMPDEST PUSH2 0x3A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x1530 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x1197 JUMP JUMPDEST PUSH2 0x3C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D6 SWAP2 SWAP1 PUSH2 0x1530 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x11E9 JUMP JUMPDEST PUSH2 0x3D9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x215 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x210 SWAP2 SWAP1 PUSH2 0x11E9 JUMP JUMPDEST PUSH2 0x6AC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21F PUSH2 0x6BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22C SWAP2 SWAP1 PUSH2 0x1530 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23D PUSH2 0x6C4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x247 PUSH2 0x6D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x1530 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x265 PUSH2 0x6DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x1530 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x295 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x290 SWAP2 SWAP1 PUSH2 0x1197 JUMP JUMPDEST PUSH2 0x6E4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x29F PUSH2 0x730 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AC SWAP2 SWAP1 PUSH2 0x1530 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BD PUSH2 0x736 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0x137A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E8 SWAP2 SWAP1 PUSH2 0x11E9 JUMP JUMPDEST PUSH2 0x75F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F7 PUSH2 0xAF6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x301 PUSH2 0xD6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30E SWAP2 SWAP1 PUSH2 0x1530 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x331 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32C SWAP2 SWAP1 PUSH2 0x1197 JUMP JUMPDEST PUSH2 0xD71 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x33B PUSH2 0xDF5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x348 SWAP2 SWAP1 PUSH2 0x13F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x359 PUSH2 0xE1B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x366 SWAP2 SWAP1 PUSH2 0x13F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x389 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x384 SWAP2 SWAP1 PUSH2 0x11E9 JUMP JUMPDEST PUSH2 0xE41 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3E1 PUSH2 0xE53 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH2 0x3F1 SWAP2 SWAP1 PUSH2 0x155C JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x433 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x42A SWAP1 PUSH2 0x1430 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x4B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4AC SWAP1 PUSH2 0x1490 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x512 SWAP3 SWAP2 SWAP1 PUSH2 0x13CC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x52C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x540 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x564 SWAP2 SWAP1 PUSH2 0x11C0 JUMP JUMPDEST PUSH2 0x5A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59A SWAP1 PUSH2 0x1470 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5F5 DUP2 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xEA3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x64D DUP2 PUSH1 0xA SLOAD PUSH2 0xEA3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB24546D975E2628748EFC9ACED80665E0FAD66272033E5C0EA25FD3AFAC99795 DUP3 PUSH1 0x40 MLOAD PUSH2 0x699 SWAP2 SWAP1 PUSH2 0x1530 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x6A9 PUSH2 0xEB9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x6B4 PUSH2 0xEC2 JUMP JUMPDEST DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x6CC PUSH2 0xEC2 JUMP JUMPDEST PUSH2 0x6D6 PUSH1 0x0 PUSH2 0xF40 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH2 0x6EC PUSH2 0xEC2 JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x767 PUSH2 0xE53 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH2 0x777 SWAP2 SWAP1 PUSH2 0x155C JUMP JUMPDEST TIMESTAMP LT PUSH2 0x7B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AF SWAP1 PUSH2 0x14F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x7FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F2 SWAP1 PUSH2 0x14B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x85A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1395 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x874 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x888 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8AC SWAP2 SWAP1 PUSH2 0x11C0 JUMP JUMPDEST PUSH2 0x8EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E2 SWAP1 PUSH2 0x1470 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x93D DUP2 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1004 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x9CF CALLER PUSH2 0x101A JUMP JUMPDEST SWAP1 POP PUSH2 0xA23 DUP2 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1004 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xA7B DUP3 PUSH1 0xA SLOAD PUSH2 0x1004 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH2 0xA96 DUP2 PUSH1 0xB SLOAD PUSH2 0x1004 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEBEDB8B3C678666E7F36970BC8F57ABF6D8FA2E828C0DA91EA5B75BF68ED101A DUP4 PUSH1 0x40 MLOAD PUSH2 0xAE2 SWAP2 SWAP1 PUSH2 0x1530 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0xAF3 PUSH2 0xEB9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xAFE PUSH2 0xE53 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT PUSH2 0xB80 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB77 SWAP1 PUSH2 0x1410 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC21 SWAP3 SWAP2 SWAP1 PUSH2 0x13CC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC4F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC73 SWAP2 SWAP1 PUSH2 0x11C0 JUMP JUMPDEST PUSH2 0xCB2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCA9 SWAP1 PUSH2 0x1470 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xD0C DUP2 PUSH1 0xB SLOAD PUSH2 0xEA3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBA8DE60C3403EC381D1D484652EA1980E3C3E56359195C92525BFF4CE47AD98E DUP3 PUSH1 0x40 MLOAD PUSH2 0xD58 SWAP2 SWAP1 PUSH2 0x1530 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0xD69 PUSH2 0xEB9 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xD79 PUSH2 0xEC2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xDE9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDE0 SWAP1 PUSH2 0x1450 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDF2 DUP2 PUSH2 0xF40 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xE49 PUSH2 0xEC2 JUMP JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xE99 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE90 SWAP1 PUSH2 0x1510 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xEB1 SWAP2 SWAP1 PUSH2 0x163D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xECA PUSH2 0x1124 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEE8 PUSH2 0x736 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF3E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF35 SWAP1 PUSH2 0x14D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1012 SWAP2 SWAP1 PUSH2 0x155C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1085 PUSH1 0x8 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1077 PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH2 0x1004 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xEA3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1118 PUSH1 0xC SLOAD PUSH2 0x110A DUP5 PUSH2 0x10FC PUSH1 0x4 SLOAD PUSH2 0x10EE PUSH3 0xF4240 PUSH1 0x7 PUSH1 0x0 DUP14 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x112C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1142 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1142 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x112C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x113A SWAP2 SWAP1 PUSH2 0x15B2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1150 SWAP2 SWAP1 PUSH2 0x15E3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1167 DUP2 PUSH2 0x18F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x117C DUP2 PUSH2 0x190F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1191 DUP2 PUSH2 0x1926 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x11B7 DUP5 DUP3 DUP6 ADD PUSH2 0x1158 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x11E0 DUP5 DUP3 DUP6 ADD PUSH2 0x116D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1209 DUP5 DUP3 DUP6 ADD PUSH2 0x1182 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x121B DUP2 PUSH2 0x1671 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x122A DUP2 PUSH2 0x16B9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x123D PUSH1 0x16 DUP4 PUSH2 0x154B JUMP JUMPDEST SWAP2 POP PUSH2 0x1248 DUP3 PUSH2 0x173B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1260 PUSH1 0x6 DUP4 PUSH2 0x154B JUMP JUMPDEST SWAP2 POP PUSH2 0x126B DUP3 PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1283 PUSH1 0x26 DUP4 PUSH2 0x154B JUMP JUMPDEST SWAP2 POP PUSH2 0x128E DUP3 PUSH2 0x178D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12A6 PUSH1 0xF DUP4 PUSH2 0x154B JUMP JUMPDEST SWAP2 POP PUSH2 0x12B1 DUP3 PUSH2 0x17DC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12C9 PUSH1 0x14 DUP4 PUSH2 0x154B JUMP JUMPDEST SWAP2 POP PUSH2 0x12D4 DUP3 PUSH2 0x1805 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12EC PUSH1 0x1F DUP4 PUSH2 0x154B JUMP JUMPDEST SWAP2 POP PUSH2 0x12F7 DUP3 PUSH2 0x182E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x130F PUSH1 0x20 DUP4 PUSH2 0x154B JUMP JUMPDEST SWAP2 POP PUSH2 0x131A DUP3 PUSH2 0x1857 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1332 PUSH1 0x26 DUP4 PUSH2 0x154B JUMP JUMPDEST SWAP2 POP PUSH2 0x133D DUP3 PUSH2 0x1880 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1355 PUSH1 0x1F DUP4 PUSH2 0x154B JUMP JUMPDEST SWAP2 POP PUSH2 0x1360 DUP3 PUSH2 0x18CF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1374 DUP2 PUSH2 0x16AF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x138F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1212 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x13AA PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1212 JUMP JUMPDEST PUSH2 0x13B7 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1212 JUMP JUMPDEST PUSH2 0x13C4 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x136B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x13E1 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1212 JUMP JUMPDEST PUSH2 0x13EE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x136B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x140A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1221 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1429 DUP2 PUSH2 0x1230 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1449 DUP2 PUSH2 0x1253 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1469 DUP2 PUSH2 0x1276 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1489 DUP2 PUSH2 0x1299 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14A9 DUP2 PUSH2 0x12BC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14C9 DUP2 PUSH2 0x12DF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14E9 DUP2 PUSH2 0x1302 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1509 DUP2 PUSH2 0x1325 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1529 DUP2 PUSH2 0x1348 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1545 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x136B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1567 DUP3 PUSH2 0x16AF JUMP JUMPDEST SWAP2 POP PUSH2 0x1572 DUP4 PUSH2 0x16AF JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x15A7 JUMPI PUSH2 0x15A6 PUSH2 0x16DD JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15BD DUP3 PUSH2 0x16AF JUMP JUMPDEST SWAP2 POP PUSH2 0x15C8 DUP4 PUSH2 0x16AF JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x15D8 JUMPI PUSH2 0x15D7 PUSH2 0x170C JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15EE DUP3 PUSH2 0x16AF JUMP JUMPDEST SWAP2 POP PUSH2 0x15F9 DUP4 PUSH2 0x16AF JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1632 JUMPI PUSH2 0x1631 PUSH2 0x16DD JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1648 DUP3 PUSH2 0x16AF JUMP JUMPDEST SWAP2 POP PUSH2 0x1653 DUP4 PUSH2 0x16AF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1666 JUMPI PUSH2 0x1665 PUSH2 0x16DD JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x167C DUP3 PUSH2 0x168F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16C4 DUP3 PUSH2 0x16CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16D6 DUP3 PUSH2 0x168F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4164647265737320776173206E6F74207374616B656400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4C6F636B65640000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416D6F756E742073686F756C642067726561746572207468616E207A65726F00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5468652063757272656E74207374616B696E6720616374697669747920686173 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20656E6465640000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x1901 DUP2 PUSH2 0x1671 JUMP JUMPDEST DUP2 EQ PUSH2 0x190C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1918 DUP2 PUSH2 0x1683 JUMP JUMPDEST DUP2 EQ PUSH2 0x1923 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x192F DUP2 PUSH2 0x16AF JUMP JUMPDEST DUP2 EQ PUSH2 0x193A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH25 0xAC86065FED6DFB0293C59EDEE0F441711D57C23B37542AA816 LOG1 LOG3 0xBF GAS PUSH22 0x764736F6C6343000801003300000000000000000000 ",
							"sourceMap": "289:4107:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;517:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;912:48;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;732:49;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;825:46;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2475:464;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4101:128;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;661:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:0;;;:::i;:::-;;1072:26:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1130:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3941:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1012:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1201:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1701:721:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2965:384;;;:::i;:::-;;587:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;442:25:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;377:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4269:120;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;517:29;;;;:::o;912:48::-;;;;;;;;;;;;;;;;;:::o;732:49::-;;;;;;;;;;;;;;;;;:::o;825:46::-;;;;;;;;;;;;;;;;;:::o;2475:464::-;2261:21:1;:19;:21::i;:::-;2588:12:5::1;;2569:16;;:31;;;;:::i;:::-;2549:15;:52;;2541:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;2660:7;2630:14;:26;2645:10;2630:26;;;;;;;;;;;;;;;;:37;;2622:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;2710:5;;;;;;;;;;;:14;;;2725:10;2737:7;2710:35;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2702:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;2804:39;2835:7;2804:14;:26;2819:10;2804:26;;;;;;;;;;;;;;;;:30;;:39;;;;:::i;:::-;2775:14;:26;2790:10;2775:26;;;;;;;;;;;;;;;:68;;;;2866:23;2881:7;2866:10;;:14;;:23;;;;:::i;:::-;2853:10;:36;;;;2912:10;2904:28;;;2924:7;2904:28;;;;;;:::i;:::-;;;;;;;;2303:20:1::0;:18;:20::i;:::-;2475:464:5;:::o;4101:128::-;1094:13:0;:11;:13::i;:::-;4205:17:5::1;4186:16;:36;;;;4101:128:::0;:::o;661:31::-;;;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1072:26:5:-;;;;:::o;1130:30::-;;;;:::o;3941:116::-;1094:13:0;:11;:13::i;:::-;4037:12:5::1;4016:11;;:34;;;;;;;;;;;;;;;;;;3941:116:::0;:::o;1012:25::-;;;;:::o;1201:85:0:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;1701:721:5:-;2261:21:1;:19;:21::i;:::-;1810:12:5::1;;1791:16;;:31;;;;:::i;:::-;1773:15;:49;1765:100;;;;;;;;;;;;:::i;:::-;;;;;;;;;1893:1;1883:7;:11;1875:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;1948:5;;;;;;;;;;;:18;;;1967:10;1987:4;1994:7;1948:54;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1940:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;2061:39;2092:7;2061:14;:26;2076:10;2061:26;;;;;;;;;;;;;;;;:30;;:39;;;;:::i;:::-;2032:14;:26;2047:10;2032:26;;;;;;;;;;;;;;;:68;;;;2136:15;2110:11;:23;2122:10;2110:23;;;;;;;;;;;;;;;:41;;;;2161:14;2178:28;2195:10;2178:16;:28::i;:::-;2161:45;;2244:37;2274:6;2244:13;:25;2258:10;2244:25;;;;;;;;;;;;;;;;:29;;:37;;;;:::i;:::-;2216:13;:25;2230:10;2216:25;;;;;;;;;;;;;;;:65;;;;2304:23;2319:7;2304:10;;:14;;:23;;;;:::i;:::-;2291:10;:36;;;;2351:23;2367:6;2351:11;;:15;;:23;;;;:::i;:::-;2337:11;:37;;;;2395:10;2389:26;;;2407:7;2389:26;;;;;;:::i;:::-;;;;;;;;2292:1:1;2303:20:::0;:18;:20::i;:::-;1701:721:5;:::o;2965:384::-;2261:21:1;:19;:21::i;:::-;3054:1:5::1;3028:11;:23;3040:10;3028:23;;;;;;;;;;;;;;;;:27;3020:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;3092:14;3109:13;:25;3123:10;3109:25;;;;;;;;;;;;;;;;3092:42;;3152:11;;;;;;;;;;;:20;;;3173:10;3185:6;3152:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3144:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;3248:1;3222:13;:25;3236:10;3222:25;;;;;;;;;;;;;;;:27;;;;3273:23;3289:6;3273:11;;:15;;:23;;;;:::i;:::-;3259:11;:37;;;;3323:10;3311:31;;;3335:6;3311:31;;;;;;:::i;:::-;;;;;;;;2292:1:1;2303:20:::0;:18;:20::i;:::-;2965:384:5:o;587:27::-;;;;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;;;2161:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;442:25:5:-;;;;;;;;;;;;;:::o;377:19::-;;;;;;;;;;;;;:::o;4269:120::-;1094:13:0;:11;:13::i;:::-;4367:15:5::1;4350:14;:32;;;;4269:120:::0;:::o;2336:287:1:-;1759:1;2468:7;;:19;;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;3122:96:4:-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;2629:209:1:-;1716:1;2809:7;:22;;;;2629:209::o;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2433:187;;:::o;2755:96:4:-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;3411:492:5:-;3477:7;3496:28;3527:62;3568:11;:20;3580:7;3568:20;;;;;;;;;;;;;;;;3528:34;3545:16;;3528:12;;:16;;:34;;;;:::i;:::-;3527:40;;:62;;;;:::i;:::-;3496:93;;3765:14;3782:91;3865:7;;3782:78;3839:20;3782:52;3819:14;;3782:32;3810:3;3782:14;:23;3797:7;3782:23;;;;;;;;;;;;;;;;:27;;:32;;;;:::i;:::-;:36;;:52;;;;:::i;:::-;:56;;:78;;;;:::i;:::-;:82;;:91;;;;:::i;:::-;3765:108;;3890:6;3883:13;;;;3411:492;;;:::o;640:96:3:-;693:7;719:10;712:17;;640:96;:::o;3850::4:-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;3465:::-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;7:139:6:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:137::-;;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;212:77;;;;:::o;295:139::-;;379:6;366:20;357:29;;395:33;422:5;395:33;:::i;:::-;347:87;;;;:::o;440:262::-;;548:2;536:9;527:7;523:23;519:32;516:2;;;564:1;561;554:12;516:2;607:1;632:53;677:7;668:6;657:9;653:22;632:53;:::i;:::-;622:63;;578:117;506:196;;;;:::o;708:278::-;;824:2;812:9;803:7;799:23;795:32;792:2;;;840:1;837;830:12;792:2;883:1;908:61;961:7;952:6;941:9;937:22;908:61;:::i;:::-;898:71;;854:125;782:204;;;;:::o;992:262::-;;1100:2;1088:9;1079:7;1075:23;1071:32;1068:2;;;1116:1;1113;1106:12;1068:2;1159:1;1184:53;1229:7;1220:6;1209:9;1205:22;1184:53;:::i;:::-;1174:63;;1130:117;1058:196;;;;:::o;1260:118::-;1347:24;1365:5;1347:24;:::i;:::-;1342:3;1335:37;1325:53;;:::o;1384:159::-;1485:51;1530:5;1485:51;:::i;:::-;1480:3;1473:64;1463:80;;:::o;1549:366::-;;1712:67;1776:2;1771:3;1712:67;:::i;:::-;1705:74;;1788:93;1877:3;1788:93;:::i;:::-;1906:2;1901:3;1897:12;1890:19;;1695:220;;;:::o;1921:365::-;;2084:66;2148:1;2143:3;2084:66;:::i;:::-;2077:73;;2159:93;2248:3;2159:93;:::i;:::-;2277:2;2272:3;2268:12;2261:19;;2067:219;;;:::o;2292:366::-;;2455:67;2519:2;2514:3;2455:67;:::i;:::-;2448:74;;2531:93;2620:3;2531:93;:::i;:::-;2649:2;2644:3;2640:12;2633:19;;2438:220;;;:::o;2664:366::-;;2827:67;2891:2;2886:3;2827:67;:::i;:::-;2820:74;;2903:93;2992:3;2903:93;:::i;:::-;3021:2;3016:3;3012:12;3005:19;;2810:220;;;:::o;3036:366::-;;3199:67;3263:2;3258:3;3199:67;:::i;:::-;3192:74;;3275:93;3364:3;3275:93;:::i;:::-;3393:2;3388:3;3384:12;3377:19;;3182:220;;;:::o;3408:366::-;;3571:67;3635:2;3630:3;3571:67;:::i;:::-;3564:74;;3647:93;3736:3;3647:93;:::i;:::-;3765:2;3760:3;3756:12;3749:19;;3554:220;;;:::o;3780:366::-;;3943:67;4007:2;4002:3;3943:67;:::i;:::-;3936:74;;4019:93;4108:3;4019:93;:::i;:::-;4137:2;4132:3;4128:12;4121:19;;3926:220;;;:::o;4152:366::-;;4315:67;4379:2;4374:3;4315:67;:::i;:::-;4308:74;;4391:93;4480:3;4391:93;:::i;:::-;4509:2;4504:3;4500:12;4493:19;;4298:220;;;:::o;4524:366::-;;4687:67;4751:2;4746:3;4687:67;:::i;:::-;4680:74;;4763:93;4852:3;4763:93;:::i;:::-;4881:2;4876:3;4872:12;4865:19;;4670:220;;;:::o;4896:118::-;4983:24;5001:5;4983:24;:::i;:::-;4978:3;4971:37;4961:53;;:::o;5020:222::-;;5151:2;5140:9;5136:18;5128:26;;5164:71;5232:1;5221:9;5217:17;5208:6;5164:71;:::i;:::-;5118:124;;;;:::o;5248:442::-;;5435:2;5424:9;5420:18;5412:26;;5448:71;5516:1;5505:9;5501:17;5492:6;5448:71;:::i;:::-;5529:72;5597:2;5586:9;5582:18;5573:6;5529:72;:::i;:::-;5611;5679:2;5668:9;5664:18;5655:6;5611:72;:::i;:::-;5402:288;;;;;;:::o;5696:332::-;;5855:2;5844:9;5840:18;5832:26;;5868:71;5936:1;5925:9;5921:17;5912:6;5868:71;:::i;:::-;5949:72;6017:2;6006:9;6002:18;5993:6;5949:72;:::i;:::-;5822:206;;;;;:::o;6034:250::-;;6179:2;6168:9;6164:18;6156:26;;6192:85;6274:1;6263:9;6259:17;6250:6;6192:85;:::i;:::-;6146:138;;;;:::o;6290:419::-;;6494:2;6483:9;6479:18;6471:26;;6543:9;6537:4;6533:20;6529:1;6518:9;6514:17;6507:47;6571:131;6697:4;6571:131;:::i;:::-;6563:139;;6461:248;;;:::o;6715:419::-;;6919:2;6908:9;6904:18;6896:26;;6968:9;6962:4;6958:20;6954:1;6943:9;6939:17;6932:47;6996:131;7122:4;6996:131;:::i;:::-;6988:139;;6886:248;;;:::o;7140:419::-;;7344:2;7333:9;7329:18;7321:26;;7393:9;7387:4;7383:20;7379:1;7368:9;7364:17;7357:47;7421:131;7547:4;7421:131;:::i;:::-;7413:139;;7311:248;;;:::o;7565:419::-;;7769:2;7758:9;7754:18;7746:26;;7818:9;7812:4;7808:20;7804:1;7793:9;7789:17;7782:47;7846:131;7972:4;7846:131;:::i;:::-;7838:139;;7736:248;;;:::o;7990:419::-;;8194:2;8183:9;8179:18;8171:26;;8243:9;8237:4;8233:20;8229:1;8218:9;8214:17;8207:47;8271:131;8397:4;8271:131;:::i;:::-;8263:139;;8161:248;;;:::o;8415:419::-;;8619:2;8608:9;8604:18;8596:26;;8668:9;8662:4;8658:20;8654:1;8643:9;8639:17;8632:47;8696:131;8822:4;8696:131;:::i;:::-;8688:139;;8586:248;;;:::o;8840:419::-;;9044:2;9033:9;9029:18;9021:26;;9093:9;9087:4;9083:20;9079:1;9068:9;9064:17;9057:47;9121:131;9247:4;9121:131;:::i;:::-;9113:139;;9011:248;;;:::o;9265:419::-;;9469:2;9458:9;9454:18;9446:26;;9518:9;9512:4;9508:20;9504:1;9493:9;9489:17;9482:47;9546:131;9672:4;9546:131;:::i;:::-;9538:139;;9436:248;;;:::o;9690:419::-;;9894:2;9883:9;9879:18;9871:26;;9943:9;9937:4;9933:20;9929:1;9918:9;9914:17;9907:47;9971:131;10097:4;9971:131;:::i;:::-;9963:139;;9861:248;;;:::o;10115:222::-;;10246:2;10235:9;10231:18;10223:26;;10259:71;10327:1;10316:9;10312:17;10303:6;10259:71;:::i;:::-;10213:124;;;;:::o;10343:169::-;;10461:6;10456:3;10449:19;10501:4;10496:3;10492:14;10477:29;;10439:73;;;;:::o;10518:305::-;;10577:20;10595:1;10577:20;:::i;:::-;10572:25;;10611:20;10629:1;10611:20;:::i;:::-;10606:25;;10765:1;10697:66;10693:74;10690:1;10687:81;10684:2;;;10771:18;;:::i;:::-;10684:2;10815:1;10812;10808:9;10801:16;;10562:261;;;;:::o;10829:185::-;;10886:20;10904:1;10886:20;:::i;:::-;10881:25;;10920:20;10938:1;10920:20;:::i;:::-;10915:25;;10959:1;10949:2;;10964:18;;:::i;:::-;10949:2;11006:1;11003;10999:9;10994:14;;10871:143;;;;:::o;11020:348::-;;11083:20;11101:1;11083:20;:::i;:::-;11078:25;;11117:20;11135:1;11117:20;:::i;:::-;11112:25;;11305:1;11237:66;11233:74;11230:1;11227:81;11222:1;11215:9;11208:17;11204:105;11201:2;;;11312:18;;:::i;:::-;11201:2;11360:1;11357;11353:9;11342:20;;11068:300;;;;:::o;11374:191::-;;11434:20;11452:1;11434:20;:::i;:::-;11429:25;;11468:20;11486:1;11468:20;:::i;:::-;11463:25;;11507:1;11504;11501:8;11498:2;;;11512:18;;:::i;:::-;11498:2;11557:1;11554;11550:9;11542:17;;11419:146;;;;:::o;11571:96::-;;11637:24;11655:5;11637:24;:::i;:::-;11626:35;;11616:51;;;:::o;11673:90::-;;11750:5;11743:13;11736:21;11725:32;;11715:48;;;:::o;11769:126::-;;11846:42;11839:5;11835:54;11824:65;;11814:81;;;:::o;11901:77::-;;11967:5;11956:16;;11946:32;;;:::o;11984:154::-;;12081:51;12126:5;12081:51;:::i;:::-;12068:64;;12058:80;;;:::o;12144:127::-;;12241:24;12259:5;12241:24;:::i;:::-;12228:37;;12218:53;;;:::o;12277:180::-;12325:77;12322:1;12315:88;12422:4;12419:1;12412:15;12446:4;12443:1;12436:15;12463:180;12511:77;12508:1;12501:88;12608:4;12605:1;12598:15;12632:4;12629:1;12622:15;12649:172;12789:24;12785:1;12777:6;12773:14;12766:48;12755:66;:::o;12827:156::-;12967:8;12963:1;12955:6;12951:14;12944:32;12933:50;:::o;12989:225::-;13129:34;13125:1;13117:6;13113:14;13106:58;13198:8;13193:2;13185:6;13181:15;13174:33;13095:119;:::o;13220:165::-;13360:17;13356:1;13348:6;13344:14;13337:41;13326:59;:::o;13391:170::-;13531:22;13527:1;13519:6;13515:14;13508:46;13497:64;:::o;13567:181::-;13707:33;13703:1;13695:6;13691:14;13684:57;13673:75;:::o;13754:182::-;13894:34;13890:1;13882:6;13878:14;13871:58;13860:76;:::o;13942:225::-;14082:34;14078:1;14070:6;14066:14;14059:58;14151:8;14146:2;14138:6;14134:15;14127:33;14048:119;:::o;14173:181::-;14313:33;14309:1;14301:6;14297:14;14290:57;14279:75;:::o;14360:122::-;14433:24;14451:5;14433:24;:::i;:::-;14426:5;14423:35;14413:2;;14472:1;14469;14462:12;14413:2;14403:79;:::o;14488:116::-;14558:21;14573:5;14558:21;:::i;:::-;14551:5;14548:32;14538:2;;14594:1;14591;14584:12;14538:2;14528:76;:::o;14610:122::-;14683:24;14701:5;14683:24;:::i;:::-;14676:5;14673:35;14663:2;;14722:1;14719;14712:12;14663:2;14653:79;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1303000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"claimReward()": "infinite",
								"dayTime()": "1240",
								"lockupPeriod()": "1151",
								"owner()": "1289",
								"renounceOwnership()": "24465",
								"rewardRateInit()": "1153",
								"rewardToken()": "1323",
								"setRewardRateInit(uint256)": "21494",
								"setRewardToken(address)": "22309",
								"setStakingStartTime(uint256)": "21407",
								"stake(uint256)": "infinite",
								"stakingBalance(address)": "1582",
								"stakingReward(address)": "1560",
								"stakingStartTime()": "1174",
								"stakingTime(address)": "1604",
								"token()": "1345",
								"totalReward()": "1218",
								"totalStake()": "1174",
								"transferOwnership(address)": "24791",
								"unStake(uint256)": "infinite"
							},
							"internal": {
								"getRewardForUser(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 289,
									"end": 4396,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 289,
									"end": 4396,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 289,
									"end": 4396,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1155,
									"end": 1160,
									"name": "PUSH",
									"source": 5,
									"value": "15180"
								},
								{
									"begin": 1130,
									"end": 1160,
									"name": "PUSH",
									"source": 5,
									"value": "C"
								},
								{
									"begin": 1130,
									"end": 1160,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1493,
									"end": 1499,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1478,
									"end": 1483,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1478,
									"end": 1483,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1478,
									"end": 1500,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 1478,
									"end": 1500,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 1478,
									"end": 1500,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1478,
									"end": 1500,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1478,
									"end": 1500,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1478,
									"end": 1500,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1478,
									"end": 1500,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1478,
									"end": 1500,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 1478,
									"end": 1500,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1478,
									"end": 1500,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1478,
									"end": 1500,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1478,
									"end": 1500,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1478,
									"end": 1500,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1478,
									"end": 1500,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1478,
									"end": 1500,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1478,
									"end": 1500,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1478,
									"end": 1500,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1478,
									"end": 1500,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1531,
									"end": 1543,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1510,
									"end": 1521,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1510,
									"end": 1521,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1510,
									"end": 1544,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 1510,
									"end": 1544,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 1510,
									"end": 1544,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1510,
									"end": 1544,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1510,
									"end": 1544,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1510,
									"end": 1544,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1510,
									"end": 1544,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1510,
									"end": 1544,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 1510,
									"end": 1544,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1510,
									"end": 1544,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1510,
									"end": 1544,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1510,
									"end": 1544,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1510,
									"end": 1544,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1510,
									"end": 1544,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1510,
									"end": 1544,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1510,
									"end": 1544,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1510,
									"end": 1544,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1510,
									"end": 1544,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1571,
									"end": 1586,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1554,
									"end": 1568,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1554,
									"end": 1586,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1554,
									"end": 1586,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1554,
									"end": 1586,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1554,
									"end": 1586,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1611,
									"end": 1624,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1596,
									"end": 1608,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 1596,
									"end": 1624,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1596,
									"end": 1624,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1596,
									"end": 1624,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1596,
									"end": 1624,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1653,
									"end": 1668,
									"name": "TIMESTAMP",
									"source": 5
								},
								{
									"begin": 1634,
									"end": 1650,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 1634,
									"end": 1668,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1634,
									"end": 1668,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1634,
									"end": 1668,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1634,
									"end": 1668,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1370,
									"end": 1675,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 289,
									"end": 4396,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 289,
									"end": 4396,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2550,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2604,
									"end": 2612,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2594,
									"end": 2602,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7,
									"end": 150,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 70,
									"end": 150,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 70,
									"end": 150,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 70,
									"end": 150,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 70,
									"end": 150,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 70,
									"end": 150,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 299,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 156,
									"end": 299,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 156,
									"end": 299,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 250,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 238,
									"end": 251,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 229,
									"end": 251,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 229,
									"end": 251,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 260,
									"end": 293,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 287,
									"end": 292,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 260,
									"end": 293,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 260,
									"end": 293,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 260,
									"end": 293,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 260,
									"end": 293,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 219,
									"end": 299,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 219,
									"end": 299,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 219,
									"end": 299,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 219,
									"end": 299,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 219,
									"end": 299,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 305,
									"end": 1058,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 305,
									"end": 1058,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 305,
									"end": 1058,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 305,
									"end": 1058,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 305,
									"end": 1058,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 305,
									"end": 1058,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 475,
									"end": 478,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 463,
									"end": 472,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 454,
									"end": 461,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 450,
									"end": 473,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 446,
									"end": 479,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 443,
									"end": 445,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 443,
									"end": 445,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 443,
									"end": 445,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 492,
									"end": 493,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 489,
									"end": 490,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 482,
									"end": 494,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 443,
									"end": 445,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 443,
									"end": 445,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 535,
									"end": 536,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 560,
									"end": 624,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 616,
									"end": 623,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 607,
									"end": 613,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 596,
									"end": 605,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 592,
									"end": 614,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 560,
									"end": 624,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 560,
									"end": 624,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 560,
									"end": 624,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 560,
									"end": 624,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 550,
									"end": 624,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 550,
									"end": 624,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 506,
									"end": 634,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 673,
									"end": 675,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 699,
									"end": 763,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 755,
									"end": 762,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 746,
									"end": 752,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 735,
									"end": 744,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 731,
									"end": 753,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 699,
									"end": 763,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 699,
									"end": 763,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 699,
									"end": 763,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 699,
									"end": 763,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 689,
									"end": 763,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 689,
									"end": 763,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 644,
									"end": 773,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 812,
									"end": 814,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 838,
									"end": 902,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 894,
									"end": 901,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 885,
									"end": 891,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 874,
									"end": 883,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 870,
									"end": 892,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 838,
									"end": 902,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 838,
									"end": 902,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 838,
									"end": 902,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 838,
									"end": 902,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 828,
									"end": 902,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 828,
									"end": 902,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 783,
									"end": 912,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 951,
									"end": 953,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 977,
									"end": 1041,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 1033,
									"end": 1040,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 1024,
									"end": 1030,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1013,
									"end": 1022,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 1009,
									"end": 1031,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 977,
									"end": 1041,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 977,
									"end": 1041,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 977,
									"end": 1041,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 977,
									"end": 1041,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 967,
									"end": 1041,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 967,
									"end": 1041,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 922,
									"end": 1051,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 433,
									"end": 1058,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 433,
									"end": 1058,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 433,
									"end": 1058,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 433,
									"end": 1058,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 433,
									"end": 1058,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 433,
									"end": 1058,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 433,
									"end": 1058,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 433,
									"end": 1058,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 1064,
									"end": 1160,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 1064,
									"end": 1160,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1064,
									"end": 1160,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1130,
									"end": 1154,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 1148,
									"end": 1153,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1130,
									"end": 1154,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 1130,
									"end": 1154,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 1130,
									"end": 1154,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 1130,
									"end": 1154,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1119,
									"end": 1154,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1119,
									"end": 1154,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1109,
									"end": 1160,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1109,
									"end": 1160,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1109,
									"end": 1160,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1109,
									"end": 1160,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 1166,
									"end": 1292,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 1166,
									"end": 1292,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1166,
									"end": 1292,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1243,
									"end": 1285,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1236,
									"end": 1241,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1232,
									"end": 1286,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1221,
									"end": 1286,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1221,
									"end": 1286,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1211,
									"end": 1292,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1211,
									"end": 1292,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1211,
									"end": 1292,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1211,
									"end": 1292,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 1298,
									"end": 1375,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 1298,
									"end": 1375,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1298,
									"end": 1375,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1364,
									"end": 1369,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1353,
									"end": 1369,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1353,
									"end": 1369,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1343,
									"end": 1375,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1343,
									"end": 1375,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1343,
									"end": 1375,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1343,
									"end": 1375,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 1381,
									"end": 1503,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1381,
									"end": 1503,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1454,
									"end": 1478,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1472,
									"end": 1477,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1454,
									"end": 1478,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 1454,
									"end": 1478,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 1454,
									"end": 1478,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1454,
									"end": 1478,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1447,
									"end": 1452,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1444,
									"end": 1479,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1436,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1434,
									"end": 1436,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1493,
									"end": 1494,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1490,
									"end": 1491,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1483,
									"end": 1495,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1434,
									"end": 1436,
									"name": "tag",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1434,
									"end": 1436,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1424,
									"end": 1503,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1424,
									"end": 1503,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 1509,
									"end": 1631,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 1509,
									"end": 1631,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1606,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 1600,
									"end": 1605,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1582,
									"end": 1606,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 1582,
									"end": 1606,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 1582,
									"end": 1606,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 1582,
									"end": 1606,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1575,
									"end": 1580,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1572,
									"end": 1607,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 1562,
									"end": 1564,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 1562,
									"end": 1564,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1621,
									"end": 1622,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1618,
									"end": 1619,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1611,
									"end": 1623,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1562,
									"end": 1564,
									"name": "tag",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 1562,
									"end": 1564,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1552,
									"end": 1631,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1552,
									"end": 1631,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 289,
									"end": 4396,
									"name": "tag",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 289,
									"end": 4396,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 289,
									"end": 4396,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 289,
									"end": 4396,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 289,
									"end": 4396,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 289,
									"end": 4396,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 289,
									"end": 4396,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 289,
									"end": 4396,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 289,
									"end": 4396,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122078ac86065fed6dfb0293c59edee0f441711d57c23b37542aa816a1a3bf5a750764736f6c63430008010033",
									".code": [
										{
											"begin": 289,
											"end": 4396,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "PUSH",
											"source": 5,
											"value": "8AEE8127"
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "PUSH",
											"source": 5,
											"value": "EE947A7C"
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "PUSH",
											"source": 5,
											"value": "EE947A7C"
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "PUSH",
											"source": 5,
											"value": "F2FDE38B"
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "PUSH",
											"source": 5,
											"value": "F7C618C1"
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "PUSH",
											"source": 5,
											"value": "FC0C546A"
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "PUSH",
											"source": 5,
											"value": "FC71AE8C"
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "PUSH",
											"source": 5,
											"value": "8AEE8127"
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "PUSH",
											"source": 5,
											"value": "8B0E9F3F"
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "PUSH",
											"source": 5,
											"value": "8DA5CB5B"
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "PUSH",
											"source": 5,
											"value": "A694FC3A"
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "PUSH",
											"source": 5,
											"value": "B88A802F"
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "PUSH",
											"source": 5,
											"value": "5D90BAD9"
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "PUSH",
											"source": 5,
											"value": "5D90BAD9"
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "PUSH",
											"source": 5,
											"value": "6ABFD183"
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "PUSH",
											"source": 5,
											"value": "715018A6"
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "PUSH",
											"source": 5,
											"value": "750142E6"
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "PUSH",
											"source": 5,
											"value": "80C0976E"
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "PUSH",
											"source": 5,
											"value": "154A78B5"
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "PUSH",
											"source": 5,
											"value": "1683153D"
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "PUSH",
											"source": 5,
											"value": "45BC78AB"
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "PUSH",
											"source": 5,
											"value": "583D42FD"
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "PUSH",
											"source": 5,
											"value": "5D3EEA91"
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 289,
											"end": 4396,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 517,
											"end": 546,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 517,
											"end": 546,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 517,
											"end": 546,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 517,
											"end": 546,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 517,
											"end": 546,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 517,
											"end": 546,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 517,
											"end": 546,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 517,
											"end": 546,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 517,
											"end": 546,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 517,
											"end": 546,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 517,
											"end": 546,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 517,
											"end": 546,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 517,
											"end": 546,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 517,
											"end": 546,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 517,
											"end": 546,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 517,
											"end": 546,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 517,
											"end": 546,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 517,
											"end": 546,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 517,
											"end": 546,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 517,
											"end": 546,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 517,
											"end": 546,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 517,
											"end": 546,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 517,
											"end": 546,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 912,
											"end": 960,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 912,
											"end": 960,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 912,
											"end": 960,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 912,
											"end": 960,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 912,
											"end": 960,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 912,
											"end": 960,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 912,
											"end": 960,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 912,
											"end": 960,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 912,
											"end": 960,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 912,
											"end": 960,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 912,
											"end": 960,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 912,
											"end": 960,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 912,
											"end": 960,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 912,
											"end": 960,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 912,
											"end": 960,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 912,
											"end": 960,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 912,
											"end": 960,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 912,
											"end": 960,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 912,
											"end": 960,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 912,
											"end": 960,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 912,
											"end": 960,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 912,
											"end": 960,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 912,
											"end": 960,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 912,
											"end": 960,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 912,
											"end": 960,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 912,
											"end": 960,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 912,
											"end": 960,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 912,
											"end": 960,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 912,
											"end": 960,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 912,
											"end": 960,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 912,
											"end": 960,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 912,
											"end": 960,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 912,
											"end": 960,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 912,
											"end": 960,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 912,
											"end": 960,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 912,
											"end": 960,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 912,
											"end": 960,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 732,
											"end": 781,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 732,
											"end": 781,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 732,
											"end": 781,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 732,
											"end": 781,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 732,
											"end": 781,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 732,
											"end": 781,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 732,
											"end": 781,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 732,
											"end": 781,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 732,
											"end": 781,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 732,
											"end": 781,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 732,
											"end": 781,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 732,
											"end": 781,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 732,
											"end": 781,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 732,
											"end": 781,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 732,
											"end": 781,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 732,
											"end": 781,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 732,
											"end": 781,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 732,
											"end": 781,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 732,
											"end": 781,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 732,
											"end": 781,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 732,
											"end": 781,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 732,
											"end": 781,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 781,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 732,
											"end": 781,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 732,
											"end": 781,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 732,
											"end": 781,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 732,
											"end": 781,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 732,
											"end": 781,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 732,
											"end": 781,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 732,
											"end": 781,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 732,
											"end": 781,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 781,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 732,
											"end": 781,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 732,
											"end": 781,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 732,
											"end": 781,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 732,
											"end": 781,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 732,
											"end": 781,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 825,
											"end": 871,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 825,
											"end": 871,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 825,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 825,
											"end": 871,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 825,
											"end": 871,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 825,
											"end": 871,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 825,
											"end": 871,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 825,
											"end": 871,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 825,
											"end": 871,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 825,
											"end": 871,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 825,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 825,
											"end": 871,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 825,
											"end": 871,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 825,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 825,
											"end": 871,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 825,
											"end": 871,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 825,
											"end": 871,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 825,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 825,
											"end": 871,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 825,
											"end": 871,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 825,
											"end": 871,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 825,
											"end": 871,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 825,
											"end": 871,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 825,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 825,
											"end": 871,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 825,
											"end": 871,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 825,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 825,
											"end": 871,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 825,
											"end": 871,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 825,
											"end": 871,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 825,
											"end": 871,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 825,
											"end": 871,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 825,
											"end": 871,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 825,
											"end": 871,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 825,
											"end": 871,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 825,
											"end": 871,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 825,
											"end": 871,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2475,
											"end": 2939,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 2475,
											"end": 2939,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2475,
											"end": 2939,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 2475,
											"end": 2939,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2475,
											"end": 2939,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2475,
											"end": 2939,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2475,
											"end": 2939,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2475,
											"end": 2939,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2475,
											"end": 2939,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2475,
											"end": 2939,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2475,
											"end": 2939,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2475,
											"end": 2939,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2475,
											"end": 2939,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2475,
											"end": 2939,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 2475,
											"end": 2939,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2475,
											"end": 2939,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2475,
											"end": 2939,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2475,
											"end": 2939,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 2475,
											"end": 2939,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2475,
											"end": 2939,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 2475,
											"end": 2939,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2475,
											"end": 2939,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 4101,
											"end": 4229,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 4101,
											"end": 4229,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4101,
											"end": 4229,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 4101,
											"end": 4229,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4101,
											"end": 4229,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4101,
											"end": 4229,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4101,
											"end": 4229,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4101,
											"end": 4229,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4101,
											"end": 4229,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4101,
											"end": 4229,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4101,
											"end": 4229,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 4101,
											"end": 4229,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4101,
											"end": 4229,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4101,
											"end": 4229,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 4101,
											"end": 4229,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4101,
											"end": 4229,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 4101,
											"end": 4229,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4101,
											"end": 4229,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 4101,
											"end": 4229,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4101,
											"end": 4229,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 4101,
											"end": 4229,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4101,
											"end": 4229,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 661,
											"end": 692,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 661,
											"end": 692,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 661,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 661,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 661,
											"end": 692,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 661,
											"end": 692,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 661,
											"end": 692,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 661,
											"end": 692,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 661,
											"end": 692,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 661,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 661,
											"end": 692,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 661,
											"end": 692,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 661,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 661,
											"end": 692,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 661,
											"end": 692,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 661,
											"end": 692,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 661,
											"end": 692,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 661,
											"end": 692,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 661,
											"end": 692,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 661,
											"end": 692,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 661,
											"end": 692,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 661,
											"end": 692,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 661,
											"end": 692,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1072,
											"end": 1098,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 1072,
											"end": 1098,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1072,
											"end": 1098,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 1072,
											"end": 1098,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 1072,
											"end": 1098,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1072,
											"end": 1098,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 1072,
											"end": 1098,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1072,
											"end": 1098,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1072,
											"end": 1098,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1072,
											"end": 1098,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 1072,
											"end": 1098,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1072,
											"end": 1098,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1072,
											"end": 1098,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 1072,
											"end": 1098,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1072,
											"end": 1098,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 1072,
											"end": 1098,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1072,
											"end": 1098,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1072,
											"end": 1098,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1072,
											"end": 1098,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1072,
											"end": 1098,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1072,
											"end": 1098,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1072,
											"end": 1098,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1072,
											"end": 1098,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3941,
											"end": 4057,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 3941,
											"end": 4057,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3941,
											"end": 4057,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 3941,
											"end": 4057,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3941,
											"end": 4057,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3941,
											"end": 4057,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3941,
											"end": 4057,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3941,
											"end": 4057,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3941,
											"end": 4057,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3941,
											"end": 4057,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3941,
											"end": 4057,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 3941,
											"end": 4057,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3941,
											"end": 4057,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3941,
											"end": 4057,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 3941,
											"end": 4057,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3941,
											"end": 4057,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 3941,
											"end": 4057,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3941,
											"end": 4057,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 3941,
											"end": 4057,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3941,
											"end": 4057,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 3941,
											"end": 4057,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3941,
											"end": 4057,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1012,
											"end": 1037,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 1012,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1012,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1012,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 1012,
											"end": 1037,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1012,
											"end": 1037,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1012,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1012,
											"end": 1037,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1012,
											"end": 1037,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1012,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 1012,
											"end": 1037,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1012,
											"end": 1037,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1012,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 1012,
											"end": 1037,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1012,
											"end": 1037,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 1012,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1012,
											"end": 1037,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1012,
											"end": 1037,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1012,
											"end": 1037,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1012,
											"end": 1037,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1012,
											"end": 1037,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1012,
											"end": 1037,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1012,
											"end": 1037,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1701,
											"end": 2422,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 1701,
											"end": 2422,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1701,
											"end": 2422,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 1701,
											"end": 2422,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1701,
											"end": 2422,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1701,
											"end": 2422,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1701,
											"end": 2422,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1701,
											"end": 2422,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1701,
											"end": 2422,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1701,
											"end": 2422,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1701,
											"end": 2422,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1701,
											"end": 2422,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1701,
											"end": 2422,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1701,
											"end": 2422,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 1701,
											"end": 2422,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1701,
											"end": 2422,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1701,
											"end": 2422,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1701,
											"end": 2422,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 1701,
											"end": 2422,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1701,
											"end": 2422,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 1701,
											"end": 2422,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1701,
											"end": 2422,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 2965,
											"end": 3349,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 2965,
											"end": 3349,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2965,
											"end": 3349,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 2965,
											"end": 3349,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 2965,
											"end": 3349,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2965,
											"end": 3349,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 2965,
											"end": 3349,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2965,
											"end": 3349,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 587,
											"end": 614,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 587,
											"end": 614,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 587,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 587,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 587,
											"end": 614,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 587,
											"end": 614,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 587,
											"end": 614,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 587,
											"end": 614,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 587,
											"end": 614,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 587,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 587,
											"end": 614,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 587,
											"end": 614,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 587,
											"end": 614,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 587,
											"end": 614,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 587,
											"end": 614,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 587,
											"end": 614,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 587,
											"end": 614,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 587,
											"end": 614,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 587,
											"end": 614,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 587,
											"end": 614,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 587,
											"end": 614,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 587,
											"end": 614,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 587,
											"end": 614,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 442,
											"end": 467,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 442,
											"end": 467,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 442,
											"end": 467,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 442,
											"end": 467,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 442,
											"end": 467,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 442,
											"end": 467,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 442,
											"end": 467,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 442,
											"end": 467,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 442,
											"end": 467,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 442,
											"end": 467,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 442,
											"end": 467,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 442,
											"end": 467,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 442,
											"end": 467,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 442,
											"end": 467,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 442,
											"end": 467,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 442,
											"end": 467,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 442,
											"end": 467,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 442,
											"end": 467,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 442,
											"end": 467,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 442,
											"end": 467,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 442,
											"end": 467,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 442,
											"end": 467,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 442,
											"end": 467,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 377,
											"end": 396,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 377,
											"end": 396,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 377,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 377,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 377,
											"end": 396,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 377,
											"end": 396,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 377,
											"end": 396,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 377,
											"end": 396,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 377,
											"end": 396,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 377,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 377,
											"end": 396,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 377,
											"end": 396,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 377,
											"end": 396,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 377,
											"end": 396,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 377,
											"end": 396,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 377,
											"end": 396,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 377,
											"end": 396,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 377,
											"end": 396,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 377,
											"end": 396,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 377,
											"end": 396,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 377,
											"end": 396,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 377,
											"end": 396,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 377,
											"end": 396,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 4269,
											"end": 4389,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 4269,
											"end": 4389,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4269,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 4269,
											"end": 4389,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4269,
											"end": 4389,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4269,
											"end": 4389,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4269,
											"end": 4389,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4269,
											"end": 4389,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4269,
											"end": 4389,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4269,
											"end": 4389,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4269,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 4269,
											"end": 4389,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4269,
											"end": 4389,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4269,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 4269,
											"end": 4389,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4269,
											"end": 4389,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 4269,
											"end": 4389,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4269,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 4269,
											"end": 4389,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4269,
											"end": 4389,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 4269,
											"end": 4389,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4269,
											"end": 4389,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 517,
											"end": 546,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 517,
											"end": 546,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 517,
											"end": 546,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 517,
											"end": 546,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 517,
											"end": 546,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 517,
											"end": 546,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 912,
											"end": 960,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 912,
											"end": 960,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 912,
											"end": 960,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 912,
											"end": 960,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 912,
											"end": 960,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 912,
											"end": 960,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 912,
											"end": 960,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 912,
											"end": 960,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 912,
											"end": 960,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 912,
											"end": 960,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 912,
											"end": 960,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 912,
											"end": 960,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 912,
											"end": 960,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 912,
											"end": 960,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 912,
											"end": 960,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 912,
											"end": 960,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 912,
											"end": 960,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 912,
											"end": 960,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 912,
											"end": 960,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 732,
											"end": 781,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 732,
											"end": 781,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 732,
											"end": 781,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 732,
											"end": 781,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 732,
											"end": 781,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 732,
											"end": 781,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 732,
											"end": 781,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 732,
											"end": 781,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 732,
											"end": 781,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 781,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 732,
											"end": 781,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 732,
											"end": 781,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 732,
											"end": 781,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 732,
											"end": 781,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 732,
											"end": 781,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 732,
											"end": 781,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 732,
											"end": 781,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 732,
											"end": 781,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 732,
											"end": 781,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 825,
											"end": 871,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 825,
											"end": 871,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 825,
											"end": 871,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 825,
											"end": 871,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 825,
											"end": 871,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 825,
											"end": 871,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 825,
											"end": 871,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 825,
											"end": 871,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 825,
											"end": 871,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 825,
											"end": 871,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 825,
											"end": 871,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 825,
											"end": 871,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 825,
											"end": 871,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 825,
											"end": 871,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 825,
											"end": 871,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 825,
											"end": 871,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 825,
											"end": 871,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 825,
											"end": 871,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 825,
											"end": 871,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2475,
											"end": 2939,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 2475,
											"end": 2939,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2588,
											"end": 2600,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2588,
											"end": 2600,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2585,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 2569,
											"end": 2585,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2600,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 2569,
											"end": 2600,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2600,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2600,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 2569,
											"end": 2600,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2569,
											"end": 2600,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 2569,
											"end": 2600,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2549,
											"end": 2564,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 2549,
											"end": 2601,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2549,
											"end": 2601,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2612,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 2541,
											"end": 2612,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2612,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2541,
											"end": 2612,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2612,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2541,
											"end": 2612,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2612,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2612,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2541,
											"end": 2612,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2612,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 2541,
											"end": 2612,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2612,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2541,
											"end": 2612,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2541,
											"end": 2612,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 2541,
											"end": 2612,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2612,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2541,
											"end": 2612,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2612,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2612,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2612,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2612,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2612,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2612,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 2541,
											"end": 2612,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2660,
											"end": 2667,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2630,
											"end": 2644,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 2630,
											"end": 2656,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2645,
											"end": 2655,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2630,
											"end": 2656,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2630,
											"end": 2656,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2630,
											"end": 2656,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2630,
											"end": 2656,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2630,
											"end": 2656,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2630,
											"end": 2656,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2630,
											"end": 2656,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2630,
											"end": 2656,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2630,
											"end": 2656,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2630,
											"end": 2656,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2630,
											"end": 2656,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2630,
											"end": 2656,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2630,
											"end": 2656,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2630,
											"end": 2656,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2630,
											"end": 2656,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2630,
											"end": 2656,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2630,
											"end": 2667,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2630,
											"end": 2667,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2622,
											"end": 2692,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 2622,
											"end": 2692,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2622,
											"end": 2692,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2622,
											"end": 2692,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2622,
											"end": 2692,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2622,
											"end": 2692,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2622,
											"end": 2692,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2622,
											"end": 2692,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2622,
											"end": 2692,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2622,
											"end": 2692,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 2622,
											"end": 2692,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2622,
											"end": 2692,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 2622,
											"end": 2692,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2622,
											"end": 2692,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 2622,
											"end": 2692,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2622,
											"end": 2692,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2622,
											"end": 2692,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2622,
											"end": 2692,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2622,
											"end": 2692,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2622,
											"end": 2692,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2622,
											"end": 2692,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2622,
											"end": 2692,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2622,
											"end": 2692,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 2622,
											"end": 2692,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2715,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2710,
											"end": 2715,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2710,
											"end": 2715,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2715,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2715,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2715,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2710,
											"end": 2715,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2715,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2715,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2715,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2710,
											"end": 2715,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2724,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2710,
											"end": 2724,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2724,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 2725,
											"end": 2735,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2737,
											"end": 2744,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 2710,
											"end": 2745,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2702,
											"end": 2765,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 2702,
											"end": 2765,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2702,
											"end": 2765,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2702,
											"end": 2765,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2702,
											"end": 2765,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2702,
											"end": 2765,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2702,
											"end": 2765,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2702,
											"end": 2765,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2702,
											"end": 2765,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2702,
											"end": 2765,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 2702,
											"end": 2765,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2702,
											"end": 2765,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 2702,
											"end": 2765,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2702,
											"end": 2765,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 2702,
											"end": 2765,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2702,
											"end": 2765,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2702,
											"end": 2765,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2702,
											"end": 2765,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2702,
											"end": 2765,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2702,
											"end": 2765,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2702,
											"end": 2765,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2702,
											"end": 2765,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2702,
											"end": 2765,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 2702,
											"end": 2765,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2843,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 2835,
											"end": 2842,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2818,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 2804,
											"end": 2830,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2819,
											"end": 2829,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2830,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2804,
											"end": 2830,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2830,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2804,
											"end": 2830,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2830,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2830,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2830,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2804,
											"end": 2830,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2830,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2830,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2830,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2830,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2804,
											"end": 2830,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2830,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2804,
											"end": 2830,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2830,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 2804,
											"end": 2834,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2843,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2843,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2843,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2804,
											"end": 2843,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2843,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2804,
											"end": 2843,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 2804,
											"end": 2843,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2775,
											"end": 2789,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 2775,
											"end": 2801,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2790,
											"end": 2800,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2775,
											"end": 2801,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2775,
											"end": 2801,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2775,
											"end": 2801,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2775,
											"end": 2801,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2775,
											"end": 2801,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2775,
											"end": 2801,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2775,
											"end": 2801,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2775,
											"end": 2801,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2775,
											"end": 2801,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2775,
											"end": 2801,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2775,
											"end": 2801,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2775,
											"end": 2801,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2775,
											"end": 2801,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2775,
											"end": 2801,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2775,
											"end": 2801,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2775,
											"end": 2843,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2775,
											"end": 2843,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2775,
											"end": 2843,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2775,
											"end": 2843,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2866,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2866,
											"end": 2876,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 2866,
											"end": 2876,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2866,
											"end": 2880,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 2866,
											"end": 2880,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2866,
											"end": 2889,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2866,
											"end": 2889,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2866,
											"end": 2889,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2866,
											"end": 2889,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2866,
											"end": 2889,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2866,
											"end": 2889,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 2866,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2853,
											"end": 2863,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 2853,
											"end": 2889,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2853,
											"end": 2889,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2853,
											"end": 2889,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2853,
											"end": 2889,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 2922,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2904,
											"end": 2932,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2904,
											"end": 2932,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2904,
											"end": 2932,
											"name": "PUSH",
											"source": 5,
											"value": "B24546D975E2628748EFC9ACED80665E0FAD66272033E5C0EA25FD3AFAC99795"
										},
										{
											"begin": 2924,
											"end": 2931,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2904,
											"end": 2932,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2904,
											"end": 2932,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2904,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 2904,
											"end": 2932,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2904,
											"end": 2932,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2904,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 2904,
											"end": 2932,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2904,
											"end": 2932,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 2904,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2904,
											"end": 2932,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2904,
											"end": 2932,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2904,
											"end": 2932,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2904,
											"end": 2932,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2904,
											"end": 2932,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2904,
											"end": 2932,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2904,
											"end": 2932,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2475,
											"end": 2939,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2475,
											"end": 2939,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4101,
											"end": 4229,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 4101,
											"end": 4229,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4205,
											"end": 4222,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4186,
											"end": 4202,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 4186,
											"end": 4222,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4186,
											"end": 4222,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4186,
											"end": 4222,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4186,
											"end": 4222,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4101,
											"end": 4229,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4101,
											"end": 4229,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 661,
											"end": 692,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 661,
											"end": 692,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 661,
											"end": 692,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 661,
											"end": 692,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 661,
											"end": 692,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 661,
											"end": 692,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1072,
											"end": 1098,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 1072,
											"end": 1098,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1072,
											"end": 1098,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 1072,
											"end": 1098,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1072,
											"end": 1098,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1072,
											"end": 1098,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "PUSH",
											"source": 5,
											"value": "C"
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1130,
											"end": 1160,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3941,
											"end": 4057,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 3941,
											"end": 4057,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4037,
											"end": 4049,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4016,
											"end": 4027,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 4016,
											"end": 4027,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4016,
											"end": 4050,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 4016,
											"end": 4050,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 4016,
											"end": 4050,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4016,
											"end": 4050,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4016,
											"end": 4050,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4016,
											"end": 4050,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4016,
											"end": 4050,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 4016,
											"end": 4050,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 4016,
											"end": 4050,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4016,
											"end": 4050,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4016,
											"end": 4050,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4016,
											"end": 4050,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4016,
											"end": 4050,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4016,
											"end": 4050,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 4016,
											"end": 4050,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 4016,
											"end": 4050,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4016,
											"end": 4050,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4016,
											"end": 4050,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3941,
											"end": 4057,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3941,
											"end": 4057,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1012,
											"end": 1037,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 1012,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1012,
											"end": 1037,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 1012,
											"end": 1037,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1012,
											"end": 1037,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1012,
											"end": 1037,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1701,
											"end": 2422,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 1701,
											"end": 2422,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1810,
											"end": 1822,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1810,
											"end": 1822,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1791,
											"end": 1807,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 1791,
											"end": 1807,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1791,
											"end": 1822,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 1791,
											"end": 1822,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1791,
											"end": 1822,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1791,
											"end": 1822,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 1791,
											"end": 1822,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1791,
											"end": 1822,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 1791,
											"end": 1822,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1773,
											"end": 1788,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 1773,
											"end": 1822,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1765,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 1765,
											"end": 1865,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1765,
											"end": 1865,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1765,
											"end": 1865,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1765,
											"end": 1865,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1765,
											"end": 1865,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1765,
											"end": 1865,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1765,
											"end": 1865,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1765,
											"end": 1865,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1765,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 1765,
											"end": 1865,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1765,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 1765,
											"end": 1865,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1765,
											"end": 1865,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 1765,
											"end": 1865,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1765,
											"end": 1865,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1765,
											"end": 1865,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1765,
											"end": 1865,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1765,
											"end": 1865,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1765,
											"end": 1865,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1765,
											"end": 1865,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1765,
											"end": 1865,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1765,
											"end": 1865,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 1765,
											"end": 1865,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1893,
											"end": 1894,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1883,
											"end": 1890,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1883,
											"end": 1894,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1875,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 1875,
											"end": 1930,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1875,
											"end": 1930,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1875,
											"end": 1930,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1875,
											"end": 1930,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1875,
											"end": 1930,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1875,
											"end": 1930,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1875,
											"end": 1930,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1875,
											"end": 1930,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1875,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 1875,
											"end": 1930,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1875,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 1875,
											"end": 1930,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1875,
											"end": 1930,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 1875,
											"end": 1930,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1875,
											"end": 1930,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1875,
											"end": 1930,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1875,
											"end": 1930,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1875,
											"end": 1930,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1875,
											"end": 1930,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1875,
											"end": 1930,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1875,
											"end": 1930,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1875,
											"end": 1930,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 1875,
											"end": 1930,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 1953,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1948,
											"end": 1953,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1948,
											"end": 1953,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 1953,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 1953,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 1953,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1948,
											"end": 1953,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 1953,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 1953,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 1953,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1948,
											"end": 1953,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 1966,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1948,
											"end": 1966,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 1966,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 1967,
											"end": 1977,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1987,
											"end": 1991,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 1994,
											"end": 2001,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 1948,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 2022,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 1940,
											"end": 2022,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 2022,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1940,
											"end": 2022,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 2022,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1940,
											"end": 2022,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 2022,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 2022,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1940,
											"end": 2022,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 2022,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 1940,
											"end": 2022,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 2022,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 1940,
											"end": 2022,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1940,
											"end": 2022,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 1940,
											"end": 2022,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 2022,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1940,
											"end": 2022,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 2022,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 2022,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 2022,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 2022,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 2022,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 2022,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 1940,
											"end": 2022,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 2092,
											"end": 2099,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2075,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2076,
											"end": 2086,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2087,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 2061,
											"end": 2091,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2100,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2100,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2100,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2061,
											"end": 2100,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2061,
											"end": 2100,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2061,
											"end": 2100,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 2061,
											"end": 2100,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2032,
											"end": 2046,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 2032,
											"end": 2058,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2047,
											"end": 2057,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2032,
											"end": 2058,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2032,
											"end": 2058,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2032,
											"end": 2058,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2032,
											"end": 2058,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2032,
											"end": 2058,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2032,
											"end": 2058,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2032,
											"end": 2058,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2032,
											"end": 2058,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2032,
											"end": 2058,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2032,
											"end": 2058,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2032,
											"end": 2058,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2032,
											"end": 2058,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2032,
											"end": 2058,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2032,
											"end": 2058,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2032,
											"end": 2058,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2032,
											"end": 2100,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2032,
											"end": 2100,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2032,
											"end": 2100,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2032,
											"end": 2100,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2136,
											"end": 2151,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 2110,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 2110,
											"end": 2133,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2132,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2110,
											"end": 2133,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2110,
											"end": 2133,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2110,
											"end": 2133,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2110,
											"end": 2133,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2110,
											"end": 2133,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2110,
											"end": 2133,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2110,
											"end": 2133,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2110,
											"end": 2133,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2110,
											"end": 2133,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2110,
											"end": 2133,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2110,
											"end": 2133,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2110,
											"end": 2133,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2110,
											"end": 2133,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2110,
											"end": 2133,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2110,
											"end": 2133,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2110,
											"end": 2151,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2110,
											"end": 2151,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2110,
											"end": 2151,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2110,
											"end": 2151,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2161,
											"end": 2175,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2178,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 2195,
											"end": 2205,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2178,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 2178,
											"end": 2206,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2178,
											"end": 2206,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 2178,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2161,
											"end": 2206,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2161,
											"end": 2206,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2244,
											"end": 2281,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 2274,
											"end": 2280,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2244,
											"end": 2257,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 2244,
											"end": 2269,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2258,
											"end": 2268,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2244,
											"end": 2269,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2244,
											"end": 2269,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2244,
											"end": 2269,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2244,
											"end": 2269,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2244,
											"end": 2269,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2244,
											"end": 2269,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2244,
											"end": 2269,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2244,
											"end": 2269,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2244,
											"end": 2269,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2244,
											"end": 2269,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2244,
											"end": 2269,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2244,
											"end": 2269,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2244,
											"end": 2269,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2244,
											"end": 2269,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2244,
											"end": 2269,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2244,
											"end": 2269,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2244,
											"end": 2273,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 2244,
											"end": 2273,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2244,
											"end": 2281,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2244,
											"end": 2281,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2244,
											"end": 2281,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2244,
											"end": 2281,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2244,
											"end": 2281,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2244,
											"end": 2281,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 2244,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2216,
											"end": 2229,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 2216,
											"end": 2241,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2230,
											"end": 2240,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2216,
											"end": 2241,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2216,
											"end": 2241,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2216,
											"end": 2241,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2216,
											"end": 2241,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2216,
											"end": 2241,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2216,
											"end": 2241,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2216,
											"end": 2241,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2216,
											"end": 2241,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2216,
											"end": 2241,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2216,
											"end": 2241,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2216,
											"end": 2241,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2216,
											"end": 2241,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2216,
											"end": 2241,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2216,
											"end": 2241,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2216,
											"end": 2241,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2216,
											"end": 2281,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2216,
											"end": 2281,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2216,
											"end": 2281,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2216,
											"end": 2281,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2304,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 2319,
											"end": 2326,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2304,
											"end": 2314,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 2304,
											"end": 2314,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2304,
											"end": 2318,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 2304,
											"end": 2318,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2304,
											"end": 2327,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2304,
											"end": 2327,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2304,
											"end": 2327,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2304,
											"end": 2327,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2304,
											"end": 2327,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2304,
											"end": 2327,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 2304,
											"end": 2327,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2301,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 2291,
											"end": 2327,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2327,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2327,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2291,
											"end": 2327,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2351,
											"end": 2374,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 2367,
											"end": 2373,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2351,
											"end": 2362,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 2351,
											"end": 2362,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2351,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 2351,
											"end": 2366,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2351,
											"end": 2374,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2351,
											"end": 2374,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2351,
											"end": 2374,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2351,
											"end": 2374,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2351,
											"end": 2374,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2351,
											"end": 2374,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 2351,
											"end": 2374,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2348,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 2337,
											"end": 2374,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2374,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2374,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2374,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2395,
											"end": 2405,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2389,
											"end": 2415,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2389,
											"end": 2415,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2389,
											"end": 2415,
											"name": "PUSH",
											"source": 5,
											"value": "EBEDB8B3C678666E7F36970BC8F57ABF6D8FA2E828C0DA91EA5B75BF68ED101A"
										},
										{
											"begin": 2407,
											"end": 2414,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2389,
											"end": 2415,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2389,
											"end": 2415,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2389,
											"end": 2415,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 2389,
											"end": 2415,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2389,
											"end": 2415,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2389,
											"end": 2415,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 2389,
											"end": 2415,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2389,
											"end": 2415,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 2389,
											"end": 2415,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2389,
											"end": 2415,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2389,
											"end": 2415,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2389,
											"end": 2415,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2389,
											"end": 2415,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2389,
											"end": 2415,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2389,
											"end": 2415,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2389,
											"end": 2415,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2293,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1701,
											"end": 2422,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1701,
											"end": 2422,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2965,
											"end": 3349,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 2965,
											"end": 3349,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3054,
											"end": 3055,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3028,
											"end": 3039,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 3028,
											"end": 3051,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3040,
											"end": 3050,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3028,
											"end": 3051,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3028,
											"end": 3051,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3028,
											"end": 3051,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3028,
											"end": 3051,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3028,
											"end": 3051,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3028,
											"end": 3051,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3028,
											"end": 3051,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3028,
											"end": 3051,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3028,
											"end": 3051,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3028,
											"end": 3051,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3028,
											"end": 3051,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3028,
											"end": 3051,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3028,
											"end": 3051,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3028,
											"end": 3051,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3028,
											"end": 3051,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3028,
											"end": 3051,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3028,
											"end": 3055,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3020,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 3020,
											"end": 3082,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3020,
											"end": 3082,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3020,
											"end": 3082,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3020,
											"end": 3082,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3020,
											"end": 3082,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3020,
											"end": 3082,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3020,
											"end": 3082,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3020,
											"end": 3082,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3020,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 3020,
											"end": 3082,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3020,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 3020,
											"end": 3082,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3020,
											"end": 3082,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 3020,
											"end": 3082,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3020,
											"end": 3082,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3020,
											"end": 3082,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3020,
											"end": 3082,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3020,
											"end": 3082,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3020,
											"end": 3082,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3020,
											"end": 3082,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3020,
											"end": 3082,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3020,
											"end": 3082,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 3020,
											"end": 3082,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3092,
											"end": 3106,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3109,
											"end": 3122,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 3109,
											"end": 3134,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3123,
											"end": 3133,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3109,
											"end": 3134,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3109,
											"end": 3134,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3109,
											"end": 3134,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3109,
											"end": 3134,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3109,
											"end": 3134,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3109,
											"end": 3134,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3109,
											"end": 3134,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3109,
											"end": 3134,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3109,
											"end": 3134,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3109,
											"end": 3134,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3109,
											"end": 3134,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3109,
											"end": 3134,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3109,
											"end": 3134,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3109,
											"end": 3134,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3109,
											"end": 3134,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3109,
											"end": 3134,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3092,
											"end": 3134,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3092,
											"end": 3134,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3163,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 3152,
											"end": 3163,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3152,
											"end": 3163,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3163,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3163,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3163,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3152,
											"end": 3163,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3163,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3163,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3163,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3152,
											"end": 3163,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3172,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3152,
											"end": 3172,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3172,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 3173,
											"end": 3183,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3185,
											"end": 3191,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 3152,
											"end": 3192,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3144,
											"end": 3212,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 3144,
											"end": 3212,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3144,
											"end": 3212,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3212,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3144,
											"end": 3212,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3144,
											"end": 3212,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3144,
											"end": 3212,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3144,
											"end": 3212,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3144,
											"end": 3212,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3144,
											"end": 3212,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 3144,
											"end": 3212,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3144,
											"end": 3212,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 3144,
											"end": 3212,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3144,
											"end": 3212,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 3144,
											"end": 3212,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3144,
											"end": 3212,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3212,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3144,
											"end": 3212,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3144,
											"end": 3212,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3144,
											"end": 3212,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3144,
											"end": 3212,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3144,
											"end": 3212,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3144,
											"end": 3212,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 3144,
											"end": 3212,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3248,
											"end": 3249,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3235,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 3222,
											"end": 3247,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3236,
											"end": 3246,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3222,
											"end": 3247,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3222,
											"end": 3247,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3222,
											"end": 3247,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3222,
											"end": 3247,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3222,
											"end": 3247,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3222,
											"end": 3247,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3222,
											"end": 3247,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3222,
											"end": 3247,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3222,
											"end": 3247,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3222,
											"end": 3247,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3222,
											"end": 3247,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3222,
											"end": 3247,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3222,
											"end": 3247,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3222,
											"end": 3247,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3247,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3222,
											"end": 3249,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3222,
											"end": 3249,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3222,
											"end": 3249,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3222,
											"end": 3249,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3273,
											"end": 3296,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 3289,
											"end": 3295,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3273,
											"end": 3284,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 3273,
											"end": 3284,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3273,
											"end": 3288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 3273,
											"end": 3288,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3273,
											"end": 3296,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3273,
											"end": 3296,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3273,
											"end": 3296,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3273,
											"end": 3296,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3273,
											"end": 3296,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3273,
											"end": 3296,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 3273,
											"end": 3296,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3259,
											"end": 3270,
											"name": "PUSH",
											"source": 5,
											"value": "B"
										},
										{
											"begin": 3259,
											"end": 3296,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3259,
											"end": 3296,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3259,
											"end": 3296,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3259,
											"end": 3296,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3323,
											"end": 3333,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3311,
											"end": 3342,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3311,
											"end": 3342,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3311,
											"end": 3342,
											"name": "PUSH",
											"source": 5,
											"value": "BA8DE60C3403EC381D1D484652EA1980E3C3E56359195C92525BFF4CE47AD98E"
										},
										{
											"begin": 3335,
											"end": 3341,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3311,
											"end": 3342,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3311,
											"end": 3342,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3311,
											"end": 3342,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 3311,
											"end": 3342,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3311,
											"end": 3342,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3311,
											"end": 3342,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 3311,
											"end": 3342,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3311,
											"end": 3342,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 3311,
											"end": 3342,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3311,
											"end": 3342,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3311,
											"end": 3342,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3311,
											"end": 3342,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3311,
											"end": 3342,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3311,
											"end": 3342,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3311,
											"end": 3342,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3311,
											"end": 3342,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2293,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2965,
											"end": 3349,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 587,
											"end": 614,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 587,
											"end": 614,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 587,
											"end": 614,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 587,
											"end": 614,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 587,
											"end": 614,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 587,
											"end": 614,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2190,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2177,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 2263,
											"end": 2271,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 442,
											"end": 467,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 442,
											"end": 467,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 442,
											"end": 467,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 442,
											"end": 467,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 442,
											"end": 467,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 442,
											"end": 467,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 442,
											"end": 467,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 442,
											"end": 467,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 442,
											"end": 467,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 442,
											"end": 467,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 442,
											"end": 467,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 442,
											"end": 467,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 442,
											"end": 467,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 442,
											"end": 467,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 442,
											"end": 467,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 377,
											"end": 396,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 377,
											"end": 396,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 377,
											"end": 396,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 377,
											"end": 396,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 377,
											"end": 396,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 377,
											"end": 396,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 377,
											"end": 396,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 377,
											"end": 396,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 377,
											"end": 396,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 377,
											"end": 396,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 377,
											"end": 396,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 377,
											"end": 396,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 377,
											"end": 396,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 377,
											"end": 396,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 377,
											"end": 396,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4269,
											"end": 4389,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 4269,
											"end": 4389,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4367,
											"end": 4382,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4350,
											"end": 4364,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4350,
											"end": 4382,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4350,
											"end": 4382,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4350,
											"end": 4382,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 4350,
											"end": 4382,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4269,
											"end": 4389,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4269,
											"end": 4389,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3411,
											"end": 3903,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 3411,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3484,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3496,
											"end": 3524,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3589,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 3568,
											"end": 3579,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 3568,
											"end": 3588,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3580,
											"end": 3587,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3568,
											"end": 3588,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3568,
											"end": 3588,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3568,
											"end": 3588,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3568,
											"end": 3588,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3568,
											"end": 3588,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3568,
											"end": 3588,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3568,
											"end": 3588,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3568,
											"end": 3588,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3568,
											"end": 3588,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3568,
											"end": 3588,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3568,
											"end": 3588,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3568,
											"end": 3588,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3568,
											"end": 3588,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3568,
											"end": 3588,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3568,
											"end": 3588,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3568,
											"end": 3588,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3528,
											"end": 3562,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 3545,
											"end": 3561,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 3545,
											"end": 3561,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3528,
											"end": 3540,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3528,
											"end": 3540,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3528,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 3528,
											"end": 3544,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3528,
											"end": 3562,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3528,
											"end": 3562,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3528,
											"end": 3562,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3528,
											"end": 3562,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3528,
											"end": 3562,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3528,
											"end": 3562,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 3528,
											"end": 3562,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3567,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 3527,
											"end": 3567,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3589,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3589,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3589,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3527,
											"end": 3589,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3527,
											"end": 3589,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3527,
											"end": 3589,
											"name": "tag",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 3527,
											"end": 3589,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3496,
											"end": 3589,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3496,
											"end": 3589,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3765,
											"end": 3779,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3782,
											"end": 3873,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 3865,
											"end": 3872,
											"name": "PUSH",
											"source": 5,
											"value": "C"
										},
										{
											"begin": 3865,
											"end": 3872,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3782,
											"end": 3860,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 3839,
											"end": 3859,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3782,
											"end": 3834,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 3819,
											"end": 3833,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3819,
											"end": 3833,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3782,
											"end": 3814,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 3810,
											"end": 3813,
											"name": "PUSH",
											"source": 5,
											"value": "F4240"
										},
										{
											"begin": 3782,
											"end": 3796,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 3782,
											"end": 3805,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3797,
											"end": 3804,
											"name": "DUP14",
											"source": 5
										},
										{
											"begin": 3782,
											"end": 3805,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3782,
											"end": 3805,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3782,
											"end": 3805,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3782,
											"end": 3805,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3782,
											"end": 3805,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3782,
											"end": 3805,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3782,
											"end": 3805,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3782,
											"end": 3805,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3782,
											"end": 3805,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3782,
											"end": 3805,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3782,
											"end": 3805,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3782,
											"end": 3805,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3782,
											"end": 3805,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3782,
											"end": 3805,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3782,
											"end": 3805,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3782,
											"end": 3805,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3782,
											"end": 3809,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 3782,
											"end": 3809,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3782,
											"end": 3814,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3782,
											"end": 3814,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3782,
											"end": 3814,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3782,
											"end": 3814,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3782,
											"end": 3814,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3782,
											"end": 3814,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 3782,
											"end": 3814,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3782,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 3782,
											"end": 3818,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3782,
											"end": 3834,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3782,
											"end": 3834,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3782,
											"end": 3834,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3782,
											"end": 3834,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3782,
											"end": 3834,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3782,
											"end": 3834,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 3782,
											"end": 3834,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3782,
											"end": 3838,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 3782,
											"end": 3838,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3782,
											"end": 3860,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3782,
											"end": 3860,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3782,
											"end": 3860,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3782,
											"end": 3860,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3782,
											"end": 3860,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3782,
											"end": 3860,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 3782,
											"end": 3860,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3782,
											"end": 3864,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 3782,
											"end": 3864,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3782,
											"end": 3873,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3782,
											"end": 3873,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3782,
											"end": 3873,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3782,
											"end": 3873,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3782,
											"end": 3873,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3782,
											"end": 3873,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 3782,
											"end": 3873,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3765,
											"end": 3873,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3765,
											"end": 3873,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3890,
											"end": 3896,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3883,
											"end": 3896,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3883,
											"end": 3896,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3883,
											"end": 3896,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3883,
											"end": 3896,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3903,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3903,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3903,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3411,
											"end": 3903,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "tag",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "tag",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7,
											"end": 146,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 59,
											"end": 146,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 152,
											"end": 289,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 237,
											"end": 243,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 231,
											"end": 244,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 222,
											"end": 244,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 222,
											"end": 244,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 277,
											"end": 282,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 212,
											"end": 289,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 212,
											"end": 289,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 212,
											"end": 289,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 212,
											"end": 289,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 212,
											"end": 289,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "tag",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 295,
											"end": 434,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 385,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 366,
											"end": 386,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 357,
											"end": 386,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 422,
											"end": 427,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 347,
											"end": 434,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 347,
											"end": 434,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 347,
											"end": 434,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 347,
											"end": 434,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 347,
											"end": 434,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 440,
											"end": 702,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 440,
											"end": 702,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 440,
											"end": 702,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 548,
											"end": 550,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 536,
											"end": 545,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 527,
											"end": 534,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 523,
											"end": 546,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 519,
											"end": 551,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 516,
											"end": 518,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 516,
											"end": 518,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 516,
											"end": 518,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 564,
											"end": 565,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 561,
											"end": 562,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 554,
											"end": 566,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 516,
											"end": 518,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 516,
											"end": 518,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 607,
											"end": 608,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 632,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 677,
											"end": 684,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 668,
											"end": 674,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 657,
											"end": 666,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 653,
											"end": 675,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 632,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 632,
											"end": 685,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 632,
											"end": 685,
											"name": "tag",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 632,
											"end": 685,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 622,
											"end": 685,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 622,
											"end": 685,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 578,
											"end": 695,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 506,
											"end": 702,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 506,
											"end": 702,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 506,
											"end": 702,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 506,
											"end": 702,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 506,
											"end": 702,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 708,
											"end": 986,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 708,
											"end": 986,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 708,
											"end": 986,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 824,
											"end": 826,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 812,
											"end": 821,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 803,
											"end": 810,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 799,
											"end": 822,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 795,
											"end": 827,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 792,
											"end": 794,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 792,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 792,
											"end": 794,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 840,
											"end": 841,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 837,
											"end": 838,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 830,
											"end": 842,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 792,
											"end": 794,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 792,
											"end": 794,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 883,
											"end": 884,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 908,
											"end": 969,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 961,
											"end": 968,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 952,
											"end": 958,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 941,
											"end": 950,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 937,
											"end": 959,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 908,
											"end": 969,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 908,
											"end": 969,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 908,
											"end": 969,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 908,
											"end": 969,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 898,
											"end": 969,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 898,
											"end": 969,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 854,
											"end": 979,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 782,
											"end": 986,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 782,
											"end": 986,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 782,
											"end": 986,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 782,
											"end": 986,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 782,
											"end": 986,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 992,
											"end": 1254,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 992,
											"end": 1254,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 992,
											"end": 1254,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1102,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1088,
											"end": 1097,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1079,
											"end": 1086,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1075,
											"end": 1098,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1071,
											"end": 1103,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1068,
											"end": 1070,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1068,
											"end": 1070,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 1068,
											"end": 1070,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1116,
											"end": 1117,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1113,
											"end": 1114,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1106,
											"end": 1118,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1068,
											"end": 1070,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 1068,
											"end": 1070,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1159,
											"end": 1160,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1184,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 1229,
											"end": 1236,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1220,
											"end": 1226,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1209,
											"end": 1218,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1205,
											"end": 1227,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 1184,
											"end": 1237,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1184,
											"end": 1237,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 1184,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1174,
											"end": 1237,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1174,
											"end": 1237,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1130,
											"end": 1247,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1058,
											"end": 1254,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1058,
											"end": 1254,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1058,
											"end": 1254,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1058,
											"end": 1254,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1058,
											"end": 1254,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1260,
											"end": 1378,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 1260,
											"end": 1378,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1347,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 1365,
											"end": 1370,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1347,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 1347,
											"end": 1371,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1347,
											"end": 1371,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 1347,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1342,
											"end": 1345,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1335,
											"end": 1372,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1325,
											"end": 1378,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1325,
											"end": 1378,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1325,
											"end": 1378,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1384,
											"end": 1543,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 1384,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1485,
											"end": 1536,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 1530,
											"end": 1535,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1485,
											"end": 1536,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 1485,
											"end": 1536,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1485,
											"end": 1536,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 1485,
											"end": 1536,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1480,
											"end": 1483,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1473,
											"end": 1537,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1463,
											"end": 1543,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1463,
											"end": 1543,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1463,
											"end": 1543,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1549,
											"end": 1915,
											"name": "tag",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 1549,
											"end": 1915,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1549,
											"end": 1915,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1712,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 1776,
											"end": 1778,
											"name": "PUSH",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 1771,
											"end": 1774,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1712,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 1712,
											"end": 1779,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1712,
											"end": 1779,
											"name": "tag",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 1712,
											"end": 1779,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1705,
											"end": 1779,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1705,
											"end": 1779,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1788,
											"end": 1881,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 1877,
											"end": 1880,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1788,
											"end": 1881,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 1788,
											"end": 1881,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1788,
											"end": 1881,
											"name": "tag",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 1788,
											"end": 1881,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1908,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1901,
											"end": 1904,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1897,
											"end": 1909,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1915,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1915,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1915,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1915,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1921,
											"end": 2286,
											"name": "tag",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 1921,
											"end": 2286,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1921,
											"end": 2286,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2084,
											"end": 2150,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 2148,
											"end": 2149,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2143,
											"end": 2146,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2084,
											"end": 2150,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 2084,
											"end": 2150,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2084,
											"end": 2150,
											"name": "tag",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 2084,
											"end": 2150,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2077,
											"end": 2150,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2077,
											"end": 2150,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 2248,
											"end": 2251,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 2159,
											"end": 2252,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2159,
											"end": 2252,
											"name": "tag",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 2159,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2277,
											"end": 2279,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2272,
											"end": 2275,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2268,
											"end": 2280,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2067,
											"end": 2286,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2067,
											"end": 2286,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2067,
											"end": 2286,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2067,
											"end": 2286,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2292,
											"end": 2658,
											"name": "tag",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 2292,
											"end": 2658,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2292,
											"end": 2658,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2455,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 2519,
											"end": 2521,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 2514,
											"end": 2517,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2455,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 2455,
											"end": 2522,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2455,
											"end": 2522,
											"name": "tag",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 2455,
											"end": 2522,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2448,
											"end": 2522,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2448,
											"end": 2522,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2531,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 2620,
											"end": 2623,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2531,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 2531,
											"end": 2624,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2531,
											"end": 2624,
											"name": "tag",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 2531,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2649,
											"end": 2651,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2644,
											"end": 2647,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2640,
											"end": 2652,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2633,
											"end": 2652,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2633,
											"end": 2652,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2438,
											"end": 2658,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2438,
											"end": 2658,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2438,
											"end": 2658,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2438,
											"end": 2658,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2664,
											"end": 3030,
											"name": "tag",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 2664,
											"end": 3030,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2664,
											"end": 3030,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2827,
											"end": 2894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 2891,
											"end": 2893,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 2886,
											"end": 2889,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2827,
											"end": 2894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 2827,
											"end": 2894,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2827,
											"end": 2894,
											"name": "tag",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 2827,
											"end": 2894,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2820,
											"end": 2894,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2820,
											"end": 2894,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 2992,
											"end": 2995,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2903,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 2903,
											"end": 2996,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2903,
											"end": 2996,
											"name": "tag",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 2903,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3021,
											"end": 3023,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3016,
											"end": 3019,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3012,
											"end": 3024,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3005,
											"end": 3024,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3005,
											"end": 3024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2810,
											"end": 3030,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2810,
											"end": 3030,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2810,
											"end": 3030,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2810,
											"end": 3030,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3036,
											"end": 3402,
											"name": "tag",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 3036,
											"end": 3402,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3036,
											"end": 3402,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3199,
											"end": 3266,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 3263,
											"end": 3265,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 3258,
											"end": 3261,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3199,
											"end": 3266,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 3199,
											"end": 3266,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3199,
											"end": 3266,
											"name": "tag",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 3199,
											"end": 3266,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3192,
											"end": 3266,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3192,
											"end": 3266,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3275,
											"end": 3368,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 3364,
											"end": 3367,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3275,
											"end": 3368,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 3275,
											"end": 3368,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3275,
											"end": 3368,
											"name": "tag",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 3275,
											"end": 3368,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3393,
											"end": 3395,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3388,
											"end": 3391,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3396,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3377,
											"end": 3396,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3377,
											"end": 3396,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3182,
											"end": 3402,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3182,
											"end": 3402,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3182,
											"end": 3402,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3182,
											"end": 3402,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3408,
											"end": 3774,
											"name": "tag",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 3408,
											"end": 3774,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3408,
											"end": 3774,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3571,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 3635,
											"end": 3637,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3630,
											"end": 3633,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3571,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 3571,
											"end": 3638,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3571,
											"end": 3638,
											"name": "tag",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 3571,
											"end": 3638,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3564,
											"end": 3638,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3564,
											"end": 3638,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3647,
											"end": 3740,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 3736,
											"end": 3739,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3647,
											"end": 3740,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 3647,
											"end": 3740,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3647,
											"end": 3740,
											"name": "tag",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 3647,
											"end": 3740,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3765,
											"end": 3767,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3760,
											"end": 3763,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3756,
											"end": 3768,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3749,
											"end": 3768,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3749,
											"end": 3768,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3774,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3774,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3774,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3554,
											"end": 3774,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3780,
											"end": 4146,
											"name": "tag",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 3780,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3780,
											"end": 4146,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3943,
											"end": 4010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 4007,
											"end": 4009,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4002,
											"end": 4005,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3943,
											"end": 4010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 3943,
											"end": 4010,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3943,
											"end": 4010,
											"name": "tag",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 3943,
											"end": 4010,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3936,
											"end": 4010,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3936,
											"end": 4010,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4019,
											"end": 4112,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 4108,
											"end": 4111,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4019,
											"end": 4112,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 4019,
											"end": 4112,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4019,
											"end": 4112,
											"name": "tag",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 4019,
											"end": 4112,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4137,
											"end": 4139,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4132,
											"end": 4135,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4128,
											"end": 4140,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4121,
											"end": 4140,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4121,
											"end": 4140,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3926,
											"end": 4146,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3926,
											"end": 4146,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3926,
											"end": 4146,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3926,
											"end": 4146,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4152,
											"end": 4518,
											"name": "tag",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 4152,
											"end": 4518,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4152,
											"end": 4518,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4315,
											"end": 4382,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 4379,
											"end": 4381,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 4374,
											"end": 4377,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4315,
											"end": 4382,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 4315,
											"end": 4382,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4315,
											"end": 4382,
											"name": "tag",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 4315,
											"end": 4382,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4308,
											"end": 4382,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4308,
											"end": 4382,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4391,
											"end": 4484,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 4480,
											"end": 4483,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4391,
											"end": 4484,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 4391,
											"end": 4484,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4391,
											"end": 4484,
											"name": "tag",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 4391,
											"end": 4484,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4509,
											"end": 4511,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4504,
											"end": 4507,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4500,
											"end": 4512,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4493,
											"end": 4512,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4493,
											"end": 4512,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4298,
											"end": 4518,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4298,
											"end": 4518,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4298,
											"end": 4518,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4298,
											"end": 4518,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4524,
											"end": 4890,
											"name": "tag",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 4524,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4524,
											"end": 4890,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4687,
											"end": 4754,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 4751,
											"end": 4753,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4746,
											"end": 4749,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4687,
											"end": 4754,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 4687,
											"end": 4754,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4687,
											"end": 4754,
											"name": "tag",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 4687,
											"end": 4754,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4754,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 4754,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4763,
											"end": 4856,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 4852,
											"end": 4855,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4763,
											"end": 4856,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 4763,
											"end": 4856,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4763,
											"end": 4856,
											"name": "tag",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 4763,
											"end": 4856,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4881,
											"end": 4883,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4876,
											"end": 4879,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4872,
											"end": 4884,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4865,
											"end": 4884,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4865,
											"end": 4884,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4670,
											"end": 4890,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4670,
											"end": 4890,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4670,
											"end": 4890,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4670,
											"end": 4890,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4896,
											"end": 5014,
											"name": "tag",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 4896,
											"end": 5014,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4983,
											"end": 5007,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 5001,
											"end": 5006,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4983,
											"end": 5007,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 4983,
											"end": 5007,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4983,
											"end": 5007,
											"name": "tag",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 4983,
											"end": 5007,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4978,
											"end": 4981,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4971,
											"end": 5008,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4961,
											"end": 5014,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4961,
											"end": 5014,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4961,
											"end": 5014,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5020,
											"end": 5242,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 5020,
											"end": 5242,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5020,
											"end": 5242,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5151,
											"end": 5153,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5140,
											"end": 5149,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5136,
											"end": 5154,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5128,
											"end": 5154,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5128,
											"end": 5154,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5164,
											"end": 5235,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 5232,
											"end": 5233,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5221,
											"end": 5230,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5217,
											"end": 5234,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5208,
											"end": 5214,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5164,
											"end": 5235,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 5164,
											"end": 5235,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5164,
											"end": 5235,
											"name": "tag",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 5164,
											"end": 5235,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5118,
											"end": 5242,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5118,
											"end": 5242,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5118,
											"end": 5242,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5118,
											"end": 5242,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5118,
											"end": 5242,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5248,
											"end": 5690,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 5248,
											"end": 5690,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5248,
											"end": 5690,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5435,
											"end": 5437,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5424,
											"end": 5433,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5420,
											"end": 5438,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5412,
											"end": 5438,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5412,
											"end": 5438,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5448,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 5516,
											"end": 5517,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5505,
											"end": 5514,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5501,
											"end": 5518,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5492,
											"end": 5498,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5448,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 5448,
											"end": 5519,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5448,
											"end": 5519,
											"name": "tag",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 5448,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5529,
											"end": 5601,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 5597,
											"end": 5599,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5586,
											"end": 5595,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5582,
											"end": 5600,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5573,
											"end": 5579,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5529,
											"end": 5601,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 5529,
											"end": 5601,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5529,
											"end": 5601,
											"name": "tag",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 5529,
											"end": 5601,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5611,
											"end": 5683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 5679,
											"end": 5681,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5668,
											"end": 5677,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5664,
											"end": 5682,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5655,
											"end": 5661,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5611,
											"end": 5683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 5611,
											"end": 5683,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5611,
											"end": 5683,
											"name": "tag",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 5611,
											"end": 5683,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5402,
											"end": 5690,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 5402,
											"end": 5690,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5402,
											"end": 5690,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5402,
											"end": 5690,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5402,
											"end": 5690,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5402,
											"end": 5690,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5402,
											"end": 5690,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5696,
											"end": 6028,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 5696,
											"end": 6028,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5696,
											"end": 6028,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5855,
											"end": 5857,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5844,
											"end": 5853,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5840,
											"end": 5858,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5832,
											"end": 5858,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5832,
											"end": 5858,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5868,
											"end": 5939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 5936,
											"end": 5937,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5925,
											"end": 5934,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5921,
											"end": 5938,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5912,
											"end": 5918,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5868,
											"end": 5939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 5868,
											"end": 5939,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5868,
											"end": 5939,
											"name": "tag",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 5868,
											"end": 5939,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5949,
											"end": 6021,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 6017,
											"end": 6019,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6006,
											"end": 6015,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6002,
											"end": 6020,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5993,
											"end": 5999,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5949,
											"end": 6021,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 5949,
											"end": 6021,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5949,
											"end": 6021,
											"name": "tag",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 5949,
											"end": 6021,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5822,
											"end": 6028,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5822,
											"end": 6028,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5822,
											"end": 6028,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5822,
											"end": 6028,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5822,
											"end": 6028,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5822,
											"end": 6028,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6034,
											"end": 6284,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 6034,
											"end": 6284,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6034,
											"end": 6284,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6179,
											"end": 6181,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6168,
											"end": 6177,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6164,
											"end": 6182,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6156,
											"end": 6182,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6156,
											"end": 6182,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6192,
											"end": 6277,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 6274,
											"end": 6275,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6263,
											"end": 6272,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6259,
											"end": 6276,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6250,
											"end": 6256,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6192,
											"end": 6277,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 6192,
											"end": 6277,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6192,
											"end": 6277,
											"name": "tag",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 6192,
											"end": 6277,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6146,
											"end": 6284,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6146,
											"end": 6284,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6146,
											"end": 6284,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6146,
											"end": 6284,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6146,
											"end": 6284,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6290,
											"end": 6709,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 6290,
											"end": 6709,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6290,
											"end": 6709,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6494,
											"end": 6496,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6483,
											"end": 6492,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6479,
											"end": 6497,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6471,
											"end": 6497,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6471,
											"end": 6497,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6543,
											"end": 6552,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6537,
											"end": 6541,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6533,
											"end": 6553,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6529,
											"end": 6530,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6518,
											"end": 6527,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6514,
											"end": 6531,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6507,
											"end": 6554,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6571,
											"end": 6702,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 6697,
											"end": 6701,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6571,
											"end": 6702,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 6571,
											"end": 6702,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6571,
											"end": 6702,
											"name": "tag",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 6571,
											"end": 6702,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6563,
											"end": 6702,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6563,
											"end": 6702,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6709,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6709,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6709,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6461,
											"end": 6709,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6715,
											"end": 7134,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 6715,
											"end": 7134,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6715,
											"end": 7134,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6919,
											"end": 6921,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6908,
											"end": 6917,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6904,
											"end": 6922,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6896,
											"end": 6922,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6896,
											"end": 6922,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6968,
											"end": 6977,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6962,
											"end": 6966,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6958,
											"end": 6978,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6954,
											"end": 6955,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6943,
											"end": 6952,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6939,
											"end": 6956,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6932,
											"end": 6979,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6996,
											"end": 7127,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 7122,
											"end": 7126,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6996,
											"end": 7127,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 6996,
											"end": 7127,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6996,
											"end": 7127,
											"name": "tag",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 6996,
											"end": 7127,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6988,
											"end": 7127,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6988,
											"end": 7127,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6886,
											"end": 7134,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6886,
											"end": 7134,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6886,
											"end": 7134,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6886,
											"end": 7134,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7140,
											"end": 7559,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 7140,
											"end": 7559,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7140,
											"end": 7559,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7344,
											"end": 7346,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7333,
											"end": 7342,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7329,
											"end": 7347,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7321,
											"end": 7347,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7321,
											"end": 7347,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7393,
											"end": 7402,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7387,
											"end": 7391,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7383,
											"end": 7403,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7379,
											"end": 7380,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7368,
											"end": 7377,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7364,
											"end": 7381,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7357,
											"end": 7404,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7421,
											"end": 7552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 7547,
											"end": 7551,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7421,
											"end": 7552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 7421,
											"end": 7552,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7421,
											"end": 7552,
											"name": "tag",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 7421,
											"end": 7552,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7413,
											"end": 7552,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7413,
											"end": 7552,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7311,
											"end": 7559,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7311,
											"end": 7559,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7311,
											"end": 7559,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7311,
											"end": 7559,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7565,
											"end": 7984,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 7565,
											"end": 7984,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7565,
											"end": 7984,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7769,
											"end": 7771,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7758,
											"end": 7767,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7754,
											"end": 7772,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7746,
											"end": 7772,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7746,
											"end": 7772,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7818,
											"end": 7827,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7812,
											"end": 7816,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7808,
											"end": 7828,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7804,
											"end": 7805,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7793,
											"end": 7802,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7789,
											"end": 7806,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7782,
											"end": 7829,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7846,
											"end": 7977,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 7972,
											"end": 7976,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7846,
											"end": 7977,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 7846,
											"end": 7977,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7846,
											"end": 7977,
											"name": "tag",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 7846,
											"end": 7977,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7838,
											"end": 7977,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7838,
											"end": 7977,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7736,
											"end": 7984,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7736,
											"end": 7984,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7736,
											"end": 7984,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7736,
											"end": 7984,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7990,
											"end": 8409,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 7990,
											"end": 8409,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7990,
											"end": 8409,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8194,
											"end": 8196,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8183,
											"end": 8192,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8179,
											"end": 8197,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8171,
											"end": 8197,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8171,
											"end": 8197,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8243,
											"end": 8252,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8237,
											"end": 8241,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8233,
											"end": 8253,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8229,
											"end": 8230,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8218,
											"end": 8227,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8214,
											"end": 8231,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8207,
											"end": 8254,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8271,
											"end": 8402,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 8397,
											"end": 8401,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8271,
											"end": 8402,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 8271,
											"end": 8402,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8271,
											"end": 8402,
											"name": "tag",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 8271,
											"end": 8402,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8263,
											"end": 8402,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8263,
											"end": 8402,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8161,
											"end": 8409,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8161,
											"end": 8409,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8161,
											"end": 8409,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8161,
											"end": 8409,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8415,
											"end": 8834,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 8415,
											"end": 8834,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8415,
											"end": 8834,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8619,
											"end": 8621,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8608,
											"end": 8617,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8604,
											"end": 8622,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8596,
											"end": 8622,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8596,
											"end": 8622,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8668,
											"end": 8677,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8662,
											"end": 8666,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8658,
											"end": 8678,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8654,
											"end": 8655,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8643,
											"end": 8652,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8639,
											"end": 8656,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8632,
											"end": 8679,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8696,
											"end": 8827,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 8822,
											"end": 8826,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8696,
											"end": 8827,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 8696,
											"end": 8827,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8696,
											"end": 8827,
											"name": "tag",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 8696,
											"end": 8827,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8688,
											"end": 8827,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8688,
											"end": 8827,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8586,
											"end": 8834,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8586,
											"end": 8834,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8586,
											"end": 8834,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8586,
											"end": 8834,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8840,
											"end": 9259,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 8840,
											"end": 9259,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8840,
											"end": 9259,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9044,
											"end": 9046,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9033,
											"end": 9042,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9029,
											"end": 9047,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9021,
											"end": 9047,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9021,
											"end": 9047,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9093,
											"end": 9102,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9087,
											"end": 9091,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9083,
											"end": 9103,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9079,
											"end": 9080,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9068,
											"end": 9077,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9064,
											"end": 9081,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9057,
											"end": 9104,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9121,
											"end": 9252,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 9247,
											"end": 9251,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9121,
											"end": 9252,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 9121,
											"end": 9252,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9121,
											"end": 9252,
											"name": "tag",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 9121,
											"end": 9252,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9113,
											"end": 9252,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9113,
											"end": 9252,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9011,
											"end": 9259,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9011,
											"end": 9259,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9011,
											"end": 9259,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9011,
											"end": 9259,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9265,
											"end": 9684,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 9265,
											"end": 9684,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9265,
											"end": 9684,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9469,
											"end": 9471,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9458,
											"end": 9467,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9454,
											"end": 9472,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9446,
											"end": 9472,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9446,
											"end": 9472,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9518,
											"end": 9527,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9512,
											"end": 9516,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9508,
											"end": 9528,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9504,
											"end": 9505,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9493,
											"end": 9502,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9489,
											"end": 9506,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9482,
											"end": 9529,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9546,
											"end": 9677,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 9672,
											"end": 9676,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9546,
											"end": 9677,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 9546,
											"end": 9677,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9546,
											"end": 9677,
											"name": "tag",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 9546,
											"end": 9677,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9538,
											"end": 9677,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9538,
											"end": 9677,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9436,
											"end": 9684,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9436,
											"end": 9684,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9436,
											"end": 9684,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9436,
											"end": 9684,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9690,
											"end": 10109,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 9690,
											"end": 10109,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9690,
											"end": 10109,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9894,
											"end": 9896,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9883,
											"end": 9892,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9879,
											"end": 9897,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9871,
											"end": 9897,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9871,
											"end": 9897,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9943,
											"end": 9952,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9937,
											"end": 9941,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9933,
											"end": 9953,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9929,
											"end": 9930,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9918,
											"end": 9927,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9914,
											"end": 9931,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9907,
											"end": 9954,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9971,
											"end": 10102,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 10097,
											"end": 10101,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9971,
											"end": 10102,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 9971,
											"end": 10102,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9971,
											"end": 10102,
											"name": "tag",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 9971,
											"end": 10102,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9963,
											"end": 10102,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9963,
											"end": 10102,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9861,
											"end": 10109,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9861,
											"end": 10109,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9861,
											"end": 10109,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9861,
											"end": 10109,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10115,
											"end": 10337,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 10115,
											"end": 10337,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10115,
											"end": 10337,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10246,
											"end": 10248,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10235,
											"end": 10244,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10231,
											"end": 10249,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10223,
											"end": 10249,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10223,
											"end": 10249,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10259,
											"end": 10330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 10327,
											"end": 10328,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10316,
											"end": 10325,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10312,
											"end": 10329,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10303,
											"end": 10309,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10259,
											"end": 10330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 10259,
											"end": 10330,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10259,
											"end": 10330,
											"name": "tag",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 10259,
											"end": 10330,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10213,
											"end": 10337,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10213,
											"end": 10337,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10213,
											"end": 10337,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10213,
											"end": 10337,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10213,
											"end": 10337,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10343,
											"end": 10512,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 10343,
											"end": 10512,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10343,
											"end": 10512,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10461,
											"end": 10467,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10456,
											"end": 10459,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10449,
											"end": 10468,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10501,
											"end": 10505,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10496,
											"end": 10499,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10492,
											"end": 10506,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10506,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10439,
											"end": 10512,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10439,
											"end": 10512,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10439,
											"end": 10512,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10439,
											"end": 10512,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10439,
											"end": 10512,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10518,
											"end": 10823,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 10518,
											"end": 10823,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10518,
											"end": 10823,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10577,
											"end": 10597,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 10595,
											"end": 10596,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10577,
											"end": 10597,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 10577,
											"end": 10597,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10577,
											"end": 10597,
											"name": "tag",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 10577,
											"end": 10597,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10572,
											"end": 10597,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10572,
											"end": 10597,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10611,
											"end": 10631,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 10629,
											"end": 10630,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10611,
											"end": 10631,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 10611,
											"end": 10631,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10611,
											"end": 10631,
											"name": "tag",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 10611,
											"end": 10631,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10606,
											"end": 10631,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10606,
											"end": 10631,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10765,
											"end": 10766,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10697,
											"end": 10763,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10693,
											"end": 10767,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10690,
											"end": 10691,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10687,
											"end": 10768,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 10684,
											"end": 10686,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10684,
											"end": 10686,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 10684,
											"end": 10686,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10771,
											"end": 10789,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 10771,
											"end": 10789,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 10771,
											"end": 10789,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10771,
											"end": 10789,
											"name": "tag",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 10771,
											"end": 10789,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10684,
											"end": 10686,
											"name": "tag",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 10684,
											"end": 10686,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10815,
											"end": 10816,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10812,
											"end": 10813,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10808,
											"end": 10817,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10801,
											"end": 10817,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10801,
											"end": 10817,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10562,
											"end": 10823,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10562,
											"end": 10823,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10562,
											"end": 10823,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10562,
											"end": 10823,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10562,
											"end": 10823,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10829,
											"end": 11014,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 10829,
											"end": 11014,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10829,
											"end": 11014,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10886,
											"end": 10906,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 10904,
											"end": 10905,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10886,
											"end": 10906,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 10886,
											"end": 10906,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10886,
											"end": 10906,
											"name": "tag",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 10886,
											"end": 10906,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10881,
											"end": 10906,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10881,
											"end": 10906,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10920,
											"end": 10940,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 10938,
											"end": 10939,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10920,
											"end": 10940,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 10920,
											"end": 10940,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10920,
											"end": 10940,
											"name": "tag",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 10920,
											"end": 10940,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10915,
											"end": 10940,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10915,
											"end": 10940,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10959,
											"end": 10960,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10949,
											"end": 10951,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 10949,
											"end": 10951,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10964,
											"end": 10982,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 10964,
											"end": 10982,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 10964,
											"end": 10982,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10964,
											"end": 10982,
											"name": "tag",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 10964,
											"end": 10982,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10949,
											"end": 10951,
											"name": "tag",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 10949,
											"end": 10951,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11006,
											"end": 11007,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11003,
											"end": 11004,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10999,
											"end": 11008,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 10994,
											"end": 11008,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10994,
											"end": 11008,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10871,
											"end": 11014,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10871,
											"end": 11014,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10871,
											"end": 11014,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10871,
											"end": 11014,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10871,
											"end": 11014,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 11020,
											"end": 11368,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 11020,
											"end": 11368,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11020,
											"end": 11368,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11083,
											"end": 11103,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 11101,
											"end": 11102,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11083,
											"end": 11103,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 11083,
											"end": 11103,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11083,
											"end": 11103,
											"name": "tag",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 11083,
											"end": 11103,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11078,
											"end": 11103,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11078,
											"end": 11103,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11117,
											"end": 11137,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 11135,
											"end": 11136,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11117,
											"end": 11137,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 11117,
											"end": 11137,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11117,
											"end": 11137,
											"name": "tag",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 11117,
											"end": 11137,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11112,
											"end": 11137,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11112,
											"end": 11137,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11305,
											"end": 11306,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11237,
											"end": 11303,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11233,
											"end": 11307,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 11230,
											"end": 11231,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11227,
											"end": 11308,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 11222,
											"end": 11223,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11215,
											"end": 11224,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11208,
											"end": 11225,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11204,
											"end": 11309,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11201,
											"end": 11203,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11201,
											"end": 11203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "347"
										},
										{
											"begin": 11201,
											"end": 11203,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11312,
											"end": 11330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "348"
										},
										{
											"begin": 11312,
											"end": 11330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 11312,
											"end": 11330,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11312,
											"end": 11330,
											"name": "tag",
											"source": 6,
											"value": "348"
										},
										{
											"begin": 11312,
											"end": 11330,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11201,
											"end": 11203,
											"name": "tag",
											"source": 6,
											"value": "347"
										},
										{
											"begin": 11201,
											"end": 11203,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11360,
											"end": 11361,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11357,
											"end": 11358,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11353,
											"end": 11362,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 11342,
											"end": 11362,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11342,
											"end": 11362,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11068,
											"end": 11368,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11068,
											"end": 11368,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11068,
											"end": 11368,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11068,
											"end": 11368,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11068,
											"end": 11368,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 11374,
											"end": 11565,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 11374,
											"end": 11565,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11374,
											"end": 11565,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11434,
											"end": 11454,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "350"
										},
										{
											"begin": 11452,
											"end": 11453,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11434,
											"end": 11454,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 11434,
											"end": 11454,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11434,
											"end": 11454,
											"name": "tag",
											"source": 6,
											"value": "350"
										},
										{
											"begin": 11434,
											"end": 11454,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11429,
											"end": 11454,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11429,
											"end": 11454,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11468,
											"end": 11488,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 11486,
											"end": 11487,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11468,
											"end": 11488,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 11468,
											"end": 11488,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11468,
											"end": 11488,
											"name": "tag",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 11468,
											"end": 11488,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11463,
											"end": 11488,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11463,
											"end": 11488,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11507,
											"end": 11508,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11504,
											"end": 11505,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11501,
											"end": 11509,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 11498,
											"end": 11500,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11498,
											"end": 11500,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "352"
										},
										{
											"begin": 11498,
											"end": 11500,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11512,
											"end": 11530,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 11512,
											"end": 11530,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 11512,
											"end": 11530,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11512,
											"end": 11530,
											"name": "tag",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 11512,
											"end": 11530,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11498,
											"end": 11500,
											"name": "tag",
											"source": 6,
											"value": "352"
										},
										{
											"begin": 11498,
											"end": 11500,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11557,
											"end": 11558,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11554,
											"end": 11555,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11550,
											"end": 11559,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11542,
											"end": 11559,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11542,
											"end": 11559,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11419,
											"end": 11565,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11419,
											"end": 11565,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11419,
											"end": 11565,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11419,
											"end": 11565,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11419,
											"end": 11565,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 11571,
											"end": 11667,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 11571,
											"end": 11667,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11571,
											"end": 11667,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11637,
											"end": 11661,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 11655,
											"end": 11660,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11637,
											"end": 11661,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "356"
										},
										{
											"begin": 11637,
											"end": 11661,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11637,
											"end": 11661,
											"name": "tag",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 11637,
											"end": 11661,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11626,
											"end": 11661,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11626,
											"end": 11661,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11616,
											"end": 11667,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11616,
											"end": 11667,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11616,
											"end": 11667,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11616,
											"end": 11667,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 11673,
											"end": 11763,
											"name": "tag",
											"source": 6,
											"value": "357"
										},
										{
											"begin": 11673,
											"end": 11763,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11673,
											"end": 11763,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11750,
											"end": 11755,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11743,
											"end": 11756,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11736,
											"end": 11757,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11725,
											"end": 11757,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11725,
											"end": 11757,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11715,
											"end": 11763,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11715,
											"end": 11763,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11715,
											"end": 11763,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11715,
											"end": 11763,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 11769,
											"end": 11895,
											"name": "tag",
											"source": 6,
											"value": "356"
										},
										{
											"begin": 11769,
											"end": 11895,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11769,
											"end": 11895,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11846,
											"end": 11888,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11839,
											"end": 11844,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11835,
											"end": 11889,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11824,
											"end": 11889,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11824,
											"end": 11889,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11814,
											"end": 11895,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11814,
											"end": 11895,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11814,
											"end": 11895,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11814,
											"end": 11895,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 11901,
											"end": 11978,
											"name": "tag",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 11901,
											"end": 11978,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11901,
											"end": 11978,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11967,
											"end": 11972,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11956,
											"end": 11972,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11956,
											"end": 11972,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11946,
											"end": 11978,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11946,
											"end": 11978,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11946,
											"end": 11978,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11946,
											"end": 11978,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 11984,
											"end": 12138,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 11984,
											"end": 12138,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11984,
											"end": 12138,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12081,
											"end": 12132,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "362"
										},
										{
											"begin": 12126,
											"end": 12131,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12081,
											"end": 12132,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "363"
										},
										{
											"begin": 12081,
											"end": 12132,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 12081,
											"end": 12132,
											"name": "tag",
											"source": 6,
											"value": "362"
										},
										{
											"begin": 12081,
											"end": 12132,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12068,
											"end": 12132,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12068,
											"end": 12132,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12058,
											"end": 12138,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12058,
											"end": 12138,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12058,
											"end": 12138,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12058,
											"end": 12138,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 12144,
											"end": 12271,
											"name": "tag",
											"source": 6,
											"value": "363"
										},
										{
											"begin": 12144,
											"end": 12271,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12144,
											"end": 12271,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12241,
											"end": 12265,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "365"
										},
										{
											"begin": 12259,
											"end": 12264,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12241,
											"end": 12265,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "356"
										},
										{
											"begin": 12241,
											"end": 12265,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 12241,
											"end": 12265,
											"name": "tag",
											"source": 6,
											"value": "365"
										},
										{
											"begin": 12241,
											"end": 12265,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12228,
											"end": 12265,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12228,
											"end": 12265,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12218,
											"end": 12271,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12218,
											"end": 12271,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12218,
											"end": 12271,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12218,
											"end": 12271,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 12277,
											"end": 12457,
											"name": "tag",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 12277,
											"end": 12457,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12325,
											"end": 12402,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12322,
											"end": 12323,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12315,
											"end": 12403,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12422,
											"end": 12426,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 12419,
											"end": 12420,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 12412,
											"end": 12427,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12446,
											"end": 12450,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 12443,
											"end": 12444,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12436,
											"end": 12451,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 12463,
											"end": 12643,
											"name": "tag",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 12463,
											"end": 12643,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12511,
											"end": 12588,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12508,
											"end": 12509,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12501,
											"end": 12589,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12608,
											"end": 12612,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 12605,
											"end": 12606,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 12598,
											"end": 12613,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12632,
											"end": 12636,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 12629,
											"end": 12630,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12622,
											"end": 12637,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 12649,
											"end": 12821,
											"name": "tag",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 12649,
											"end": 12821,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12789,
											"end": 12813,
											"name": "PUSH",
											"source": 6,
											"value": "4164647265737320776173206E6F74207374616B656400000000000000000000"
										},
										{
											"begin": 12785,
											"end": 12786,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12777,
											"end": 12783,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12773,
											"end": 12787,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12766,
											"end": 12814,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12755,
											"end": 12821,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12755,
											"end": 12821,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 12827,
											"end": 12983,
											"name": "tag",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 12827,
											"end": 12983,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12967,
											"end": 12975,
											"name": "PUSH",
											"source": 6,
											"value": "4C6F636B65640000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12963,
											"end": 12964,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12955,
											"end": 12961,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12951,
											"end": 12965,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12944,
											"end": 12976,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12933,
											"end": 12983,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12933,
											"end": 12983,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 12989,
											"end": 13214,
											"name": "tag",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 12989,
											"end": 13214,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13129,
											"end": 13163,
											"name": "PUSH",
											"source": 6,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 13125,
											"end": 13126,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13117,
											"end": 13123,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13113,
											"end": 13127,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13106,
											"end": 13164,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13198,
											"end": 13206,
											"name": "PUSH",
											"source": 6,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13193,
											"end": 13195,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13185,
											"end": 13191,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13181,
											"end": 13196,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13174,
											"end": 13207,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13095,
											"end": 13214,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13095,
											"end": 13214,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 13220,
											"end": 13385,
											"name": "tag",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 13220,
											"end": 13385,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13360,
											"end": 13377,
											"name": "PUSH",
											"source": 6,
											"value": "5472616E73666572206661696C65640000000000000000000000000000000000"
										},
										{
											"begin": 13356,
											"end": 13357,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13348,
											"end": 13354,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13344,
											"end": 13358,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13337,
											"end": 13378,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13326,
											"end": 13385,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13326,
											"end": 13385,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 13391,
											"end": 13561,
											"name": "tag",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 13391,
											"end": 13561,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13531,
											"end": 13553,
											"name": "PUSH",
											"source": 6,
											"value": "496E73756666696369656E742062616C616E6365000000000000000000000000"
										},
										{
											"begin": 13527,
											"end": 13528,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13519,
											"end": 13525,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13515,
											"end": 13529,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13508,
											"end": 13554,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13497,
											"end": 13561,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13497,
											"end": 13561,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 13567,
											"end": 13748,
											"name": "tag",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 13567,
											"end": 13748,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13707,
											"end": 13740,
											"name": "PUSH",
											"source": 6,
											"value": "416D6F756E742073686F756C642067726561746572207468616E207A65726F00"
										},
										{
											"begin": 13703,
											"end": 13704,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13695,
											"end": 13701,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13691,
											"end": 13705,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13684,
											"end": 13741,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13673,
											"end": 13748,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13673,
											"end": 13748,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 13754,
											"end": 13936,
											"name": "tag",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 13754,
											"end": 13936,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13894,
											"end": 13928,
											"name": "PUSH",
											"source": 6,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 13890,
											"end": 13891,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13882,
											"end": 13888,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13878,
											"end": 13892,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13871,
											"end": 13929,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13860,
											"end": 13936,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13860,
											"end": 13936,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 13942,
											"end": 14167,
											"name": "tag",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 13942,
											"end": 14167,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14082,
											"end": 14116,
											"name": "PUSH",
											"source": 6,
											"value": "5468652063757272656E74207374616B696E6720616374697669747920686173"
										},
										{
											"begin": 14078,
											"end": 14079,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14070,
											"end": 14076,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14066,
											"end": 14080,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14059,
											"end": 14117,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14151,
											"end": 14159,
											"name": "PUSH",
											"source": 6,
											"value": "20656E6465640000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14146,
											"end": 14148,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 14138,
											"end": 14144,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14134,
											"end": 14149,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14127,
											"end": 14160,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14048,
											"end": 14167,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14048,
											"end": 14167,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 14173,
											"end": 14354,
											"name": "tag",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 14173,
											"end": 14354,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14313,
											"end": 14346,
											"name": "PUSH",
											"source": 6,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 14309,
											"end": 14310,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14301,
											"end": 14307,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14297,
											"end": 14311,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14290,
											"end": 14347,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14279,
											"end": 14354,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14279,
											"end": 14354,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 14360,
											"end": 14482,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 14360,
											"end": 14482,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14433,
											"end": 14457,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "378"
										},
										{
											"begin": 14451,
											"end": 14456,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14433,
											"end": 14457,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 14433,
											"end": 14457,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 14433,
											"end": 14457,
											"name": "tag",
											"source": 6,
											"value": "378"
										},
										{
											"begin": 14433,
											"end": 14457,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14426,
											"end": 14431,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14423,
											"end": 14458,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 14413,
											"end": 14415,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "379"
										},
										{
											"begin": 14413,
											"end": 14415,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 14472,
											"end": 14473,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14469,
											"end": 14470,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 14462,
											"end": 14474,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 14413,
											"end": 14415,
											"name": "tag",
											"source": 6,
											"value": "379"
										},
										{
											"begin": 14413,
											"end": 14415,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14403,
											"end": 14482,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14403,
											"end": 14482,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 14488,
											"end": 14604,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 14488,
											"end": 14604,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14558,
											"end": 14579,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "381"
										},
										{
											"begin": 14573,
											"end": 14578,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14558,
											"end": 14579,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "357"
										},
										{
											"begin": 14558,
											"end": 14579,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 14558,
											"end": 14579,
											"name": "tag",
											"source": 6,
											"value": "381"
										},
										{
											"begin": 14558,
											"end": 14579,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14551,
											"end": 14556,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14548,
											"end": 14580,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 14538,
											"end": 14540,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "382"
										},
										{
											"begin": 14538,
											"end": 14540,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 14594,
											"end": 14595,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14591,
											"end": 14592,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 14584,
											"end": 14596,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 14538,
											"end": 14540,
											"name": "tag",
											"source": 6,
											"value": "382"
										},
										{
											"begin": 14538,
											"end": 14540,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14528,
											"end": 14604,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14528,
											"end": 14604,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 14610,
											"end": 14732,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 14610,
											"end": 14732,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14683,
											"end": 14707,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "384"
										},
										{
											"begin": 14701,
											"end": 14706,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14683,
											"end": 14707,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 14683,
											"end": 14707,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 14683,
											"end": 14707,
											"name": "tag",
											"source": 6,
											"value": "384"
										},
										{
											"begin": 14683,
											"end": 14707,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14676,
											"end": 14681,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14673,
											"end": 14708,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 14663,
											"end": 14665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "385"
										},
										{
											"begin": 14663,
											"end": 14665,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 14722,
											"end": 14723,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14719,
											"end": 14720,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 14712,
											"end": 14724,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 14663,
											"end": 14665,
											"name": "tag",
											"source": 6,
											"value": "385"
										},
										{
											"begin": 14663,
											"end": 14665,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14653,
											"end": 14732,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14653,
											"end": 14732,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"claimReward()": "b88a802f",
							"dayTime()": "80c0976e",
							"lockupPeriod()": "ee947a7c",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"rewardRateInit()": "154a78b5",
							"rewardToken()": "f7c618c1",
							"setRewardRateInit(uint256)": "fc71ae8c",
							"setRewardToken(address)": "8aee8127",
							"setStakingStartTime(uint256)": "5d90bad9",
							"stake(uint256)": "a694fc3a",
							"stakingBalance(address)": "45bc78ab",
							"stakingReward(address)": "1683153d",
							"stakingStartTime()": "6abfd183",
							"stakingTime(address)": "583d42fd",
							"token()": "fc0c546a",
							"totalReward()": "750142e6",
							"totalStake()": "8b0e9f3f",
							"transferOwnership(address)": "f2fde38b",
							"unStake(uint256)": "5d3eea91"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.1+commit.df193b15\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rewardRateInit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_lockupPeriod\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ClaimReward\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Stake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"UnStake\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dayTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockupPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardRateInit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardRateInit\",\"type\":\"uint256\"}],\"name\":\"setRewardRateInit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardToken\",\"type\":\"address\"}],\"name\":\"setRewardToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_stakingStartTime\",\"type\":\"uint256\"}],\"name\":\"setStakingStartTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakingBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakingReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakingTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"unStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"StakingPool.sol\":\"StakingPool\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"StakingPool.sol\":{\"keccak256\":\"0xad425bb924e4d8039cda63910655b2be43de52bc86cca810580b28c3ddbf53cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc33c685d949efef0df8cc86535870d78a962052254d9a50a89f60c1b7edc7cd\",\"dweb:/ipfs/QmfT2SCiDWLZrSEVdaKMMVqzTgUoVqJmVv1ZzKVhu8gDBd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "StakingPool.sol:StakingPool",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 123,
								"contract": "StakingPool.sol:StakingPool",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 594,
								"contract": "StakingPool.sol:StakingPool",
								"label": "token",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)244"
							},
							{
								"astId": 597,
								"contract": "StakingPool.sol:StakingPool",
								"label": "rewardToken",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(IERC20)244"
							},
							{
								"astId": 599,
								"contract": "StakingPool.sol:StakingPool",
								"label": "rewardRateInit",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 601,
								"contract": "StakingPool.sol:StakingPool",
								"label": "lockupPeriod",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 603,
								"contract": "StakingPool.sol:StakingPool",
								"label": "stakingStartTime",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 607,
								"contract": "StakingPool.sol:StakingPool",
								"label": "stakingBalance",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 611,
								"contract": "StakingPool.sol:StakingPool",
								"label": "stakingTime",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 615,
								"contract": "StakingPool.sol:StakingPool",
								"label": "stakingReward",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 617,
								"contract": "StakingPool.sol:StakingPool",
								"label": "totalStake",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 619,
								"contract": "StakingPool.sol:StakingPool",
								"label": "totalReward",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 622,
								"contract": "StakingPool.sol:StakingPool",
								"label": "dayTime",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)244": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							266
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 267,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 266,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"contractDependencies": [
								266
							],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								266
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 256,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 256,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0"
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							166
						]
					},
					"id": 167,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:1",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 166,
							"linearizedBaseContracts": [
								166
							],
							"name": "ReentrancyGuard",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 118,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nodeType": "VariableDeclaration",
									"scope": 166,
									"src": "1676:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 116,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 117,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 121,
									"mutability": "constant",
									"name": "_ENTERED",
									"nodeType": "VariableDeclaration",
									"scope": 166,
									"src": "1723:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 119,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 120,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 123,
									"mutability": "mutable",
									"name": "_status",
									"nodeType": "VariableDeclaration",
									"scope": 166,
									"src": "1767:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 122,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "1811:39:1",
										"statements": [
											{
												"expression": {
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 126,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "1821:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 127,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "1831:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 129,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:1"
											}
										]
									},
									"id": 131,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:1"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:1"
									},
									"scope": 166,
									"src": "1797:53:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 141,
										"nodeType": "Block",
										"src": "2251:79:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 134,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 157,
														"src": "2261:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 136,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:1"
											},
											{
												"id": 137,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:1"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 138,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2303:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:1"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:1",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 142,
									"name": "nonReentrant",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:1"
									},
									"src": "2227:103:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 156,
										"nodeType": "Block",
										"src": "2375:248:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 146,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 123,
																"src": "2468:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 147,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 121,
																"src": "2479:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 149,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 145,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 151,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:1"
											},
											{
												"expression": {
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 152,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2598:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 153,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "2608:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 155,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:1"
											}
										]
									},
									"id": 157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:1"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:1"
									},
									"scope": 166,
									"src": "2336:287:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 164,
										"nodeType": "Block",
										"src": "2667:171:1",
										"statements": [
											{
												"expression": {
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 160,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2809:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 161,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "2819:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 163,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:1"
											}
										]
									},
									"id": 165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:1"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:1"
									},
									"scope": 166,
									"src": "2629:209:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 167,
							"src": "888:1952:1"
						}
					],
					"src": "112:2729:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							244
						]
					},
					"id": 245,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 168,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 169,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 244,
							"linearizedBaseContracts": [
								244
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 178,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "403:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "425:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "445:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:2"
									},
									"src": "388:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 187,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "634:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "657:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "682:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:2"
									},
									"src": "619:78:2"
								},
								{
									"documentation": {
										"id": 188,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 193,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 244,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 194,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 201,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 244,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 211,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1211:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1223:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:2"
									},
									"returnParameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1257:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 208,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:2"
									},
									"scope": 244,
									"src": "1193:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 221,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "1557:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "1572:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:2"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "1612:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:2"
									},
									"scope": 244,
									"src": "1538:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 231,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2291:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2308:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:2"
									},
									"returnParameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2342:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 228,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:2"
									},
									"scope": 244,
									"src": "2274:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:2",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 243,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "2677:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "2699:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "2719:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:2"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "2758:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 240,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:2"
									},
									"scope": 244,
									"src": "2646:118:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 245,
							"src": "202:2564:2"
						}
					],
					"src": "106:2661:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							266
						]
					},
					"id": 267,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 246,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 247,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 266,
							"linearizedBaseContracts": [
								266
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "702:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 252,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 251,
												"id": 254,
												"nodeType": "Return",
												"src": "712:17:3"
											}
										]
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:3"
									},
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "693:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:3"
									},
									"scope": 266,
									"src": "640:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 264,
										"nodeType": "Block",
										"src": "809:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 261,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 260,
												"id": 263,
												"nodeType": "Return",
												"src": "819:15:3"
											}
										]
									},
									"id": 265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:3"
									},
									"returnParameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "793:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 258,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:3"
									},
									"scope": 266,
									"src": "742:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 267,
							"src": "608:235:3"
						}
					],
					"src": "86:758:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							578
						]
					},
					"id": 579,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 268,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 269,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:4",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 578,
							"linearizedBaseContracts": [
								578
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "717:140:4",
										"statements": [
											{
												"id": 299,
												"nodeType": "UncheckedBlock",
												"src": "727:124:4",
												"statements": [
													{
														"assignments": [
															282
														],
														"declarations": [
															{
																"constant": false,
																"id": 282,
																"mutability": "mutable",
																"name": "c",
																"nodeType": "VariableDeclaration",
																"scope": 299,
																"src": "751:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 281,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 286,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 283,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "763:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 284,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 274,
																"src": "767:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 289,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 287,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 282,
																"src": "786:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 288,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "790:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 294,
														"nodeType": "IfStatement",
														"src": "782:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 290,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 291,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 292,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 280,
															"id": 293,
															"nodeType": "Return",
															"src": "793:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 295,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 296,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 282,
																	"src": "838:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 297,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 280,
														"id": 298,
														"nodeType": "Return",
														"src": "824:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 270,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:4",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "657:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "668:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:4"
									},
									"returnParameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "702:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 276,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "708:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:4"
									},
									"scope": 578,
									"src": "641:216:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 328,
										"nodeType": "Block",
										"src": "1078:113:4",
										"statements": [
											{
												"id": 327,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 315,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 313,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "1116:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 314,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 304,
																"src": "1120:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 320,
														"nodeType": "IfStatement",
														"src": "1112:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 316,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 317,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 318,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 312,
															"id": 319,
															"nodeType": "Return",
															"src": "1123:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 321,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 324,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 322,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 304,
																		"src": "1168:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 323,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 306,
																		"src": "1172:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 325,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 312,
														"id": 326,
														"nodeType": "Return",
														"src": "1154:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 302,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:4",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "1018:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "1029:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:4"
									},
									"returnParameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "1063:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 308,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "1069:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:4"
									},
									"scope": 578,
									"src": "1002:189:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 370,
										"nodeType": "Block",
										"src": "1415:417:4",
										"statements": [
											{
												"id": 369,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 341,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 332,
																"src": "1683:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 342,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 348,
														"nodeType": "IfStatement",
														"src": "1679:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 344,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 345,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 346,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 340,
															"id": 347,
															"nodeType": "Return",
															"src": "1691:16:4"
														}
													},
													{
														"assignments": [
															350
														],
														"declarations": [
															{
																"constant": false,
																"id": 350,
																"mutability": "mutable",
																"name": "c",
																"nodeType": "VariableDeclaration",
																"scope": 369,
																"src": "1721:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 349,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 354,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 351,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 332,
																"src": "1733:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 352,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 334,
																"src": "1737:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 357,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 355,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 350,
																	"src": "1756:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 356,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 332,
																	"src": "1760:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 358,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 334,
																"src": "1765:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 364,
														"nodeType": "IfStatement",
														"src": "1752:33:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 360,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 361,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 362,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 340,
															"id": 363,
															"nodeType": "Return",
															"src": "1768:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 366,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 350,
																	"src": "1813:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 367,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 340,
														"id": 368,
														"nodeType": "Return",
														"src": "1799:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:4",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 371,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "1355:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "1366:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:4"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "1400:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 336,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "1406:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:4"
									},
									"scope": 578,
									"src": "1339:493:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 398,
										"nodeType": "Block",
										"src": "2057:114:4",
										"statements": [
											{
												"id": 397,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 383,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 376,
																"src": "2095:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 384,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 390,
														"nodeType": "IfStatement",
														"src": "2091:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 386,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 388,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 382,
															"id": 389,
															"nodeType": "Return",
															"src": "2103:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 392,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 374,
																		"src": "2148:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 393,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 376,
																		"src": "2152:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 395,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 382,
														"id": 396,
														"nodeType": "Return",
														"src": "2134:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 372,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:4",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "1997:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "2008:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:4"
									},
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "2042:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 378,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "2048:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:4"
									},
									"scope": 578,
									"src": "1981:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "2406:114:4",
										"statements": [
											{
												"id": 425,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 411,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 404,
																"src": "2444:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 412,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 418,
														"nodeType": "IfStatement",
														"src": "2440:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 414,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 415,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 416,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 410,
															"id": 417,
															"nodeType": "Return",
															"src": "2452:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 419,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 422,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 420,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 402,
																		"src": "2497:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 421,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 404,
																		"src": "2501:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 423,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 410,
														"id": 424,
														"nodeType": "Return",
														"src": "2483:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "2346:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "2357:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:4"
									},
									"returnParameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "2391:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 406,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "2397:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:4"
									},
									"scope": 578,
									"src": "2330:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "2822:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 437,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 430,
														"src": "2839:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 438,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 432,
														"src": "2843:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 436,
												"id": 440,
												"nodeType": "Return",
												"src": "2832:12:4"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:4",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2768:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2779:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:4"
									},
									"returnParameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2813:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:4"
									},
									"scope": 578,
									"src": "2755:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 456,
										"nodeType": "Block",
										"src": "3189:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 452,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "3206:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 453,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "3210:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 451,
												"id": 455,
												"nodeType": "Return",
												"src": "3199:12:4"
											}
										]
									},
									"documentation": {
										"id": 443,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 457,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "3135:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "3146:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:4"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "3180:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:4"
									},
									"scope": 578,
									"src": "3122:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 471,
										"nodeType": "Block",
										"src": "3532:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 467,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 460,
														"src": "3549:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 468,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 462,
														"src": "3553:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 466,
												"id": 470,
												"nodeType": "Return",
												"src": "3542:12:4"
											}
										]
									},
									"documentation": {
										"id": 458,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:4",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 472,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "3478:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "3489:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:4"
									},
									"returnParameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "3523:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:4"
									},
									"scope": 578,
									"src": "3465:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 486,
										"nodeType": "Block",
										"src": "3917:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 482,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 475,
														"src": "3934:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 483,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 477,
														"src": "3938:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 481,
												"id": 485,
												"nodeType": "Return",
												"src": "3927:12:4"
											}
										]
									},
									"documentation": {
										"id": 473,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:4",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 487,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "3863:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "3874:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:4"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "3908:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:4"
									},
									"scope": 578,
									"src": "3850:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 501,
										"nodeType": "Block",
										"src": "4466:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 497,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 490,
														"src": "4483:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 498,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 492,
														"src": "4487:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 496,
												"id": 500,
												"nodeType": "Return",
												"src": "4476:12:4"
											}
										]
									},
									"documentation": {
										"id": 488,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 502,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "4412:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "4423:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:4"
									},
									"returnParameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "4457:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 494,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:4"
									},
									"scope": 578,
									"src": "4399:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 526,
										"nodeType": "Block",
										"src": "5084:106:4",
										"statements": [
											{
												"id": 525,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 515,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 507,
																		"src": "5126:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 516,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 505,
																		"src": "5131:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 518,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 509,
																	"src": "5134:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 514,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 520,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 521,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 505,
																"src": "5168:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 522,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 507,
																"src": "5172:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 513,
														"id": 524,
														"nodeType": "Return",
														"src": "5161:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 527,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "4981:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "5000:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "5019:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 508,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:4"
									},
									"returnParameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "5075:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:4"
									},
									"scope": 578,
									"src": "4959:231:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 551,
										"nodeType": "Block",
										"src": "5799:105:4",
										"statements": [
											{
												"id": 550,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 540,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 532,
																		"src": "5841:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 541,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 543,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 534,
																	"src": "5848:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 539,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 545,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 548,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 546,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 530,
																"src": "5882:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 547,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 532,
																"src": "5886:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 538,
														"id": 549,
														"nodeType": "Return",
														"src": "5875:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 528,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:4",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 552,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "5696:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "5715:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "5734:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 533,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:4"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "5790:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:4"
									},
									"scope": 578,
									"src": "5674:230:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 576,
										"nodeType": "Block",
										"src": "6675:105:4",
										"statements": [
											{
												"id": 575,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 567,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 565,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 557,
																		"src": "6717:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 566,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 568,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 559,
																	"src": "6724:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 564,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 570,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 571,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 555,
																"src": "6758:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 572,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 557,
																"src": "6762:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 563,
														"id": 574,
														"nodeType": "Return",
														"src": "6751:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 553,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 577,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "6572:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "6591:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 556,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "6610:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 558,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:4"
									},
									"returnParameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "6666:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:4"
									},
									"scope": 578,
									"src": "6550:230:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 579,
							"src": "482:6300:4"
						}
					],
					"src": "107:6676:4"
				},
				"id": 4
			},
			"StakingPool.sol": {
				"ast": {
					"absolutePath": "StakingPool.sol",
					"exportedSymbols": {
						"Context": [
							266
						],
						"IERC20": [
							244
						],
						"Ownable": [
							112
						],
						"ReentrancyGuard": [
							166
						],
						"SafeMath": [
							578
						],
						"StakingPool": [
							975
						]
					},
					"id": 976,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 580,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 581,
							"nodeType": "ImportDirective",
							"scope": 976,
							"sourceUnit": 245,
							"src": "57:56:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 582,
							"nodeType": "ImportDirective",
							"scope": 976,
							"sourceUnit": 113,
							"src": "114:52:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 583,
							"nodeType": "ImportDirective",
							"scope": 976,
							"sourceUnit": 167,
							"src": "167:62:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 584,
							"nodeType": "ImportDirective",
							"scope": 976,
							"sourceUnit": 579,
							"src": "230:57:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 585,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "313:7:5"
									},
									"id": 586,
									"nodeType": "InheritanceSpecifier",
									"src": "313:7:5"
								},
								{
									"baseName": {
										"id": 587,
										"name": "ReentrancyGuard",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 166,
										"src": "322:15:5"
									},
									"id": 588,
									"nodeType": "InheritanceSpecifier",
									"src": "322:15:5"
								}
							],
							"contractDependencies": [
								112,
								166,
								266
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 975,
							"linearizedBaseContracts": [
								975,
								166,
								112,
								266
							],
							"name": "StakingPool",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 591,
									"libraryName": {
										"id": 589,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 578,
										"src": "350:8:5"
									},
									"nodeType": "UsingForDirective",
									"src": "344:27:5",
									"typeName": {
										"id": 590,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "363:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "fc0c546a",
									"id": 594,
									"mutability": "mutable",
									"name": "token",
									"nodeType": "VariableDeclaration",
									"scope": 975,
									"src": "377:19:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$244",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 593,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 592,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 244,
											"src": "377:6:5"
										},
										"referencedDeclaration": 244,
										"src": "377:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$244",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f7c618c1",
									"id": 597,
									"mutability": "mutable",
									"name": "rewardToken",
									"nodeType": "VariableDeclaration",
									"scope": 975,
									"src": "442:25:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$244",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 596,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 595,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 244,
											"src": "442:6:5"
										},
										"referencedDeclaration": 244,
										"src": "442:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$244",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "154a78b5",
									"id": 599,
									"mutability": "mutable",
									"name": "rewardRateInit",
									"nodeType": "VariableDeclaration",
									"scope": 975,
									"src": "517:29:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 598,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "517:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ee947a7c",
									"id": 601,
									"mutability": "mutable",
									"name": "lockupPeriod",
									"nodeType": "VariableDeclaration",
									"scope": 975,
									"src": "587:27:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 600,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "587:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6abfd183",
									"id": 603,
									"mutability": "mutable",
									"name": "stakingStartTime",
									"nodeType": "VariableDeclaration",
									"scope": 975,
									"src": "661:31:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 602,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "661:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "45bc78ab",
									"id": 607,
									"mutability": "mutable",
									"name": "stakingBalance",
									"nodeType": "VariableDeclaration",
									"scope": 975,
									"src": "732:49:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 606,
										"keyType": {
											"id": 604,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "740:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "732:27:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 605,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "751:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "583d42fd",
									"id": 611,
									"mutability": "mutable",
									"name": "stakingTime",
									"nodeType": "VariableDeclaration",
									"scope": 975,
									"src": "825:46:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 610,
										"keyType": {
											"id": 608,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "833:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "825:27:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 609,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "844:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1683153d",
									"id": 615,
									"mutability": "mutable",
									"name": "stakingReward",
									"nodeType": "VariableDeclaration",
									"scope": 975,
									"src": "912:48:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 614,
										"keyType": {
											"id": 612,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "920:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "912:27:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 613,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "931:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8b0e9f3f",
									"id": 617,
									"mutability": "mutable",
									"name": "totalStake",
									"nodeType": "VariableDeclaration",
									"scope": 975,
									"src": "1012:25:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 616,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1012:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "750142e6",
									"id": 619,
									"mutability": "mutable",
									"name": "totalReward",
									"nodeType": "VariableDeclaration",
									"scope": 975,
									"src": "1072:26:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 618,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1072:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "80c0976e",
									"id": 622,
									"mutability": "mutable",
									"name": "dayTime",
									"nodeType": "VariableDeclaration",
									"scope": 975,
									"src": "1130:30:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 620,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1130:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3836343030",
										"id": 621,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1155:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_86400_by_1",
											"typeString": "int_const 86400"
										},
										"value": "86400"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 628,
									"name": "Stake",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "1208:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1208:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "1230:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1230:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1207:38:5"
									},
									"src": "1196:50:5"
								},
								{
									"anonymous": false,
									"id": 634,
									"name": "UnStake",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "1265:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1265:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "1287:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1287:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1264:38:5"
									},
									"src": "1251:52:5"
								},
								{
									"anonymous": false,
									"id": 640,
									"name": "ClaimReward",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "1326:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1326:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "1348:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1348:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1325:38:5"
									},
									"src": "1308:56:5"
								},
								{
									"body": {
										"id": 676,
										"nodeType": "Block",
										"src": "1468:207:5",
										"statements": [
											{
												"expression": {
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 651,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "1478:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$244",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 653,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 642,
																"src": "1493:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 652,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "1486:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$244_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 654,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1486:14:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$244",
															"typeString": "contract IERC20"
														}
													},
													"src": "1478:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$244",
														"typeString": "contract IERC20"
													}
												},
												"id": 656,
												"nodeType": "ExpressionStatement",
												"src": "1478:22:5"
											},
											{
												"expression": {
													"id": 661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 657,
														"name": "rewardToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "1510:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$244",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 659,
																"name": "_rewardToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 644,
																"src": "1531:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 658,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "1524:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$244_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 660,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1524:20:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$244",
															"typeString": "contract IERC20"
														}
													},
													"src": "1510:34:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$244",
														"typeString": "contract IERC20"
													}
												},
												"id": 662,
												"nodeType": "ExpressionStatement",
												"src": "1510:34:5"
											},
											{
												"expression": {
													"id": 665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 663,
														"name": "rewardRateInit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 599,
														"src": "1554:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 664,
														"name": "_rewardRateInit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 646,
														"src": "1571:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1554:32:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 666,
												"nodeType": "ExpressionStatement",
												"src": "1554:32:5"
											},
											{
												"expression": {
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 667,
														"name": "lockupPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 601,
														"src": "1596:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 668,
														"name": "_lockupPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 648,
														"src": "1611:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1596:28:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "1596:28:5"
											},
											{
												"expression": {
													"id": 674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 671,
														"name": "stakingStartTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 603,
														"src": "1634:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 672,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1653:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 673,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1653:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1634:34:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 675,
												"nodeType": "ExpressionStatement",
												"src": "1634:34:5"
											}
										]
									},
									"id": 677,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "_token",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "1382:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1382:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "_rewardToken",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "1398:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 643,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1398:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "_rewardRateInit",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "1420:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1420:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "_lockupPeriod",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "1445:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1445:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1381:86:5"
									},
									"returnParameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1468:0:5"
									},
									"scope": 975,
									"src": "1370:305:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 776,
										"nodeType": "Block",
										"src": "1755:667:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 690,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 685,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1773:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 686,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1773:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 689,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 687,
																	"name": "stakingStartTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 603,
																	"src": "1791:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 688,
																	"name": "lockupPeriod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 601,
																	"src": "1810:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1791:31:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1773:49:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5468652063757272656e74207374616b696e672061637469766974792068617320656e646564",
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1824:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bb49972f036ceb7f98bbdcfadc5b5745930b5203ea6a23b47522e300d5db612c",
																"typeString": "literal_string \"The current staking activity has ended\""
															},
															"value": "The current staking activity has ended"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bb49972f036ceb7f98bbdcfadc5b5745930b5203ea6a23b47522e300d5db612c",
																"typeString": "literal_string \"The current staking activity has ended\""
															}
														],
														"id": 684,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1765:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1765:100:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 693,
												"nodeType": "ExpressionStatement",
												"src": "1765:100:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 697,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 695,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 679,
																"src": "1883:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1893:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1883:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e742073686f756c642067726561746572207468616e207a65726f",
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1896:33:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7e6097df28dbd6e8fac3ec6a9281335c312bc8a436c798b83190edcb63f5401f",
																"typeString": "literal_string \"Amount should greater than zero\""
															},
															"value": "Amount should greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7e6097df28dbd6e8fac3ec6a9281335c312bc8a436c798b83190edcb63f5401f",
																"typeString": "literal_string \"Amount should greater than zero\""
															}
														],
														"id": 694,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1875:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1875:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 700,
												"nodeType": "ExpressionStatement",
												"src": "1875:55:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 704,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1967:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 705,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1967:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 708,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1987:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_StakingPool_$975",
																				"typeString": "contract StakingPool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_StakingPool_$975",
																				"typeString": "contract StakingPool"
																			}
																		],
																		"id": 707,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1979:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 706,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1979:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 709,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1979:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 710,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 679,
																	"src": "1994:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 702,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 594,
																	"src": "1948:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$244",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 703,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 243,
																"src": "1948:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 711,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1948:54:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 712,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2004:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 701,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1940:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1940:82:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 714,
												"nodeType": "ExpressionStatement",
												"src": "1940:82:5"
											},
											{
												"expression": {
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 715,
															"name": "stakingBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "2032:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 718,
														"indexExpression": {
															"expression": {
																"id": 716,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2047:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2047:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2032:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 724,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 679,
																"src": "2092:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 719,
																	"name": "stakingBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 607,
																	"src": "2061:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 722,
																"indexExpression": {
																	"expression": {
																		"id": 720,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2076:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 721,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2076:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2061:26:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 723,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 442,
															"src": "2061:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 725,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2061:39:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2032:68:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 727,
												"nodeType": "ExpressionStatement",
												"src": "2032:68:5"
											},
											{
												"expression": {
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 728,
															"name": "stakingTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "2110:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 731,
														"indexExpression": {
															"expression": {
																"id": 729,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2122:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2122:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2110:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 732,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2136:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 733,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2136:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2110:41:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 735,
												"nodeType": "ExpressionStatement",
												"src": "2110:41:5"
											},
											{
												"assignments": [
													737
												],
												"declarations": [
													{
														"constant": false,
														"id": 737,
														"mutability": "mutable",
														"name": "reward",
														"nodeType": "VariableDeclaration",
														"scope": 776,
														"src": "2161:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 736,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2161:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 742,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 739,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2195:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 740,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2195:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 738,
														"name": "getRewardForUser",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 936,
														"src": "2178:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2178:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2161:45:5"
											},
											{
												"expression": {
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 743,
															"name": "stakingReward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 615,
															"src": "2216:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 746,
														"indexExpression": {
															"expression": {
																"id": 744,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2230:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 745,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2230:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2216:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 752,
																"name": "reward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 737,
																"src": "2274:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 747,
																	"name": "stakingReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 615,
																	"src": "2244:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 750,
																"indexExpression": {
																	"expression": {
																		"id": 748,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2258:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 749,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2258:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2244:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 751,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 442,
															"src": "2244:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 753,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2244:37:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2216:65:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 755,
												"nodeType": "ExpressionStatement",
												"src": "2216:65:5"
											},
											{
												"expression": {
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 756,
														"name": "totalStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 617,
														"src": "2291:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 759,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 679,
																"src": "2319:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 757,
																"name": "totalStake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 617,
																"src": "2304:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 442,
															"src": "2304:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 760,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2304:23:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2291:36:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 762,
												"nodeType": "ExpressionStatement",
												"src": "2291:36:5"
											},
											{
												"expression": {
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 763,
														"name": "totalReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 619,
														"src": "2337:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 766,
																"name": "reward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 737,
																"src": "2367:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 764,
																"name": "totalReward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 619,
																"src": "2351:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 765,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 442,
															"src": "2351:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 767,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2351:23:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2337:37:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 769,
												"nodeType": "ExpressionStatement",
												"src": "2337:37:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 771,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2395:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 772,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2395:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 773,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "2407:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 770,
														"name": "Stake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 628,
														"src": "2389:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2389:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 775,
												"nodeType": "EmitStatement",
												"src": "2384:31:5"
											}
										]
									},
									"functionSelector": "a694fc3a",
									"id": 777,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 682,
											"modifierName": {
												"id": 681,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 142,
												"src": "1742:12:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1742:12:5"
										}
									],
									"name": "stake",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "1716:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1716:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1715:17:5"
									},
									"returnParameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1755:0:5"
									},
									"scope": 975,
									"src": "1701:721:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 841,
										"nodeType": "Block",
										"src": "2531:408:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 791,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 785,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2549:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 786,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2549:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 789,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 787,
																			"name": "stakingStartTime",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 603,
																			"src": "2569:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 788,
																			"name": "lockupPeriod",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 601,
																			"src": "2588:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2569:31:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 790,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2568:33:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2549:52:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c6f636b6564",
															"id": 792,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2603:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_10bc01d611f2c803e55ff98d999836f196afae7cf91f96f3b6f511e56ba84974",
																"typeString": "literal_string \"Locked\""
															},
															"value": "Locked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_10bc01d611f2c803e55ff98d999836f196afae7cf91f96f3b6f511e56ba84974",
																"typeString": "literal_string \"Locked\""
															}
														],
														"id": 784,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2541:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2541:71:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 794,
												"nodeType": "ExpressionStatement",
												"src": "2541:71:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 801,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 796,
																	"name": "stakingBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 607,
																	"src": "2630:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 799,
																"indexExpression": {
																	"expression": {
																		"id": 797,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2645:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 798,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2645:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2630:26:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 800,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 779,
																"src": "2660:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2630:37:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 802,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2669:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 795,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2622:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2622:70:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 804,
												"nodeType": "ExpressionStatement",
												"src": "2622:70:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 808,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2725:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 809,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2725:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 810,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 779,
																	"src": "2737:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 806,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 594,
																	"src": "2710:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$244",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 807,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 211,
																"src": "2710:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 811,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2710:35:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2747:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 805,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2702:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2702:63:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 814,
												"nodeType": "ExpressionStatement",
												"src": "2702:63:5"
											},
											{
												"expression": {
													"id": 826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 815,
															"name": "stakingBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "2775:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 818,
														"indexExpression": {
															"expression": {
																"id": 816,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2790:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 817,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2790:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2775:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 824,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 779,
																"src": "2835:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 819,
																	"name": "stakingBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 607,
																	"src": "2804:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 822,
																"indexExpression": {
																	"expression": {
																		"id": 820,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2819:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 821,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2819:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2804:26:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 823,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 457,
															"src": "2804:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 825,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2804:39:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2775:68:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 827,
												"nodeType": "ExpressionStatement",
												"src": "2775:68:5"
											},
											{
												"expression": {
													"id": 833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 828,
														"name": "totalStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 617,
														"src": "2853:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 831,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 779,
																"src": "2881:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 829,
																"name": "totalStake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 617,
																"src": "2866:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 830,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 457,
															"src": "2866:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 832,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2866:23:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2853:36:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 834,
												"nodeType": "ExpressionStatement",
												"src": "2853:36:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 836,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2912:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 837,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2912:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 838,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 779,
															"src": "2924:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 835,
														"name": "UnStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 634,
														"src": "2904:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2904:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 840,
												"nodeType": "EmitStatement",
												"src": "2899:33:5"
											}
										]
									},
									"functionSelector": "5d3eea91",
									"id": 842,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 782,
											"modifierName": {
												"id": 781,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 142,
												"src": "2518:12:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2518:12:5"
										}
									],
									"name": "unStake",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "2492:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2492:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2491:17:5"
									},
									"returnParameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2531:0:5"
									},
									"scope": 975,
									"src": "2475:464:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 894,
										"nodeType": "Block",
										"src": "3010:339:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 853,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 848,
																	"name": "stakingTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 611,
																	"src": "3028:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 851,
																"indexExpression": {
																	"expression": {
																		"id": 849,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3040:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 850,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3040:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3028:23:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 852,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3054:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3028:27:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4164647265737320776173206e6f74207374616b6564",
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3057:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_06c91019a93dd15fbeb6eed7cf8a253c16f390d84dd42d722095ff695d0ff1eb",
																"typeString": "literal_string \"Address was not staked\""
															},
															"value": "Address was not staked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_06c91019a93dd15fbeb6eed7cf8a253c16f390d84dd42d722095ff695d0ff1eb",
																"typeString": "literal_string \"Address was not staked\""
															}
														],
														"id": 847,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3020:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3020:62:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 856,
												"nodeType": "ExpressionStatement",
												"src": "3020:62:5"
											},
											{
												"assignments": [
													858
												],
												"declarations": [
													{
														"constant": false,
														"id": 858,
														"mutability": "mutable",
														"name": "reward",
														"nodeType": "VariableDeclaration",
														"scope": 894,
														"src": "3092:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 857,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3092:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 863,
												"initialValue": {
													"baseExpression": {
														"id": 859,
														"name": "stakingReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "3109:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 862,
													"indexExpression": {
														"expression": {
															"id": 860,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3123:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 861,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3123:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3109:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3092:42:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 867,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3173:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 868,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3173:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 869,
																	"name": "reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 858,
																	"src": "3185:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 865,
																	"name": "rewardToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 597,
																	"src": "3152:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$244",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 866,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 211,
																"src": "3152:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 870,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3152:40:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 871,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3194:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 864,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3144:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3144:68:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 873,
												"nodeType": "ExpressionStatement",
												"src": "3144:68:5"
											},
											{
												"expression": {
													"id": 879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 874,
															"name": "stakingReward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 615,
															"src": "3222:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 877,
														"indexExpression": {
															"expression": {
																"id": 875,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3236:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 876,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3236:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3222:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 878,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3248:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3222:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 880,
												"nodeType": "ExpressionStatement",
												"src": "3222:27:5"
											},
											{
												"expression": {
													"id": 886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 881,
														"name": "totalReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 619,
														"src": "3259:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 884,
																"name": "reward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 858,
																"src": "3289:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 882,
																"name": "totalReward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 619,
																"src": "3273:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 883,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 457,
															"src": "3273:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 885,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3273:23:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3259:37:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 887,
												"nodeType": "ExpressionStatement",
												"src": "3259:37:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 889,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3323:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 890,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3323:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 891,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 858,
															"src": "3335:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 888,
														"name": "ClaimReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 640,
														"src": "3311:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3311:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 893,
												"nodeType": "EmitStatement",
												"src": "3306:36:5"
											}
										]
									},
									"functionSelector": "b88a802f",
									"id": 895,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 845,
											"modifierName": {
												"id": 844,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 142,
												"src": "2997:12:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2997:12:5"
										}
									],
									"name": "claimReward",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2985:2:5"
									},
									"returnParameters": {
										"id": 846,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3010:0:5"
									},
									"scope": 975,
									"src": "2965:384:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 935,
										"nodeType": "Block",
										"src": "3486:417:5",
										"statements": [
											{
												"assignments": [
													903
												],
												"declarations": [
													{
														"constant": false,
														"id": 903,
														"mutability": "mutable",
														"name": "stakingDaysRemaining",
														"nodeType": "VariableDeclaration",
														"scope": 935,
														"src": "3496:28:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 902,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3496:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 914,
												"initialValue": {
													"arguments": [
														{
															"baseExpression": {
																"id": 910,
																"name": "stakingTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 611,
																"src": "3568:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 912,
															"indexExpression": {
																"id": 911,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 897,
																"src": "3580:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3568:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"components": [
																{
																	"arguments": [
																		{
																			"id": 906,
																			"name": "stakingStartTime",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 603,
																			"src": "3545:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 904,
																			"name": "lockupPeriod",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 601,
																			"src": "3528:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 905,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 442,
																		"src": "3528:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 907,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3528:34:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 908,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3527:36:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 909,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 457,
														"src": "3527:40:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3527:62:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3496:93:5"
											},
											{
												"assignments": [
													916
												],
												"declarations": [
													{
														"constant": false,
														"id": 916,
														"mutability": "mutable",
														"name": "reward",
														"nodeType": "VariableDeclaration",
														"scope": 935,
														"src": "3765:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 915,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3765:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 932,
												"initialValue": {
													"arguments": [
														{
															"id": 930,
															"name": "dayTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 622,
															"src": "3865:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 927,
																	"name": "stakingDaysRemaining",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 903,
																	"src": "3839:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 924,
																			"name": "rewardRateInit",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 599,
																			"src": "3819:14:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"hexValue": "316536",
																					"id": 921,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3810:3:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1000000_by_1",
																						"typeString": "int_const 1000000"
																					},
																					"value": "1e6"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_1000000_by_1",
																						"typeString": "int_const 1000000"
																					}
																				],
																				"expression": {
																					"baseExpression": {
																						"id": 917,
																						"name": "stakingBalance",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 607,
																						"src": "3782:14:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																							"typeString": "mapping(address => uint256)"
																						}
																					},
																					"id": 919,
																					"indexExpression": {
																						"id": 918,
																						"name": "account",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 897,
																						"src": "3797:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "3782:23:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 920,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 487,
																				"src": "3782:27:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 922,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3782:32:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 923,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 472,
																		"src": "3782:36:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 925,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3782:52:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 926,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 472,
																"src": "3782:56:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 928,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3782:78:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 929,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 487,
														"src": "3782:82:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3782:91:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3765:108:5"
											},
											{
												"expression": {
													"id": 933,
													"name": "reward",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 916,
													"src": "3890:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 901,
												"id": 934,
												"nodeType": "Return",
												"src": "3883:13:5"
											}
										]
									},
									"id": 936,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRewardForUser",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "3437:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 896,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3437:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3436:17:5"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "3477:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3477:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3476:9:5"
									},
									"scope": 975,
									"src": "3411:492:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 949,
										"nodeType": "Block",
										"src": "4006:51:5",
										"statements": [
											{
												"expression": {
													"id": 947,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 943,
														"name": "rewardToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "4016:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$244",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 945,
																"name": "_rewardToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 938,
																"src": "4037:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 944,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "4030:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$244_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 946,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4030:20:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$244",
															"typeString": "contract IERC20"
														}
													},
													"src": "4016:34:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$244",
														"typeString": "contract IERC20"
													}
												},
												"id": 948,
												"nodeType": "ExpressionStatement",
												"src": "4016:34:5"
											}
										]
									},
									"functionSelector": "8aee8127",
									"id": 950,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 941,
											"modifierName": {
												"id": 940,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "3996:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "3996:9:5"
										}
									],
									"name": "setRewardToken",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "_rewardToken",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "3965:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 937,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3965:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3964:22:5"
									},
									"returnParameters": {
										"id": 942,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4006:0:5"
									},
									"scope": 975,
									"src": "3941:116:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 961,
										"nodeType": "Block",
										"src": "4176:53:5",
										"statements": [
											{
												"expression": {
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 957,
														"name": "stakingStartTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 603,
														"src": "4186:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 958,
														"name": "_stakingStartTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 952,
														"src": "4205:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4186:36:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 960,
												"nodeType": "ExpressionStatement",
												"src": "4186:36:5"
											}
										]
									},
									"functionSelector": "5d90bad9",
									"id": 962,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 955,
											"modifierName": {
												"id": 954,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "4166:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "4166:9:5"
										}
									],
									"name": "setStakingStartTime",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "_stakingStartTime",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "4130:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 951,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4130:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4129:27:5"
									},
									"returnParameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4176:0:5"
									},
									"scope": 975,
									"src": "4101:128:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 973,
										"nodeType": "Block",
										"src": "4340:49:5",
										"statements": [
											{
												"expression": {
													"id": 971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 969,
														"name": "rewardRateInit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 599,
														"src": "4350:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 970,
														"name": "_rewardRateInit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 964,
														"src": "4367:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4350:32:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 972,
												"nodeType": "ExpressionStatement",
												"src": "4350:32:5"
											}
										]
									},
									"functionSelector": "fc71ae8c",
									"id": 974,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 967,
											"modifierName": {
												"id": 966,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "4330:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "4330:9:5"
										}
									],
									"name": "setRewardRateInit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "_rewardRateInit",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "4296:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 963,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4296:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4295:25:5"
									},
									"returnParameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4340:0:5"
									},
									"scope": 975,
									"src": "4269:120:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 976,
							"src": "289:4107:5"
						}
					],
					"src": "32:4364:5"
				},
				"id": 5
			}
		}
	}
}