{
	"id": "be8954f918975fa1e36dce1dce84e0be",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.4",
	"solcLongVersion": "0.8.4+commit.c7e474f2",
	"input": {
		"language": "Solidity",
		"sources": {
			"BuyToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/token/ERC20/IERC20.sol\";\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0//contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\n\n// 代币兑换合约\ncontract TokenExchange is Ownable, ReentrancyGuard {\n    using SafeMath for uint256;\n    using SafeERC20 for IERC20;\n    IERC20 public usdt; // USDT 合约实例\n    IERC20 public myToken; // 自定义代币合约实例\n    uint256 public exchangeRate; // 兑换比例\n    // address public owner; // 合约所有者\n    uint256 public maxAmout; // 设置每个用户的最大购买量\n    mapping(address => uint256) public cumulativePurchase;  // 记录用户的购买量\n\n\n    event BuyToken(address indexed user, uint256 usdtAmount,uint256 tokenAmount);\n\n\n    constructor(\n        address _usdtAddress,\n        address _tokenAddress,\n        uint256 _exchangeRate,\n        uint256 _maxAmout\n    ) {\n        usdt = IERC20(_usdtAddress);\n        myToken = IERC20(_tokenAddress);\n        exchangeRate = _exchangeRate;\n        maxAmout = _maxAmout;\n        // owner = msg.sender;\n    }\n\n    // function buyToken(uint256 _usdtAmount) external {\n    //     // uint256 _usdtAmount = tokenAmount.div(exchangeRate);\n    //     uint256 tokenAmount = _usdtAmount * exchangeRate;\n    //     require(maxAmout >= myToken.balanceOf(msg.sender).add(tokenAmount),\"A single user cannot buy too many tokens\");\n    //     require(myToken.balanceOf(address(this))>=tokenAmount,\"The number of tokens that users need to purchase exceeds the number of tokens currently available for purchase\");\n    //     require(usdt.balanceOf(msg.sender) >= _usdtAmount, \"Not enough USDT\");\n    //     require(usdt.transferFrom(msg.sender, address(this), _usdtAmount),\"Transfer to address(this) failed\");\n    //     require(myToken.transfer(msg.sender, tokenAmount),\"Transfer to msg.sender failed\");\n    //     emit BuyToken(msg.sender, _usdtAmount,tokenAmount);\n    // }    \n    function buyToken(uint256 tokenAmount) external nonReentrant {\n        uint256 _usdtAmount = tokenAmount.div(exchangeRate);\n        // uint256 tokenAmount = _usdtAmount * exchangeRate;\n        require(maxAmout >= cumulativePurchase[msg.sender].add(tokenAmount),\"A single user cannot buy too many tokens\");\n        require(myToken.balanceOf(address(this))>=tokenAmount,\"The number of tokens that users want to purchase exceeds the number of tokens currently available for purchase\");\n        require(usdt.balanceOf(msg.sender) >= _usdtAmount, \"Not enough USDT\");\n        require(usdt.transferFrom(msg.sender, address(this), _usdtAmount),\"Transfer to contract failed\");\n        require(myToken.transfer(msg.sender, tokenAmount),\"Transfer to msg.sender failed\");\n        cumulativePurchase[msg.sender] = cumulativePurchase[msg.sender].add(tokenAmount);\n        emit BuyToken(msg.sender, _usdtAmount,tokenAmount);\n    }\n\n    // // 合约所有者可从合约中提取奖励\n    // function withdrawToken() external {\n    //     require(msg.sender == owner, \"Not authorized\");\n    //     require(myToken.transfer(msg.sender, myToken.balanceOf(address(this))),\"Withdraw token to msg.sender failed\");\n    // }\n\n    // 合约所有者可从合约中提取 USDT\n    function withdrawUSDT(uint256 amount) external onlyOwner{\n        require(usdt.balanceOf(address(this))>=amount,\"Amount is greater than the balance of contract\");\n        usdt.safeTransfer(owner(), usdt.balanceOf(address(this)));\n    }\n\n    // 更改兑换比例\n    function setExchangeRate(uint256 _exchangeRate) external onlyOwner{\n        exchangeRate = _exchangeRate;\n    }\n     // 更改每个用户的最大购买量\n    function setMaxAmout(uint256 _maxAmount) external onlyOwner{\n        maxAmout = _maxAmount;\n    }\n}"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0//contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        // solhint-disable-next-line max-line-length\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) { // Return data is optional\n            // solhint-disable-next-line max-line-length\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { size := extcodesize(account) }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n        (bool success, ) = recipient.call{ value: amount }(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain`call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n      return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 123,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"BuyToken.sol": {
				"TokenExchange": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_usdtAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_tokenAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_exchangeRate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_maxAmout",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "usdtAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								}
							],
							"name": "BuyToken",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								}
							],
							"name": "buyToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "cumulativePurchase",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "exchangeRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxAmout",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "myToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_exchangeRate",
									"type": "uint256"
								}
							],
							"name": "setExchangeRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_maxAmount",
									"type": "uint256"
								}
							],
							"name": "setMaxAmout",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "usdt",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawUSDT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"BuyToken.sol\":557:4087  contract TokenExchange is Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"BuyToken.sol\":1121:1442  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_9\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_10)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  dup1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"BuyToken.sol\":1282:1294  _usdtAddress */\n  dup4\n    /* \"BuyToken.sol\":1268:1272  usdt */\n  0x02\n  0x00\n    /* \"BuyToken.sol\":1268:1295  usdt = IERC20(_usdtAddress) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"BuyToken.sol\":1322:1335  _tokenAddress */\n  dup3\n    /* \"BuyToken.sol\":1305:1312  myToken */\n  0x03\n  0x00\n    /* \"BuyToken.sol\":1305:1336  myToken = IERC20(_tokenAddress) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"BuyToken.sol\":1361:1374  _exchangeRate */\n  dup2\n    /* \"BuyToken.sol\":1346:1358  exchangeRate */\n  0x04\n    /* \"BuyToken.sol\":1346:1374  exchangeRate = _exchangeRate */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"BuyToken.sol\":1395:1404  _maxAmout */\n  dup1\n    /* \"BuyToken.sol\":1384:1392  maxAmout */\n  0x05\n    /* \"BuyToken.sol\":1384:1404  maxAmout = _maxAmout */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"BuyToken.sol\":1121:1442  constructor(... */\n  pop\n  pop\n  pop\n  pop\n    /* \"BuyToken.sol\":557:4087  contract TokenExchange is Ownable, ReentrancyGuard {... */\n  jump(tag_14)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_10:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:150   */\ntag_18:\n    /* \"#utility.yul\":64:69   */\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_20\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_21\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":70:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:299   */\ntag_22:\n    /* \"#utility.yul\":213:218   */\n  0x00\n    /* \"#utility.yul\":244:250   */\n  dup2\n    /* \"#utility.yul\":238:251   */\n  mload\n    /* \"#utility.yul\":229:251   */\n  swap1\n  pop\n    /* \"#utility.yul\":260:293   */\n  tag_24\n    /* \"#utility.yul\":287:292   */\n  dup2\n    /* \"#utility.yul\":260:293   */\n  tag_25\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":219:299   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":305:1058   */\ntag_3:\n    /* \"#utility.yul\":402:408   */\n  0x00\n    /* \"#utility.yul\":410:416   */\n  dup1\n    /* \"#utility.yul\":418:424   */\n  0x00\n    /* \"#utility.yul\":426:432   */\n  dup1\n    /* \"#utility.yul\":475:478   */\n  0x80\n    /* \"#utility.yul\":463:472   */\n  dup6\n    /* \"#utility.yul\":454:461   */\n  dup8\n    /* \"#utility.yul\":450:473   */\n  sub\n    /* \"#utility.yul\":446:479   */\n  slt\n    /* \"#utility.yul\":443:445   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":492:493   */\n  0x00\n    /* \"#utility.yul\":489:490   */\n  dup1\n    /* \"#utility.yul\":482:494   */\n  revert\n    /* \"#utility.yul\":443:445   */\ntag_27:\n    /* \"#utility.yul\":535:536   */\n  0x00\n    /* \"#utility.yul\":560:624   */\n  tag_28\n    /* \"#utility.yul\":616:623   */\n  dup8\n    /* \"#utility.yul\":607:613   */\n  dup3\n    /* \"#utility.yul\":596:605   */\n  dup9\n    /* \"#utility.yul\":592:614   */\n  add\n    /* \"#utility.yul\":560:624   */\n  tag_18\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":550:624   */\n  swap5\n  pop\n    /* \"#utility.yul\":506:634   */\n  pop\n    /* \"#utility.yul\":673:675   */\n  0x20\n    /* \"#utility.yul\":699:763   */\n  tag_29\n    /* \"#utility.yul\":755:762   */\n  dup8\n    /* \"#utility.yul\":746:752   */\n  dup3\n    /* \"#utility.yul\":735:744   */\n  dup9\n    /* \"#utility.yul\":731:753   */\n  add\n    /* \"#utility.yul\":699:763   */\n  tag_18\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":689:763   */\n  swap4\n  pop\n    /* \"#utility.yul\":644:773   */\n  pop\n    /* \"#utility.yul\":812:814   */\n  0x40\n    /* \"#utility.yul\":838:902   */\n  tag_30\n    /* \"#utility.yul\":894:901   */\n  dup8\n    /* \"#utility.yul\":885:891   */\n  dup3\n    /* \"#utility.yul\":874:883   */\n  dup9\n    /* \"#utility.yul\":870:892   */\n  add\n    /* \"#utility.yul\":838:902   */\n  tag_22\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":828:902   */\n  swap3\n  pop\n    /* \"#utility.yul\":783:912   */\n  pop\n    /* \"#utility.yul\":951:953   */\n  0x60\n    /* \"#utility.yul\":977:1041   */\n  tag_31\n    /* \"#utility.yul\":1033:1040   */\n  dup8\n    /* \"#utility.yul\":1024:1030   */\n  dup3\n    /* \"#utility.yul\":1013:1022   */\n  dup9\n    /* \"#utility.yul\":1009:1031   */\n  add\n    /* \"#utility.yul\":977:1041   */\n  tag_22\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":967:1041   */\n  swap2\n  pop\n    /* \"#utility.yul\":922:1051   */\n  pop\n    /* \"#utility.yul\":433:1058   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1064:1160   */\ntag_32:\n    /* \"#utility.yul\":1101:1108   */\n  0x00\n    /* \"#utility.yul\":1130:1154   */\n  tag_34\n    /* \"#utility.yul\":1148:1153   */\n  dup3\n    /* \"#utility.yul\":1130:1154   */\n  tag_35\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":1119:1154   */\n  swap1\n  pop\n    /* \"#utility.yul\":1109:1160   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1166:1292   */\ntag_35:\n    /* \"#utility.yul\":1203:1210   */\n  0x00\n    /* \"#utility.yul\":1243:1285   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1236:1241   */\n  dup3\n    /* \"#utility.yul\":1232:1286   */\n  and\n    /* \"#utility.yul\":1221:1286   */\n  swap1\n  pop\n    /* \"#utility.yul\":1211:1292   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1298:1375   */\ntag_37:\n    /* \"#utility.yul\":1335:1342   */\n  0x00\n    /* \"#utility.yul\":1364:1369   */\n  dup2\n    /* \"#utility.yul\":1353:1369   */\n  swap1\n  pop\n    /* \"#utility.yul\":1343:1375   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1381:1503   */\ntag_21:\n    /* \"#utility.yul\":1454:1478   */\n  tag_40\n    /* \"#utility.yul\":1472:1477   */\n  dup2\n    /* \"#utility.yul\":1454:1478   */\n  tag_32\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1447:1452   */\n  dup2\n    /* \"#utility.yul\":1444:1479   */\n  eq\n    /* \"#utility.yul\":1434:1436   */\n  tag_41\n  jumpi\n    /* \"#utility.yul\":1493:1494   */\n  0x00\n    /* \"#utility.yul\":1490:1491   */\n  dup1\n    /* \"#utility.yul\":1483:1495   */\n  revert\n    /* \"#utility.yul\":1434:1436   */\ntag_41:\n    /* \"#utility.yul\":1424:1503   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1509:1631   */\ntag_25:\n    /* \"#utility.yul\":1582:1606   */\n  tag_43\n    /* \"#utility.yul\":1600:1605   */\n  dup2\n    /* \"#utility.yul\":1582:1606   */\n  tag_37\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1575:1580   */\n  dup2\n    /* \"#utility.yul\":1572:1607   */\n  eq\n    /* \"#utility.yul\":1562:1564   */\n  tag_44\n  jumpi\n    /* \"#utility.yul\":1621:1622   */\n  0x00\n    /* \"#utility.yul\":1618:1619   */\n  dup1\n    /* \"#utility.yul\":1611:1623   */\n  revert\n    /* \"#utility.yul\":1562:1564   */\ntag_44:\n    /* \"#utility.yul\":1552:1631   */\n  pop\n  jump\t// out\n    /* \"BuyToken.sol\":557:4087  contract TokenExchange is Ownable, ReentrancyGuard {... */\ntag_14:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"BuyToken.sol\":557:4087  contract TokenExchange is Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7a80d062\n      gt\n      tag_15\n      jumpi\n      dup1\n      0x7a80d062\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8d951832\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xb8fcf937\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdb068e0e\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_15:\n      dup1\n      0x2d296bf1\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2f48ab7d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3ba0b9a9\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x3ea521ef\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x65583cae\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"BuyToken.sol\":2303:3218  function buyToken(uint256 tokenAmount) external nonReentrant {... */\n    tag_3:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n    tag_16:\n      stop\n        /* \"BuyToken.sol\":678:696  IERC20 public usdt */\n    tag_4:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BuyToken.sol\":781:808  uint256 public exchangeRate */\n    tag_5:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BuyToken.sol\":3560:3795  function withdrawUSDT(uint256 amount) external onlyOwner{... */\n    tag_6:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_29:\n      tag_30\n      jump\t// in\n    tag_28:\n      stop\n        /* \"BuyToken.sol\":3988:4085  function setMaxAmout(uint256 _maxAmount) external onlyOwner{... */\n    tag_7:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_32:\n      tag_33\n      jump\t// in\n    tag_31:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_8:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      stop\n        /* \"BuyToken.sol\":947:1000  mapping(address => uint256) public cumulativePurchase */\n    tag_9:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BuyToken.sol\":878:901  uint256 public maxAmout */\n    tag_10:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_11:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BuyToken.sol\":723:744  IERC20 public myToken */\n    tag_12:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BuyToken.sol\":3827:3938  function setExchangeRate(uint256 _exchangeRate) external onlyOwner{... */\n    tag_13:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n    tag_51:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_14:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      stop\n        /* \"BuyToken.sol\":2303:3218  function buyToken(uint256 tokenAmount) external nonReentrant {... */\n    tag_19:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_58\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_59\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_58:\n        /* \"BuyToken.sol\":2374:2393  uint256 _usdtAmount */\n      0x00\n        /* \"BuyToken.sol\":2396:2425  tokenAmount.div(exchangeRate) */\n      tag_61\n        /* \"BuyToken.sol\":2412:2424  exchangeRate */\n      sload(0x04)\n        /* \"BuyToken.sol\":2396:2407  tokenAmount */\n      dup4\n        /* \"BuyToken.sol\":2396:2411  tokenAmount.div */\n      tag_62\n      swap1\n        /* \"BuyToken.sol\":2396:2425  tokenAmount.div(exchangeRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_61:\n        /* \"BuyToken.sol\":2374:2425  uint256 _usdtAmount = tokenAmount.div(exchangeRate) */\n      swap1\n      pop\n        /* \"BuyToken.sol\":2516:2563  cumulativePurchase[msg.sender].add(tokenAmount) */\n      tag_63\n        /* \"BuyToken.sol\":2551:2562  tokenAmount */\n      dup3\n        /* \"BuyToken.sol\":2516:2534  cumulativePurchase */\n      0x06\n        /* \"BuyToken.sol\":2516:2546  cumulativePurchase[msg.sender] */\n      0x00\n        /* \"BuyToken.sol\":2535:2545  msg.sender */\n      caller\n        /* \"BuyToken.sol\":2516:2546  cumulativePurchase[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"BuyToken.sol\":2516:2550  cumulativePurchase[msg.sender].add */\n      tag_64\n      swap1\n        /* \"BuyToken.sol\":2516:2563  cumulativePurchase[msg.sender].add(tokenAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_63:\n        /* \"BuyToken.sol\":2504:2512  maxAmout */\n      sload(0x05)\n        /* \"BuyToken.sol\":2504:2563  maxAmout >= cumulativePurchase[msg.sender].add(tokenAmount) */\n      lt\n      iszero\n        /* \"BuyToken.sol\":2496:2607  require(maxAmout >= cumulativePurchase[msg.sender].add(tokenAmount),\"A single user cannot buy too many tokens\") */\n      tag_65\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_66\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_65:\n        /* \"BuyToken.sol\":2659:2670  tokenAmount */\n      dup2\n        /* \"BuyToken.sol\":2625:2632  myToken */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BuyToken.sol\":2625:2642  myToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"BuyToken.sol\":2651:2655  this */\n      address\n        /* \"BuyToken.sol\":2625:2657  myToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_68\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_68:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_71\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_71:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n        /* \"BuyToken.sol\":2625:2670  myToken.balanceOf(address(this))>=tokenAmount */\n      lt\n      iszero\n        /* \"BuyToken.sol\":2617:2784  require(myToken.balanceOf(address(this))>=tokenAmount,\"The number of tokens that users want to purchase exceeds the number of tokens currently available for purchase\") */\n      tag_74\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_75\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_74:\n        /* \"BuyToken.sol\":2832:2843  _usdtAmount */\n      dup1\n        /* \"BuyToken.sol\":2802:2806  usdt */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BuyToken.sol\":2802:2816  usdt.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"BuyToken.sol\":2817:2827  msg.sender */\n      caller\n        /* \"BuyToken.sol\":2802:2828  usdt.balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_77\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_77:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_80\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_80:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_81:\n        /* \"BuyToken.sol\":2802:2843  usdt.balanceOf(msg.sender) >= _usdtAmount */\n      lt\n      iszero\n        /* \"BuyToken.sol\":2794:2863  require(usdt.balanceOf(msg.sender) >= _usdtAmount, \"Not enough USDT\") */\n      tag_82\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_83\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_82:\n        /* \"BuyToken.sol\":2881:2885  usdt */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BuyToken.sol\":2881:2898  usdt.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"BuyToken.sol\":2899:2909  msg.sender */\n      caller\n        /* \"BuyToken.sol\":2919:2923  this */\n      address\n        /* \"BuyToken.sol\":2926:2937  _usdtAmount */\n      dup5\n        /* \"BuyToken.sol\":2881:2938  usdt.transferFrom(msg.sender, address(this), _usdtAmount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_85\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_87\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_87:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_89\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_89:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_90\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n        /* \"BuyToken.sol\":2873:2969  require(usdt.transferFrom(msg.sender, address(this), _usdtAmount),\"Transfer to contract failed\") */\n      tag_92\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_92:\n        /* \"BuyToken.sol\":2987:2994  myToken */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BuyToken.sol\":2987:3003  myToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"BuyToken.sol\":3004:3014  msg.sender */\n      caller\n        /* \"BuyToken.sol\":3016:3027  tokenAmount */\n      dup5\n        /* \"BuyToken.sol\":2987:3028  myToken.transfer(msg.sender, tokenAmount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_95\n      swap3\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_97\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_97:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_99\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_99:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_100\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_100:\n        /* \"BuyToken.sol\":2979:3061  require(myToken.transfer(msg.sender, tokenAmount),\"Transfer to msg.sender failed\") */\n      tag_101\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_101:\n        /* \"BuyToken.sol\":3104:3151  cumulativePurchase[msg.sender].add(tokenAmount) */\n      tag_104\n        /* \"BuyToken.sol\":3139:3150  tokenAmount */\n      dup3\n        /* \"BuyToken.sol\":3104:3122  cumulativePurchase */\n      0x06\n        /* \"BuyToken.sol\":3104:3134  cumulativePurchase[msg.sender] */\n      0x00\n        /* \"BuyToken.sol\":3123:3133  msg.sender */\n      caller\n        /* \"BuyToken.sol\":3104:3134  cumulativePurchase[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"BuyToken.sol\":3104:3138  cumulativePurchase[msg.sender].add */\n      tag_64\n      swap1\n        /* \"BuyToken.sol\":3104:3151  cumulativePurchase[msg.sender].add(tokenAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_104:\n        /* \"BuyToken.sol\":3071:3089  cumulativePurchase */\n      0x06\n        /* \"BuyToken.sol\":3071:3101  cumulativePurchase[msg.sender] */\n      0x00\n        /* \"BuyToken.sol\":3090:3100  msg.sender */\n      caller\n        /* \"BuyToken.sol\":3071:3101  cumulativePurchase[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BuyToken.sol\":3071:3151  cumulativePurchase[msg.sender] = cumulativePurchase[msg.sender].add(tokenAmount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"BuyToken.sol\":3175:3185  msg.sender */\n      caller\n        /* \"BuyToken.sol\":3166:3211  BuyToken(msg.sender, _usdtAmount,tokenAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf6f342132c7de5e5a1e99c8efae544c94731f3ff093f5c3c97c6973d9415cdfb\n        /* \"BuyToken.sol\":3187:3198  _usdtAmount */\n      dup3\n        /* \"BuyToken.sol\":3199:3210  tokenAmount */\n      dup5\n        /* \"BuyToken.sol\":3166:3211  BuyToken(msg.sender, _usdtAmount,tokenAmount) */\n      mload(0x40)\n      tag_105\n      swap3\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2292:2293  _ */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_107\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_108\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_107:\n        /* \"BuyToken.sol\":2303:3218  function buyToken(uint256 tokenAmount) external nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"BuyToken.sol\":678:696  IERC20 public usdt */\n    tag_21:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"BuyToken.sol\":781:808  uint256 public exchangeRate */\n    tag_25:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"BuyToken.sol\":3560:3795  function withdrawUSDT(uint256 amount) external onlyOwner{... */\n    tag_30:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_110\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_111\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_110:\n        /* \"BuyToken.sol\":3665:3671  amount */\n      dup1\n        /* \"BuyToken.sol\":3634:3638  usdt */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BuyToken.sol\":3634:3648  usdt.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"BuyToken.sol\":3657:3661  this */\n      address\n        /* \"BuyToken.sol\":3634:3663  usdt.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_113:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_114\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_114:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_116\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_116:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_117\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_117:\n        /* \"BuyToken.sol\":3634:3671  usdt.balanceOf(address(this))>=amount */\n      lt\n      iszero\n        /* \"BuyToken.sol\":3626:3721  require(usdt.balanceOf(address(this))>=amount,\"Amount is greater than the balance of contract\") */\n      tag_118\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_119\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_118:\n        /* \"BuyToken.sol\":3731:3788  usdt.safeTransfer(owner(), usdt.balanceOf(address(this))) */\n      tag_121\n        /* \"BuyToken.sol\":3749:3756  owner() */\n      tag_122\n        /* \"BuyToken.sol\":3749:3754  owner */\n      tag_45\n        /* \"BuyToken.sol\":3749:3756  owner() */\n      jump\t// in\n    tag_122:\n        /* \"BuyToken.sol\":3758:3762  usdt */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BuyToken.sol\":3758:3772  usdt.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"BuyToken.sol\":3781:3785  this */\n      address\n        /* \"BuyToken.sol\":3758:3787  usdt.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_123:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_124\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_124:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_126\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_126:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_127\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_127:\n        /* \"BuyToken.sol\":3731:3735  usdt */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BuyToken.sol\":3731:3748  usdt.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_128\n      swap1\n        /* \"BuyToken.sol\":3731:3788  usdt.safeTransfer(owner(), usdt.balanceOf(address(this))) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_121:\n        /* \"BuyToken.sol\":3560:3795  function withdrawUSDT(uint256 amount) external onlyOwner{... */\n      pop\n      jump\t// out\n        /* \"BuyToken.sol\":3988:4085  function setMaxAmout(uint256 _maxAmount) external onlyOwner{... */\n    tag_33:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_130\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_111\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_130:\n        /* \"BuyToken.sol\":4068:4078  _maxAmount */\n      dup1\n        /* \"BuyToken.sol\":4057:4065  maxAmout */\n      0x05\n        /* \"BuyToken.sol\":4057:4078  maxAmout = _maxAmount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"BuyToken.sol\":3988:4085  function setMaxAmout(uint256 _maxAmount) external onlyOwner{... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_133\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_111\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_133:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_135\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_136\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_135:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"BuyToken.sol\":947:1000  mapping(address => uint256) public cumulativePurchase */\n    tag_39:\n      mstore(0x20, 0x06)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"BuyToken.sol\":878:901  uint256 public maxAmout */\n    tag_42:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"BuyToken.sol\":723:744  IERC20 public myToken */\n    tag_49:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"BuyToken.sol\":3827:3938  function setExchangeRate(uint256 _exchangeRate) external onlyOwner{... */\n    tag_53:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_139\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_111\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_139:\n        /* \"BuyToken.sol\":3918:3931  _exchangeRate */\n      dup1\n        /* \"BuyToken.sol\":3903:3915  exchangeRate */\n      0x04\n        /* \"BuyToken.sol\":3903:3931  exchangeRate = _exchangeRate */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"BuyToken.sol\":3827:3938  function setExchangeRate(uint256 _exchangeRate) external onlyOwner{... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_142\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_111\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_142:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2189:2190  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2177  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_144\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_145\n      swap1\n      tag_146\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_144:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_147\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_136\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_147:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_59:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_149\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_150\n      swap1\n      tag_151\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_149:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0//contracts/utils/math/SafeMath.sol\":3767:3863  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_62:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0//contracts/utils/math/SafeMath.sol\":3825:3832  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0//contracts/utils/math/SafeMath.sol\":3855:3856  b */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0//contracts/utils/math/SafeMath.sol\":3851:3852  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0//contracts/utils/math/SafeMath.sol\":3851:3856  a / b */\n      tag_153\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_153:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0//contracts/utils/math/SafeMath.sol\":3844:3856  return a / b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0//contracts/utils/math/SafeMath.sol\":3767:3863  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0//contracts/utils/math/SafeMath.sol\":2672:2768  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_64:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0//contracts/utils/math/SafeMath.sol\":2730:2737  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0//contracts/utils/math/SafeMath.sol\":2760:2761  b */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0//contracts/utils/math/SafeMath.sol\":2756:2757  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0//contracts/utils/math/SafeMath.sol\":2756:2761  a + b */\n      tag_156\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_156:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0//contracts/utils/math/SafeMath.sol\":2749:2761  return a + b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0//contracts/utils/math/SafeMath.sol\":2672:2768  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      dup1\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_111:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_160\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_161\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_160:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      tag_162\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1427  owner */\n      tag_45\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_162:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_163\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_164\n      swap1\n      tag_165\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_163:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/token/ERC20/utils/SafeERC20.sol\":634:809  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_128:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/token/ERC20/utils/SafeERC20.sol\":716:802  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_167\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/token/ERC20/utils/SafeERC20.sol\":736:741  token */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/token/ERC20/utils/SafeERC20.sol\":766:789  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/token/ERC20/utils/SafeERC20.sol\":791:793  to */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/token/ERC20/utils/SafeERC20.sol\":795:800  value */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/token/ERC20/utils/SafeERC20.sol\":743:801  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_168\n      swap3\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/token/ERC20/utils/SafeERC20.sol\":716:735  _callOptionalReturn */\n      tag_169\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/token/ERC20/utils/SafeERC20.sol\":716:802  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_167:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/token/ERC20/utils/SafeERC20.sol\":634:809  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_136:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_161:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/token/ERC20/utils/SafeERC20.sol\":3022:3773  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_169:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/token/ERC20/utils/SafeERC20.sol\":3441:3464  bytes memory returndata */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/token/ERC20/utils/SafeERC20.sol\":3467:3536  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_173\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/token/ERC20/utils/SafeERC20.sol\":3495:3499  data */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/token/ERC20/utils/SafeERC20.sol\":3467:3536  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/token/ERC20/utils/SafeERC20.sol\":3475:3480  token */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/token/ERC20/utils/SafeERC20.sol\":3467:3494  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_174\n      swap1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/token/ERC20/utils/SafeERC20.sol\":3467:3536  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_173:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/token/ERC20/utils/SafeERC20.sol\":3441:3536  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/token/ERC20/utils/SafeERC20.sol\":3570:3571  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/token/ERC20/utils/SafeERC20.sol\":3550:3560  returndata */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/token/ERC20/utils/SafeERC20.sol\":3550:3567  returndata.length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/token/ERC20/utils/SafeERC20.sol\":3550:3571  returndata.length > 0 */\n      gt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/token/ERC20/utils/SafeERC20.sol\":3546:3767  if (returndata.length > 0) { // Return data is optional... */\n      iszero\n      tag_175\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/token/ERC20/utils/SafeERC20.sol\":3690:3700  returndata */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/token/ERC20/utils/SafeERC20.sol\":3679:3709  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_176\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_176:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/token/ERC20/utils/SafeERC20.sol\":3671:3756  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_177\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap1\n      tag_179\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_177:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/token/ERC20/utils/SafeERC20.sol\":3546:3767  if (returndata.length > 0) { // Return data is optional... */\n    tag_175:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/token/ERC20/utils/SafeERC20.sol\":3022:3773  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":3573:3766  function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {... */\n    tag_174:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":3676:3688  bytes memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":3707:3759  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_181\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":3729:3735  target */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":3737:3741  data */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":3743:3744  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":3746:3758  errorMessage */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":3707:3728  functionCallWithValue */\n      tag_182\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":3707:3759  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_181:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":3700:3759  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":3573:3766  function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":4600:5123  function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {... */\n    tag_182:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":4727:4739  bytes memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":4784:4789  value */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":4759:4780  address(this).balance */\n      selfbalance\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":4759:4789  address(this).balance >= value */\n      lt\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":4751:4832  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_184\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap1\n      tag_186\n      jump\t// in\n    tag_185:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_184:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":4850:4868  isContract(target) */\n      tag_187\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":4861:4867  target */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":4850:4860  isContract */\n      tag_188\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":4850:4868  isContract(target) */\n      jump\t// in\n    tag_187:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":4842:4902  require(isContract(target), \"Address: call to non-contract\") */\n      tag_189\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_190\n      swap1\n      tag_191\n      jump\t// in\n    tag_190:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_189:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":4973:4985  bool success */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":4987:5010  bytes memory returndata */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":5014:5020  target */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":5014:5025  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":5034:5039  value */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":5042:5046  data */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":5014:5047  target.call{ value: value }(data) */\n      mload(0x40)\n      tag_192\n      swap2\n      swap1\n      tag_193\n      jump\t// in\n    tag_192:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_196\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_195)\n    tag_196:\n      0x60\n      swap2\n      pop\n    tag_195:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":4972:5047  (bool success, bytes memory returndata) = target.call{ value: value }(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":5064:5116  _verifyCallResult(success, returndata, errorMessage) */\n      tag_197\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":5082:5089  success */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":5091:5101  returndata */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":5103:5115  errorMessage */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":5064:5081  _verifyCallResult */\n      tag_198\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":5064:5116  _verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_197:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":5057:5116  return _verifyCallResult(success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":4600:5123  function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":718:1131  function isContract(address account) internal view returns (bool) {... */\n    tag_188:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":778:782  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":981:993  uint256 size */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":1090:1097  account */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":1078:1098  extcodesize(account) */\n      extcodesize\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":1070:1098  size := extcodesize(account) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":1123:1124  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":1116:1120  size */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":1116:1124  size > 0 */\n      gt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":1109:1124  return size > 0 */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":718:1131  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":7083:7808  function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {... */\n    tag_198:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":7198:7210  bytes memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":7226:7233  success */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":7222:7802  if (success) {... */\n      iszero\n      tag_201\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":7256:7266  returndata */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":7249:7266  return returndata */\n      swap1\n      pop\n      jump(tag_200)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":7222:7802  if (success) {... */\n    tag_201:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":7387:7388  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":7367:7377  returndata */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":7367:7384  returndata.length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":7367:7388  returndata.length > 0 */\n      gt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":7363:7792  if (returndata.length > 0) {... */\n      iszero\n      tag_203\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":7625:7635  returndata */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":7619:7636  mload(returndata) */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":7685:7700  returndata_size */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":7672:7682  returndata */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":7668:7670  32 */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":7664:7683  add(32, returndata) */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":7657:7701  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":7574:7719  {... */\n    tag_203:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":7764:7776  errorMessage */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":7757:7777  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_205\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n    tag_205:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":7083:7808  function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {... */\n    tag_200:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_208:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_210\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_211\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":59:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:289   */\n    tag_212:\n        /* \"#utility.yul\":206:211   */\n      0x00\n        /* \"#utility.yul\":237:243   */\n      dup2\n        /* \"#utility.yul\":231:244   */\n      mload\n        /* \"#utility.yul\":222:244   */\n      swap1\n      pop\n        /* \"#utility.yul\":253:283   */\n      tag_214\n        /* \"#utility.yul\":277:282   */\n      dup2\n        /* \"#utility.yul\":253:283   */\n      tag_215\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":212:289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":295:434   */\n    tag_216:\n        /* \"#utility.yul\":341:346   */\n      0x00\n        /* \"#utility.yul\":379:385   */\n      dup2\n        /* \"#utility.yul\":366:386   */\n      calldataload\n        /* \"#utility.yul\":357:386   */\n      swap1\n      pop\n        /* \"#utility.yul\":395:428   */\n      tag_218\n        /* \"#utility.yul\":422:427   */\n      dup2\n        /* \"#utility.yul\":395:428   */\n      tag_219\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":347:434   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":440:583   */\n    tag_220:\n        /* \"#utility.yul\":497:502   */\n      0x00\n        /* \"#utility.yul\":528:534   */\n      dup2\n        /* \"#utility.yul\":522:535   */\n      mload\n        /* \"#utility.yul\":513:535   */\n      swap1\n      pop\n        /* \"#utility.yul\":544:577   */\n      tag_222\n        /* \"#utility.yul\":571:576   */\n      dup2\n        /* \"#utility.yul\":544:577   */\n      tag_219\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":503:583   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":589:851   */\n    tag_38:\n        /* \"#utility.yul\":648:654   */\n      0x00\n        /* \"#utility.yul\":697:699   */\n      0x20\n        /* \"#utility.yul\":685:694   */\n      dup3\n        /* \"#utility.yul\":676:683   */\n      dup5\n        /* \"#utility.yul\":672:695   */\n      sub\n        /* \"#utility.yul\":668:700   */\n      slt\n        /* \"#utility.yul\":665:667   */\n      iszero\n      tag_224\n      jumpi\n        /* \"#utility.yul\":713:714   */\n      0x00\n        /* \"#utility.yul\":710:711   */\n      dup1\n        /* \"#utility.yul\":703:715   */\n      revert\n        /* \"#utility.yul\":665:667   */\n    tag_224:\n        /* \"#utility.yul\":756:757   */\n      0x00\n        /* \"#utility.yul\":781:834   */\n      tag_225\n        /* \"#utility.yul\":826:833   */\n      dup5\n        /* \"#utility.yul\":817:823   */\n      dup3\n        /* \"#utility.yul\":806:815   */\n      dup6\n        /* \"#utility.yul\":802:824   */\n      add\n        /* \"#utility.yul\":781:834   */\n      tag_208\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":771:834   */\n      swap2\n      pop\n        /* \"#utility.yul\":727:844   */\n      pop\n        /* \"#utility.yul\":655:851   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":857:1135   */\n    tag_91:\n        /* \"#utility.yul\":924:930   */\n      0x00\n        /* \"#utility.yul\":973:975   */\n      0x20\n        /* \"#utility.yul\":961:970   */\n      dup3\n        /* \"#utility.yul\":952:959   */\n      dup5\n        /* \"#utility.yul\":948:971   */\n      sub\n        /* \"#utility.yul\":944:976   */\n      slt\n        /* \"#utility.yul\":941:943   */\n      iszero\n      tag_227\n      jumpi\n        /* \"#utility.yul\":989:990   */\n      0x00\n        /* \"#utility.yul\":986:987   */\n      dup1\n        /* \"#utility.yul\":979:991   */\n      revert\n        /* \"#utility.yul\":941:943   */\n    tag_227:\n        /* \"#utility.yul\":1032:1033   */\n      0x00\n        /* \"#utility.yul\":1057:1118   */\n      tag_228\n        /* \"#utility.yul\":1110:1117   */\n      dup5\n        /* \"#utility.yul\":1101:1107   */\n      dup3\n        /* \"#utility.yul\":1090:1099   */\n      dup6\n        /* \"#utility.yul\":1086:1108   */\n      add\n        /* \"#utility.yul\":1057:1118   */\n      tag_212\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":1047:1118   */\n      swap2\n      pop\n        /* \"#utility.yul\":1003:1128   */\n      pop\n        /* \"#utility.yul\":931:1135   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1141:1403   */\n    tag_18:\n        /* \"#utility.yul\":1200:1206   */\n      0x00\n        /* \"#utility.yul\":1249:1251   */\n      0x20\n        /* \"#utility.yul\":1237:1246   */\n      dup3\n        /* \"#utility.yul\":1228:1235   */\n      dup5\n        /* \"#utility.yul\":1224:1247   */\n      sub\n        /* \"#utility.yul\":1220:1252   */\n      slt\n        /* \"#utility.yul\":1217:1219   */\n      iszero\n      tag_230\n      jumpi\n        /* \"#utility.yul\":1265:1266   */\n      0x00\n        /* \"#utility.yul\":1262:1263   */\n      dup1\n        /* \"#utility.yul\":1255:1267   */\n      revert\n        /* \"#utility.yul\":1217:1219   */\n    tag_230:\n        /* \"#utility.yul\":1308:1309   */\n      0x00\n        /* \"#utility.yul\":1333:1386   */\n      tag_231\n        /* \"#utility.yul\":1378:1385   */\n      dup5\n        /* \"#utility.yul\":1369:1375   */\n      dup3\n        /* \"#utility.yul\":1358:1367   */\n      dup6\n        /* \"#utility.yul\":1354:1376   */\n      add\n        /* \"#utility.yul\":1333:1386   */\n      tag_216\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":1323:1386   */\n      swap2\n      pop\n        /* \"#utility.yul\":1279:1396   */\n      pop\n        /* \"#utility.yul\":1207:1403   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1409:1693   */\n    tag_73:\n        /* \"#utility.yul\":1479:1485   */\n      0x00\n        /* \"#utility.yul\":1528:1530   */\n      0x20\n        /* \"#utility.yul\":1516:1525   */\n      dup3\n        /* \"#utility.yul\":1507:1514   */\n      dup5\n        /* \"#utility.yul\":1503:1526   */\n      sub\n        /* \"#utility.yul\":1499:1531   */\n      slt\n        /* \"#utility.yul\":1496:1498   */\n      iszero\n      tag_233\n      jumpi\n        /* \"#utility.yul\":1544:1545   */\n      0x00\n        /* \"#utility.yul\":1541:1542   */\n      dup1\n        /* \"#utility.yul\":1534:1546   */\n      revert\n        /* \"#utility.yul\":1496:1498   */\n    tag_233:\n        /* \"#utility.yul\":1587:1588   */\n      0x00\n        /* \"#utility.yul\":1612:1676   */\n      tag_234\n        /* \"#utility.yul\":1668:1675   */\n      dup5\n        /* \"#utility.yul\":1659:1665   */\n      dup3\n        /* \"#utility.yul\":1648:1657   */\n      dup6\n        /* \"#utility.yul\":1644:1666   */\n      add\n        /* \"#utility.yul\":1612:1676   */\n      tag_220\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":1602:1676   */\n      swap2\n      pop\n        /* \"#utility.yul\":1558:1686   */\n      pop\n        /* \"#utility.yul\":1486:1693   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1699:1817   */\n    tag_235:\n        /* \"#utility.yul\":1786:1810   */\n      tag_237\n        /* \"#utility.yul\":1804:1809   */\n      dup2\n        /* \"#utility.yul\":1786:1810   */\n      tag_238\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":1781:1784   */\n      dup3\n        /* \"#utility.yul\":1774:1811   */\n      mstore\n        /* \"#utility.yul\":1764:1817   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1823:2196   */\n    tag_239:\n        /* \"#utility.yul\":1927:1930   */\n      0x00\n        /* \"#utility.yul\":1955:1993   */\n      tag_241\n        /* \"#utility.yul\":1987:1992   */\n      dup3\n        /* \"#utility.yul\":1955:1993   */\n      tag_242\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":2009:2097   */\n      tag_243\n        /* \"#utility.yul\":2090:2096   */\n      dup2\n        /* \"#utility.yul\":2085:2088   */\n      dup6\n        /* \"#utility.yul\":2009:2097   */\n      tag_244\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":2002:2097   */\n      swap4\n      pop\n        /* \"#utility.yul\":2106:2158   */\n      tag_245\n        /* \"#utility.yul\":2151:2157   */\n      dup2\n        /* \"#utility.yul\":2146:2149   */\n      dup6\n        /* \"#utility.yul\":2139:2143   */\n      0x20\n        /* \"#utility.yul\":2132:2137   */\n      dup7\n        /* \"#utility.yul\":2128:2144   */\n      add\n        /* \"#utility.yul\":2106:2158   */\n      tag_246\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":2183:2189   */\n      dup1\n        /* \"#utility.yul\":2178:2181   */\n      dup5\n        /* \"#utility.yul\":2174:2190   */\n      add\n        /* \"#utility.yul\":2167:2190   */\n      swap2\n      pop\n        /* \"#utility.yul\":1931:2196   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2202:2361   */\n    tag_247:\n        /* \"#utility.yul\":2303:2354   */\n      tag_249\n        /* \"#utility.yul\":2348:2353   */\n      dup2\n        /* \"#utility.yul\":2303:2354   */\n      tag_250\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":2298:2301   */\n      dup3\n        /* \"#utility.yul\":2291:2355   */\n      mstore\n        /* \"#utility.yul\":2281:2361   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2367:2731   */\n    tag_251:\n        /* \"#utility.yul\":2455:2458   */\n      0x00\n        /* \"#utility.yul\":2483:2522   */\n      tag_253\n        /* \"#utility.yul\":2516:2521   */\n      dup3\n        /* \"#utility.yul\":2483:2522   */\n      tag_254\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":2538:2609   */\n      tag_255\n        /* \"#utility.yul\":2602:2608   */\n      dup2\n        /* \"#utility.yul\":2597:2600   */\n      dup6\n        /* \"#utility.yul\":2538:2609   */\n      tag_256\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":2531:2609   */\n      swap4\n      pop\n        /* \"#utility.yul\":2618:2670   */\n      tag_257\n        /* \"#utility.yul\":2663:2669   */\n      dup2\n        /* \"#utility.yul\":2658:2661   */\n      dup6\n        /* \"#utility.yul\":2651:2655   */\n      0x20\n        /* \"#utility.yul\":2644:2649   */\n      dup7\n        /* \"#utility.yul\":2640:2656   */\n      add\n        /* \"#utility.yul\":2618:2670   */\n      tag_246\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":2695:2724   */\n      tag_258\n        /* \"#utility.yul\":2717:2723   */\n      dup2\n        /* \"#utility.yul\":2695:2724   */\n      tag_259\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":2690:2693   */\n      dup5\n        /* \"#utility.yul\":2686:2725   */\n      add\n        /* \"#utility.yul\":2679:2725   */\n      swap2\n      pop\n        /* \"#utility.yul\":2459:2731   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2737:3103   */\n    tag_260:\n        /* \"#utility.yul\":2879:2882   */\n      0x00\n        /* \"#utility.yul\":2900:2967   */\n      tag_262\n        /* \"#utility.yul\":2964:2966   */\n      0x2e\n        /* \"#utility.yul\":2959:2962   */\n      dup4\n        /* \"#utility.yul\":2900:2967   */\n      tag_256\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":2893:2967   */\n      swap2\n      pop\n        /* \"#utility.yul\":2976:3069   */\n      tag_263\n        /* \"#utility.yul\":3065:3068   */\n      dup3\n        /* \"#utility.yul\":2976:3069   */\n      tag_264\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":3094:3096   */\n      0x40\n        /* \"#utility.yul\":3089:3092   */\n      dup3\n        /* \"#utility.yul\":3085:3097   */\n      add\n        /* \"#utility.yul\":3078:3097   */\n      swap1\n      pop\n        /* \"#utility.yul\":2883:3103   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3109:3475   */\n    tag_265:\n        /* \"#utility.yul\":3251:3254   */\n      0x00\n        /* \"#utility.yul\":3272:3339   */\n      tag_267\n        /* \"#utility.yul\":3336:3338   */\n      0x26\n        /* \"#utility.yul\":3331:3334   */\n      dup4\n        /* \"#utility.yul\":3272:3339   */\n      tag_256\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":3265:3339   */\n      swap2\n      pop\n        /* \"#utility.yul\":3348:3441   */\n      tag_268\n        /* \"#utility.yul\":3437:3440   */\n      dup3\n        /* \"#utility.yul\":3348:3441   */\n      tag_269\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":3466:3468   */\n      0x40\n        /* \"#utility.yul\":3461:3464   */\n      dup3\n        /* \"#utility.yul\":3457:3469   */\n      add\n        /* \"#utility.yul\":3450:3469   */\n      swap1\n      pop\n        /* \"#utility.yul\":3255:3475   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3481:3847   */\n    tag_270:\n        /* \"#utility.yul\":3623:3626   */\n      0x00\n        /* \"#utility.yul\":3644:3711   */\n      tag_272\n        /* \"#utility.yul\":3708:3710   */\n      0x0f\n        /* \"#utility.yul\":3703:3706   */\n      dup4\n        /* \"#utility.yul\":3644:3711   */\n      tag_256\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":3637:3711   */\n      swap2\n      pop\n        /* \"#utility.yul\":3720:3813   */\n      tag_273\n        /* \"#utility.yul\":3809:3812   */\n      dup3\n        /* \"#utility.yul\":3720:3813   */\n      tag_274\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":3838:3840   */\n      0x20\n        /* \"#utility.yul\":3833:3836   */\n      dup3\n        /* \"#utility.yul\":3829:3841   */\n      add\n        /* \"#utility.yul\":3822:3841   */\n      swap1\n      pop\n        /* \"#utility.yul\":3627:3847   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3853:4219   */\n    tag_275:\n        /* \"#utility.yul\":3995:3998   */\n      0x00\n        /* \"#utility.yul\":4016:4083   */\n      tag_277\n        /* \"#utility.yul\":4080:4082   */\n      0x26\n        /* \"#utility.yul\":4075:4078   */\n      dup4\n        /* \"#utility.yul\":4016:4083   */\n      tag_256\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":4009:4083   */\n      swap2\n      pop\n        /* \"#utility.yul\":4092:4185   */\n      tag_278\n        /* \"#utility.yul\":4181:4184   */\n      dup3\n        /* \"#utility.yul\":4092:4185   */\n      tag_279\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":4210:4212   */\n      0x40\n        /* \"#utility.yul\":4205:4208   */\n      dup3\n        /* \"#utility.yul\":4201:4213   */\n      add\n        /* \"#utility.yul\":4194:4213   */\n      swap1\n      pop\n        /* \"#utility.yul\":3999:4219   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4225:4593   */\n    tag_280:\n        /* \"#utility.yul\":4367:4370   */\n      0x00\n        /* \"#utility.yul\":4388:4456   */\n      tag_282\n        /* \"#utility.yul\":4452:4455   */\n      0x6e\n        /* \"#utility.yul\":4447:4450   */\n      dup4\n        /* \"#utility.yul\":4388:4456   */\n      tag_256\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":4381:4456   */\n      swap2\n      pop\n        /* \"#utility.yul\":4465:4558   */\n      tag_283\n        /* \"#utility.yul\":4554:4557   */\n      dup3\n        /* \"#utility.yul\":4465:4558   */\n      tag_284\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":4583:4586   */\n      0x80\n        /* \"#utility.yul\":4578:4581   */\n      dup3\n        /* \"#utility.yul\":4574:4587   */\n      add\n        /* \"#utility.yul\":4567:4587   */\n      swap1\n      pop\n        /* \"#utility.yul\":4371:4593   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4599:4965   */\n    tag_285:\n        /* \"#utility.yul\":4741:4744   */\n      0x00\n        /* \"#utility.yul\":4762:4829   */\n      tag_287\n        /* \"#utility.yul\":4826:4828   */\n      0x20\n        /* \"#utility.yul\":4821:4824   */\n      dup4\n        /* \"#utility.yul\":4762:4829   */\n      tag_256\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":4755:4829   */\n      swap2\n      pop\n        /* \"#utility.yul\":4838:4931   */\n      tag_288\n        /* \"#utility.yul\":4927:4930   */\n      dup3\n        /* \"#utility.yul\":4838:4931   */\n      tag_289\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":4956:4958   */\n      0x20\n        /* \"#utility.yul\":4951:4954   */\n      dup3\n        /* \"#utility.yul\":4947:4959   */\n      add\n        /* \"#utility.yul\":4940:4959   */\n      swap1\n      pop\n        /* \"#utility.yul\":4745:4965   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4971:5337   */\n    tag_290:\n        /* \"#utility.yul\":5113:5116   */\n      0x00\n        /* \"#utility.yul\":5134:5201   */\n      tag_292\n        /* \"#utility.yul\":5198:5200   */\n      0x1d\n        /* \"#utility.yul\":5193:5196   */\n      dup4\n        /* \"#utility.yul\":5134:5201   */\n      tag_256\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":5127:5201   */\n      swap2\n      pop\n        /* \"#utility.yul\":5210:5303   */\n      tag_293\n        /* \"#utility.yul\":5299:5302   */\n      dup3\n        /* \"#utility.yul\":5210:5303   */\n      tag_294\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":5328:5330   */\n      0x20\n        /* \"#utility.yul\":5323:5326   */\n      dup3\n        /* \"#utility.yul\":5319:5331   */\n      add\n        /* \"#utility.yul\":5312:5331   */\n      swap1\n      pop\n        /* \"#utility.yul\":5117:5337   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5343:5709   */\n    tag_295:\n        /* \"#utility.yul\":5485:5488   */\n      0x00\n        /* \"#utility.yul\":5506:5573   */\n      tag_297\n        /* \"#utility.yul\":5570:5572   */\n      0x1d\n        /* \"#utility.yul\":5565:5568   */\n      dup4\n        /* \"#utility.yul\":5506:5573   */\n      tag_256\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":5499:5573   */\n      swap2\n      pop\n        /* \"#utility.yul\":5582:5675   */\n      tag_298\n        /* \"#utility.yul\":5671:5674   */\n      dup3\n        /* \"#utility.yul\":5582:5675   */\n      tag_299\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":5700:5702   */\n      0x20\n        /* \"#utility.yul\":5695:5698   */\n      dup3\n        /* \"#utility.yul\":5691:5703   */\n      add\n        /* \"#utility.yul\":5684:5703   */\n      swap1\n      pop\n        /* \"#utility.yul\":5489:5709   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5715:6081   */\n    tag_300:\n        /* \"#utility.yul\":5857:5860   */\n      0x00\n        /* \"#utility.yul\":5878:5945   */\n      tag_302\n        /* \"#utility.yul\":5942:5944   */\n      0x2a\n        /* \"#utility.yul\":5937:5940   */\n      dup4\n        /* \"#utility.yul\":5878:5945   */\n      tag_256\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":5871:5945   */\n      swap2\n      pop\n        /* \"#utility.yul\":5954:6047   */\n      tag_303\n        /* \"#utility.yul\":6043:6046   */\n      dup3\n        /* \"#utility.yul\":5954:6047   */\n      tag_304\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":6072:6074   */\n      0x40\n        /* \"#utility.yul\":6067:6070   */\n      dup3\n        /* \"#utility.yul\":6063:6075   */\n      add\n        /* \"#utility.yul\":6056:6075   */\n      swap1\n      pop\n        /* \"#utility.yul\":5861:6081   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6087:6453   */\n    tag_305:\n        /* \"#utility.yul\":6229:6232   */\n      0x00\n        /* \"#utility.yul\":6250:6317   */\n      tag_307\n        /* \"#utility.yul\":6314:6316   */\n      0x28\n        /* \"#utility.yul\":6309:6312   */\n      dup4\n        /* \"#utility.yul\":6250:6317   */\n      tag_256\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":6243:6317   */\n      swap2\n      pop\n        /* \"#utility.yul\":6326:6419   */\n      tag_308\n        /* \"#utility.yul\":6415:6418   */\n      dup3\n        /* \"#utility.yul\":6326:6419   */\n      tag_309\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":6444:6446   */\n      0x40\n        /* \"#utility.yul\":6439:6442   */\n      dup3\n        /* \"#utility.yul\":6435:6447   */\n      add\n        /* \"#utility.yul\":6428:6447   */\n      swap1\n      pop\n        /* \"#utility.yul\":6233:6453   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6459:6825   */\n    tag_310:\n        /* \"#utility.yul\":6601:6604   */\n      0x00\n        /* \"#utility.yul\":6622:6689   */\n      tag_312\n        /* \"#utility.yul\":6686:6688   */\n      0x1f\n        /* \"#utility.yul\":6681:6684   */\n      dup4\n        /* \"#utility.yul\":6622:6689   */\n      tag_256\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":6615:6689   */\n      swap2\n      pop\n        /* \"#utility.yul\":6698:6791   */\n      tag_313\n        /* \"#utility.yul\":6787:6790   */\n      dup3\n        /* \"#utility.yul\":6698:6791   */\n      tag_314\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":6816:6818   */\n      0x20\n        /* \"#utility.yul\":6811:6814   */\n      dup3\n        /* \"#utility.yul\":6807:6819   */\n      add\n        /* \"#utility.yul\":6800:6819   */\n      swap1\n      pop\n        /* \"#utility.yul\":6605:6825   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6831:7197   */\n    tag_315:\n        /* \"#utility.yul\":6973:6976   */\n      0x00\n        /* \"#utility.yul\":6994:7061   */\n      tag_317\n        /* \"#utility.yul\":7058:7060   */\n      0x1b\n        /* \"#utility.yul\":7053:7056   */\n      dup4\n        /* \"#utility.yul\":6994:7061   */\n      tag_256\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":6987:7061   */\n      swap2\n      pop\n        /* \"#utility.yul\":7070:7163   */\n      tag_318\n        /* \"#utility.yul\":7159:7162   */\n      dup3\n        /* \"#utility.yul\":7070:7163   */\n      tag_319\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":7188:7190   */\n      0x20\n        /* \"#utility.yul\":7183:7186   */\n      dup3\n        /* \"#utility.yul\":7179:7191   */\n      add\n        /* \"#utility.yul\":7172:7191   */\n      swap1\n      pop\n        /* \"#utility.yul\":6977:7197   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7203:7321   */\n    tag_320:\n        /* \"#utility.yul\":7290:7314   */\n      tag_322\n        /* \"#utility.yul\":7308:7313   */\n      dup2\n        /* \"#utility.yul\":7290:7314   */\n      tag_323\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":7285:7288   */\n      dup3\n        /* \"#utility.yul\":7278:7315   */\n      mstore\n        /* \"#utility.yul\":7268:7321   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7327:7598   */\n    tag_193:\n        /* \"#utility.yul\":7457:7460   */\n      0x00\n        /* \"#utility.yul\":7479:7572   */\n      tag_325\n        /* \"#utility.yul\":7568:7571   */\n      dup3\n        /* \"#utility.yul\":7559:7565   */\n      dup5\n        /* \"#utility.yul\":7479:7572   */\n      tag_239\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":7472:7572   */\n      swap2\n      pop\n        /* \"#utility.yul\":7589:7592   */\n      dup2\n        /* \"#utility.yul\":7582:7592   */\n      swap1\n      pop\n        /* \"#utility.yul\":7461:7598   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7604:7826   */\n    tag_47:\n        /* \"#utility.yul\":7697:7701   */\n      0x00\n        /* \"#utility.yul\":7735:7737   */\n      0x20\n        /* \"#utility.yul\":7724:7733   */\n      dup3\n        /* \"#utility.yul\":7720:7738   */\n      add\n        /* \"#utility.yul\":7712:7738   */\n      swap1\n      pop\n        /* \"#utility.yul\":7748:7819   */\n      tag_327\n        /* \"#utility.yul\":7816:7817   */\n      0x00\n        /* \"#utility.yul\":7805:7814   */\n      dup4\n        /* \"#utility.yul\":7801:7818   */\n      add\n        /* \"#utility.yul\":7792:7798   */\n      dup5\n        /* \"#utility.yul\":7748:7819   */\n      tag_235\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":7702:7826   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7832:8274   */\n    tag_86:\n        /* \"#utility.yul\":7981:7985   */\n      0x00\n        /* \"#utility.yul\":8019:8021   */\n      0x60\n        /* \"#utility.yul\":8008:8017   */\n      dup3\n        /* \"#utility.yul\":8004:8022   */\n      add\n        /* \"#utility.yul\":7996:8022   */\n      swap1\n      pop\n        /* \"#utility.yul\":8032:8103   */\n      tag_329\n        /* \"#utility.yul\":8100:8101   */\n      0x00\n        /* \"#utility.yul\":8089:8098   */\n      dup4\n        /* \"#utility.yul\":8085:8102   */\n      add\n        /* \"#utility.yul\":8076:8082   */\n      dup7\n        /* \"#utility.yul\":8032:8103   */\n      tag_235\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":8113:8185   */\n      tag_330\n        /* \"#utility.yul\":8181:8183   */\n      0x20\n        /* \"#utility.yul\":8170:8179   */\n      dup4\n        /* \"#utility.yul\":8166:8184   */\n      add\n        /* \"#utility.yul\":8157:8163   */\n      dup6\n        /* \"#utility.yul\":8113:8185   */\n      tag_235\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":8195:8267   */\n      tag_331\n        /* \"#utility.yul\":8263:8265   */\n      0x40\n        /* \"#utility.yul\":8252:8261   */\n      dup4\n        /* \"#utility.yul\":8248:8266   */\n      add\n        /* \"#utility.yul\":8239:8245   */\n      dup5\n        /* \"#utility.yul\":8195:8267   */\n      tag_320\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":7986:8274   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8280:8612   */\n    tag_96:\n        /* \"#utility.yul\":8401:8405   */\n      0x00\n        /* \"#utility.yul\":8439:8441   */\n      0x40\n        /* \"#utility.yul\":8428:8437   */\n      dup3\n        /* \"#utility.yul\":8424:8442   */\n      add\n        /* \"#utility.yul\":8416:8442   */\n      swap1\n      pop\n        /* \"#utility.yul\":8452:8523   */\n      tag_333\n        /* \"#utility.yul\":8520:8521   */\n      0x00\n        /* \"#utility.yul\":8509:8518   */\n      dup4\n        /* \"#utility.yul\":8505:8522   */\n      add\n        /* \"#utility.yul\":8496:8502   */\n      dup6\n        /* \"#utility.yul\":8452:8523   */\n      tag_235\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":8533:8605   */\n      tag_334\n        /* \"#utility.yul\":8601:8603   */\n      0x20\n        /* \"#utility.yul\":8590:8599   */\n      dup4\n        /* \"#utility.yul\":8586:8604   */\n      add\n        /* \"#utility.yul\":8577:8583   */\n      dup5\n        /* \"#utility.yul\":8533:8605   */\n      tag_320\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":8406:8612   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8618:8868   */\n    tag_23:\n        /* \"#utility.yul\":8725:8729   */\n      0x00\n        /* \"#utility.yul\":8763:8765   */\n      0x20\n        /* \"#utility.yul\":8752:8761   */\n      dup3\n        /* \"#utility.yul\":8748:8766   */\n      add\n        /* \"#utility.yul\":8740:8766   */\n      swap1\n      pop\n        /* \"#utility.yul\":8776:8861   */\n      tag_336\n        /* \"#utility.yul\":8858:8859   */\n      0x00\n        /* \"#utility.yul\":8847:8856   */\n      dup4\n        /* \"#utility.yul\":8843:8860   */\n      add\n        /* \"#utility.yul\":8834:8840   */\n      dup5\n        /* \"#utility.yul\":8776:8861   */\n      tag_247\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":8730:8868   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8874:9187   */\n    tag_206:\n        /* \"#utility.yul\":8987:8991   */\n      0x00\n        /* \"#utility.yul\":9025:9027   */\n      0x20\n        /* \"#utility.yul\":9014:9023   */\n      dup3\n        /* \"#utility.yul\":9010:9028   */\n      add\n        /* \"#utility.yul\":9002:9028   */\n      swap1\n      pop\n        /* \"#utility.yul\":9074:9083   */\n      dup2\n        /* \"#utility.yul\":9068:9072   */\n      dup2\n        /* \"#utility.yul\":9064:9084   */\n      sub\n        /* \"#utility.yul\":9060:9061   */\n      0x00\n        /* \"#utility.yul\":9049:9058   */\n      dup4\n        /* \"#utility.yul\":9045:9062   */\n      add\n        /* \"#utility.yul\":9038:9085   */\n      mstore\n        /* \"#utility.yul\":9102:9180   */\n      tag_338\n        /* \"#utility.yul\":9175:9179   */\n      dup2\n        /* \"#utility.yul\":9166:9172   */\n      dup5\n        /* \"#utility.yul\":9102:9180   */\n      tag_251\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":9094:9180   */\n      swap1\n      pop\n        /* \"#utility.yul\":8992:9187   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9193:9612   */\n    tag_120:\n        /* \"#utility.yul\":9359:9363   */\n      0x00\n        /* \"#utility.yul\":9397:9399   */\n      0x20\n        /* \"#utility.yul\":9386:9395   */\n      dup3\n        /* \"#utility.yul\":9382:9400   */\n      add\n        /* \"#utility.yul\":9374:9400   */\n      swap1\n      pop\n        /* \"#utility.yul\":9446:9455   */\n      dup2\n        /* \"#utility.yul\":9440:9444   */\n      dup2\n        /* \"#utility.yul\":9436:9456   */\n      sub\n        /* \"#utility.yul\":9432:9433   */\n      0x00\n        /* \"#utility.yul\":9421:9430   */\n      dup4\n        /* \"#utility.yul\":9417:9434   */\n      add\n        /* \"#utility.yul\":9410:9457   */\n      mstore\n        /* \"#utility.yul\":9474:9605   */\n      tag_340\n        /* \"#utility.yul\":9600:9604   */\n      dup2\n        /* \"#utility.yul\":9474:9605   */\n      tag_260\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":9466:9605   */\n      swap1\n      pop\n        /* \"#utility.yul\":9364:9612   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9618:10037   */\n    tag_146:\n        /* \"#utility.yul\":9784:9788   */\n      0x00\n        /* \"#utility.yul\":9822:9824   */\n      0x20\n        /* \"#utility.yul\":9811:9820   */\n      dup3\n        /* \"#utility.yul\":9807:9825   */\n      add\n        /* \"#utility.yul\":9799:9825   */\n      swap1\n      pop\n        /* \"#utility.yul\":9871:9880   */\n      dup2\n        /* \"#utility.yul\":9865:9869   */\n      dup2\n        /* \"#utility.yul\":9861:9881   */\n      sub\n        /* \"#utility.yul\":9857:9858   */\n      0x00\n        /* \"#utility.yul\":9846:9855   */\n      dup4\n        /* \"#utility.yul\":9842:9859   */\n      add\n        /* \"#utility.yul\":9835:9882   */\n      mstore\n        /* \"#utility.yul\":9899:10030   */\n      tag_342\n        /* \"#utility.yul\":10025:10029   */\n      dup2\n        /* \"#utility.yul\":9899:10030   */\n      tag_265\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":9891:10030   */\n      swap1\n      pop\n        /* \"#utility.yul\":9789:10037   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10043:10462   */\n    tag_84:\n        /* \"#utility.yul\":10209:10213   */\n      0x00\n        /* \"#utility.yul\":10247:10249   */\n      0x20\n        /* \"#utility.yul\":10236:10245   */\n      dup3\n        /* \"#utility.yul\":10232:10250   */\n      add\n        /* \"#utility.yul\":10224:10250   */\n      swap1\n      pop\n        /* \"#utility.yul\":10296:10305   */\n      dup2\n        /* \"#utility.yul\":10290:10294   */\n      dup2\n        /* \"#utility.yul\":10286:10306   */\n      sub\n        /* \"#utility.yul\":10282:10283   */\n      0x00\n        /* \"#utility.yul\":10271:10280   */\n      dup4\n        /* \"#utility.yul\":10267:10284   */\n      add\n        /* \"#utility.yul\":10260:10307   */\n      mstore\n        /* \"#utility.yul\":10324:10455   */\n      tag_344\n        /* \"#utility.yul\":10450:10454   */\n      dup2\n        /* \"#utility.yul\":10324:10455   */\n      tag_270\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":10316:10455   */\n      swap1\n      pop\n        /* \"#utility.yul\":10214:10462   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10468:10887   */\n    tag_186:\n        /* \"#utility.yul\":10634:10638   */\n      0x00\n        /* \"#utility.yul\":10672:10674   */\n      0x20\n        /* \"#utility.yul\":10661:10670   */\n      dup3\n        /* \"#utility.yul\":10657:10675   */\n      add\n        /* \"#utility.yul\":10649:10675   */\n      swap1\n      pop\n        /* \"#utility.yul\":10721:10730   */\n      dup2\n        /* \"#utility.yul\":10715:10719   */\n      dup2\n        /* \"#utility.yul\":10711:10731   */\n      sub\n        /* \"#utility.yul\":10707:10708   */\n      0x00\n        /* \"#utility.yul\":10696:10705   */\n      dup4\n        /* \"#utility.yul\":10692:10709   */\n      add\n        /* \"#utility.yul\":10685:10732   */\n      mstore\n        /* \"#utility.yul\":10749:10880   */\n      tag_346\n        /* \"#utility.yul\":10875:10879   */\n      dup2\n        /* \"#utility.yul\":10749:10880   */\n      tag_275\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":10741:10880   */\n      swap1\n      pop\n        /* \"#utility.yul\":10639:10887   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10893:11312   */\n    tag_76:\n        /* \"#utility.yul\":11059:11063   */\n      0x00\n        /* \"#utility.yul\":11097:11099   */\n      0x20\n        /* \"#utility.yul\":11086:11095   */\n      dup3\n        /* \"#utility.yul\":11082:11100   */\n      add\n        /* \"#utility.yul\":11074:11100   */\n      swap1\n      pop\n        /* \"#utility.yul\":11146:11155   */\n      dup2\n        /* \"#utility.yul\":11140:11144   */\n      dup2\n        /* \"#utility.yul\":11136:11156   */\n      sub\n        /* \"#utility.yul\":11132:11133   */\n      0x00\n        /* \"#utility.yul\":11121:11130   */\n      dup4\n        /* \"#utility.yul\":11117:11134   */\n      add\n        /* \"#utility.yul\":11110:11157   */\n      mstore\n        /* \"#utility.yul\":11174:11305   */\n      tag_348\n        /* \"#utility.yul\":11300:11304   */\n      dup2\n        /* \"#utility.yul\":11174:11305   */\n      tag_280\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":11166:11305   */\n      swap1\n      pop\n        /* \"#utility.yul\":11064:11312   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11318:11737   */\n    tag_165:\n        /* \"#utility.yul\":11484:11488   */\n      0x00\n        /* \"#utility.yul\":11522:11524   */\n      0x20\n        /* \"#utility.yul\":11511:11520   */\n      dup3\n        /* \"#utility.yul\":11507:11525   */\n      add\n        /* \"#utility.yul\":11499:11525   */\n      swap1\n      pop\n        /* \"#utility.yul\":11571:11580   */\n      dup2\n        /* \"#utility.yul\":11565:11569   */\n      dup2\n        /* \"#utility.yul\":11561:11581   */\n      sub\n        /* \"#utility.yul\":11557:11558   */\n      0x00\n        /* \"#utility.yul\":11546:11555   */\n      dup4\n        /* \"#utility.yul\":11542:11559   */\n      add\n        /* \"#utility.yul\":11535:11582   */\n      mstore\n        /* \"#utility.yul\":11599:11730   */\n      tag_350\n        /* \"#utility.yul\":11725:11729   */\n      dup2\n        /* \"#utility.yul\":11599:11730   */\n      tag_285\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":11591:11730   */\n      swap1\n      pop\n        /* \"#utility.yul\":11489:11737   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11743:12162   */\n    tag_103:\n        /* \"#utility.yul\":11909:11913   */\n      0x00\n        /* \"#utility.yul\":11947:11949   */\n      0x20\n        /* \"#utility.yul\":11936:11945   */\n      dup3\n        /* \"#utility.yul\":11932:11950   */\n      add\n        /* \"#utility.yul\":11924:11950   */\n      swap1\n      pop\n        /* \"#utility.yul\":11996:12005   */\n      dup2\n        /* \"#utility.yul\":11990:11994   */\n      dup2\n        /* \"#utility.yul\":11986:12006   */\n      sub\n        /* \"#utility.yul\":11982:11983   */\n      0x00\n        /* \"#utility.yul\":11971:11980   */\n      dup4\n        /* \"#utility.yul\":11967:11984   */\n      add\n        /* \"#utility.yul\":11960:12007   */\n      mstore\n        /* \"#utility.yul\":12024:12155   */\n      tag_352\n        /* \"#utility.yul\":12150:12154   */\n      dup2\n        /* \"#utility.yul\":12024:12155   */\n      tag_290\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":12016:12155   */\n      swap1\n      pop\n        /* \"#utility.yul\":11914:12162   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12168:12587   */\n    tag_191:\n        /* \"#utility.yul\":12334:12338   */\n      0x00\n        /* \"#utility.yul\":12372:12374   */\n      0x20\n        /* \"#utility.yul\":12361:12370   */\n      dup3\n        /* \"#utility.yul\":12357:12375   */\n      add\n        /* \"#utility.yul\":12349:12375   */\n      swap1\n      pop\n        /* \"#utility.yul\":12421:12430   */\n      dup2\n        /* \"#utility.yul\":12415:12419   */\n      dup2\n        /* \"#utility.yul\":12411:12431   */\n      sub\n        /* \"#utility.yul\":12407:12408   */\n      0x00\n        /* \"#utility.yul\":12396:12405   */\n      dup4\n        /* \"#utility.yul\":12392:12409   */\n      add\n        /* \"#utility.yul\":12385:12432   */\n      mstore\n        /* \"#utility.yul\":12449:12580   */\n      tag_354\n        /* \"#utility.yul\":12575:12579   */\n      dup2\n        /* \"#utility.yul\":12449:12580   */\n      tag_295\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":12441:12580   */\n      swap1\n      pop\n        /* \"#utility.yul\":12339:12587   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12593:13012   */\n    tag_179:\n        /* \"#utility.yul\":12759:12763   */\n      0x00\n        /* \"#utility.yul\":12797:12799   */\n      0x20\n        /* \"#utility.yul\":12786:12795   */\n      dup3\n        /* \"#utility.yul\":12782:12800   */\n      add\n        /* \"#utility.yul\":12774:12800   */\n      swap1\n      pop\n        /* \"#utility.yul\":12846:12855   */\n      dup2\n        /* \"#utility.yul\":12840:12844   */\n      dup2\n        /* \"#utility.yul\":12836:12856   */\n      sub\n        /* \"#utility.yul\":12832:12833   */\n      0x00\n        /* \"#utility.yul\":12821:12830   */\n      dup4\n        /* \"#utility.yul\":12817:12834   */\n      add\n        /* \"#utility.yul\":12810:12857   */\n      mstore\n        /* \"#utility.yul\":12874:13005   */\n      tag_356\n        /* \"#utility.yul\":13000:13004   */\n      dup2\n        /* \"#utility.yul\":12874:13005   */\n      tag_300\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":12866:13005   */\n      swap1\n      pop\n        /* \"#utility.yul\":12764:13012   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13018:13437   */\n    tag_67:\n        /* \"#utility.yul\":13184:13188   */\n      0x00\n        /* \"#utility.yul\":13222:13224   */\n      0x20\n        /* \"#utility.yul\":13211:13220   */\n      dup3\n        /* \"#utility.yul\":13207:13225   */\n      add\n        /* \"#utility.yul\":13199:13225   */\n      swap1\n      pop\n        /* \"#utility.yul\":13271:13280   */\n      dup2\n        /* \"#utility.yul\":13265:13269   */\n      dup2\n        /* \"#utility.yul\":13261:13281   */\n      sub\n        /* \"#utility.yul\":13257:13258   */\n      0x00\n        /* \"#utility.yul\":13246:13255   */\n      dup4\n        /* \"#utility.yul\":13242:13259   */\n      add\n        /* \"#utility.yul\":13235:13282   */\n      mstore\n        /* \"#utility.yul\":13299:13430   */\n      tag_358\n        /* \"#utility.yul\":13425:13429   */\n      dup2\n        /* \"#utility.yul\":13299:13430   */\n      tag_305\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":13291:13430   */\n      swap1\n      pop\n        /* \"#utility.yul\":13189:13437   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13443:13862   */\n    tag_151:\n        /* \"#utility.yul\":13609:13613   */\n      0x00\n        /* \"#utility.yul\":13647:13649   */\n      0x20\n        /* \"#utility.yul\":13636:13645   */\n      dup3\n        /* \"#utility.yul\":13632:13650   */\n      add\n        /* \"#utility.yul\":13624:13650   */\n      swap1\n      pop\n        /* \"#utility.yul\":13696:13705   */\n      dup2\n        /* \"#utility.yul\":13690:13694   */\n      dup2\n        /* \"#utility.yul\":13686:13706   */\n      sub\n        /* \"#utility.yul\":13682:13683   */\n      0x00\n        /* \"#utility.yul\":13671:13680   */\n      dup4\n        /* \"#utility.yul\":13667:13684   */\n      add\n        /* \"#utility.yul\":13660:13707   */\n      mstore\n        /* \"#utility.yul\":13724:13855   */\n      tag_360\n        /* \"#utility.yul\":13850:13854   */\n      dup2\n        /* \"#utility.yul\":13724:13855   */\n      tag_310\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":13716:13855   */\n      swap1\n      pop\n        /* \"#utility.yul\":13614:13862   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13868:14287   */\n    tag_94:\n        /* \"#utility.yul\":14034:14038   */\n      0x00\n        /* \"#utility.yul\":14072:14074   */\n      0x20\n        /* \"#utility.yul\":14061:14070   */\n      dup3\n        /* \"#utility.yul\":14057:14075   */\n      add\n        /* \"#utility.yul\":14049:14075   */\n      swap1\n      pop\n        /* \"#utility.yul\":14121:14130   */\n      dup2\n        /* \"#utility.yul\":14115:14119   */\n      dup2\n        /* \"#utility.yul\":14111:14131   */\n      sub\n        /* \"#utility.yul\":14107:14108   */\n      0x00\n        /* \"#utility.yul\":14096:14105   */\n      dup4\n        /* \"#utility.yul\":14092:14109   */\n      add\n        /* \"#utility.yul\":14085:14132   */\n      mstore\n        /* \"#utility.yul\":14149:14280   */\n      tag_362\n        /* \"#utility.yul\":14275:14279   */\n      dup2\n        /* \"#utility.yul\":14149:14280   */\n      tag_315\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":14141:14280   */\n      swap1\n      pop\n        /* \"#utility.yul\":14039:14287   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14293:14515   */\n    tag_27:\n        /* \"#utility.yul\":14386:14390   */\n      0x00\n        /* \"#utility.yul\":14424:14426   */\n      0x20\n        /* \"#utility.yul\":14413:14422   */\n      dup3\n        /* \"#utility.yul\":14409:14427   */\n      add\n        /* \"#utility.yul\":14401:14427   */\n      swap1\n      pop\n        /* \"#utility.yul\":14437:14508   */\n      tag_364\n        /* \"#utility.yul\":14505:14506   */\n      0x00\n        /* \"#utility.yul\":14494:14503   */\n      dup4\n        /* \"#utility.yul\":14490:14507   */\n      add\n        /* \"#utility.yul\":14481:14487   */\n      dup5\n        /* \"#utility.yul\":14437:14508   */\n      tag_320\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":14391:14515   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14521:14853   */\n    tag_106:\n        /* \"#utility.yul\":14642:14646   */\n      0x00\n        /* \"#utility.yul\":14680:14682   */\n      0x40\n        /* \"#utility.yul\":14669:14678   */\n      dup3\n        /* \"#utility.yul\":14665:14683   */\n      add\n        /* \"#utility.yul\":14657:14683   */\n      swap1\n      pop\n        /* \"#utility.yul\":14693:14764   */\n      tag_366\n        /* \"#utility.yul\":14761:14762   */\n      0x00\n        /* \"#utility.yul\":14750:14759   */\n      dup4\n        /* \"#utility.yul\":14746:14763   */\n      add\n        /* \"#utility.yul\":14737:14743   */\n      dup6\n        /* \"#utility.yul\":14693:14764   */\n      tag_320\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":14774:14846   */\n      tag_367\n        /* \"#utility.yul\":14842:14844   */\n      0x20\n        /* \"#utility.yul\":14831:14840   */\n      dup4\n        /* \"#utility.yul\":14827:14845   */\n      add\n        /* \"#utility.yul\":14818:14824   */\n      dup5\n        /* \"#utility.yul\":14774:14846   */\n      tag_320\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":14647:14853   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14859:14957   */\n    tag_242:\n        /* \"#utility.yul\":14910:14916   */\n      0x00\n        /* \"#utility.yul\":14944:14949   */\n      dup2\n        /* \"#utility.yul\":14938:14950   */\n      mload\n        /* \"#utility.yul\":14928:14950   */\n      swap1\n      pop\n        /* \"#utility.yul\":14917:14957   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14963:15062   */\n    tag_254:\n        /* \"#utility.yul\":15015:15021   */\n      0x00\n        /* \"#utility.yul\":15049:15054   */\n      dup2\n        /* \"#utility.yul\":15043:15055   */\n      mload\n        /* \"#utility.yul\":15033:15055   */\n      swap1\n      pop\n        /* \"#utility.yul\":15022:15062   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15068:15215   */\n    tag_244:\n        /* \"#utility.yul\":15169:15180   */\n      0x00\n        /* \"#utility.yul\":15206:15209   */\n      dup2\n        /* \"#utility.yul\":15191:15209   */\n      swap1\n      pop\n        /* \"#utility.yul\":15181:15215   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15221:15390   */\n    tag_256:\n        /* \"#utility.yul\":15305:15316   */\n      0x00\n        /* \"#utility.yul\":15339:15345   */\n      dup3\n        /* \"#utility.yul\":15334:15337   */\n      dup3\n        /* \"#utility.yul\":15327:15346   */\n      mstore\n        /* \"#utility.yul\":15379:15383   */\n      0x20\n        /* \"#utility.yul\":15374:15377   */\n      dup3\n        /* \"#utility.yul\":15370:15384   */\n      add\n        /* \"#utility.yul\":15355:15384   */\n      swap1\n      pop\n        /* \"#utility.yul\":15317:15390   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15396:15701   */\n    tag_157:\n        /* \"#utility.yul\":15436:15439   */\n      0x00\n        /* \"#utility.yul\":15455:15475   */\n      tag_373\n        /* \"#utility.yul\":15473:15474   */\n      dup3\n        /* \"#utility.yul\":15455:15475   */\n      tag_323\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":15450:15475   */\n      swap2\n      pop\n        /* \"#utility.yul\":15489:15509   */\n      tag_374\n        /* \"#utility.yul\":15507:15508   */\n      dup4\n        /* \"#utility.yul\":15489:15509   */\n      tag_323\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":15484:15509   */\n      swap3\n      pop\n        /* \"#utility.yul\":15643:15644   */\n      dup3\n        /* \"#utility.yul\":15575:15641   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":15571:15645   */\n      sub\n        /* \"#utility.yul\":15568:15569   */\n      dup3\n        /* \"#utility.yul\":15565:15646   */\n      gt\n        /* \"#utility.yul\":15562:15564   */\n      iszero\n      tag_375\n      jumpi\n        /* \"#utility.yul\":15649:15667   */\n      tag_376\n      tag_377\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":15562:15564   */\n    tag_375:\n        /* \"#utility.yul\":15693:15694   */\n      dup3\n        /* \"#utility.yul\":15690:15691   */\n      dup3\n        /* \"#utility.yul\":15686:15695   */\n      add\n        /* \"#utility.yul\":15679:15695   */\n      swap1\n      pop\n        /* \"#utility.yul\":15440:15701   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15707:15892   */\n    tag_154:\n        /* \"#utility.yul\":15747:15748   */\n      0x00\n        /* \"#utility.yul\":15764:15784   */\n      tag_379\n        /* \"#utility.yul\":15782:15783   */\n      dup3\n        /* \"#utility.yul\":15764:15784   */\n      tag_323\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":15759:15784   */\n      swap2\n      pop\n        /* \"#utility.yul\":15798:15818   */\n      tag_380\n        /* \"#utility.yul\":15816:15817   */\n      dup4\n        /* \"#utility.yul\":15798:15818   */\n      tag_323\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":15793:15818   */\n      swap3\n      pop\n        /* \"#utility.yul\":15837:15838   */\n      dup3\n        /* \"#utility.yul\":15827:15829   */\n      tag_381\n      jumpi\n        /* \"#utility.yul\":15842:15860   */\n      tag_382\n      tag_383\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":15827:15829   */\n    tag_381:\n        /* \"#utility.yul\":15884:15885   */\n      dup3\n        /* \"#utility.yul\":15881:15882   */\n      dup3\n        /* \"#utility.yul\":15877:15886   */\n      div\n        /* \"#utility.yul\":15872:15886   */\n      swap1\n      pop\n        /* \"#utility.yul\":15749:15892   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15898:15994   */\n    tag_238:\n        /* \"#utility.yul\":15935:15942   */\n      0x00\n        /* \"#utility.yul\":15964:15988   */\n      tag_385\n        /* \"#utility.yul\":15982:15987   */\n      dup3\n        /* \"#utility.yul\":15964:15988   */\n      tag_386\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":15953:15988   */\n      swap1\n      pop\n        /* \"#utility.yul\":15943:15994   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16000:16090   */\n    tag_387:\n        /* \"#utility.yul\":16034:16041   */\n      0x00\n        /* \"#utility.yul\":16077:16082   */\n      dup2\n        /* \"#utility.yul\":16070:16083   */\n      iszero\n        /* \"#utility.yul\":16063:16084   */\n      iszero\n        /* \"#utility.yul\":16052:16084   */\n      swap1\n      pop\n        /* \"#utility.yul\":16042:16090   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16096:16222   */\n    tag_386:\n        /* \"#utility.yul\":16133:16140   */\n      0x00\n        /* \"#utility.yul\":16173:16215   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":16166:16171   */\n      dup3\n        /* \"#utility.yul\":16162:16216   */\n      and\n        /* \"#utility.yul\":16151:16216   */\n      swap1\n      pop\n        /* \"#utility.yul\":16141:16222   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16228:16305   */\n    tag_323:\n        /* \"#utility.yul\":16265:16272   */\n      0x00\n        /* \"#utility.yul\":16294:16299   */\n      dup2\n        /* \"#utility.yul\":16283:16299   */\n      swap1\n      pop\n        /* \"#utility.yul\":16273:16305   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16311:16465   */\n    tag_250:\n        /* \"#utility.yul\":16375:16384   */\n      0x00\n        /* \"#utility.yul\":16408:16459   */\n      tag_392\n        /* \"#utility.yul\":16453:16458   */\n      dup3\n        /* \"#utility.yul\":16408:16459   */\n      tag_393\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":16395:16459   */\n      swap1\n      pop\n        /* \"#utility.yul\":16385:16465   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16471:16598   */\n    tag_393:\n        /* \"#utility.yul\":16535:16544   */\n      0x00\n        /* \"#utility.yul\":16568:16592   */\n      tag_395\n        /* \"#utility.yul\":16586:16591   */\n      dup3\n        /* \"#utility.yul\":16568:16592   */\n      tag_386\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":16555:16592   */\n      swap1\n      pop\n        /* \"#utility.yul\":16545:16598   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16604:16911   */\n    tag_246:\n        /* \"#utility.yul\":16672:16673   */\n      0x00\n        /* \"#utility.yul\":16682:16795   */\n    tag_397:\n        /* \"#utility.yul\":16696:16702   */\n      dup4\n        /* \"#utility.yul\":16693:16694   */\n      dup2\n        /* \"#utility.yul\":16690:16703   */\n      lt\n        /* \"#utility.yul\":16682:16795   */\n      iszero\n      tag_399\n      jumpi\n        /* \"#utility.yul\":16781:16782   */\n      dup1\n        /* \"#utility.yul\":16776:16779   */\n      dup3\n        /* \"#utility.yul\":16772:16783   */\n      add\n        /* \"#utility.yul\":16766:16784   */\n      mload\n        /* \"#utility.yul\":16762:16763   */\n      dup2\n        /* \"#utility.yul\":16757:16760   */\n      dup5\n        /* \"#utility.yul\":16753:16764   */\n      add\n        /* \"#utility.yul\":16746:16785   */\n      mstore\n        /* \"#utility.yul\":16718:16720   */\n      0x20\n        /* \"#utility.yul\":16715:16716   */\n      dup2\n        /* \"#utility.yul\":16711:16721   */\n      add\n        /* \"#utility.yul\":16706:16721   */\n      swap1\n      pop\n        /* \"#utility.yul\":16682:16795   */\n      jump(tag_397)\n    tag_399:\n        /* \"#utility.yul\":16813:16819   */\n      dup4\n        /* \"#utility.yul\":16810:16811   */\n      dup2\n        /* \"#utility.yul\":16807:16820   */\n      gt\n        /* \"#utility.yul\":16804:16806   */\n      iszero\n      tag_400\n      jumpi\n        /* \"#utility.yul\":16893:16894   */\n      0x00\n        /* \"#utility.yul\":16884:16890   */\n      dup5\n        /* \"#utility.yul\":16879:16882   */\n      dup5\n        /* \"#utility.yul\":16875:16891   */\n      add\n        /* \"#utility.yul\":16868:16895   */\n      mstore\n        /* \"#utility.yul\":16804:16806   */\n    tag_400:\n        /* \"#utility.yul\":16653:16911   */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16917:17097   */\n    tag_377:\n        /* \"#utility.yul\":16965:17042   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16962:16963   */\n      0x00\n        /* \"#utility.yul\":16955:17043   */\n      mstore\n        /* \"#utility.yul\":17062:17066   */\n      0x11\n        /* \"#utility.yul\":17059:17060   */\n      0x04\n        /* \"#utility.yul\":17052:17067   */\n      mstore\n        /* \"#utility.yul\":17086:17090   */\n      0x24\n        /* \"#utility.yul\":17083:17084   */\n      0x00\n        /* \"#utility.yul\":17076:17091   */\n      revert\n        /* \"#utility.yul\":17103:17283   */\n    tag_383:\n        /* \"#utility.yul\":17151:17228   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17148:17149   */\n      0x00\n        /* \"#utility.yul\":17141:17229   */\n      mstore\n        /* \"#utility.yul\":17248:17252   */\n      0x12\n        /* \"#utility.yul\":17245:17246   */\n      0x04\n        /* \"#utility.yul\":17238:17253   */\n      mstore\n        /* \"#utility.yul\":17272:17276   */\n      0x24\n        /* \"#utility.yul\":17269:17270   */\n      0x00\n        /* \"#utility.yul\":17262:17277   */\n      revert\n        /* \"#utility.yul\":17289:17391   */\n    tag_259:\n        /* \"#utility.yul\":17330:17336   */\n      0x00\n        /* \"#utility.yul\":17381:17383   */\n      0x1f\n        /* \"#utility.yul\":17377:17384   */\n      not\n        /* \"#utility.yul\":17372:17374   */\n      0x1f\n        /* \"#utility.yul\":17365:17370   */\n      dup4\n        /* \"#utility.yul\":17361:17375   */\n      add\n        /* \"#utility.yul\":17357:17385   */\n      and\n        /* \"#utility.yul\":17347:17385   */\n      swap1\n      pop\n        /* \"#utility.yul\":17337:17391   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17397:17630   */\n    tag_264:\n        /* \"#utility.yul\":17537:17571   */\n      0x416d6f756e742069732067726561746572207468616e207468652062616c616e\n        /* \"#utility.yul\":17533:17534   */\n      0x00\n        /* \"#utility.yul\":17525:17531   */\n      dup3\n        /* \"#utility.yul\":17521:17535   */\n      add\n        /* \"#utility.yul\":17514:17572   */\n      mstore\n        /* \"#utility.yul\":17606:17622   */\n      0x6365206f6620636f6e7472616374000000000000000000000000000000000000\n        /* \"#utility.yul\":17601:17603   */\n      0x20\n        /* \"#utility.yul\":17593:17599   */\n      dup3\n        /* \"#utility.yul\":17589:17604   */\n      add\n        /* \"#utility.yul\":17582:17623   */\n      mstore\n        /* \"#utility.yul\":17503:17630   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17636:17861   */\n    tag_269:\n        /* \"#utility.yul\":17776:17810   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":17772:17773   */\n      0x00\n        /* \"#utility.yul\":17764:17770   */\n      dup3\n        /* \"#utility.yul\":17760:17774   */\n      add\n        /* \"#utility.yul\":17753:17811   */\n      mstore\n        /* \"#utility.yul\":17845:17853   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17840:17842   */\n      0x20\n        /* \"#utility.yul\":17832:17838   */\n      dup3\n        /* \"#utility.yul\":17828:17843   */\n      add\n        /* \"#utility.yul\":17821:17854   */\n      mstore\n        /* \"#utility.yul\":17742:17861   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17867:18032   */\n    tag_274:\n        /* \"#utility.yul\":18007:18024   */\n      0x4e6f7420656e6f75676820555344540000000000000000000000000000000000\n        /* \"#utility.yul\":18003:18004   */\n      0x00\n        /* \"#utility.yul\":17995:18001   */\n      dup3\n        /* \"#utility.yul\":17991:18005   */\n      add\n        /* \"#utility.yul\":17984:18025   */\n      mstore\n        /* \"#utility.yul\":17973:18032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18038:18263   */\n    tag_279:\n        /* \"#utility.yul\":18178:18212   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":18174:18175   */\n      0x00\n        /* \"#utility.yul\":18166:18172   */\n      dup3\n        /* \"#utility.yul\":18162:18176   */\n      add\n        /* \"#utility.yul\":18155:18213   */\n      mstore\n        /* \"#utility.yul\":18247:18255   */\n      0x722063616c6c0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18242:18244   */\n      0x20\n        /* \"#utility.yul\":18234:18240   */\n      dup3\n        /* \"#utility.yul\":18230:18245   */\n      add\n        /* \"#utility.yul\":18223:18256   */\n      mstore\n        /* \"#utility.yul\":18144:18263   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18269:18640   */\n    tag_284:\n        /* \"#utility.yul\":18409:18443   */\n      0x546865206e756d626572206f6620746f6b656e73207468617420757365727320\n        /* \"#utility.yul\":18405:18406   */\n      0x00\n        /* \"#utility.yul\":18397:18403   */\n      dup3\n        /* \"#utility.yul\":18393:18407   */\n      add\n        /* \"#utility.yul\":18386:18444   */\n      mstore\n        /* \"#utility.yul\":18478:18512   */\n      0x77616e7420746f207075726368617365206578636565647320746865206e756d\n        /* \"#utility.yul\":18473:18475   */\n      0x20\n        /* \"#utility.yul\":18465:18471   */\n      dup3\n        /* \"#utility.yul\":18461:18476   */\n      add\n        /* \"#utility.yul\":18454:18513   */\n      mstore\n        /* \"#utility.yul\":18547:18581   */\n      0x626572206f6620746f6b656e732063757272656e746c7920617661696c61626c\n        /* \"#utility.yul\":18542:18544   */\n      0x40\n        /* \"#utility.yul\":18534:18540   */\n      dup3\n        /* \"#utility.yul\":18530:18545   */\n      add\n        /* \"#utility.yul\":18523:18582   */\n      mstore\n        /* \"#utility.yul\":18616:18632   */\n      0x6520666f72207075726368617365000000000000000000000000000000000000\n        /* \"#utility.yul\":18611:18613   */\n      0x60\n        /* \"#utility.yul\":18603:18609   */\n      dup3\n        /* \"#utility.yul\":18599:18614   */\n      add\n        /* \"#utility.yul\":18592:18633   */\n      mstore\n        /* \"#utility.yul\":18375:18640   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18646:18828   */\n    tag_289:\n        /* \"#utility.yul\":18786:18820   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":18782:18783   */\n      0x00\n        /* \"#utility.yul\":18774:18780   */\n      dup3\n        /* \"#utility.yul\":18770:18784   */\n      add\n        /* \"#utility.yul\":18763:18821   */\n      mstore\n        /* \"#utility.yul\":18752:18828   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18834:19013   */\n    tag_294:\n        /* \"#utility.yul\":18974:19005   */\n      0x5472616e7366657220746f206d73672e73656e646572206661696c6564000000\n        /* \"#utility.yul\":18970:18971   */\n      0x00\n        /* \"#utility.yul\":18962:18968   */\n      dup3\n        /* \"#utility.yul\":18958:18972   */\n      add\n        /* \"#utility.yul\":18951:19006   */\n      mstore\n        /* \"#utility.yul\":18940:19013   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19019:19198   */\n    tag_299:\n        /* \"#utility.yul\":19159:19190   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":19155:19156   */\n      0x00\n        /* \"#utility.yul\":19147:19153   */\n      dup3\n        /* \"#utility.yul\":19143:19157   */\n      add\n        /* \"#utility.yul\":19136:19191   */\n      mstore\n        /* \"#utility.yul\":19125:19198   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19204:19433   */\n    tag_304:\n        /* \"#utility.yul\":19344:19378   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":19340:19341   */\n      0x00\n        /* \"#utility.yul\":19332:19338   */\n      dup3\n        /* \"#utility.yul\":19328:19342   */\n      add\n        /* \"#utility.yul\":19321:19379   */\n      mstore\n        /* \"#utility.yul\":19413:19425   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19408:19410   */\n      0x20\n        /* \"#utility.yul\":19400:19406   */\n      dup3\n        /* \"#utility.yul\":19396:19411   */\n      add\n        /* \"#utility.yul\":19389:19426   */\n      mstore\n        /* \"#utility.yul\":19310:19433   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19439:19666   */\n    tag_309:\n        /* \"#utility.yul\":19579:19613   */\n      0x412073696e676c6520757365722063616e6e6f742062757920746f6f206d616e\n        /* \"#utility.yul\":19575:19576   */\n      0x00\n        /* \"#utility.yul\":19567:19573   */\n      dup3\n        /* \"#utility.yul\":19563:19577   */\n      add\n        /* \"#utility.yul\":19556:19614   */\n      mstore\n        /* \"#utility.yul\":19648:19658   */\n      0x7920746f6b656e73000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19643:19645   */\n      0x20\n        /* \"#utility.yul\":19635:19641   */\n      dup3\n        /* \"#utility.yul\":19631:19646   */\n      add\n        /* \"#utility.yul\":19624:19659   */\n      mstore\n        /* \"#utility.yul\":19545:19666   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19672:19853   */\n    tag_314:\n        /* \"#utility.yul\":19812:19845   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":19808:19809   */\n      0x00\n        /* \"#utility.yul\":19800:19806   */\n      dup3\n        /* \"#utility.yul\":19796:19810   */\n      add\n        /* \"#utility.yul\":19789:19846   */\n      mstore\n        /* \"#utility.yul\":19778:19853   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19859:20036   */\n    tag_319:\n        /* \"#utility.yul\":19999:20028   */\n      0x5472616e7366657220746f20636f6e7472616374206661696c65640000000000\n        /* \"#utility.yul\":19995:19996   */\n      0x00\n        /* \"#utility.yul\":19987:19993   */\n      dup3\n        /* \"#utility.yul\":19983:19997   */\n      add\n        /* \"#utility.yul\":19976:20029   */\n      mstore\n        /* \"#utility.yul\":19965:20036   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20042:20164   */\n    tag_211:\n        /* \"#utility.yul\":20115:20139   */\n      tag_417\n        /* \"#utility.yul\":20133:20138   */\n      dup2\n        /* \"#utility.yul\":20115:20139   */\n      tag_238\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":20108:20113   */\n      dup2\n        /* \"#utility.yul\":20105:20140   */\n      eq\n        /* \"#utility.yul\":20095:20097   */\n      tag_418\n      jumpi\n        /* \"#utility.yul\":20154:20155   */\n      0x00\n        /* \"#utility.yul\":20151:20152   */\n      dup1\n        /* \"#utility.yul\":20144:20156   */\n      revert\n        /* \"#utility.yul\":20095:20097   */\n    tag_418:\n        /* \"#utility.yul\":20085:20164   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20170:20286   */\n    tag_215:\n        /* \"#utility.yul\":20240:20261   */\n      tag_420\n        /* \"#utility.yul\":20255:20260   */\n      dup2\n        /* \"#utility.yul\":20240:20261   */\n      tag_387\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":20233:20238   */\n      dup2\n        /* \"#utility.yul\":20230:20262   */\n      eq\n        /* \"#utility.yul\":20220:20222   */\n      tag_421\n      jumpi\n        /* \"#utility.yul\":20276:20277   */\n      0x00\n        /* \"#utility.yul\":20273:20274   */\n      dup1\n        /* \"#utility.yul\":20266:20278   */\n      revert\n        /* \"#utility.yul\":20220:20222   */\n    tag_421:\n        /* \"#utility.yul\":20210:20286   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20292:20414   */\n    tag_219:\n        /* \"#utility.yul\":20365:20389   */\n      tag_423\n        /* \"#utility.yul\":20383:20388   */\n      dup2\n        /* \"#utility.yul\":20365:20389   */\n      tag_323\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":20358:20363   */\n      dup2\n        /* \"#utility.yul\":20355:20390   */\n      eq\n        /* \"#utility.yul\":20345:20347   */\n      tag_424\n      jumpi\n        /* \"#utility.yul\":20404:20405   */\n      0x00\n        /* \"#utility.yul\":20401:20402   */\n      dup1\n        /* \"#utility.yul\":20394:20406   */\n      revert\n        /* \"#utility.yul\":20345:20347   */\n    tag_424:\n        /* \"#utility.yul\":20335:20414   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b5b0b0b6bdf9120d35b5e9616c83bd6a43197add9cd53da28eacbc8c503f32bd64736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1634:8",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:8"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:8",
														"type": ""
													}
												],
												"src": "7:143:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "219:80:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "229:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "244:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "238:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "238:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "229:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "287:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "260:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "260:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "260:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "197:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "205:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "213:5:8",
														"type": ""
													}
												],
												"src": "156:143:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "433:625:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "480:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "489:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "492:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "482:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "482:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "482:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "454:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "463:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "450:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "450:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "475:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "446:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "446:33:8"
															},
															"nodeType": "YulIf",
															"src": "443:2:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "506:128:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "521:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "535:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "525:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "550:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "596:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "607:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "592:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "592:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "616:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "560:31:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "560:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "550:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "644:129:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "659:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "673:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "663:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "689:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "735:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "746:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "731:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "731:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "755:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "699:31:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "699:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "689:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "783:129:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "798:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "812:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "802:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "828:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "874:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "885:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "870:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "870:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "894:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "838:31:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "838:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "828:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "922:129:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "937:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "951:2:8",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "941:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "967:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1013:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1024:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1009:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1009:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1033:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "977:31:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "977:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "967:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "379:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "390:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "402:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "410:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "418:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "426:6:8",
														"type": ""
													}
												],
												"src": "305:753:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1109:51:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1119:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1148:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1130:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1130:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1119:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1091:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1101:7:8",
														"type": ""
													}
												],
												"src": "1064:96:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1211:81:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1221:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1236:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1243:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1232:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1232:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1221:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1193:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1203:7:8",
														"type": ""
													}
												],
												"src": "1166:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1343:32:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1353:16:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1364:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1353:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1325:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1335:7:8",
														"type": ""
													}
												],
												"src": "1298:77:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1424:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1481:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1490:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1493:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1483:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1483:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1483:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1447:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1472:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1454:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1454:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1444:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1444:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1437:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1437:43:8"
															},
															"nodeType": "YulIf",
															"src": "1434:2:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1417:5:8",
														"type": ""
													}
												],
												"src": "1381:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1552:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1609:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1618:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1621:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1611:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1611:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1611:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1575:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1600:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1582:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1582:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1572:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1572:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1565:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1565:43:8"
															},
															"nodeType": "YulIf",
															"src": "1562:2:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1545:5:8",
														"type": ""
													}
												],
												"src": "1509:122:8"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162001d8638038062001d868339818101604052810190620000379190620001f2565b620000576200004b620000f860201b60201c565b6200010060201b60201c565b6001808190555083600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816004819055508060058190555050505050620002d0565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050620001d5816200029c565b92915050565b600081519050620001ec81620002b6565b92915050565b600080600080608085870312156200020957600080fd5b60006200021987828801620001c4565b94505060206200022c87828801620001c4565b93505060406200023f87828801620001db565b92505060606200025287828801620001db565b91505092959194509250565b60006200026b8262000272565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b620002a7816200025e565b8114620002b357600080fd5b50565b620002c18162000292565b8114620002cd57600080fd5b50565b611aa680620002e06000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80637a80d062116100715780637a80d062146101535780638d951832146101835780638da5cb5b146101a1578063b8fcf937146101bf578063db068e0e146101dd578063f2fde38b146101f9576100b4565b80632d296bf1146100b95780632f48ab7d146100d55780633ba0b9a9146100f35780633ea521ef1461011157806365583cae1461012d578063715018a614610149575b600080fd5b6100d360048036038101906100ce9190611028565b610215565b005b6100dd610775565b6040516100ea9190611347565b60405180910390f35b6100fb61079b565b6040516101089190611504565b60405180910390f35b61012b60048036038101906101269190611028565b6107a1565b005b61014760048036038101906101429190611028565b610997565b005b6101516109a9565b005b61016d60048036038101906101689190610fd6565b6109bd565b60405161017a9190611504565b60405180910390f35b61018b6109d5565b6040516101989190611504565b60405180910390f35b6101a96109db565b6040516101b691906112cc565b60405180910390f35b6101c7610a04565b6040516101d49190611347565b60405180910390f35b6101f760048036038101906101f29190611028565b610a2a565b005b610213600480360381019061020e9190610fd6565b610a3c565b005b61021d610ac0565b600061023460045483610b1090919063ffffffff16565b905061028882600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b2690919063ffffffff16565b60055410156102cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c3906114a4565b60405180910390fd5b81600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161032891906112cc565b60206040518083038186803b15801561034057600080fd5b505afa158015610354573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103789190611051565b10156103b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b090611404565b60405180910390fd5b80600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161041591906112cc565b60206040518083038186803b15801561042d57600080fd5b505afa158015610441573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104659190611051565b10156104a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049d906113c4565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610505939291906112e7565b602060405180830381600087803b15801561051f57600080fd5b505af1158015610533573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105579190610fff565b610596576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058d906114e4565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b81526004016105f392919061131e565b602060405180830381600087803b15801561060d57600080fd5b505af1158015610621573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106459190610fff565b610684576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067b90611444565b60405180910390fd5b6106d682600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b2690919063ffffffff16565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff167ff6f342132c7de5e5a1e99c8efae544c94731f3ff093f5c3c97c6973d9415cdfb828460405161076192919061151f565b60405180910390a250610772610b3c565b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045481565b6107a9610b45565b80600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161080591906112cc565b60206040518083038186803b15801561081d57600080fd5b505afa158015610831573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108559190611051565b1015610896576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088d90611384565b60405180910390fd5b6109946108a16109db565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108fc91906112cc565b60206040518083038186803b15801561091457600080fd5b505afa158015610928573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094c9190611051565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610bc39092919063ffffffff16565b50565b61099f610b45565b8060058190555050565b6109b1610b45565b6109bb6000610c49565b565b60066020528060005260406000206000915090505481565b60055481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610a32610b45565b8060048190555050565b610a44610b45565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610ab4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aab906113a4565b60405180910390fd5b610abd81610c49565b50565b60026001541415610b06576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610afd906114c4565b60405180910390fd5b6002600181905550565b60008183610b1e91906115d0565b905092915050565b60008183610b34919061157a565b905092915050565b60018081905550565b610b4d610d0d565b73ffffffffffffffffffffffffffffffffffffffff16610b6b6109db565b73ffffffffffffffffffffffffffffffffffffffff1614610bc1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bb890611424565b60405180910390fd5b565b610c448363a9059cbb60e01b8484604051602401610be292919061131e565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610d15565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000610d77826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610ddc9092919063ffffffff16565b9050600081511115610dd75780806020019051810190610d979190610fff565b610dd6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dcd90611484565b60405180910390fd5b5b505050565b6060610deb8484600085610df4565b90509392505050565b606082471015610e39576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e30906113e4565b60405180910390fd5b610e4285610f08565b610e81576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7890611464565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610eaa91906112b5565b60006040518083038185875af1925050503d8060008114610ee7576040519150601f19603f3d011682016040523d82523d6000602084013e610eec565b606091505b5091509150610efc828286610f1b565b92505050949350505050565b600080823b905060008111915050919050565b60608315610f2b57829050610f7b565b600083511115610f3e5782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f729190611362565b60405180910390fd5b9392505050565b600081359050610f9181611a2b565b92915050565b600081519050610fa681611a42565b92915050565b600081359050610fbb81611a59565b92915050565b600081519050610fd081611a59565b92915050565b600060208284031215610fe857600080fd5b6000610ff684828501610f82565b91505092915050565b60006020828403121561101157600080fd5b600061101f84828501610f97565b91505092915050565b60006020828403121561103a57600080fd5b600061104884828501610fac565b91505092915050565b60006020828403121561106357600080fd5b600061107184828501610fc1565b91505092915050565b61108381611601565b82525050565b600061109482611548565b61109e818561155e565b93506110ae81856020860161166d565b80840191505092915050565b6110c381611649565b82525050565b60006110d482611553565b6110de8185611569565b93506110ee81856020860161166d565b6110f7816116fe565b840191505092915050565b600061110f602e83611569565b915061111a8261170f565b604082019050919050565b6000611132602683611569565b915061113d8261175e565b604082019050919050565b6000611155600f83611569565b9150611160826117ad565b602082019050919050565b6000611178602683611569565b9150611183826117d6565b604082019050919050565b600061119b606e83611569565b91506111a682611825565b608082019050919050565b60006111be602083611569565b91506111c9826118c0565b602082019050919050565b60006111e1601d83611569565b91506111ec826118e9565b602082019050919050565b6000611204601d83611569565b915061120f82611912565b602082019050919050565b6000611227602a83611569565b91506112328261193b565b604082019050919050565b600061124a602883611569565b91506112558261198a565b604082019050919050565b600061126d601f83611569565b9150611278826119d9565b602082019050919050565b6000611290601b83611569565b915061129b82611a02565b602082019050919050565b6112af8161163f565b82525050565b60006112c18284611089565b915081905092915050565b60006020820190506112e1600083018461107a565b92915050565b60006060820190506112fc600083018661107a565b611309602083018561107a565b61131660408301846112a6565b949350505050565b6000604082019050611333600083018561107a565b61134060208301846112a6565b9392505050565b600060208201905061135c60008301846110ba565b92915050565b6000602082019050818103600083015261137c81846110c9565b905092915050565b6000602082019050818103600083015261139d81611102565b9050919050565b600060208201905081810360008301526113bd81611125565b9050919050565b600060208201905081810360008301526113dd81611148565b9050919050565b600060208201905081810360008301526113fd8161116b565b9050919050565b6000602082019050818103600083015261141d8161118e565b9050919050565b6000602082019050818103600083015261143d816111b1565b9050919050565b6000602082019050818103600083015261145d816111d4565b9050919050565b6000602082019050818103600083015261147d816111f7565b9050919050565b6000602082019050818103600083015261149d8161121a565b9050919050565b600060208201905081810360008301526114bd8161123d565b9050919050565b600060208201905081810360008301526114dd81611260565b9050919050565b600060208201905081810360008301526114fd81611283565b9050919050565b600060208201905061151960008301846112a6565b92915050565b600060408201905061153460008301856112a6565b61154160208301846112a6565b9392505050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b60006115858261163f565b91506115908361163f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156115c5576115c46116a0565b5b828201905092915050565b60006115db8261163f565b91506115e68361163f565b9250826115f6576115f56116cf565b5b828204905092915050565b600061160c8261161f565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006116548261165b565b9050919050565b60006116668261161f565b9050919050565b60005b8381101561168b578082015181840152602081019050611670565b8381111561169a576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b7f416d6f756e742069732067726561746572207468616e207468652062616c616e60008201527f6365206f6620636f6e7472616374000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4e6f7420656e6f75676820555344540000000000000000000000000000000000600082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f546865206e756d626572206f6620746f6b656e7320746861742075736572732060008201527f77616e7420746f207075726368617365206578636565647320746865206e756d60208201527f626572206f6620746f6b656e732063757272656e746c7920617661696c61626c60408201527f6520666f72207075726368617365000000000000000000000000000000000000606082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f5472616e7366657220746f206d73672e73656e646572206661696c6564000000600082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b7f412073696e676c6520757365722063616e6e6f742062757920746f6f206d616e60008201527f7920746f6b656e73000000000000000000000000000000000000000000000000602082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b7f5472616e7366657220746f20636f6e7472616374206661696c65640000000000600082015250565b611a3481611601565b8114611a3f57600080fd5b50565b611a4b81611613565b8114611a5657600080fd5b50565b611a628161163f565b8114611a6d57600080fd5b5056fea2646970667358221220b5b0b0b6bdf9120d35b5e9616c83bd6a43197add9cd53da28eacbc8c503f32bd64736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1D86 CODESIZE SUB DUP1 PUSH3 0x1D86 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x1F2 JUMP JUMPDEST PUSH3 0x57 PUSH3 0x4B PUSH3 0xF8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x100 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x4 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP POP POP POP PUSH3 0x2D0 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1D5 DUP2 PUSH3 0x29C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1EC DUP2 PUSH3 0x2B6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x209 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x219 DUP8 DUP3 DUP9 ADD PUSH3 0x1C4 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH3 0x22C DUP8 DUP3 DUP9 ADD PUSH3 0x1C4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH3 0x23F DUP8 DUP3 DUP9 ADD PUSH3 0x1DB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH3 0x252 DUP8 DUP3 DUP9 ADD PUSH3 0x1DB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x26B DUP3 PUSH3 0x272 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2A7 DUP2 PUSH3 0x25E JUMP JUMPDEST DUP2 EQ PUSH3 0x2B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x2C1 DUP2 PUSH3 0x292 JUMP JUMPDEST DUP2 EQ PUSH3 0x2CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1AA6 DUP1 PUSH3 0x2E0 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7A80D062 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x7A80D062 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x8D951832 EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0xB8FCF937 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0xDB068E0E EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1F9 JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0x2D296BF1 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x2F48AB7D EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x3BA0B9A9 EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x3EA521EF EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x65583CAE EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x149 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x1028 JUMP JUMPDEST PUSH2 0x215 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDD PUSH2 0x775 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEA SWAP2 SWAP1 PUSH2 0x1347 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFB PUSH2 0x79B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x108 SWAP2 SWAP1 PUSH2 0x1504 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x126 SWAP2 SWAP1 PUSH2 0x1028 JUMP JUMPDEST PUSH2 0x7A1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x147 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x142 SWAP2 SWAP1 PUSH2 0x1028 JUMP JUMPDEST PUSH2 0x997 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x151 PUSH2 0x9A9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x168 SWAP2 SWAP1 PUSH2 0xFD6 JUMP JUMPDEST PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x1504 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18B PUSH2 0x9D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x1504 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A9 PUSH2 0x9DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x12CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C7 PUSH2 0xA04 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0x1347 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0x1028 JUMP JUMPDEST PUSH2 0xA2A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x213 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20E SWAP2 SWAP1 PUSH2 0xFD6 JUMP JUMPDEST PUSH2 0xA3C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21D PUSH2 0xAC0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x234 PUSH1 0x4 SLOAD DUP4 PUSH2 0xB10 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x288 DUP3 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB26 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 SLOAD LT ISZERO PUSH2 0x2CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C3 SWAP1 PUSH2 0x14A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x12CC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x340 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x354 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x378 SWAP2 SWAP1 PUSH2 0x1051 JUMP JUMPDEST LT ISZERO PUSH2 0x3B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B0 SWAP1 PUSH2 0x1404 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x415 SWAP2 SWAP1 PUSH2 0x12CC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x42D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x441 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x465 SWAP2 SWAP1 PUSH2 0x1051 JUMP JUMPDEST LT ISZERO PUSH2 0x4A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49D SWAP1 PUSH2 0x13C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x505 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x12E7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x51F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x533 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x557 SWAP2 SWAP1 PUSH2 0xFFF JUMP JUMPDEST PUSH2 0x596 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58D SWAP1 PUSH2 0x14E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F3 SWAP3 SWAP2 SWAP1 PUSH2 0x131E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x60D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x621 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x645 SWAP2 SWAP1 PUSH2 0xFFF JUMP JUMPDEST PUSH2 0x684 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67B SWAP1 PUSH2 0x1444 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6D6 DUP3 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB26 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF6F342132C7DE5E5A1E99C8EFAE544C94731F3FF093F5C3C97C6973D9415CDFB DUP3 DUP5 PUSH1 0x40 MLOAD PUSH2 0x761 SWAP3 SWAP2 SWAP1 PUSH2 0x151F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x772 PUSH2 0xB3C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x7A9 PUSH2 0xB45 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x805 SWAP2 SWAP1 PUSH2 0x12CC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x81D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x831 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x855 SWAP2 SWAP1 PUSH2 0x1051 JUMP JUMPDEST LT ISZERO PUSH2 0x896 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x88D SWAP1 PUSH2 0x1384 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x994 PUSH2 0x8A1 PUSH2 0x9DB JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8FC SWAP2 SWAP1 PUSH2 0x12CC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x914 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x928 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x94C SWAP2 SWAP1 PUSH2 0x1051 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBC3 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x99F PUSH2 0xB45 JUMP JUMPDEST DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x9B1 PUSH2 0xB45 JUMP JUMPDEST PUSH2 0x9BB PUSH1 0x0 PUSH2 0xC49 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xA32 PUSH2 0xB45 JUMP JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xA44 PUSH2 0xB45 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xAB4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAAB SWAP1 PUSH2 0x13A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xABD DUP2 PUSH2 0xC49 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xB06 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAFD SWAP1 PUSH2 0x14C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xB1E SWAP2 SWAP1 PUSH2 0x15D0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xB34 SWAP2 SWAP1 PUSH2 0x157A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xB4D PUSH2 0xD0D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB6B PUSH2 0x9DB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBC1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBB8 SWAP1 PUSH2 0x1424 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xC44 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xBE2 SWAP3 SWAP2 SWAP1 PUSH2 0x131E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xD15 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD77 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDDC SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0xDD7 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xD97 SWAP2 SWAP1 PUSH2 0xFFF JUMP JUMPDEST PUSH2 0xDD6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDCD SWAP1 PUSH2 0x1484 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xDEB DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0xDF4 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0xE39 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE30 SWAP1 PUSH2 0x13E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE42 DUP6 PUSH2 0xF08 JUMP JUMPDEST PUSH2 0xE81 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE78 SWAP1 PUSH2 0x1464 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0xEAA SWAP2 SWAP1 PUSH2 0x12B5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xEE7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xEEC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xEFC DUP3 DUP3 DUP7 PUSH2 0xF1B JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0xF2B JUMPI DUP3 SWAP1 POP PUSH2 0xF7B JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0xF3E JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF72 SWAP2 SWAP1 PUSH2 0x1362 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF91 DUP2 PUSH2 0x1A2B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xFA6 DUP2 PUSH2 0x1A42 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFBB DUP2 PUSH2 0x1A59 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xFD0 DUP2 PUSH2 0x1A59 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xFF6 DUP5 DUP3 DUP6 ADD PUSH2 0xF82 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1011 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x101F DUP5 DUP3 DUP6 ADD PUSH2 0xF97 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x103A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1048 DUP5 DUP3 DUP6 ADD PUSH2 0xFAC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1063 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1071 DUP5 DUP3 DUP6 ADD PUSH2 0xFC1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1083 DUP2 PUSH2 0x1601 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1094 DUP3 PUSH2 0x1548 JUMP JUMPDEST PUSH2 0x109E DUP2 DUP6 PUSH2 0x155E JUMP JUMPDEST SWAP4 POP PUSH2 0x10AE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x166D JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10C3 DUP2 PUSH2 0x1649 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10D4 DUP3 PUSH2 0x1553 JUMP JUMPDEST PUSH2 0x10DE DUP2 DUP6 PUSH2 0x1569 JUMP JUMPDEST SWAP4 POP PUSH2 0x10EE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x166D JUMP JUMPDEST PUSH2 0x10F7 DUP2 PUSH2 0x16FE JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x110F PUSH1 0x2E DUP4 PUSH2 0x1569 JUMP JUMPDEST SWAP2 POP PUSH2 0x111A DUP3 PUSH2 0x170F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1132 PUSH1 0x26 DUP4 PUSH2 0x1569 JUMP JUMPDEST SWAP2 POP PUSH2 0x113D DUP3 PUSH2 0x175E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1155 PUSH1 0xF DUP4 PUSH2 0x1569 JUMP JUMPDEST SWAP2 POP PUSH2 0x1160 DUP3 PUSH2 0x17AD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1178 PUSH1 0x26 DUP4 PUSH2 0x1569 JUMP JUMPDEST SWAP2 POP PUSH2 0x1183 DUP3 PUSH2 0x17D6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x119B PUSH1 0x6E DUP4 PUSH2 0x1569 JUMP JUMPDEST SWAP2 POP PUSH2 0x11A6 DUP3 PUSH2 0x1825 JUMP JUMPDEST PUSH1 0x80 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11BE PUSH1 0x20 DUP4 PUSH2 0x1569 JUMP JUMPDEST SWAP2 POP PUSH2 0x11C9 DUP3 PUSH2 0x18C0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11E1 PUSH1 0x1D DUP4 PUSH2 0x1569 JUMP JUMPDEST SWAP2 POP PUSH2 0x11EC DUP3 PUSH2 0x18E9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1204 PUSH1 0x1D DUP4 PUSH2 0x1569 JUMP JUMPDEST SWAP2 POP PUSH2 0x120F DUP3 PUSH2 0x1912 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1227 PUSH1 0x2A DUP4 PUSH2 0x1569 JUMP JUMPDEST SWAP2 POP PUSH2 0x1232 DUP3 PUSH2 0x193B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x124A PUSH1 0x28 DUP4 PUSH2 0x1569 JUMP JUMPDEST SWAP2 POP PUSH2 0x1255 DUP3 PUSH2 0x198A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x126D PUSH1 0x1F DUP4 PUSH2 0x1569 JUMP JUMPDEST SWAP2 POP PUSH2 0x1278 DUP3 PUSH2 0x19D9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1290 PUSH1 0x1B DUP4 PUSH2 0x1569 JUMP JUMPDEST SWAP2 POP PUSH2 0x129B DUP3 PUSH2 0x1A02 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12AF DUP2 PUSH2 0x163F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12C1 DUP3 DUP5 PUSH2 0x1089 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12E1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x107A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x12FC PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x107A JUMP JUMPDEST PUSH2 0x1309 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x107A JUMP JUMPDEST PUSH2 0x1316 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x12A6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1333 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x107A JUMP JUMPDEST PUSH2 0x1340 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x12A6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x135C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x137C DUP2 DUP5 PUSH2 0x10C9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x139D DUP2 PUSH2 0x1102 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13BD DUP2 PUSH2 0x1125 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13DD DUP2 PUSH2 0x1148 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13FD DUP2 PUSH2 0x116B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x141D DUP2 PUSH2 0x118E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x143D DUP2 PUSH2 0x11B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x145D DUP2 PUSH2 0x11D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x147D DUP2 PUSH2 0x11F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x149D DUP2 PUSH2 0x121A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14BD DUP2 PUSH2 0x123D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14DD DUP2 PUSH2 0x1260 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14FD DUP2 PUSH2 0x1283 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1519 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x12A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1534 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x12A6 JUMP JUMPDEST PUSH2 0x1541 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x12A6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1585 DUP3 PUSH2 0x163F JUMP JUMPDEST SWAP2 POP PUSH2 0x1590 DUP4 PUSH2 0x163F JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x15C5 JUMPI PUSH2 0x15C4 PUSH2 0x16A0 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15DB DUP3 PUSH2 0x163F JUMP JUMPDEST SWAP2 POP PUSH2 0x15E6 DUP4 PUSH2 0x163F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x15F6 JUMPI PUSH2 0x15F5 PUSH2 0x16CF JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x160C DUP3 PUSH2 0x161F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1654 DUP3 PUSH2 0x165B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1666 DUP3 PUSH2 0x161F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x168B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1670 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x169A JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E742069732067726561746572207468616E207468652062616C616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6365206F6620636F6E7472616374000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820555344540000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x546865206E756D626572206F6620746F6B656E73207468617420757365727320 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x77616E7420746F207075726368617365206578636565647320746865206E756D PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x626572206F6620746F6B656E732063757272656E746C7920617661696C61626C PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6520666F72207075726368617365000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5472616E7366657220746F206D73672E73656E646572206661696C6564000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x412073696E676C6520757365722063616E6E6F742062757920746F6F206D616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7920746F6B656E73000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5472616E7366657220746F20636F6E7472616374206661696C65640000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x1A34 DUP2 PUSH2 0x1601 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1A4B DUP2 PUSH2 0x1613 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1A62 DUP2 PUSH2 0x163F JUMP JUMPDEST DUP2 EQ PUSH2 0x1A6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 0xB0 0xB0 0xB6 0xBD 0xF9 SLT 0xD CALLDATALOAD 0xB5 0xE9 PUSH2 0x6C83 0xBD PUSH11 0x43197ADD9CD53DA28EACBC DUP13 POP EXTCODEHASH ORIGIN 0xBD PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "557:3530:3:-:0;;;1121:321;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;1716:1:1;1821:7;:22;;;;1282:12:3;1268:4;;:27;;;;;;;;;;;;;;;;;;1322:13;1305:7;;:31;;;;;;;;;;;;;;;;;;1361:13;1346:12;:28;;;;1395:9;1384:8;:20;;;;1121:321;;;;557:3530;;640:96:2;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2433:187;;:::o;7:143:8:-;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:143::-;213:5;244:6;238:13;229:22;;260:33;287:5;260:33;:::i;:::-;219:80;;;;:::o;305:753::-;402:6;410;418;426;475:3;463:9;454:7;450:23;446:33;443:2;;;492:1;489;482:12;443:2;535:1;560:64;616:7;607:6;596:9;592:22;560:64;:::i;:::-;550:74;;506:128;673:2;699:64;755:7;746:6;735:9;731:22;699:64;:::i;:::-;689:74;;644:129;812:2;838:64;894:7;885:6;874:9;870:22;838:64;:::i;:::-;828:74;;783:129;951:2;977:64;1033:7;1024:6;1013:9;1009:22;977:64;:::i;:::-;967:74;;922:129;433:625;;;;;;;:::o;1064:96::-;1101:7;1130:24;1148:5;1130:24;:::i;:::-;1119:35;;1109:51;;;:::o;1166:126::-;1203:7;1243:42;1236:5;1232:54;1221:65;;1211:81;;;:::o;1298:77::-;1335:7;1364:5;1353:16;;1343:32;;;:::o;1381:122::-;1454:24;1472:5;1454:24;:::i;:::-;1447:5;1444:35;1434:2;;1493:1;1490;1483:12;1434:2;1424:79;:::o;1509:122::-;1582:24;1600:5;1582:24;:::i;:::-;1575:5;1572:35;1562:2;;1621:1;1618;1611:12;1562:2;1552:79;:::o;557:3530:3:-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:20417:8",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:8",
														"type": ""
													}
												],
												"src": "7:139:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "212:77:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "222:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "237:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "231:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "222:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "277:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "253:23:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "253:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "253:30:8"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "190:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "198:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "206:5:8",
														"type": ""
													}
												],
												"src": "152:137:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "347:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "357:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "379:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "366:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "366:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "357:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "422:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "395:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "395:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "395:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "325:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "333:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "341:5:8",
														"type": ""
													}
												],
												"src": "295:139:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "503:80:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "513:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "528:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "522:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "522:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "513:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "571:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "544:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "544:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "481:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "489:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "497:5:8",
														"type": ""
													}
												],
												"src": "440:143:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "655:196:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "701:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "710:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "713:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "703:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "703:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "703:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "676:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "685:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "672:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "672:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "697:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "668:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "668:32:8"
															},
															"nodeType": "YulIf",
															"src": "665:2:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "727:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "742:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "756:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "746:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "771:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "806:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "817:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "802:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "802:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "826:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "781:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "781:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "771:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "625:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "636:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "648:6:8",
														"type": ""
													}
												],
												"src": "589:262:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "931:204:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "977:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "986:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "989:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "979:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "979:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "979:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "952:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "961:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "948:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "973:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "944:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "944:32:8"
															},
															"nodeType": "YulIf",
															"src": "941:2:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "1003:125:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1018:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1032:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1022:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1047:71:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1090:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1101:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1086:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1086:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1110:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1057:28:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1057:61:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1047:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "901:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "912:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "924:6:8",
														"type": ""
													}
												],
												"src": "857:278:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1207:196:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1253:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1262:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1265:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1255:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1255:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1255:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1228:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1237:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1224:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1224:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1249:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1220:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1220:32:8"
															},
															"nodeType": "YulIf",
															"src": "1217:2:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "1279:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1294:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1308:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1298:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1323:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1358:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1369:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1354:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1354:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1378:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1333:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1333:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1323:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1177:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1188:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1200:6:8",
														"type": ""
													}
												],
												"src": "1141:262:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1486:207:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1532:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1541:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1544:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1534:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1534:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1534:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1507:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1516:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1503:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1503:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1528:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1499:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1499:32:8"
															},
															"nodeType": "YulIf",
															"src": "1496:2:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "1558:128:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1573:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1587:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1577:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1602:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1648:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1659:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1644:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1644:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1668:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1612:31:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1612:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1602:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1456:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1467:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1479:6:8",
														"type": ""
													}
												],
												"src": "1409:284:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1764:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1781:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1804:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1786:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1786:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1774:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1774:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1774:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1752:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1759:3:8",
														"type": ""
													}
												],
												"src": "1699:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1931:265:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1941:52:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1987:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1955:31:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1955:38:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1945:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2002:95:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2085:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2090:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2009:75:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2009:88:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2002:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2132:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2139:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2128:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2128:16:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2146:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2151:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2106:21:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2106:52:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2106:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2167:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2178:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2183:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2174:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2174:16:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2167:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1912:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1919:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1927:3:8",
														"type": ""
													}
												],
												"src": "1823:373:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2281:80:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2298:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2348:5:8"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$806_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2303:44:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2303:51:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2291:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2291:64:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2291:64:8"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$806_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2269:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2276:3:8",
														"type": ""
													}
												],
												"src": "2202:159:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2459:272:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2469:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2516:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2483:32:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2483:39:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2473:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2531:78:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2597:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2602:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2538:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2538:71:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2531:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2644:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2651:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2640:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2640:16:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2658:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2663:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2618:21:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2618:52:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2618:52:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2679:46:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2690:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2717:6:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2695:21:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2695:29:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2686:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2686:39:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2679:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2440:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2447:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2455:3:8",
														"type": ""
													}
												],
												"src": "2367:364:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2883:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2893:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2959:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2964:2:8",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2900:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2900:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2893:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3065:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_09860fac4af1ee37e0129844fbcbe2b3a883f2f52f18c92ac1fbaada41f6594c",
																	"nodeType": "YulIdentifier",
																	"src": "2976:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2976:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2976:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3078:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3089:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3094:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3085:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3085:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3078:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_09860fac4af1ee37e0129844fbcbe2b3a883f2f52f18c92ac1fbaada41f6594c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2871:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2879:3:8",
														"type": ""
													}
												],
												"src": "2737:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3255:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3265:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3331:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3336:2:8",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3272:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3272:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3265:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3437:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "3348:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3348:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3348:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3450:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3461:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3466:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3457:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3457:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3450:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3243:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3251:3:8",
														"type": ""
													}
												],
												"src": "3109:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3627:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3637:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3703:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3708:2:8",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3644:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3644:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3637:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3809:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3f4c9edb77832b8eb572476d0e088d41e262af00262f660c8e16d8957b4a9d92",
																	"nodeType": "YulIdentifier",
																	"src": "3720:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3720:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3720:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3822:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3833:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3838:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3829:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3829:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3822:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3f4c9edb77832b8eb572476d0e088d41e262af00262f660c8e16d8957b4a9d92_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3615:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3623:3:8",
														"type": ""
													}
												],
												"src": "3481:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3999:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4009:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4075:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4080:2:8",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4016:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4016:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4009:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4181:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																	"nodeType": "YulIdentifier",
																	"src": "4092:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4092:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4092:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4194:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4205:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4210:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4201:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4201:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4194:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3987:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3995:3:8",
														"type": ""
													}
												],
												"src": "3853:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4371:222:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4381:75:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4447:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4452:3:8",
																		"type": "",
																		"value": "110"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4388:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4388:68:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4381:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4554:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8117a842b1b74b9f085d66bcb31c74534644607cf75899dbba62f4f92bdb2e15",
																	"nodeType": "YulIdentifier",
																	"src": "4465:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4465:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4465:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4567:20:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4578:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4583:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4574:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4574:13:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4567:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8117a842b1b74b9f085d66bcb31c74534644607cf75899dbba62f4f92bdb2e15_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4359:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4367:3:8",
														"type": ""
													}
												],
												"src": "4225:368:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4745:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4755:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4821:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4826:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4762:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4762:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4755:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4927:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "4838:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4838:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4838:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4940:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4951:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4956:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4947:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4947:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4940:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4733:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4741:3:8",
														"type": ""
													}
												],
												"src": "4599:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5117:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5127:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5193:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5198:2:8",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5134:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5134:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5127:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5299:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b8487189d7c5947907556565e7b58776a15e36c5b0e47d9f7a183fcbb6db6633",
																	"nodeType": "YulIdentifier",
																	"src": "5210:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5210:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5210:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5312:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5323:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5328:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5319:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5319:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5312:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b8487189d7c5947907556565e7b58776a15e36c5b0e47d9f7a183fcbb6db6633_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5105:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5113:3:8",
														"type": ""
													}
												],
												"src": "4971:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5489:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5499:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5565:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5570:2:8",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5506:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5506:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5499:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5671:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																	"nodeType": "YulIdentifier",
																	"src": "5582:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5582:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5582:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5684:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5695:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5700:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5691:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5691:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5684:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5477:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5485:3:8",
														"type": ""
													}
												],
												"src": "5343:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5861:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5871:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5937:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5942:2:8",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5878:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5878:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5871:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6043:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																	"nodeType": "YulIdentifier",
																	"src": "5954:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5954:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5954:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6056:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6067:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6072:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6063:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6063:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6056:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5849:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5857:3:8",
														"type": ""
													}
												],
												"src": "5715:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6233:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6243:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6309:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6314:2:8",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6250:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6250:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6243:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6415:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e94ebbe97738d26ef18f98359dd710e88707511548aea5cdd20da1ff63cb4b15",
																	"nodeType": "YulIdentifier",
																	"src": "6326:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6326:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6326:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6428:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6439:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6444:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6435:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6435:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6428:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e94ebbe97738d26ef18f98359dd710e88707511548aea5cdd20da1ff63cb4b15_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6221:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6229:3:8",
														"type": ""
													}
												],
												"src": "6087:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6605:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6615:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6681:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6686:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6622:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6622:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6615:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6787:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nodeType": "YulIdentifier",
																	"src": "6698:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6698:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6698:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6800:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6811:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6816:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6807:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6807:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6800:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6593:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6601:3:8",
														"type": ""
													}
												],
												"src": "6459:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6977:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6987:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7053:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7058:2:8",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6994:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6994:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6987:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7159:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f7e29493e369d5887701308a5470d671ee67c6441cb80cb1cae94c614ec3083e",
																	"nodeType": "YulIdentifier",
																	"src": "7070:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7070:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7070:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7172:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7183:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7188:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7179:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7179:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7172:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f7e29493e369d5887701308a5470d671ee67c6441cb80cb1cae94c614ec3083e_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6965:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6973:3:8",
														"type": ""
													}
												],
												"src": "6831:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7268:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7285:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7308:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7290:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7290:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7278:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7278:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7278:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7256:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7263:3:8",
														"type": ""
													}
												],
												"src": "7203:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7461:137:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7472:100:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7559:6:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7568:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7479:79:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7479:93:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7472:3:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7582:10:8",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "7589:3:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7582:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7440:3:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7446:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7457:3:8",
														"type": ""
													}
												],
												"src": "7327:271:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7702:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7712:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7724:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7735:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7720:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7720:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7712:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7792:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7805:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7816:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7801:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7801:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7748:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7748:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7748:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7674:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7686:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7697:4:8",
														"type": ""
													}
												],
												"src": "7604:222:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7986:288:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7996:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8008:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8019:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8004:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8004:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7996:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8076:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8089:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8100:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8085:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8085:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8032:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8032:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8032:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8157:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8170:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8181:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8166:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8166:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8113:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8113:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8113:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "8239:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8252:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8263:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8248:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8248:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8195:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8195:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8195:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7942:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7954:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7962:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7970:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7981:4:8",
														"type": ""
													}
												],
												"src": "7832:442:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8406:206:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8416:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8428:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8439:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8424:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8424:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8416:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8496:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8509:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8520:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8505:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8505:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8452:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8452:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8452:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8577:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8590:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8601:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8586:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8586:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8533:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8533:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8533:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8370:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8382:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8390:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8401:4:8",
														"type": ""
													}
												],
												"src": "8280:332:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8730:138:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8740:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8752:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8763:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8748:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8748:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8740:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8834:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8847:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8858:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8843:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8843:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$806_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8776:57:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8776:85:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8776:85:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$806__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8702:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8714:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8725:4:8",
														"type": ""
													}
												],
												"src": "8618:250:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8992:195:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9002:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9014:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9025:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9010:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9010:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9002:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9049:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9060:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9045:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9045:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9068:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9074:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9064:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9064:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9038:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9038:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9038:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9094:86:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9166:6:8"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9175:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9102:63:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9102:78:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9094:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8964:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8976:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8987:4:8",
														"type": ""
													}
												],
												"src": "8874:313:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9364:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9374:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9386:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9397:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9382:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9382:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9374:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9421:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9432:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9417:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9417:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9440:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9446:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9436:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9436:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9410:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9410:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9410:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9466:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9600:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_09860fac4af1ee37e0129844fbcbe2b3a883f2f52f18c92ac1fbaada41f6594c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9474:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9474:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9466:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_09860fac4af1ee37e0129844fbcbe2b3a883f2f52f18c92ac1fbaada41f6594c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9344:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9359:4:8",
														"type": ""
													}
												],
												"src": "9193:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9789:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9799:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9811:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9822:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9807:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9807:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9799:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9846:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9857:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9842:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9842:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9865:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9871:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9861:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9861:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9835:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9835:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9835:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9891:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10025:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9899:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9899:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9891:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9769:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9784:4:8",
														"type": ""
													}
												],
												"src": "9618:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10214:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10224:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10236:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10247:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10232:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10232:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10224:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10271:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10282:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10267:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10267:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10290:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10296:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10286:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10286:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10260:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10260:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10260:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10316:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10450:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3f4c9edb77832b8eb572476d0e088d41e262af00262f660c8e16d8957b4a9d92_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10324:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10324:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10316:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3f4c9edb77832b8eb572476d0e088d41e262af00262f660c8e16d8957b4a9d92__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10194:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10209:4:8",
														"type": ""
													}
												],
												"src": "10043:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10639:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10649:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10661:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10672:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10657:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10657:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10649:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10696:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10707:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10692:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10692:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10715:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10721:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10711:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10711:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10685:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10685:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10685:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10741:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10875:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10749:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10749:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10741:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10619:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10634:4:8",
														"type": ""
													}
												],
												"src": "10468:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11064:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11074:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11086:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11097:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11082:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11082:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11074:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11121:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11132:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11117:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11117:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11140:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11146:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11136:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11136:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11110:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11110:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11110:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11166:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11300:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8117a842b1b74b9f085d66bcb31c74534644607cf75899dbba62f4f92bdb2e15_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11174:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11174:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11166:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8117a842b1b74b9f085d66bcb31c74534644607cf75899dbba62f4f92bdb2e15__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11044:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11059:4:8",
														"type": ""
													}
												],
												"src": "10893:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11489:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11499:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11511:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11522:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11507:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11507:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11499:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11546:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11557:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11542:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11542:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11565:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11571:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11561:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11561:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11535:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11535:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11535:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11591:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11725:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11599:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11599:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11591:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11469:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11484:4:8",
														"type": ""
													}
												],
												"src": "11318:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11914:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11924:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11936:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11947:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11932:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11932:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11924:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11971:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11982:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11967:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11967:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11990:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11996:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11986:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11986:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11960:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11960:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11960:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12016:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12150:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b8487189d7c5947907556565e7b58776a15e36c5b0e47d9f7a183fcbb6db6633_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12024:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12024:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12016:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b8487189d7c5947907556565e7b58776a15e36c5b0e47d9f7a183fcbb6db6633__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11894:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11909:4:8",
														"type": ""
													}
												],
												"src": "11743:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12339:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12349:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12361:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12372:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12357:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12357:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12349:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12396:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12407:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12392:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12392:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12415:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12421:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12411:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12411:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12385:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12385:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12385:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12441:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12575:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12449:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12449:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12441:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12319:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12334:4:8",
														"type": ""
													}
												],
												"src": "12168:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12764:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12774:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12786:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12797:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12782:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12782:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12774:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12821:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12832:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12817:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12817:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12840:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12846:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12836:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12836:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12810:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12810:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12810:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12866:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13000:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12874:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12874:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12866:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12744:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12759:4:8",
														"type": ""
													}
												],
												"src": "12593:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13189:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13199:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13211:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13222:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13207:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13207:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13199:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13246:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13257:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13242:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13242:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13265:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13271:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13261:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13261:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13235:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13235:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13235:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13291:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13425:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e94ebbe97738d26ef18f98359dd710e88707511548aea5cdd20da1ff63cb4b15_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13299:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13299:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13291:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e94ebbe97738d26ef18f98359dd710e88707511548aea5cdd20da1ff63cb4b15__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13169:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13184:4:8",
														"type": ""
													}
												],
												"src": "13018:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13614:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13624:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13636:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13647:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13632:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13632:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13624:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13671:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13682:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13667:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13667:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13690:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13696:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13686:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13686:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13660:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13660:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13660:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13716:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13850:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13724:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13724:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13716:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13594:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13609:4:8",
														"type": ""
													}
												],
												"src": "13443:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14039:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14049:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14061:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14072:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14057:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14057:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14049:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14096:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14107:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14092:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14092:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14115:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14121:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14111:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14111:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14085:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14085:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14085:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14141:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14275:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f7e29493e369d5887701308a5470d671ee67c6441cb80cb1cae94c614ec3083e_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14149:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14149:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14141:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f7e29493e369d5887701308a5470d671ee67c6441cb80cb1cae94c614ec3083e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14019:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14034:4:8",
														"type": ""
													}
												],
												"src": "13868:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14391:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14401:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14413:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14424:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14409:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14409:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14401:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14481:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14494:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14505:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14490:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14490:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14437:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14437:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14437:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14363:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14375:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14386:4:8",
														"type": ""
													}
												],
												"src": "14293:222:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14647:206:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14657:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14669:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14680:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14665:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14665:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14657:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14737:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14750:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14761:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14746:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14746:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14693:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14693:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14693:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "14818:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14831:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14842:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14827:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14827:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14774:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14774:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14774:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14611:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14623:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14631:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14642:4:8",
														"type": ""
													}
												],
												"src": "14521:332:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14917:40:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14928:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14944:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14938:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "14938:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "14928:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14900:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14910:6:8",
														"type": ""
													}
												],
												"src": "14859:98:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15022:40:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15033:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15049:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15043:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15043:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "15033:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15005:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "15015:6:8",
														"type": ""
													}
												],
												"src": "14963:99:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15181:34:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15191:18:8",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "15206:3:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "15191:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15153:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "15158:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "15169:11:8",
														"type": ""
													}
												],
												"src": "15068:147:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15317:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15334:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15339:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15327:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15327:19:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15327:19:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15355:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15374:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15379:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15370:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15370:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "15355:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15289:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "15294:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "15305:11:8",
														"type": ""
													}
												],
												"src": "15221:169:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15440:261:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15450:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15473:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15455:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15455:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "15450:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15484:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15507:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15489:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15489:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "15484:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15647:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15649:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15649:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15649:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15568:1:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15575:66:8",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "15643:1:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15571:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15571:74:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "15565:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15565:81:8"
															},
															"nodeType": "YulIf",
															"src": "15562:2:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15679:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15690:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15693:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15686:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15686:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "15679:3:8"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "15427:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "15430:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "15436:3:8",
														"type": ""
													}
												],
												"src": "15396:305:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15749:143:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15759:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15782:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15764:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15764:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "15759:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15793:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15816:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15798:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15798:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "15793:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15840:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "15842:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15842:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15842:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15837:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15830:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15830:9:8"
															},
															"nodeType": "YulIf",
															"src": "15827:2:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15872:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15881:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15884:1:8"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "15877:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15877:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "15872:1:8"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "15738:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "15741:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "15747:1:8",
														"type": ""
													}
												],
												"src": "15707:185:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15943:51:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15953:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15982:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "15964:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "15964:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "15953:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15925:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "15935:7:8",
														"type": ""
													}
												],
												"src": "15898:96:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16042:48:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16052:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "16077:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "16070:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16070:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16063:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16063:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "16052:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16024:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "16034:7:8",
														"type": ""
													}
												],
												"src": "16000:90:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16141:81:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16151:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16166:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16173:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "16162:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16162:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "16151:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16123:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "16133:7:8",
														"type": ""
													}
												],
												"src": "16096:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16273:32:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16283:16:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "16294:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "16283:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16255:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "16265:7:8",
														"type": ""
													}
												],
												"src": "16228:77:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16385:80:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16395:64:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16453:5:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_contract$_IERC20_$806_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "16408:44:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16408:51:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "16395:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$806_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16365:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "16375:9:8",
														"type": ""
													}
												],
												"src": "16311:154:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16545:53:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16555:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16586:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "16568:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16568:24:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "16555:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$806_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16525:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "16535:9:8",
														"type": ""
													}
												],
												"src": "16471:127:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16653:258:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16663:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "16672:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "16667:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16732:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "16757:3:8"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "16762:1:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "16753:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "16753:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "16776:3:8"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "16781:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "16772:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "16772:11:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "16766:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "16766:18:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "16746:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16746:39:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16746:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "16693:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16696:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "16690:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16690:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "16704:19:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "16706:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "16715:1:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16718:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "16711:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16711:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "16706:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "16686:3:8",
																"statements": []
															},
															"src": "16682:113:8"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16829:76:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "16879:3:8"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "16884:6:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "16875:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "16875:16:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16893:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "16868:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16868:27:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16868:27:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "16810:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16813:6:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "16807:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16807:13:8"
															},
															"nodeType": "YulIf",
															"src": "16804:2:8"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "16635:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "16640:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "16645:6:8",
														"type": ""
													}
												],
												"src": "16604:307:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16945:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16962:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16965:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16955:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "16955:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16955:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17059:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17062:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17052:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17052:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17052:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17083:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17086:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "17076:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17076:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17076:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "16917:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17131:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17148:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17151:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17141:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17141:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17141:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17245:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17248:4:8",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17238:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17238:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17238:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17269:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17272:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "17262:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17262:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17262:15:8"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "17103:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17337:54:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17347:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17365:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17372:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17361:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17361:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17381:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "17377:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17377:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "17357:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17357:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "17347:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17320:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "17330:6:8",
														"type": ""
													}
												],
												"src": "17289:102:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17503:127:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17525:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17533:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17521:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17521:14:8"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17537:34:8",
																		"type": "",
																		"value": "Amount is greater than the balan"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17514:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17514:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17514:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17593:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17601:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17589:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17589:15:8"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17606:16:8",
																		"type": "",
																		"value": "ce of contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17582:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17582:41:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17582:41:8"
														}
													]
												},
												"name": "store_literal_in_memory_09860fac4af1ee37e0129844fbcbe2b3a883f2f52f18c92ac1fbaada41f6594c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17495:6:8",
														"type": ""
													}
												],
												"src": "17397:233:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17742:119:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17764:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17772:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17760:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17760:14:8"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17776:34:8",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17753:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17753:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17753:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17832:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17840:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17828:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17828:15:8"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17845:8:8",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17821:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17821:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17821:33:8"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17734:6:8",
														"type": ""
													}
												],
												"src": "17636:225:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17973:59:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17995:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18003:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17991:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17991:14:8"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18007:17:8",
																		"type": "",
																		"value": "Not enough USDT"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17984:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "17984:41:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17984:41:8"
														}
													]
												},
												"name": "store_literal_in_memory_3f4c9edb77832b8eb572476d0e088d41e262af00262f660c8e16d8957b4a9d92",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17965:6:8",
														"type": ""
													}
												],
												"src": "17867:165:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18144:119:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18166:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18174:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18162:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18162:14:8"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18178:34:8",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18155:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18155:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18155:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18234:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18242:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18230:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18230:15:8"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18247:8:8",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18223:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18223:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18223:33:8"
														}
													]
												},
												"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18136:6:8",
														"type": ""
													}
												],
												"src": "18038:225:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18375:265:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18397:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18405:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18393:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18393:14:8"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18409:34:8",
																		"type": "",
																		"value": "The number of tokens that users "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18386:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18386:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18386:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18465:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18473:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18461:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18461:15:8"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18478:34:8",
																		"type": "",
																		"value": "want to purchase exceeds the num"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18454:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18454:59:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18454:59:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18534:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18542:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18530:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18530:15:8"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18547:34:8",
																		"type": "",
																		"value": "ber of tokens currently availabl"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18523:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18523:59:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18523:59:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18603:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18611:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18599:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18599:15:8"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18616:16:8",
																		"type": "",
																		"value": "e for purchase"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18592:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18592:41:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18592:41:8"
														}
													]
												},
												"name": "store_literal_in_memory_8117a842b1b74b9f085d66bcb31c74534644607cf75899dbba62f4f92bdb2e15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18367:6:8",
														"type": ""
													}
												],
												"src": "18269:371:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18752:76:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18774:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18782:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18770:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18770:14:8"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18786:34:8",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18763:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18763:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18763:58:8"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18744:6:8",
														"type": ""
													}
												],
												"src": "18646:182:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18940:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18962:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18970:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18958:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18958:14:8"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18974:31:8",
																		"type": "",
																		"value": "Transfer to msg.sender failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18951:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "18951:55:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18951:55:8"
														}
													]
												},
												"name": "store_literal_in_memory_b8487189d7c5947907556565e7b58776a15e36c5b0e47d9f7a183fcbb6db6633",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18932:6:8",
														"type": ""
													}
												],
												"src": "18834:179:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19125:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19147:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19155:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19143:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19143:14:8"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19159:31:8",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19136:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19136:55:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19136:55:8"
														}
													]
												},
												"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "19117:6:8",
														"type": ""
													}
												],
												"src": "19019:179:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19310:123:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19332:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19340:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19328:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19328:14:8"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19344:34:8",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19321:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19321:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19321:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19400:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19408:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19396:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19396:15:8"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19413:12:8",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19389:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19389:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19389:37:8"
														}
													]
												},
												"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "19302:6:8",
														"type": ""
													}
												],
												"src": "19204:229:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19545:121:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19567:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19575:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19563:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19563:14:8"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19579:34:8",
																		"type": "",
																		"value": "A single user cannot buy too man"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19556:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19556:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19556:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19635:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19643:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19631:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19631:15:8"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19648:10:8",
																		"type": "",
																		"value": "y tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19624:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19624:35:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19624:35:8"
														}
													]
												},
												"name": "store_literal_in_memory_e94ebbe97738d26ef18f98359dd710e88707511548aea5cdd20da1ff63cb4b15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "19537:6:8",
														"type": ""
													}
												],
												"src": "19439:227:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19778:75:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19800:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19808:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19796:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19796:14:8"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19812:33:8",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19789:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19789:57:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19789:57:8"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "19770:6:8",
														"type": ""
													}
												],
												"src": "19672:181:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19965:71:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19987:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19995:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19983:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19983:14:8"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19999:29:8",
																		"type": "",
																		"value": "Transfer to contract failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19976:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "19976:53:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19976:53:8"
														}
													]
												},
												"name": "store_literal_in_memory_f7e29493e369d5887701308a5470d671ee67c6441cb80cb1cae94c614ec3083e",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "19957:6:8",
														"type": ""
													}
												],
												"src": "19859:177:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20085:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20142:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20151:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20154:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "20144:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20144:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20144:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "20108:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "20133:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "20115:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20115:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "20105:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20105:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "20098:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20098:43:8"
															},
															"nodeType": "YulIf",
															"src": "20095:2:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20078:5:8",
														"type": ""
													}
												],
												"src": "20042:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20210:76:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20264:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20273:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20276:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "20266:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20266:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20266:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "20233:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "20255:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "20240:14:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20240:21:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "20230:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20230:32:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "20223:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20223:40:8"
															},
															"nodeType": "YulIf",
															"src": "20220:2:8"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20203:5:8",
														"type": ""
													}
												],
												"src": "20170:116:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20335:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20392:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20401:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20404:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "20394:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20394:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20394:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "20358:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "20383:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "20365:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20365:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "20355:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20355:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "20348:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "20348:43:8"
															},
															"nodeType": "YulIf",
															"src": "20345:2:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20328:5:8",
														"type": ""
													}
												],
												"src": "20292:122:8"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_contract$_IERC20_$806_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$806_to_t_address(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_09860fac4af1ee37e0129844fbcbe2b3a883f2f52f18c92ac1fbaada41f6594c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_09860fac4af1ee37e0129844fbcbe2b3a883f2f52f18c92ac1fbaada41f6594c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_3f4c9edb77832b8eb572476d0e088d41e262af00262f660c8e16d8957b4a9d92_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_3f4c9edb77832b8eb572476d0e088d41e262af00262f660c8e16d8957b4a9d92(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_8117a842b1b74b9f085d66bcb31c74534644607cf75899dbba62f4f92bdb2e15_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 110)\n        store_literal_in_memory_8117a842b1b74b9f085d66bcb31c74534644607cf75899dbba62f4f92bdb2e15(pos)\n        end := add(pos, 128)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_b8487189d7c5947907556565e7b58776a15e36c5b0e47d9f7a183fcbb6db6633_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_b8487189d7c5947907556565e7b58776a15e36c5b0e47d9f7a183fcbb6db6633(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_e94ebbe97738d26ef18f98359dd710e88707511548aea5cdd20da1ff63cb4b15_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_e94ebbe97738d26ef18f98359dd710e88707511548aea5cdd20da1ff63cb4b15(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_f7e29493e369d5887701308a5470d671ee67c6441cb80cb1cae94c614ec3083e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_f7e29493e369d5887701308a5470d671ee67c6441cb80cb1cae94c614ec3083e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$806__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$806_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_09860fac4af1ee37e0129844fbcbe2b3a883f2f52f18c92ac1fbaada41f6594c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_09860fac4af1ee37e0129844fbcbe2b3a883f2f52f18c92ac1fbaada41f6594c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_3f4c9edb77832b8eb572476d0e088d41e262af00262f660c8e16d8957b4a9d92__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3f4c9edb77832b8eb572476d0e088d41e262af00262f660c8e16d8957b4a9d92_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_8117a842b1b74b9f085d66bcb31c74534644607cf75899dbba62f4f92bdb2e15__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8117a842b1b74b9f085d66bcb31c74534644607cf75899dbba62f4f92bdb2e15_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b8487189d7c5947907556565e7b58776a15e36c5b0e47d9f7a183fcbb6db6633__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b8487189d7c5947907556565e7b58776a15e36c5b0e47d9f7a183fcbb6db6633_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e94ebbe97738d26ef18f98359dd710e88707511548aea5cdd20da1ff63cb4b15__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e94ebbe97738d26ef18f98359dd710e88707511548aea5cdd20da1ff63cb4b15_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f7e29493e369d5887701308a5470d671ee67c6441cb80cb1cae94c614ec3083e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f7e29493e369d5887701308a5470d671ee67c6441cb80cb1cae94c614ec3083e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IERC20_$806_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IERC20_$806_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$806_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_09860fac4af1ee37e0129844fbcbe2b3a883f2f52f18c92ac1fbaada41f6594c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount is greater than the balan\")\n\n        mstore(add(memPtr, 32), \"ce of contract\")\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_3f4c9edb77832b8eb572476d0e088d41e262af00262f660c8e16d8957b4a9d92(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough USDT\")\n\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function store_literal_in_memory_8117a842b1b74b9f085d66bcb31c74534644607cf75899dbba62f4f92bdb2e15(memPtr) {\n\n        mstore(add(memPtr, 0), \"The number of tokens that users \")\n\n        mstore(add(memPtr, 32), \"want to purchase exceeds the num\")\n\n        mstore(add(memPtr, 64), \"ber of tokens currently availabl\")\n\n        mstore(add(memPtr, 96), \"e for purchase\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_b8487189d7c5947907556565e7b58776a15e36c5b0e47d9f7a183fcbb6db6633(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer to msg.sender failed\")\n\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: ERC20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function store_literal_in_memory_e94ebbe97738d26ef18f98359dd710e88707511548aea5cdd20da1ff63cb4b15(memPtr) {\n\n        mstore(add(memPtr, 0), \"A single user cannot buy too man\")\n\n        mstore(add(memPtr, 32), \"y tokens\")\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function store_literal_in_memory_f7e29493e369d5887701308a5470d671ee67c6441cb80cb1cae94c614ec3083e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer to contract failed\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100b45760003560e01c80637a80d062116100715780637a80d062146101535780638d951832146101835780638da5cb5b146101a1578063b8fcf937146101bf578063db068e0e146101dd578063f2fde38b146101f9576100b4565b80632d296bf1146100b95780632f48ab7d146100d55780633ba0b9a9146100f35780633ea521ef1461011157806365583cae1461012d578063715018a614610149575b600080fd5b6100d360048036038101906100ce9190611028565b610215565b005b6100dd610775565b6040516100ea9190611347565b60405180910390f35b6100fb61079b565b6040516101089190611504565b60405180910390f35b61012b60048036038101906101269190611028565b6107a1565b005b61014760048036038101906101429190611028565b610997565b005b6101516109a9565b005b61016d60048036038101906101689190610fd6565b6109bd565b60405161017a9190611504565b60405180910390f35b61018b6109d5565b6040516101989190611504565b60405180910390f35b6101a96109db565b6040516101b691906112cc565b60405180910390f35b6101c7610a04565b6040516101d49190611347565b60405180910390f35b6101f760048036038101906101f29190611028565b610a2a565b005b610213600480360381019061020e9190610fd6565b610a3c565b005b61021d610ac0565b600061023460045483610b1090919063ffffffff16565b905061028882600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b2690919063ffffffff16565b60055410156102cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c3906114a4565b60405180910390fd5b81600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161032891906112cc565b60206040518083038186803b15801561034057600080fd5b505afa158015610354573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103789190611051565b10156103b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b090611404565b60405180910390fd5b80600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161041591906112cc565b60206040518083038186803b15801561042d57600080fd5b505afa158015610441573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104659190611051565b10156104a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049d906113c4565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610505939291906112e7565b602060405180830381600087803b15801561051f57600080fd5b505af1158015610533573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105579190610fff565b610596576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058d906114e4565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b81526004016105f392919061131e565b602060405180830381600087803b15801561060d57600080fd5b505af1158015610621573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106459190610fff565b610684576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067b90611444565b60405180910390fd5b6106d682600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b2690919063ffffffff16565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff167ff6f342132c7de5e5a1e99c8efae544c94731f3ff093f5c3c97c6973d9415cdfb828460405161076192919061151f565b60405180910390a250610772610b3c565b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045481565b6107a9610b45565b80600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161080591906112cc565b60206040518083038186803b15801561081d57600080fd5b505afa158015610831573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108559190611051565b1015610896576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088d90611384565b60405180910390fd5b6109946108a16109db565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016108fc91906112cc565b60206040518083038186803b15801561091457600080fd5b505afa158015610928573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094c9190611051565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610bc39092919063ffffffff16565b50565b61099f610b45565b8060058190555050565b6109b1610b45565b6109bb6000610c49565b565b60066020528060005260406000206000915090505481565b60055481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610a32610b45565b8060048190555050565b610a44610b45565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610ab4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aab906113a4565b60405180910390fd5b610abd81610c49565b50565b60026001541415610b06576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610afd906114c4565b60405180910390fd5b6002600181905550565b60008183610b1e91906115d0565b905092915050565b60008183610b34919061157a565b905092915050565b60018081905550565b610b4d610d0d565b73ffffffffffffffffffffffffffffffffffffffff16610b6b6109db565b73ffffffffffffffffffffffffffffffffffffffff1614610bc1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bb890611424565b60405180910390fd5b565b610c448363a9059cbb60e01b8484604051602401610be292919061131e565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610d15565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000610d77826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610ddc9092919063ffffffff16565b9050600081511115610dd75780806020019051810190610d979190610fff565b610dd6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dcd90611484565b60405180910390fd5b5b505050565b6060610deb8484600085610df4565b90509392505050565b606082471015610e39576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e30906113e4565b60405180910390fd5b610e4285610f08565b610e81576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7890611464565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610eaa91906112b5565b60006040518083038185875af1925050503d8060008114610ee7576040519150601f19603f3d011682016040523d82523d6000602084013e610eec565b606091505b5091509150610efc828286610f1b565b92505050949350505050565b600080823b905060008111915050919050565b60608315610f2b57829050610f7b565b600083511115610f3e5782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f729190611362565b60405180910390fd5b9392505050565b600081359050610f9181611a2b565b92915050565b600081519050610fa681611a42565b92915050565b600081359050610fbb81611a59565b92915050565b600081519050610fd081611a59565b92915050565b600060208284031215610fe857600080fd5b6000610ff684828501610f82565b91505092915050565b60006020828403121561101157600080fd5b600061101f84828501610f97565b91505092915050565b60006020828403121561103a57600080fd5b600061104884828501610fac565b91505092915050565b60006020828403121561106357600080fd5b600061107184828501610fc1565b91505092915050565b61108381611601565b82525050565b600061109482611548565b61109e818561155e565b93506110ae81856020860161166d565b80840191505092915050565b6110c381611649565b82525050565b60006110d482611553565b6110de8185611569565b93506110ee81856020860161166d565b6110f7816116fe565b840191505092915050565b600061110f602e83611569565b915061111a8261170f565b604082019050919050565b6000611132602683611569565b915061113d8261175e565b604082019050919050565b6000611155600f83611569565b9150611160826117ad565b602082019050919050565b6000611178602683611569565b9150611183826117d6565b604082019050919050565b600061119b606e83611569565b91506111a682611825565b608082019050919050565b60006111be602083611569565b91506111c9826118c0565b602082019050919050565b60006111e1601d83611569565b91506111ec826118e9565b602082019050919050565b6000611204601d83611569565b915061120f82611912565b602082019050919050565b6000611227602a83611569565b91506112328261193b565b604082019050919050565b600061124a602883611569565b91506112558261198a565b604082019050919050565b600061126d601f83611569565b9150611278826119d9565b602082019050919050565b6000611290601b83611569565b915061129b82611a02565b602082019050919050565b6112af8161163f565b82525050565b60006112c18284611089565b915081905092915050565b60006020820190506112e1600083018461107a565b92915050565b60006060820190506112fc600083018661107a565b611309602083018561107a565b61131660408301846112a6565b949350505050565b6000604082019050611333600083018561107a565b61134060208301846112a6565b9392505050565b600060208201905061135c60008301846110ba565b92915050565b6000602082019050818103600083015261137c81846110c9565b905092915050565b6000602082019050818103600083015261139d81611102565b9050919050565b600060208201905081810360008301526113bd81611125565b9050919050565b600060208201905081810360008301526113dd81611148565b9050919050565b600060208201905081810360008301526113fd8161116b565b9050919050565b6000602082019050818103600083015261141d8161118e565b9050919050565b6000602082019050818103600083015261143d816111b1565b9050919050565b6000602082019050818103600083015261145d816111d4565b9050919050565b6000602082019050818103600083015261147d816111f7565b9050919050565b6000602082019050818103600083015261149d8161121a565b9050919050565b600060208201905081810360008301526114bd8161123d565b9050919050565b600060208201905081810360008301526114dd81611260565b9050919050565b600060208201905081810360008301526114fd81611283565b9050919050565b600060208201905061151960008301846112a6565b92915050565b600060408201905061153460008301856112a6565b61154160208301846112a6565b9392505050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b60006115858261163f565b91506115908361163f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156115c5576115c46116a0565b5b828201905092915050565b60006115db8261163f565b91506115e68361163f565b9250826115f6576115f56116cf565b5b828204905092915050565b600061160c8261161f565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006116548261165b565b9050919050565b60006116668261161f565b9050919050565b60005b8381101561168b578082015181840152602081019050611670565b8381111561169a576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b7f416d6f756e742069732067726561746572207468616e207468652062616c616e60008201527f6365206f6620636f6e7472616374000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4e6f7420656e6f75676820555344540000000000000000000000000000000000600082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f546865206e756d626572206f6620746f6b656e7320746861742075736572732060008201527f77616e7420746f207075726368617365206578636565647320746865206e756d60208201527f626572206f6620746f6b656e732063757272656e746c7920617661696c61626c60408201527f6520666f72207075726368617365000000000000000000000000000000000000606082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f5472616e7366657220746f206d73672e73656e646572206661696c6564000000600082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b7f412073696e676c6520757365722063616e6e6f742062757920746f6f206d616e60008201527f7920746f6b656e73000000000000000000000000000000000000000000000000602082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b7f5472616e7366657220746f20636f6e7472616374206661696c65640000000000600082015250565b611a3481611601565b8114611a3f57600080fd5b50565b611a4b81611613565b8114611a5657600080fd5b50565b611a628161163f565b8114611a6d57600080fd5b5056fea2646970667358221220b5b0b0b6bdf9120d35b5e9616c83bd6a43197add9cd53da28eacbc8c503f32bd64736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7A80D062 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x7A80D062 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x8D951832 EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0xB8FCF937 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0xDB068E0E EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1F9 JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0x2D296BF1 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x2F48AB7D EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x3BA0B9A9 EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x3EA521EF EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x65583CAE EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x149 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x1028 JUMP JUMPDEST PUSH2 0x215 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDD PUSH2 0x775 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEA SWAP2 SWAP1 PUSH2 0x1347 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFB PUSH2 0x79B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x108 SWAP2 SWAP1 PUSH2 0x1504 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x126 SWAP2 SWAP1 PUSH2 0x1028 JUMP JUMPDEST PUSH2 0x7A1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x147 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x142 SWAP2 SWAP1 PUSH2 0x1028 JUMP JUMPDEST PUSH2 0x997 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x151 PUSH2 0x9A9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x168 SWAP2 SWAP1 PUSH2 0xFD6 JUMP JUMPDEST PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x1504 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18B PUSH2 0x9D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x1504 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A9 PUSH2 0x9DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x12CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C7 PUSH2 0xA04 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0x1347 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0x1028 JUMP JUMPDEST PUSH2 0xA2A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x213 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20E SWAP2 SWAP1 PUSH2 0xFD6 JUMP JUMPDEST PUSH2 0xA3C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21D PUSH2 0xAC0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x234 PUSH1 0x4 SLOAD DUP4 PUSH2 0xB10 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x288 DUP3 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB26 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 SLOAD LT ISZERO PUSH2 0x2CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C3 SWAP1 PUSH2 0x14A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x12CC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x340 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x354 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x378 SWAP2 SWAP1 PUSH2 0x1051 JUMP JUMPDEST LT ISZERO PUSH2 0x3B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3B0 SWAP1 PUSH2 0x1404 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x415 SWAP2 SWAP1 PUSH2 0x12CC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x42D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x441 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x465 SWAP2 SWAP1 PUSH2 0x1051 JUMP JUMPDEST LT ISZERO PUSH2 0x4A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49D SWAP1 PUSH2 0x13C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x505 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x12E7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x51F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x533 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x557 SWAP2 SWAP1 PUSH2 0xFFF JUMP JUMPDEST PUSH2 0x596 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58D SWAP1 PUSH2 0x14E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F3 SWAP3 SWAP2 SWAP1 PUSH2 0x131E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x60D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x621 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x645 SWAP2 SWAP1 PUSH2 0xFFF JUMP JUMPDEST PUSH2 0x684 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67B SWAP1 PUSH2 0x1444 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6D6 DUP3 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB26 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF6F342132C7DE5E5A1E99C8EFAE544C94731F3FF093F5C3C97C6973D9415CDFB DUP3 DUP5 PUSH1 0x40 MLOAD PUSH2 0x761 SWAP3 SWAP2 SWAP1 PUSH2 0x151F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x772 PUSH2 0xB3C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x7A9 PUSH2 0xB45 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x805 SWAP2 SWAP1 PUSH2 0x12CC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x81D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x831 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x855 SWAP2 SWAP1 PUSH2 0x1051 JUMP JUMPDEST LT ISZERO PUSH2 0x896 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x88D SWAP1 PUSH2 0x1384 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x994 PUSH2 0x8A1 PUSH2 0x9DB JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8FC SWAP2 SWAP1 PUSH2 0x12CC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x914 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x928 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x94C SWAP2 SWAP1 PUSH2 0x1051 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBC3 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x99F PUSH2 0xB45 JUMP JUMPDEST DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x9B1 PUSH2 0xB45 JUMP JUMPDEST PUSH2 0x9BB PUSH1 0x0 PUSH2 0xC49 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xA32 PUSH2 0xB45 JUMP JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xA44 PUSH2 0xB45 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xAB4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAAB SWAP1 PUSH2 0x13A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xABD DUP2 PUSH2 0xC49 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xB06 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAFD SWAP1 PUSH2 0x14C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xB1E SWAP2 SWAP1 PUSH2 0x15D0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xB34 SWAP2 SWAP1 PUSH2 0x157A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xB4D PUSH2 0xD0D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB6B PUSH2 0x9DB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBC1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBB8 SWAP1 PUSH2 0x1424 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xC44 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xBE2 SWAP3 SWAP2 SWAP1 PUSH2 0x131E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xD15 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD77 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDDC SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0xDD7 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xD97 SWAP2 SWAP1 PUSH2 0xFFF JUMP JUMPDEST PUSH2 0xDD6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDCD SWAP1 PUSH2 0x1484 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xDEB DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0xDF4 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0xE39 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE30 SWAP1 PUSH2 0x13E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE42 DUP6 PUSH2 0xF08 JUMP JUMPDEST PUSH2 0xE81 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE78 SWAP1 PUSH2 0x1464 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0xEAA SWAP2 SWAP1 PUSH2 0x12B5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xEE7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xEEC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xEFC DUP3 DUP3 DUP7 PUSH2 0xF1B JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0xF2B JUMPI DUP3 SWAP1 POP PUSH2 0xF7B JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0xF3E JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF72 SWAP2 SWAP1 PUSH2 0x1362 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF91 DUP2 PUSH2 0x1A2B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xFA6 DUP2 PUSH2 0x1A42 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFBB DUP2 PUSH2 0x1A59 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xFD0 DUP2 PUSH2 0x1A59 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xFF6 DUP5 DUP3 DUP6 ADD PUSH2 0xF82 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1011 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x101F DUP5 DUP3 DUP6 ADD PUSH2 0xF97 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x103A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1048 DUP5 DUP3 DUP6 ADD PUSH2 0xFAC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1063 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1071 DUP5 DUP3 DUP6 ADD PUSH2 0xFC1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1083 DUP2 PUSH2 0x1601 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1094 DUP3 PUSH2 0x1548 JUMP JUMPDEST PUSH2 0x109E DUP2 DUP6 PUSH2 0x155E JUMP JUMPDEST SWAP4 POP PUSH2 0x10AE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x166D JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10C3 DUP2 PUSH2 0x1649 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10D4 DUP3 PUSH2 0x1553 JUMP JUMPDEST PUSH2 0x10DE DUP2 DUP6 PUSH2 0x1569 JUMP JUMPDEST SWAP4 POP PUSH2 0x10EE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x166D JUMP JUMPDEST PUSH2 0x10F7 DUP2 PUSH2 0x16FE JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x110F PUSH1 0x2E DUP4 PUSH2 0x1569 JUMP JUMPDEST SWAP2 POP PUSH2 0x111A DUP3 PUSH2 0x170F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1132 PUSH1 0x26 DUP4 PUSH2 0x1569 JUMP JUMPDEST SWAP2 POP PUSH2 0x113D DUP3 PUSH2 0x175E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1155 PUSH1 0xF DUP4 PUSH2 0x1569 JUMP JUMPDEST SWAP2 POP PUSH2 0x1160 DUP3 PUSH2 0x17AD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1178 PUSH1 0x26 DUP4 PUSH2 0x1569 JUMP JUMPDEST SWAP2 POP PUSH2 0x1183 DUP3 PUSH2 0x17D6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x119B PUSH1 0x6E DUP4 PUSH2 0x1569 JUMP JUMPDEST SWAP2 POP PUSH2 0x11A6 DUP3 PUSH2 0x1825 JUMP JUMPDEST PUSH1 0x80 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11BE PUSH1 0x20 DUP4 PUSH2 0x1569 JUMP JUMPDEST SWAP2 POP PUSH2 0x11C9 DUP3 PUSH2 0x18C0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11E1 PUSH1 0x1D DUP4 PUSH2 0x1569 JUMP JUMPDEST SWAP2 POP PUSH2 0x11EC DUP3 PUSH2 0x18E9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1204 PUSH1 0x1D DUP4 PUSH2 0x1569 JUMP JUMPDEST SWAP2 POP PUSH2 0x120F DUP3 PUSH2 0x1912 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1227 PUSH1 0x2A DUP4 PUSH2 0x1569 JUMP JUMPDEST SWAP2 POP PUSH2 0x1232 DUP3 PUSH2 0x193B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x124A PUSH1 0x28 DUP4 PUSH2 0x1569 JUMP JUMPDEST SWAP2 POP PUSH2 0x1255 DUP3 PUSH2 0x198A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x126D PUSH1 0x1F DUP4 PUSH2 0x1569 JUMP JUMPDEST SWAP2 POP PUSH2 0x1278 DUP3 PUSH2 0x19D9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1290 PUSH1 0x1B DUP4 PUSH2 0x1569 JUMP JUMPDEST SWAP2 POP PUSH2 0x129B DUP3 PUSH2 0x1A02 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12AF DUP2 PUSH2 0x163F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12C1 DUP3 DUP5 PUSH2 0x1089 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12E1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x107A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x12FC PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x107A JUMP JUMPDEST PUSH2 0x1309 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x107A JUMP JUMPDEST PUSH2 0x1316 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x12A6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1333 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x107A JUMP JUMPDEST PUSH2 0x1340 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x12A6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x135C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x137C DUP2 DUP5 PUSH2 0x10C9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x139D DUP2 PUSH2 0x1102 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13BD DUP2 PUSH2 0x1125 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13DD DUP2 PUSH2 0x1148 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13FD DUP2 PUSH2 0x116B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x141D DUP2 PUSH2 0x118E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x143D DUP2 PUSH2 0x11B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x145D DUP2 PUSH2 0x11D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x147D DUP2 PUSH2 0x11F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x149D DUP2 PUSH2 0x121A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14BD DUP2 PUSH2 0x123D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14DD DUP2 PUSH2 0x1260 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14FD DUP2 PUSH2 0x1283 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1519 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x12A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1534 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x12A6 JUMP JUMPDEST PUSH2 0x1541 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x12A6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1585 DUP3 PUSH2 0x163F JUMP JUMPDEST SWAP2 POP PUSH2 0x1590 DUP4 PUSH2 0x163F JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x15C5 JUMPI PUSH2 0x15C4 PUSH2 0x16A0 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15DB DUP3 PUSH2 0x163F JUMP JUMPDEST SWAP2 POP PUSH2 0x15E6 DUP4 PUSH2 0x163F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x15F6 JUMPI PUSH2 0x15F5 PUSH2 0x16CF JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x160C DUP3 PUSH2 0x161F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1654 DUP3 PUSH2 0x165B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1666 DUP3 PUSH2 0x161F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x168B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1670 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x169A JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E742069732067726561746572207468616E207468652062616C616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6365206F6620636F6E7472616374000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820555344540000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x546865206E756D626572206F6620746F6B656E73207468617420757365727320 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x77616E7420746F207075726368617365206578636565647320746865206E756D PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x626572206F6620746F6B656E732063757272656E746C7920617661696C61626C PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x6520666F72207075726368617365000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5472616E7366657220746F206D73672E73656E646572206661696C6564000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x412073696E676C6520757365722063616E6E6F742062757920746F6F206D616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7920746F6B656E73000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5472616E7366657220746F20636F6E7472616374206661696C65640000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x1A34 DUP2 PUSH2 0x1601 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1A4B DUP2 PUSH2 0x1613 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1A62 DUP2 PUSH2 0x163F JUMP JUMPDEST DUP2 EQ PUSH2 0x1A6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 0xB0 0xB0 0xB6 0xBD 0xF9 SLT 0xD CALLDATALOAD 0xB5 0xE9 PUSH2 0x6C83 0xBD PUSH11 0x43197ADD9CD53DA28EACBC DUP13 POP EXTCODEHASH ORIGIN 0xBD PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "557:3530:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2303:915;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;678:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;781:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3560:235;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3988:97;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1831:101:0;;;:::i;:::-;;947:53:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;878:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1201:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;723:21:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3827:111;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2081:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2303:915:3;2261:21:1;:19;:21::i;:::-;2374:19:3::1;2396:29;2412:12;;2396:11;:15;;:29;;;;:::i;:::-;2374:51;;2516:47;2551:11;2516:18;:30;2535:10;2516:30;;;;;;;;;;;;;;;;:34;;:47;;;;:::i;:::-;2504:8;;:59;;2496:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;2659:11;2625:7;;;;;;;;;;;:17;;;2651:4;2625:32;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:45;;2617:167;;;;;;;;;;;;:::i;:::-;;;;;;;;;2832:11;2802:4;;;;;;;;;;;:14;;;2817:10;2802:26;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:41;;2794:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;2881:4;;;;;;;;;;;:17;;;2899:10;2919:4;2926:11;2881:57;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2873:96;;;;;;;;;;;;:::i;:::-;;;;;;;;;2987:7;;;;;;;;;;;:16;;;3004:10;3016:11;2987:41;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2979:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;3104:47;3139:11;3104:18;:30;3123:10;3104:30;;;;;;;;;;;;;;;;:34;;:47;;;;:::i;:::-;3071:18;:30;3090:10;3071:30;;;;;;;;;;;;;;;:80;;;;3175:10;3166:45;;;3187:11;3199;3166:45;;;;;;;:::i;:::-;;;;;;;;2292:1:1;2303:20:::0;:18;:20::i;:::-;:915:3;:::o;678:18::-;;;;;;;;;;;;;:::o;781:27::-;;;;:::o;3560:235::-;1094:13:0;:11;:13::i;:::-;3665:6:3::1;3634:4;;;;;;;;;;;:14;;;3657:4;3634:29;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:37;;3626:95;;;;;;;;;;;;:::i;:::-;;;;;;;;;3731:57;3749:7;:5;:7::i;:::-;3758:4;;;;;;;;;;;:14;;;3781:4;3758:29;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3731:4;;;;;;;;;;;:17;;;;:57;;;;;:::i;:::-;3560:235:::0;:::o;3988:97::-;1094:13:0;:11;:13::i;:::-;4068:10:3::1;4057:8;:21;;;;3988:97:::0;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;947:53:3:-;;;;;;;;;;;;;;;;;:::o;878:23::-;;;;:::o;1201:85:0:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;723:21:3:-;;;;;;;;;;;;;:::o;3827:111::-;1094:13:0;:11;:13::i;:::-;3918::3::1;3903:12;:28;;;;3827:111:::0;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;;;2161:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;2336:287:1:-;1759:1;2468:7;;:19;;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;3767:96:4:-;3825:7;3855:1;3851;:5;;;;:::i;:::-;3844:12;;3767:96;;;;:::o;2672:::-;2730:7;2760:1;2756;:5;;;;:::i;:::-;2749:12;;2672:96;;;;:::o;2629:209:1:-;1716:1;2809:7;:22;;;;2629:209::o;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;634:175:6:-;716:86;736:5;766:23;;;791:2;795:5;743:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;716:19;:86::i;:::-;634:175;;;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2433:187;;:::o;640:96:2:-;693:7;719:10;712:17;;640:96;:::o;3022:751:6:-;3441:23;3467:69;3495:4;3467:69;;;;;;;;;;;;;;;;;3475:5;3467:27;;;;:69;;;;;:::i;:::-;3441:95;;3570:1;3550:10;:17;:21;3546:221;;;3690:10;3679:30;;;;;;;;;;;;:::i;:::-;3671:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;3546:221;3022:751;;;:::o;3573:193:7:-;3676:12;3707:52;3729:6;3737:4;3743:1;3746:12;3707:21;:52::i;:::-;3700:59;;3573:193;;;;;:::o;4600:523::-;4727:12;4784:5;4759:21;:30;;4751:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;4850:18;4861:6;4850:10;:18::i;:::-;4842:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;4973:12;4987:23;5014:6;:11;;5034:5;5042:4;5014:33;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4972:75;;;;5064:52;5082:7;5091:10;5103:12;5064:17;:52::i;:::-;5057:59;;;;4600:523;;;;;;:::o;718:413::-;778:4;981:12;1090:7;1078:20;1070:28;;1123:1;1116:4;:8;1109:15;;;718:413;;;:::o;7083:725::-;7198:12;7226:7;7222:580;;;7256:10;7249:17;;;;7222:580;7387:1;7367:10;:17;:21;7363:429;;;7625:10;7619:17;7685:15;7672:10;7668:2;7664:19;7657:44;7574:145;7764:12;7757:20;;;;;;;;;;;:::i;:::-;;;;;;;;7083:725;;;;;;:::o;7:139:8:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:137::-;206:5;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;212:77;;;;:::o;295:139::-;341:5;379:6;366:20;357:29;;395:33;422:5;395:33;:::i;:::-;347:87;;;;:::o;440:143::-;497:5;528:6;522:13;513:22;;544:33;571:5;544:33;:::i;:::-;503:80;;;;:::o;589:262::-;648:6;697:2;685:9;676:7;672:23;668:32;665:2;;;713:1;710;703:12;665:2;756:1;781:53;826:7;817:6;806:9;802:22;781:53;:::i;:::-;771:63;;727:117;655:196;;;;:::o;857:278::-;924:6;973:2;961:9;952:7;948:23;944:32;941:2;;;989:1;986;979:12;941:2;1032:1;1057:61;1110:7;1101:6;1090:9;1086:22;1057:61;:::i;:::-;1047:71;;1003:125;931:204;;;;:::o;1141:262::-;1200:6;1249:2;1237:9;1228:7;1224:23;1220:32;1217:2;;;1265:1;1262;1255:12;1217:2;1308:1;1333:53;1378:7;1369:6;1358:9;1354:22;1333:53;:::i;:::-;1323:63;;1279:117;1207:196;;;;:::o;1409:284::-;1479:6;1528:2;1516:9;1507:7;1503:23;1499:32;1496:2;;;1544:1;1541;1534:12;1496:2;1587:1;1612:64;1668:7;1659:6;1648:9;1644:22;1612:64;:::i;:::-;1602:74;;1558:128;1486:207;;;;:::o;1699:118::-;1786:24;1804:5;1786:24;:::i;:::-;1781:3;1774:37;1764:53;;:::o;1823:373::-;1927:3;1955:38;1987:5;1955:38;:::i;:::-;2009:88;2090:6;2085:3;2009:88;:::i;:::-;2002:95;;2106:52;2151:6;2146:3;2139:4;2132:5;2128:16;2106:52;:::i;:::-;2183:6;2178:3;2174:16;2167:23;;1931:265;;;;;:::o;2202:159::-;2303:51;2348:5;2303:51;:::i;:::-;2298:3;2291:64;2281:80;;:::o;2367:364::-;2455:3;2483:39;2516:5;2483:39;:::i;:::-;2538:71;2602:6;2597:3;2538:71;:::i;:::-;2531:78;;2618:52;2663:6;2658:3;2651:4;2644:5;2640:16;2618:52;:::i;:::-;2695:29;2717:6;2695:29;:::i;:::-;2690:3;2686:39;2679:46;;2459:272;;;;;:::o;2737:366::-;2879:3;2900:67;2964:2;2959:3;2900:67;:::i;:::-;2893:74;;2976:93;3065:3;2976:93;:::i;:::-;3094:2;3089:3;3085:12;3078:19;;2883:220;;;:::o;3109:366::-;3251:3;3272:67;3336:2;3331:3;3272:67;:::i;:::-;3265:74;;3348:93;3437:3;3348:93;:::i;:::-;3466:2;3461:3;3457:12;3450:19;;3255:220;;;:::o;3481:366::-;3623:3;3644:67;3708:2;3703:3;3644:67;:::i;:::-;3637:74;;3720:93;3809:3;3720:93;:::i;:::-;3838:2;3833:3;3829:12;3822:19;;3627:220;;;:::o;3853:366::-;3995:3;4016:67;4080:2;4075:3;4016:67;:::i;:::-;4009:74;;4092:93;4181:3;4092:93;:::i;:::-;4210:2;4205:3;4201:12;4194:19;;3999:220;;;:::o;4225:368::-;4367:3;4388:68;4452:3;4447;4388:68;:::i;:::-;4381:75;;4465:93;4554:3;4465:93;:::i;:::-;4583:3;4578;4574:13;4567:20;;4371:222;;;:::o;4599:366::-;4741:3;4762:67;4826:2;4821:3;4762:67;:::i;:::-;4755:74;;4838:93;4927:3;4838:93;:::i;:::-;4956:2;4951:3;4947:12;4940:19;;4745:220;;;:::o;4971:366::-;5113:3;5134:67;5198:2;5193:3;5134:67;:::i;:::-;5127:74;;5210:93;5299:3;5210:93;:::i;:::-;5328:2;5323:3;5319:12;5312:19;;5117:220;;;:::o;5343:366::-;5485:3;5506:67;5570:2;5565:3;5506:67;:::i;:::-;5499:74;;5582:93;5671:3;5582:93;:::i;:::-;5700:2;5695:3;5691:12;5684:19;;5489:220;;;:::o;5715:366::-;5857:3;5878:67;5942:2;5937:3;5878:67;:::i;:::-;5871:74;;5954:93;6043:3;5954:93;:::i;:::-;6072:2;6067:3;6063:12;6056:19;;5861:220;;;:::o;6087:366::-;6229:3;6250:67;6314:2;6309:3;6250:67;:::i;:::-;6243:74;;6326:93;6415:3;6326:93;:::i;:::-;6444:2;6439:3;6435:12;6428:19;;6233:220;;;:::o;6459:366::-;6601:3;6622:67;6686:2;6681:3;6622:67;:::i;:::-;6615:74;;6698:93;6787:3;6698:93;:::i;:::-;6816:2;6811:3;6807:12;6800:19;;6605:220;;;:::o;6831:366::-;6973:3;6994:67;7058:2;7053:3;6994:67;:::i;:::-;6987:74;;7070:93;7159:3;7070:93;:::i;:::-;7188:2;7183:3;7179:12;7172:19;;6977:220;;;:::o;7203:118::-;7290:24;7308:5;7290:24;:::i;:::-;7285:3;7278:37;7268:53;;:::o;7327:271::-;7457:3;7479:93;7568:3;7559:6;7479:93;:::i;:::-;7472:100;;7589:3;7582:10;;7461:137;;;;:::o;7604:222::-;7697:4;7735:2;7724:9;7720:18;7712:26;;7748:71;7816:1;7805:9;7801:17;7792:6;7748:71;:::i;:::-;7702:124;;;;:::o;7832:442::-;7981:4;8019:2;8008:9;8004:18;7996:26;;8032:71;8100:1;8089:9;8085:17;8076:6;8032:71;:::i;:::-;8113:72;8181:2;8170:9;8166:18;8157:6;8113:72;:::i;:::-;8195;8263:2;8252:9;8248:18;8239:6;8195:72;:::i;:::-;7986:288;;;;;;:::o;8280:332::-;8401:4;8439:2;8428:9;8424:18;8416:26;;8452:71;8520:1;8509:9;8505:17;8496:6;8452:71;:::i;:::-;8533:72;8601:2;8590:9;8586:18;8577:6;8533:72;:::i;:::-;8406:206;;;;;:::o;8618:250::-;8725:4;8763:2;8752:9;8748:18;8740:26;;8776:85;8858:1;8847:9;8843:17;8834:6;8776:85;:::i;:::-;8730:138;;;;:::o;8874:313::-;8987:4;9025:2;9014:9;9010:18;9002:26;;9074:9;9068:4;9064:20;9060:1;9049:9;9045:17;9038:47;9102:78;9175:4;9166:6;9102:78;:::i;:::-;9094:86;;8992:195;;;;:::o;9193:419::-;9359:4;9397:2;9386:9;9382:18;9374:26;;9446:9;9440:4;9436:20;9432:1;9421:9;9417:17;9410:47;9474:131;9600:4;9474:131;:::i;:::-;9466:139;;9364:248;;;:::o;9618:419::-;9784:4;9822:2;9811:9;9807:18;9799:26;;9871:9;9865:4;9861:20;9857:1;9846:9;9842:17;9835:47;9899:131;10025:4;9899:131;:::i;:::-;9891:139;;9789:248;;;:::o;10043:419::-;10209:4;10247:2;10236:9;10232:18;10224:26;;10296:9;10290:4;10286:20;10282:1;10271:9;10267:17;10260:47;10324:131;10450:4;10324:131;:::i;:::-;10316:139;;10214:248;;;:::o;10468:419::-;10634:4;10672:2;10661:9;10657:18;10649:26;;10721:9;10715:4;10711:20;10707:1;10696:9;10692:17;10685:47;10749:131;10875:4;10749:131;:::i;:::-;10741:139;;10639:248;;;:::o;10893:419::-;11059:4;11097:2;11086:9;11082:18;11074:26;;11146:9;11140:4;11136:20;11132:1;11121:9;11117:17;11110:47;11174:131;11300:4;11174:131;:::i;:::-;11166:139;;11064:248;;;:::o;11318:419::-;11484:4;11522:2;11511:9;11507:18;11499:26;;11571:9;11565:4;11561:20;11557:1;11546:9;11542:17;11535:47;11599:131;11725:4;11599:131;:::i;:::-;11591:139;;11489:248;;;:::o;11743:419::-;11909:4;11947:2;11936:9;11932:18;11924:26;;11996:9;11990:4;11986:20;11982:1;11971:9;11967:17;11960:47;12024:131;12150:4;12024:131;:::i;:::-;12016:139;;11914:248;;;:::o;12168:419::-;12334:4;12372:2;12361:9;12357:18;12349:26;;12421:9;12415:4;12411:20;12407:1;12396:9;12392:17;12385:47;12449:131;12575:4;12449:131;:::i;:::-;12441:139;;12339:248;;;:::o;12593:419::-;12759:4;12797:2;12786:9;12782:18;12774:26;;12846:9;12840:4;12836:20;12832:1;12821:9;12817:17;12810:47;12874:131;13000:4;12874:131;:::i;:::-;12866:139;;12764:248;;;:::o;13018:419::-;13184:4;13222:2;13211:9;13207:18;13199:26;;13271:9;13265:4;13261:20;13257:1;13246:9;13242:17;13235:47;13299:131;13425:4;13299:131;:::i;:::-;13291:139;;13189:248;;;:::o;13443:419::-;13609:4;13647:2;13636:9;13632:18;13624:26;;13696:9;13690:4;13686:20;13682:1;13671:9;13667:17;13660:47;13724:131;13850:4;13724:131;:::i;:::-;13716:139;;13614:248;;;:::o;13868:419::-;14034:4;14072:2;14061:9;14057:18;14049:26;;14121:9;14115:4;14111:20;14107:1;14096:9;14092:17;14085:47;14149:131;14275:4;14149:131;:::i;:::-;14141:139;;14039:248;;;:::o;14293:222::-;14386:4;14424:2;14413:9;14409:18;14401:26;;14437:71;14505:1;14494:9;14490:17;14481:6;14437:71;:::i;:::-;14391:124;;;;:::o;14521:332::-;14642:4;14680:2;14669:9;14665:18;14657:26;;14693:71;14761:1;14750:9;14746:17;14737:6;14693:71;:::i;:::-;14774:72;14842:2;14831:9;14827:18;14818:6;14774:72;:::i;:::-;14647:206;;;;;:::o;14859:98::-;14910:6;14944:5;14938:12;14928:22;;14917:40;;;:::o;14963:99::-;15015:6;15049:5;15043:12;15033:22;;15022:40;;;:::o;15068:147::-;15169:11;15206:3;15191:18;;15181:34;;;;:::o;15221:169::-;15305:11;15339:6;15334:3;15327:19;15379:4;15374:3;15370:14;15355:29;;15317:73;;;;:::o;15396:305::-;15436:3;15455:20;15473:1;15455:20;:::i;:::-;15450:25;;15489:20;15507:1;15489:20;:::i;:::-;15484:25;;15643:1;15575:66;15571:74;15568:1;15565:81;15562:2;;;15649:18;;:::i;:::-;15562:2;15693:1;15690;15686:9;15679:16;;15440:261;;;;:::o;15707:185::-;15747:1;15764:20;15782:1;15764:20;:::i;:::-;15759:25;;15798:20;15816:1;15798:20;:::i;:::-;15793:25;;15837:1;15827:2;;15842:18;;:::i;:::-;15827:2;15884:1;15881;15877:9;15872:14;;15749:143;;;;:::o;15898:96::-;15935:7;15964:24;15982:5;15964:24;:::i;:::-;15953:35;;15943:51;;;:::o;16000:90::-;16034:7;16077:5;16070:13;16063:21;16052:32;;16042:48;;;:::o;16096:126::-;16133:7;16173:42;16166:5;16162:54;16151:65;;16141:81;;;:::o;16228:77::-;16265:7;16294:5;16283:16;;16273:32;;;:::o;16311:154::-;16375:9;16408:51;16453:5;16408:51;:::i;:::-;16395:64;;16385:80;;;:::o;16471:127::-;16535:9;16568:24;16586:5;16568:24;:::i;:::-;16555:37;;16545:53;;;:::o;16604:307::-;16672:1;16682:113;16696:6;16693:1;16690:13;16682:113;;;16781:1;16776:3;16772:11;16766:18;16762:1;16757:3;16753:11;16746:39;16718:2;16715:1;16711:10;16706:15;;16682:113;;;16813:6;16810:1;16807:13;16804:2;;;16893:1;16884:6;16879:3;16875:16;16868:27;16804:2;16653:258;;;;:::o;16917:180::-;16965:77;16962:1;16955:88;17062:4;17059:1;17052:15;17086:4;17083:1;17076:15;17103:180;17151:77;17148:1;17141:88;17248:4;17245:1;17238:15;17272:4;17269:1;17262:15;17289:102;17330:6;17381:2;17377:7;17372:2;17365:5;17361:14;17357:28;17347:38;;17337:54;;;:::o;17397:233::-;17537:34;17533:1;17525:6;17521:14;17514:58;17606:16;17601:2;17593:6;17589:15;17582:41;17503:127;:::o;17636:225::-;17776:34;17772:1;17764:6;17760:14;17753:58;17845:8;17840:2;17832:6;17828:15;17821:33;17742:119;:::o;17867:165::-;18007:17;18003:1;17995:6;17991:14;17984:41;17973:59;:::o;18038:225::-;18178:34;18174:1;18166:6;18162:14;18155:58;18247:8;18242:2;18234:6;18230:15;18223:33;18144:119;:::o;18269:371::-;18409:34;18405:1;18397:6;18393:14;18386:58;18478:34;18473:2;18465:6;18461:15;18454:59;18547:34;18542:2;18534:6;18530:15;18523:59;18616:16;18611:2;18603:6;18599:15;18592:41;18375:265;:::o;18646:182::-;18786:34;18782:1;18774:6;18770:14;18763:58;18752:76;:::o;18834:179::-;18974:31;18970:1;18962:6;18958:14;18951:55;18940:73;:::o;19019:179::-;19159:31;19155:1;19147:6;19143:14;19136:55;19125:73;:::o;19204:229::-;19344:34;19340:1;19332:6;19328:14;19321:58;19413:12;19408:2;19400:6;19396:15;19389:37;19310:123;:::o;19439:227::-;19579:34;19575:1;19567:6;19563:14;19556:58;19648:10;19643:2;19635:6;19631:15;19624:35;19545:121;:::o;19672:181::-;19812:33;19808:1;19800:6;19796:14;19789:57;19778:75;:::o;19859:177::-;19999:29;19995:1;19987:6;19983:14;19976:53;19965:71;:::o;20042:122::-;20115:24;20133:5;20115:24;:::i;:::-;20108:5;20105:35;20095:2;;20154:1;20151;20144:12;20095:2;20085:79;:::o;20170:116::-;20240:21;20255:5;20240:21;:::i;:::-;20233:5;20230:32;20220:2;;20276:1;20273;20266:12;20220:2;20210:76;:::o;20292:122::-;20365:24;20383:5;20365:24;:::i;:::-;20358:5;20355:35;20345:2;;20404:1;20401;20394:12;20345:2;20335:79;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1364400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"buyToken(uint256)": "infinite",
								"cumulativePurchase(address)": "1514",
								"exchangeRate()": "1174",
								"maxAmout()": "1151",
								"myToken()": "1323",
								"owner()": "1266",
								"renounceOwnership()": "24509",
								"setExchangeRate(uint256)": "21472",
								"setMaxAmout(uint256)": "21473",
								"transferOwnership(address)": "24857",
								"usdt()": "1280",
								"withdrawUSDT(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 557,
									"end": 4087,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 557,
									"end": 4087,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 557,
									"end": 4087,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1121,
									"end": 1442,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 1121,
									"end": 1442,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1121,
									"end": 1442,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 1121,
									"end": 1442,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1121,
									"end": 1442,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1121,
									"end": 1442,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1121,
									"end": 1442,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1121,
									"end": 1442,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1121,
									"end": 1442,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1121,
									"end": 1442,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1121,
									"end": 1442,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1121,
									"end": 1442,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1121,
									"end": 1442,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1121,
									"end": 1442,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 1121,
									"end": 1442,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 1121,
									"end": 1442,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1121,
									"end": 1442,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1121,
									"end": 1442,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 1121,
									"end": 1442,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1121,
									"end": 1442,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 1121,
									"end": 1442,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1121,
									"end": 1442,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1121,
									"end": 1442,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1121,
									"end": 1442,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1121,
									"end": 1442,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1121,
									"end": 1442,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1121,
									"end": 1442,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1121,
									"end": 1442,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1121,
									"end": 1442,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1121,
									"end": 1442,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1121,
									"end": 1442,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1121,
									"end": 1442,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1121,
									"end": 1442,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1121,
									"end": 1442,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1121,
									"end": 1442,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1282,
									"end": 1294,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1268,
									"end": 1272,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1268,
									"end": 1272,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1268,
									"end": 1295,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 1268,
									"end": 1295,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 1268,
									"end": 1295,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1268,
									"end": 1295,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1268,
									"end": 1295,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1268,
									"end": 1295,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1268,
									"end": 1295,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1268,
									"end": 1295,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 1268,
									"end": 1295,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1268,
									"end": 1295,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1268,
									"end": 1295,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1268,
									"end": 1295,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1268,
									"end": 1295,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1268,
									"end": 1295,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1268,
									"end": 1295,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1268,
									"end": 1295,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1268,
									"end": 1295,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1268,
									"end": 1295,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1335,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1305,
									"end": 1312,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1305,
									"end": 1312,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1305,
									"end": 1336,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 1305,
									"end": 1336,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 1305,
									"end": 1336,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1305,
									"end": 1336,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1305,
									"end": 1336,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1305,
									"end": 1336,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1305,
									"end": 1336,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1305,
									"end": 1336,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 1305,
									"end": 1336,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1305,
									"end": 1336,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1305,
									"end": 1336,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1305,
									"end": 1336,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1305,
									"end": 1336,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1305,
									"end": 1336,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1305,
									"end": 1336,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1305,
									"end": 1336,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1305,
									"end": 1336,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1305,
									"end": 1336,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1361,
									"end": 1374,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1346,
									"end": 1358,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1346,
									"end": 1374,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1346,
									"end": 1374,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1346,
									"end": 1374,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1346,
									"end": 1374,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1395,
									"end": 1404,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1384,
									"end": 1392,
									"name": "PUSH",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 1384,
									"end": 1404,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1384,
									"end": 1404,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1384,
									"end": 1404,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1384,
									"end": 1404,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1121,
									"end": 1442,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1121,
									"end": 1442,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1121,
									"end": 1442,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1121,
									"end": 1442,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 557,
									"end": 4087,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 557,
									"end": 4087,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2550,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2604,
									"end": 2612,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2594,
									"end": 2602,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 64,
									"end": 69,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 70,
									"end": 150,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 70,
									"end": 150,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 70,
									"end": 150,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 70,
									"end": 150,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 70,
									"end": 150,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 299,
									"name": "tag",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 156,
									"end": 299,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 213,
									"end": 218,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 250,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 238,
									"end": 251,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 229,
									"end": 251,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 229,
									"end": 251,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 260,
									"end": 293,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 287,
									"end": 292,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 260,
									"end": 293,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 260,
									"end": 293,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 260,
									"end": 293,
									"name": "tag",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 260,
									"end": 293,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 219,
									"end": 299,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 219,
									"end": 299,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 219,
									"end": 299,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 219,
									"end": 299,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 219,
									"end": 299,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 305,
									"end": 1058,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 305,
									"end": 1058,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 402,
									"end": 408,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 410,
									"end": 416,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 418,
									"end": 424,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 426,
									"end": 432,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 475,
									"end": 478,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 463,
									"end": 472,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 454,
									"end": 461,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 450,
									"end": 473,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 446,
									"end": 479,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 443,
									"end": 445,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 443,
									"end": 445,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 443,
									"end": 445,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 492,
									"end": 493,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 489,
									"end": 490,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 482,
									"end": 494,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 443,
									"end": 445,
									"name": "tag",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 443,
									"end": 445,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 535,
									"end": 536,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 560,
									"end": 624,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 616,
									"end": 623,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 607,
									"end": 613,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 596,
									"end": 605,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 592,
									"end": 614,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 560,
									"end": 624,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 560,
									"end": 624,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 560,
									"end": 624,
									"name": "tag",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 560,
									"end": 624,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 550,
									"end": 624,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 550,
									"end": 624,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 506,
									"end": 634,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 673,
									"end": 675,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 699,
									"end": 763,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 755,
									"end": 762,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 746,
									"end": 752,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 735,
									"end": 744,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 731,
									"end": 753,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 699,
									"end": 763,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 699,
									"end": 763,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 699,
									"end": 763,
									"name": "tag",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 699,
									"end": 763,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 689,
									"end": 763,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 689,
									"end": 763,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 644,
									"end": 773,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 812,
									"end": 814,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 838,
									"end": 902,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 894,
									"end": 901,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 885,
									"end": 891,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 874,
									"end": 883,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 870,
									"end": 892,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 838,
									"end": 902,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 838,
									"end": 902,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 838,
									"end": 902,
									"name": "tag",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 838,
									"end": 902,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 828,
									"end": 902,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 828,
									"end": 902,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 783,
									"end": 912,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 951,
									"end": 953,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 977,
									"end": 1041,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 1033,
									"end": 1040,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 1024,
									"end": 1030,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1013,
									"end": 1022,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 1009,
									"end": 1031,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 977,
									"end": 1041,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 977,
									"end": 1041,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 977,
									"end": 1041,
									"name": "tag",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 977,
									"end": 1041,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 967,
									"end": 1041,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 967,
									"end": 1041,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 922,
									"end": 1051,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 433,
									"end": 1058,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 433,
									"end": 1058,
									"name": "SWAP6",
									"source": 8
								},
								{
									"begin": 433,
									"end": 1058,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 433,
									"end": 1058,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 433,
									"end": 1058,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 433,
									"end": 1058,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 433,
									"end": 1058,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 433,
									"end": 1058,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 1064,
									"end": 1160,
									"name": "tag",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 1064,
									"end": 1160,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1101,
									"end": 1108,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1130,
									"end": 1154,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 1148,
									"end": 1153,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1130,
									"end": 1154,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 1130,
									"end": 1154,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 1130,
									"end": 1154,
									"name": "tag",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 1130,
									"end": 1154,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1119,
									"end": 1154,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1119,
									"end": 1154,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1109,
									"end": 1160,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1109,
									"end": 1160,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1109,
									"end": 1160,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1109,
									"end": 1160,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 1166,
									"end": 1292,
									"name": "tag",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 1166,
									"end": 1292,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1203,
									"end": 1210,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1243,
									"end": 1285,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1236,
									"end": 1241,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1232,
									"end": 1286,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1221,
									"end": 1286,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1221,
									"end": 1286,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1211,
									"end": 1292,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1211,
									"end": 1292,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1211,
									"end": 1292,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1211,
									"end": 1292,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 1298,
									"end": 1375,
									"name": "tag",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 1298,
									"end": 1375,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1335,
									"end": 1342,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1364,
									"end": 1369,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1353,
									"end": 1369,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1353,
									"end": 1369,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1343,
									"end": 1375,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1343,
									"end": 1375,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1343,
									"end": 1375,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1343,
									"end": 1375,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 1381,
									"end": 1503,
									"name": "tag",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 1381,
									"end": 1503,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1454,
									"end": 1478,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1472,
									"end": 1477,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1454,
									"end": 1478,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 1454,
									"end": 1478,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 1454,
									"end": 1478,
									"name": "tag",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1454,
									"end": 1478,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1447,
									"end": 1452,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1444,
									"end": 1479,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 1434,
									"end": 1436,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 1434,
									"end": 1436,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1493,
									"end": 1494,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1490,
									"end": 1491,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1483,
									"end": 1495,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1434,
									"end": 1436,
									"name": "tag",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 1434,
									"end": 1436,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1424,
									"end": 1503,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1424,
									"end": 1503,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 1509,
									"end": 1631,
									"name": "tag",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 1509,
									"end": 1631,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1582,
									"end": 1606,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 1600,
									"end": 1605,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1582,
									"end": 1606,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 1582,
									"end": 1606,
									"name": "JUMP",
									"source": 8,
									"value": "[in]"
								},
								{
									"begin": 1582,
									"end": 1606,
									"name": "tag",
									"source": 8,
									"value": "43"
								},
								{
									"begin": 1582,
									"end": 1606,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1575,
									"end": 1580,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1572,
									"end": 1607,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 1562,
									"end": 1564,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 1562,
									"end": 1564,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1621,
									"end": 1622,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1618,
									"end": 1619,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1611,
									"end": 1623,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1562,
									"end": 1564,
									"name": "tag",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 1562,
									"end": 1564,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1552,
									"end": 1631,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1552,
									"end": 1631,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 557,
									"end": 4087,
									"name": "tag",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 557,
									"end": 4087,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 557,
									"end": 4087,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 557,
									"end": 4087,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 557,
									"end": 4087,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 557,
									"end": 4087,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 557,
									"end": 4087,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 557,
									"end": 4087,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 557,
									"end": 4087,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b5b0b0b6bdf9120d35b5e9616c83bd6a43197add9cd53da28eacbc8c503f32bd64736f6c63430008040033",
									".code": [
										{
											"begin": 557,
											"end": 4087,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "PUSH",
											"source": 3,
											"value": "7A80D062"
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "PUSH",
											"source": 3,
											"value": "7A80D062"
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "PUSH",
											"source": 3,
											"value": "8D951832"
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "PUSH",
											"source": 3,
											"value": "B8FCF937"
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "PUSH",
											"source": 3,
											"value": "DB068E0E"
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "PUSH",
											"source": 3,
											"value": "F2FDE38B"
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "PUSH",
											"source": 3,
											"value": "2D296BF1"
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "PUSH",
											"source": 3,
											"value": "2F48AB7D"
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "PUSH",
											"source": 3,
											"value": "3BA0B9A9"
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "PUSH",
											"source": 3,
											"value": "3EA521EF"
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "PUSH",
											"source": 3,
											"value": "65583CAE"
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 557,
											"end": 4087,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2303,
											"end": 3218,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2303,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2303,
											"end": 3218,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 2303,
											"end": 3218,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2303,
											"end": 3218,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2303,
											"end": 3218,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2303,
											"end": 3218,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2303,
											"end": 3218,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2303,
											"end": 3218,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2303,
											"end": 3218,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2303,
											"end": 3218,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 2303,
											"end": 3218,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2303,
											"end": 3218,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2303,
											"end": 3218,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 2303,
											"end": 3218,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2303,
											"end": 3218,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 2303,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2303,
											"end": 3218,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 2303,
											"end": 3218,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2303,
											"end": 3218,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 2303,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2303,
											"end": 3218,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 678,
											"end": 696,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 678,
											"end": 696,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 678,
											"end": 696,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 678,
											"end": 696,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 678,
											"end": 696,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 678,
											"end": 696,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 678,
											"end": 696,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 678,
											"end": 696,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 678,
											"end": 696,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 678,
											"end": 696,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 678,
											"end": 696,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 678,
											"end": 696,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 678,
											"end": 696,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 678,
											"end": 696,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 678,
											"end": 696,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 678,
											"end": 696,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 678,
											"end": 696,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 678,
											"end": 696,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 678,
											"end": 696,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 678,
											"end": 696,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 678,
											"end": 696,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 678,
											"end": 696,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 678,
											"end": 696,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 781,
											"end": 808,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 781,
											"end": 808,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 781,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 781,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 781,
											"end": 808,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 781,
											"end": 808,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 781,
											"end": 808,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 781,
											"end": 808,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 781,
											"end": 808,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 781,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 781,
											"end": 808,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 781,
											"end": 808,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 781,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 781,
											"end": 808,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 781,
											"end": 808,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 781,
											"end": 808,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 781,
											"end": 808,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 781,
											"end": 808,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 781,
											"end": 808,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 781,
											"end": 808,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 781,
											"end": 808,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 781,
											"end": 808,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 781,
											"end": 808,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3560,
											"end": 3795,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 3560,
											"end": 3795,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3560,
											"end": 3795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 3560,
											"end": 3795,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3560,
											"end": 3795,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3560,
											"end": 3795,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3560,
											"end": 3795,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3560,
											"end": 3795,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3560,
											"end": 3795,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3560,
											"end": 3795,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3560,
											"end": 3795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 3560,
											"end": 3795,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3560,
											"end": 3795,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3560,
											"end": 3795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 3560,
											"end": 3795,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3560,
											"end": 3795,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 3560,
											"end": 3795,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3560,
											"end": 3795,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 3560,
											"end": 3795,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3560,
											"end": 3795,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 3560,
											"end": 3795,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3560,
											"end": 3795,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4085,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 3988,
											"end": 4085,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4085,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 3988,
											"end": 4085,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3988,
											"end": 4085,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4085,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4085,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4085,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4085,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4085,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4085,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 3988,
											"end": 4085,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4085,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4085,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 3988,
											"end": 4085,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3988,
											"end": 4085,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 3988,
											"end": 4085,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4085,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 3988,
											"end": 4085,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3988,
											"end": 4085,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 3988,
											"end": 4085,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4085,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 947,
											"end": 1000,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 947,
											"end": 1000,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 947,
											"end": 1000,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 947,
											"end": 1000,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 947,
											"end": 1000,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 947,
											"end": 1000,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 947,
											"end": 1000,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 947,
											"end": 1000,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 947,
											"end": 1000,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 947,
											"end": 1000,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 947,
											"end": 1000,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 947,
											"end": 1000,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 947,
											"end": 1000,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 947,
											"end": 1000,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 947,
											"end": 1000,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 947,
											"end": 1000,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 947,
											"end": 1000,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 947,
											"end": 1000,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 947,
											"end": 1000,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 947,
											"end": 1000,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 947,
											"end": 1000,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 947,
											"end": 1000,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 947,
											"end": 1000,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 947,
											"end": 1000,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 947,
											"end": 1000,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 947,
											"end": 1000,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 947,
											"end": 1000,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 947,
											"end": 1000,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 947,
											"end": 1000,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 947,
											"end": 1000,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 947,
											"end": 1000,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 947,
											"end": 1000,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 947,
											"end": 1000,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 947,
											"end": 1000,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 947,
											"end": 1000,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 947,
											"end": 1000,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 947,
											"end": 1000,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 878,
											"end": 901,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 878,
											"end": 901,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 878,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 878,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 878,
											"end": 901,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 878,
											"end": 901,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 878,
											"end": 901,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 878,
											"end": 901,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 878,
											"end": 901,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 878,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 878,
											"end": 901,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 878,
											"end": 901,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 878,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 878,
											"end": 901,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 878,
											"end": 901,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 878,
											"end": 901,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 878,
											"end": 901,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 878,
											"end": 901,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 878,
											"end": 901,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 878,
											"end": 901,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 878,
											"end": 901,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 878,
											"end": 901,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 878,
											"end": 901,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 723,
											"end": 744,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 723,
											"end": 744,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 723,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 723,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 723,
											"end": 744,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 723,
											"end": 744,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 723,
											"end": 744,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 723,
											"end": 744,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 723,
											"end": 744,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 723,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 723,
											"end": 744,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 723,
											"end": 744,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 723,
											"end": 744,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 723,
											"end": 744,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 723,
											"end": 744,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 723,
											"end": 744,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 723,
											"end": 744,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 723,
											"end": 744,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 723,
											"end": 744,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 723,
											"end": 744,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 723,
											"end": 744,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 723,
											"end": 744,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 723,
											"end": 744,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3827,
											"end": 3938,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 3827,
											"end": 3938,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3827,
											"end": 3938,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 3827,
											"end": 3938,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3827,
											"end": 3938,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3827,
											"end": 3938,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3827,
											"end": 3938,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3827,
											"end": 3938,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3827,
											"end": 3938,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3827,
											"end": 3938,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3827,
											"end": 3938,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 3827,
											"end": 3938,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3827,
											"end": 3938,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3827,
											"end": 3938,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 3827,
											"end": 3938,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3827,
											"end": 3938,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 3827,
											"end": 3938,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3827,
											"end": 3938,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 3827,
											"end": 3938,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3827,
											"end": 3938,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 3827,
											"end": 3938,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3827,
											"end": 3938,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 3218,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 2303,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2374,
											"end": 2393,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2396,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 2412,
											"end": 2424,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2412,
											"end": 2424,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2396,
											"end": 2407,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2396,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 2396,
											"end": 2411,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2396,
											"end": 2425,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2396,
											"end": 2425,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2396,
											"end": 2425,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2396,
											"end": 2425,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2396,
											"end": 2425,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2396,
											"end": 2425,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 2396,
											"end": 2425,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2374,
											"end": 2425,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2374,
											"end": 2425,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2516,
											"end": 2563,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 2551,
											"end": 2562,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2516,
											"end": 2534,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2516,
											"end": 2546,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2535,
											"end": 2545,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2516,
											"end": 2546,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2516,
											"end": 2546,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2516,
											"end": 2546,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2516,
											"end": 2546,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2516,
											"end": 2546,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2516,
											"end": 2546,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2516,
											"end": 2546,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2516,
											"end": 2546,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2516,
											"end": 2546,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2516,
											"end": 2546,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2516,
											"end": 2546,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2516,
											"end": 2546,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2516,
											"end": 2546,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2516,
											"end": 2546,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2516,
											"end": 2546,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2516,
											"end": 2546,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2516,
											"end": 2550,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2516,
											"end": 2550,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2516,
											"end": 2563,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2516,
											"end": 2563,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2516,
											"end": 2563,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2516,
											"end": 2563,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2516,
											"end": 2563,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2516,
											"end": 2563,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 2516,
											"end": 2563,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2504,
											"end": 2512,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2504,
											"end": 2512,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2504,
											"end": 2563,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2504,
											"end": 2563,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 2496,
											"end": 2607,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2607,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2496,
											"end": 2607,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2607,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2496,
											"end": 2607,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2607,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2607,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2496,
											"end": 2607,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 2496,
											"end": 2607,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2607,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 2496,
											"end": 2607,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2496,
											"end": 2607,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 2496,
											"end": 2607,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2607,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2496,
											"end": 2607,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2607,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2607,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2607,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2607,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2607,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2496,
											"end": 2607,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 2496,
											"end": 2607,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2659,
											"end": 2670,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2632,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2625,
											"end": 2632,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2625,
											"end": 2632,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2632,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2632,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2632,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2625,
											"end": 2632,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2632,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2632,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2632,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2625,
											"end": 2632,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2642,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2625,
											"end": 2642,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2642,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 2651,
											"end": 2655,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2670,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2670,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2617,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 2617,
											"end": 2784,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2617,
											"end": 2784,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2617,
											"end": 2784,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2617,
											"end": 2784,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2617,
											"end": 2784,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2617,
											"end": 2784,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2617,
											"end": 2784,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2617,
											"end": 2784,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2617,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 2617,
											"end": 2784,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2617,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 2617,
											"end": 2784,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2617,
											"end": 2784,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 2617,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2617,
											"end": 2784,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2617,
											"end": 2784,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2617,
											"end": 2784,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2617,
											"end": 2784,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2617,
											"end": 2784,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2617,
											"end": 2784,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2617,
											"end": 2784,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2617,
											"end": 2784,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 2617,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2832,
											"end": 2843,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2806,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2802,
											"end": 2806,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2802,
											"end": 2806,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2806,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2806,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2806,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2802,
											"end": 2806,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2806,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2806,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2806,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2802,
											"end": 2806,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2816,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2802,
											"end": 2816,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2816,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 2817,
											"end": 2827,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 2802,
											"end": 2828,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2843,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2843,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 2794,
											"end": 2863,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2863,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2863,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2863,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2794,
											"end": 2863,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2863,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2863,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2794,
											"end": 2863,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 2794,
											"end": 2863,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 2794,
											"end": 2863,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2794,
											"end": 2863,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 2794,
											"end": 2863,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2863,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2863,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2863,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2863,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2863,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2863,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2863,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2863,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 2794,
											"end": 2863,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2885,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2881,
											"end": 2885,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2881,
											"end": 2885,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2885,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2885,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2885,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2881,
											"end": 2885,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2885,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2885,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2885,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2881,
											"end": 2885,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2898,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2881,
											"end": 2898,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2898,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 2899,
											"end": 2909,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2919,
											"end": 2923,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 2926,
											"end": 2937,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 2881,
											"end": 2938,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2873,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 2873,
											"end": 2969,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2873,
											"end": 2969,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2873,
											"end": 2969,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2873,
											"end": 2969,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2873,
											"end": 2969,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2873,
											"end": 2969,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2873,
											"end": 2969,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2873,
											"end": 2969,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2873,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 2873,
											"end": 2969,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2873,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 2873,
											"end": 2969,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2873,
											"end": 2969,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 2873,
											"end": 2969,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2873,
											"end": 2969,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2873,
											"end": 2969,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2873,
											"end": 2969,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2873,
											"end": 2969,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2873,
											"end": 2969,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2873,
											"end": 2969,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2873,
											"end": 2969,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2873,
											"end": 2969,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 2873,
											"end": 2969,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 2994,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2987,
											"end": 2994,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2987,
											"end": 2994,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 2994,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 2994,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 2994,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2987,
											"end": 2994,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 2994,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 2994,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 2994,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2987,
											"end": 2994,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 3003,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2987,
											"end": 3003,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 3003,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 3004,
											"end": 3014,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 3016,
											"end": 3027,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2987,
											"end": 3028,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2979,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 2979,
											"end": 3061,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2979,
											"end": 3061,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2979,
											"end": 3061,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2979,
											"end": 3061,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2979,
											"end": 3061,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2979,
											"end": 3061,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2979,
											"end": 3061,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2979,
											"end": 3061,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2979,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 2979,
											"end": 3061,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2979,
											"end": 3061,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 2979,
											"end": 3061,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2979,
											"end": 3061,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 2979,
											"end": 3061,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2979,
											"end": 3061,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2979,
											"end": 3061,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2979,
											"end": 3061,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2979,
											"end": 3061,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2979,
											"end": 3061,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2979,
											"end": 3061,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2979,
											"end": 3061,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2979,
											"end": 3061,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 2979,
											"end": 3061,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3104,
											"end": 3151,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 3139,
											"end": 3150,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3104,
											"end": 3122,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 3104,
											"end": 3134,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3123,
											"end": 3133,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 3104,
											"end": 3134,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3104,
											"end": 3134,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3104,
											"end": 3134,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3104,
											"end": 3134,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3104,
											"end": 3134,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3104,
											"end": 3134,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3104,
											"end": 3134,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3104,
											"end": 3134,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3104,
											"end": 3134,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3104,
											"end": 3134,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3104,
											"end": 3134,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3104,
											"end": 3134,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3104,
											"end": 3134,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3104,
											"end": 3134,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3104,
											"end": 3134,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3104,
											"end": 3134,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3104,
											"end": 3138,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 3104,
											"end": 3138,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3104,
											"end": 3151,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3104,
											"end": 3151,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3104,
											"end": 3151,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3104,
											"end": 3151,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3104,
											"end": 3151,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3104,
											"end": 3151,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 3104,
											"end": 3151,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3071,
											"end": 3089,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 3071,
											"end": 3101,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3090,
											"end": 3100,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 3071,
											"end": 3101,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3071,
											"end": 3101,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3071,
											"end": 3101,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3071,
											"end": 3101,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3071,
											"end": 3101,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3071,
											"end": 3101,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3071,
											"end": 3101,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3071,
											"end": 3101,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3071,
											"end": 3101,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3071,
											"end": 3101,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3071,
											"end": 3101,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3071,
											"end": 3101,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3071,
											"end": 3101,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3071,
											"end": 3101,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3071,
											"end": 3101,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3071,
											"end": 3151,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3071,
											"end": 3151,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3071,
											"end": 3151,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3071,
											"end": 3151,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3175,
											"end": 3185,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 3166,
											"end": 3211,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3166,
											"end": 3211,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3166,
											"end": 3211,
											"name": "PUSH",
											"source": 3,
											"value": "F6F342132C7DE5E5A1E99C8EFAE544C94731F3FF093F5C3C97C6973D9415CDFB"
										},
										{
											"begin": 3187,
											"end": 3198,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3199,
											"end": 3210,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3166,
											"end": 3211,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3166,
											"end": 3211,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3166,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 3166,
											"end": 3211,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3166,
											"end": 3211,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3166,
											"end": 3211,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3166,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 3166,
											"end": 3211,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3166,
											"end": 3211,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 3166,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3166,
											"end": 3211,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3166,
											"end": 3211,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3166,
											"end": 3211,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3166,
											"end": 3211,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3166,
											"end": 3211,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3166,
											"end": 3211,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3166,
											"end": 3211,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 2292,
											"end": 2293,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 3218,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2303,
											"end": 3218,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 678,
											"end": 696,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 678,
											"end": 696,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 678,
											"end": 696,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 678,
											"end": 696,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 678,
											"end": 696,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 678,
											"end": 696,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 678,
											"end": 696,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 678,
											"end": 696,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 678,
											"end": 696,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 678,
											"end": 696,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 678,
											"end": 696,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 678,
											"end": 696,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 678,
											"end": 696,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 678,
											"end": 696,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 678,
											"end": 696,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 781,
											"end": 808,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 781,
											"end": 808,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 781,
											"end": 808,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 781,
											"end": 808,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 781,
											"end": 808,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 781,
											"end": 808,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3560,
											"end": 3795,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 3560,
											"end": 3795,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3665,
											"end": 3671,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3638,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3634,
											"end": 3638,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3634,
											"end": 3638,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3638,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3638,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3638,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3634,
											"end": 3638,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3638,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3638,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3638,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3634,
											"end": 3638,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3648,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3634,
											"end": 3648,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3648,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 3657,
											"end": 3661,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 3634,
											"end": 3663,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3671,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3671,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 3626,
											"end": 3721,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3721,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3626,
											"end": 3721,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3721,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3626,
											"end": 3721,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3721,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3721,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3626,
											"end": 3721,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 3626,
											"end": 3721,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 3626,
											"end": 3721,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3626,
											"end": 3721,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 3626,
											"end": 3721,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3721,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3626,
											"end": 3721,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3721,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3721,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3721,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3721,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3721,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3626,
											"end": 3721,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 3626,
											"end": 3721,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3731,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 3749,
											"end": 3756,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 3749,
											"end": 3754,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 3749,
											"end": 3756,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3749,
											"end": 3756,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 3749,
											"end": 3756,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3762,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3758,
											"end": 3762,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3758,
											"end": 3762,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3762,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3762,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3762,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3758,
											"end": 3762,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3762,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3762,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3762,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3758,
											"end": 3762,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3772,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3758,
											"end": 3772,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3772,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 3781,
											"end": 3785,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 3758,
											"end": 3787,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3731,
											"end": 3735,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3731,
											"end": 3735,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3731,
											"end": 3735,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3731,
											"end": 3735,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3731,
											"end": 3735,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3731,
											"end": 3735,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3731,
											"end": 3735,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 3731,
											"end": 3735,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3731,
											"end": 3735,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3731,
											"end": 3735,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3731,
											"end": 3735,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3731,
											"end": 3748,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3731,
											"end": 3748,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3731,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 3731,
											"end": 3748,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3731,
											"end": 3788,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3731,
											"end": 3788,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3731,
											"end": 3788,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3731,
											"end": 3788,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3731,
											"end": 3788,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3731,
											"end": 3788,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3731,
											"end": 3788,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 3731,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3560,
											"end": 3795,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3560,
											"end": 3795,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3988,
											"end": 4085,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 3988,
											"end": 4085,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4068,
											"end": 4078,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4057,
											"end": 4065,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 4057,
											"end": 4078,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4057,
											"end": 4078,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4057,
											"end": 4078,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 4057,
											"end": 4078,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4085,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3988,
											"end": 4085,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 947,
											"end": 1000,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 947,
											"end": 1000,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 947,
											"end": 1000,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 947,
											"end": 1000,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 947,
											"end": 1000,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 947,
											"end": 1000,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 947,
											"end": 1000,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 947,
											"end": 1000,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 947,
											"end": 1000,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 947,
											"end": 1000,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 947,
											"end": 1000,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 947,
											"end": 1000,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 947,
											"end": 1000,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 947,
											"end": 1000,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 947,
											"end": 1000,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 947,
											"end": 1000,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 947,
											"end": 1000,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 947,
											"end": 1000,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 947,
											"end": 1000,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 878,
											"end": 901,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 878,
											"end": 901,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 878,
											"end": 901,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 878,
											"end": 901,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 878,
											"end": 901,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 878,
											"end": 901,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 723,
											"end": 744,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 723,
											"end": 744,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 723,
											"end": 744,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 723,
											"end": 744,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 723,
											"end": 744,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 723,
											"end": 744,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 723,
											"end": 744,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 723,
											"end": 744,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 723,
											"end": 744,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 723,
											"end": 744,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 723,
											"end": 744,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 723,
											"end": 744,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 723,
											"end": 744,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 723,
											"end": 744,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 723,
											"end": 744,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3827,
											"end": 3938,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 3827,
											"end": 3938,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3918,
											"end": 3931,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3903,
											"end": 3915,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3903,
											"end": 3931,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3903,
											"end": 3931,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3903,
											"end": 3931,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3903,
											"end": 3931,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3827,
											"end": 3938,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3827,
											"end": 3938,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2190,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2177,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2263,
											"end": 2271,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3767,
											"end": 3863,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 3767,
											"end": 3863,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3825,
											"end": 3832,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3855,
											"end": 3856,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3851,
											"end": 3852,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3851,
											"end": 3856,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 3851,
											"end": 3856,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3851,
											"end": 3856,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3851,
											"end": 3856,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 3851,
											"end": 3856,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3851,
											"end": 3856,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 3851,
											"end": 3856,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3844,
											"end": 3856,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3844,
											"end": 3856,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3767,
											"end": 3863,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3767,
											"end": 3863,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3767,
											"end": 3863,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3767,
											"end": 3863,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3767,
											"end": 3863,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2672,
											"end": 2768,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2672,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2730,
											"end": 2737,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2760,
											"end": 2761,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2756,
											"end": 2757,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2749,
											"end": 2761,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2749,
											"end": 2761,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2768,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2768,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2768,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2768,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2768,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 634,
											"end": 809,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 634,
											"end": 809,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 716,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 736,
											"end": 741,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 766,
											"end": 789,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 766,
											"end": 789,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 766,
											"end": 789,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 791,
											"end": 793,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 795,
											"end": 800,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 743,
											"end": 801,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 743,
											"end": 801,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 743,
											"end": 801,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 743,
											"end": 801,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 743,
											"end": 801,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 743,
											"end": 801,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 743,
											"end": 801,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 743,
											"end": 801,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 743,
											"end": 801,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 743,
											"end": 801,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 743,
											"end": 801,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 743,
											"end": 801,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 743,
											"end": 801,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 743,
											"end": 801,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 743,
											"end": 801,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 743,
											"end": 801,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 743,
											"end": 801,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 743,
											"end": 801,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 743,
											"end": 801,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 743,
											"end": 801,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 743,
											"end": 801,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 743,
											"end": 801,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 743,
											"end": 801,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 743,
											"end": 801,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 743,
											"end": 801,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 743,
											"end": 801,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 743,
											"end": 801,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 743,
											"end": 801,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 743,
											"end": 801,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 743,
											"end": 801,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 743,
											"end": 801,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 743,
											"end": 801,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 743,
											"end": 801,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 743,
											"end": 801,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 743,
											"end": 801,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 743,
											"end": 801,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 743,
											"end": 801,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 743,
											"end": 801,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 743,
											"end": 801,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 743,
											"end": 801,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 743,
											"end": 801,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 743,
											"end": 801,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 743,
											"end": 801,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 743,
											"end": 801,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 743,
											"end": 801,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 716,
											"end": 735,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 716,
											"end": 802,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 716,
											"end": 802,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 716,
											"end": 802,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 634,
											"end": 809,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 634,
											"end": 809,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 634,
											"end": 809,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 634,
											"end": 809,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3022,
											"end": 3773,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 3022,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3464,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3467,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 3495,
											"end": 3499,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3467,
											"end": 3536,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3467,
											"end": 3536,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3467,
											"end": 3536,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3467,
											"end": 3536,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3467,
											"end": 3536,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3467,
											"end": 3536,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3467,
											"end": 3536,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3467,
											"end": 3536,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3467,
											"end": 3536,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3467,
											"end": 3536,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3467,
											"end": 3536,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3467,
											"end": 3536,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3467,
											"end": 3536,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3467,
											"end": 3536,
											"name": "PUSH",
											"source": 6,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3467,
											"end": 3536,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3467,
											"end": 3536,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3467,
											"end": 3536,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3475,
											"end": 3480,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3467,
											"end": 3494,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3467,
											"end": 3494,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3467,
											"end": 3494,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 3467,
											"end": 3494,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3467,
											"end": 3536,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3467,
											"end": 3536,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3467,
											"end": 3536,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3467,
											"end": 3536,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3467,
											"end": 3536,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3467,
											"end": 3536,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3467,
											"end": 3536,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 3467,
											"end": 3536,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3536,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3441,
											"end": 3536,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3571,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3550,
											"end": 3560,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3550,
											"end": 3567,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3550,
											"end": 3571,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3546,
											"end": 3767,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3546,
											"end": 3767,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 3546,
											"end": 3767,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3690,
											"end": 3700,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3679,
											"end": 3709,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3679,
											"end": 3709,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3679,
											"end": 3709,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3679,
											"end": 3709,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3679,
											"end": 3709,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3679,
											"end": 3709,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3679,
											"end": 3709,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3679,
											"end": 3709,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3679,
											"end": 3709,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 3679,
											"end": 3709,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3679,
											"end": 3709,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3679,
											"end": 3709,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 3679,
											"end": 3709,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3679,
											"end": 3709,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 3679,
											"end": 3709,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3671,
											"end": 3756,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 3671,
											"end": 3756,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3671,
											"end": 3756,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3671,
											"end": 3756,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3671,
											"end": 3756,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3671,
											"end": 3756,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3671,
											"end": 3756,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3671,
											"end": 3756,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3671,
											"end": 3756,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3671,
											"end": 3756,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 3671,
											"end": 3756,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3671,
											"end": 3756,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 3671,
											"end": 3756,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3671,
											"end": 3756,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 3671,
											"end": 3756,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3671,
											"end": 3756,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3671,
											"end": 3756,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3671,
											"end": 3756,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3671,
											"end": 3756,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3671,
											"end": 3756,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3671,
											"end": 3756,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3671,
											"end": 3756,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3671,
											"end": 3756,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 3671,
											"end": 3756,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3546,
											"end": 3767,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 3546,
											"end": 3767,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3022,
											"end": 3773,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3022,
											"end": 3773,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3022,
											"end": 3773,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3022,
											"end": 3773,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3573,
											"end": 3766,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 3573,
											"end": 3766,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3676,
											"end": 3688,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3707,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 3729,
											"end": 3735,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3737,
											"end": 3741,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3743,
											"end": 3744,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3746,
											"end": 3758,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3707,
											"end": 3728,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 3707,
											"end": 3759,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3707,
											"end": 3759,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 3707,
											"end": 3759,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3700,
											"end": 3759,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3700,
											"end": 3759,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3573,
											"end": 3766,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3573,
											"end": 3766,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3573,
											"end": 3766,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3573,
											"end": 3766,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3573,
											"end": 3766,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3573,
											"end": 3766,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4600,
											"end": 5123,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 4600,
											"end": 5123,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4727,
											"end": 4739,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4784,
											"end": 4789,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4759,
											"end": 4780,
											"name": "SELFBALANCE",
											"source": 7
										},
										{
											"begin": 4759,
											"end": 4789,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4759,
											"end": 4789,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4751,
											"end": 4832,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 4751,
											"end": 4832,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4751,
											"end": 4832,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4751,
											"end": 4832,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4751,
											"end": 4832,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4751,
											"end": 4832,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4751,
											"end": 4832,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4751,
											"end": 4832,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4751,
											"end": 4832,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4751,
											"end": 4832,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 4751,
											"end": 4832,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4751,
											"end": 4832,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 4751,
											"end": 4832,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4751,
											"end": 4832,
											"name": "tag",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 4751,
											"end": 4832,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4751,
											"end": 4832,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4751,
											"end": 4832,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4751,
											"end": 4832,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4751,
											"end": 4832,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4751,
											"end": 4832,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4751,
											"end": 4832,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4751,
											"end": 4832,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4751,
											"end": 4832,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 4751,
											"end": 4832,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4850,
											"end": 4868,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 4861,
											"end": 4867,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4850,
											"end": 4860,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 4850,
											"end": 4868,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4850,
											"end": 4868,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 4850,
											"end": 4868,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4842,
											"end": 4902,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 4842,
											"end": 4902,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4842,
											"end": 4902,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4842,
											"end": 4902,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4842,
											"end": 4902,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4842,
											"end": 4902,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4842,
											"end": 4902,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4842,
											"end": 4902,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4842,
											"end": 4902,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4842,
											"end": 4902,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 4842,
											"end": 4902,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4842,
											"end": 4902,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 4842,
											"end": 4902,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4842,
											"end": 4902,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 4842,
											"end": 4902,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4842,
											"end": 4902,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4842,
											"end": 4902,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4842,
											"end": 4902,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4842,
											"end": 4902,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4842,
											"end": 4902,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4842,
											"end": 4902,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4842,
											"end": 4902,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4842,
											"end": 4902,
											"name": "tag",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 4842,
											"end": 4902,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4973,
											"end": 4985,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4987,
											"end": 5010,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5014,
											"end": 5020,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5014,
											"end": 5025,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5014,
											"end": 5025,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5034,
											"end": 5039,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5042,
											"end": 5046,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "tag",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "PUSH",
											"source": 7,
											"value": "3F"
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5014,
											"end": 5047,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4972,
											"end": 5047,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4972,
											"end": 5047,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4972,
											"end": 5047,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4972,
											"end": 5047,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5064,
											"end": 5116,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 5082,
											"end": 5089,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5091,
											"end": 5101,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5103,
											"end": 5115,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5064,
											"end": 5081,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 5064,
											"end": 5116,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5064,
											"end": 5116,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 5064,
											"end": 5116,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5057,
											"end": 5116,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5057,
											"end": 5116,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5057,
											"end": 5116,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5057,
											"end": 5116,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 5123,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 5123,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 5123,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 5123,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 5123,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 5123,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 5123,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 718,
											"end": 1131,
											"name": "tag",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 718,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 778,
											"end": 782,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 981,
											"end": 993,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1090,
											"end": 1097,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1078,
											"end": 1098,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 1070,
											"end": 1098,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1070,
											"end": 1098,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1123,
											"end": 1124,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1116,
											"end": 1120,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1116,
											"end": 1124,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1109,
											"end": 1124,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1109,
											"end": 1124,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1109,
											"end": 1124,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 718,
											"end": 1131,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 718,
											"end": 1131,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 718,
											"end": 1131,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 718,
											"end": 1131,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7083,
											"end": 7808,
											"name": "tag",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 7083,
											"end": 7808,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7198,
											"end": 7210,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 7226,
											"end": 7233,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7222,
											"end": 7802,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7222,
											"end": 7802,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 7222,
											"end": 7802,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7256,
											"end": 7266,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7249,
											"end": 7266,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7249,
											"end": 7266,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7249,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 7249,
											"end": 7266,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7222,
											"end": 7802,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 7222,
											"end": 7802,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7387,
											"end": 7388,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7367,
											"end": 7377,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7367,
											"end": 7384,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7367,
											"end": 7388,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7363,
											"end": 7792,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7363,
											"end": 7792,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 7363,
											"end": 7792,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7625,
											"end": 7635,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7619,
											"end": 7636,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7685,
											"end": 7700,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7672,
											"end": 7682,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7668,
											"end": 7670,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7664,
											"end": 7683,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7657,
											"end": 7701,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7574,
											"end": 7719,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 7574,
											"end": 7719,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7764,
											"end": 7776,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7083,
											"end": 7808,
											"name": "tag",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 7083,
											"end": 7808,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7083,
											"end": 7808,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7083,
											"end": 7808,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7083,
											"end": 7808,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7083,
											"end": 7808,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7083,
											"end": 7808,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7083,
											"end": 7808,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 59,
											"end": 146,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "tag",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 206,
											"end": 211,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 237,
											"end": 243,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 231,
											"end": 244,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 222,
											"end": 244,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 222,
											"end": 244,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 277,
											"end": 282,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "tag",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 212,
											"end": 289,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 212,
											"end": 289,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 212,
											"end": 289,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 212,
											"end": 289,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 212,
											"end": 289,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "tag",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 341,
											"end": 346,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 385,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 366,
											"end": 386,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 357,
											"end": 386,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 422,
											"end": 427,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "tag",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 347,
											"end": 434,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 347,
											"end": 434,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 347,
											"end": 434,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 347,
											"end": 434,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 347,
											"end": 434,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 440,
											"end": 583,
											"name": "tag",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 440,
											"end": 583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 497,
											"end": 502,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 534,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 522,
											"end": 535,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 513,
											"end": 535,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 513,
											"end": 535,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 544,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 571,
											"end": 576,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 544,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "tag",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 503,
											"end": 583,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 503,
											"end": 583,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 503,
											"end": 583,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 503,
											"end": 583,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 503,
											"end": 583,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 589,
											"end": 851,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 589,
											"end": 851,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 648,
											"end": 654,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 697,
											"end": 699,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 685,
											"end": 694,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 676,
											"end": 683,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 672,
											"end": 695,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 668,
											"end": 700,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 665,
											"end": 667,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 665,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 665,
											"end": 667,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 713,
											"end": 714,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 710,
											"end": 711,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 703,
											"end": 715,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 665,
											"end": 667,
											"name": "tag",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 665,
											"end": 667,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 756,
											"end": 757,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 826,
											"end": 833,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 817,
											"end": 823,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 806,
											"end": 815,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 802,
											"end": 824,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 781,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 781,
											"end": 834,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 781,
											"end": 834,
											"name": "tag",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 781,
											"end": 834,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 771,
											"end": 834,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 771,
											"end": 834,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 727,
											"end": 844,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 655,
											"end": 851,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 655,
											"end": 851,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 655,
											"end": 851,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 655,
											"end": 851,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 655,
											"end": 851,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 857,
											"end": 1135,
											"name": "tag",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 857,
											"end": 1135,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 924,
											"end": 930,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 973,
											"end": 975,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 961,
											"end": 970,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 952,
											"end": 959,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 948,
											"end": 971,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 944,
											"end": 976,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 941,
											"end": 943,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 941,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 941,
											"end": 943,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 989,
											"end": 990,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 986,
											"end": 987,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 979,
											"end": 991,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 941,
											"end": 943,
											"name": "tag",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 941,
											"end": 943,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1032,
											"end": 1033,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1057,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 1110,
											"end": 1117,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1090,
											"end": 1099,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1108,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1057,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 1057,
											"end": 1118,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1057,
											"end": 1118,
											"name": "tag",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 1057,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1047,
											"end": 1118,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1047,
											"end": 1118,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1003,
											"end": 1128,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 931,
											"end": 1135,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 931,
											"end": 1135,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 931,
											"end": 1135,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 931,
											"end": 1135,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 931,
											"end": 1135,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1141,
											"end": 1403,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 1141,
											"end": 1403,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1200,
											"end": 1206,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1249,
											"end": 1251,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1237,
											"end": 1246,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1228,
											"end": 1235,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1224,
											"end": 1247,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1220,
											"end": 1252,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1217,
											"end": 1219,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1217,
											"end": 1219,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 1217,
											"end": 1219,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1265,
											"end": 1266,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1262,
											"end": 1263,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1255,
											"end": 1267,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1217,
											"end": 1219,
											"name": "tag",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 1217,
											"end": 1219,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1308,
											"end": 1309,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1333,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 1378,
											"end": 1385,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1369,
											"end": 1375,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1358,
											"end": 1367,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1354,
											"end": 1376,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1333,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 1333,
											"end": 1386,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1333,
											"end": 1386,
											"name": "tag",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 1333,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1323,
											"end": 1386,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1323,
											"end": 1386,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1279,
											"end": 1396,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1207,
											"end": 1403,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1207,
											"end": 1403,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1207,
											"end": 1403,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1207,
											"end": 1403,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1207,
											"end": 1403,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1409,
											"end": 1693,
											"name": "tag",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 1409,
											"end": 1693,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1479,
											"end": 1485,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1528,
											"end": 1530,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1516,
											"end": 1525,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1507,
											"end": 1514,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1503,
											"end": 1526,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1499,
											"end": 1531,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1496,
											"end": 1498,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1496,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 1496,
											"end": 1498,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1544,
											"end": 1545,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1541,
											"end": 1542,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1534,
											"end": 1546,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1496,
											"end": 1498,
											"name": "tag",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 1496,
											"end": 1498,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1587,
											"end": 1588,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1612,
											"end": 1676,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 1668,
											"end": 1675,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1659,
											"end": 1665,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1648,
											"end": 1657,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1644,
											"end": 1666,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1612,
											"end": 1676,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 1612,
											"end": 1676,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1612,
											"end": 1676,
											"name": "tag",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 1612,
											"end": 1676,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1602,
											"end": 1676,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1602,
											"end": 1676,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1558,
											"end": 1686,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1486,
											"end": 1693,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1486,
											"end": 1693,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1486,
											"end": 1693,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1486,
											"end": 1693,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1486,
											"end": 1693,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1699,
											"end": 1817,
											"name": "tag",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 1699,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1786,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 1804,
											"end": 1809,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1786,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 1786,
											"end": 1810,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1786,
											"end": 1810,
											"name": "tag",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 1786,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1781,
											"end": 1784,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1774,
											"end": 1811,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1764,
											"end": 1817,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1764,
											"end": 1817,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1764,
											"end": 1817,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1823,
											"end": 2196,
											"name": "tag",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 1823,
											"end": 2196,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1927,
											"end": 1930,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1955,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 1987,
											"end": 1992,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1955,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 1955,
											"end": 1993,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1955,
											"end": 1993,
											"name": "tag",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 1955,
											"end": 1993,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2009,
											"end": 2097,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 2090,
											"end": 2096,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2085,
											"end": 2088,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2009,
											"end": 2097,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 2009,
											"end": 2097,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2009,
											"end": 2097,
											"name": "tag",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 2009,
											"end": 2097,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2002,
											"end": 2097,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2002,
											"end": 2097,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2106,
											"end": 2158,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 2151,
											"end": 2157,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2146,
											"end": 2149,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2139,
											"end": 2143,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2132,
											"end": 2137,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2128,
											"end": 2144,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2106,
											"end": 2158,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 2106,
											"end": 2158,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2106,
											"end": 2158,
											"name": "tag",
											"source": 8,
											"value": "245"
										},
										{
											"begin": 2106,
											"end": 2158,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2183,
											"end": 2189,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2178,
											"end": 2181,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2174,
											"end": 2190,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2167,
											"end": 2190,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2167,
											"end": 2190,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2196,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2196,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2196,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2196,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2196,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2196,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2202,
											"end": 2361,
											"name": "tag",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 2202,
											"end": 2361,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2303,
											"end": 2354,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 2348,
											"end": 2353,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2303,
											"end": 2354,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 2303,
											"end": 2354,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2303,
											"end": 2354,
											"name": "tag",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 2303,
											"end": 2354,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2298,
											"end": 2301,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2291,
											"end": 2355,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2281,
											"end": 2361,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2281,
											"end": 2361,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2281,
											"end": 2361,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2367,
											"end": 2731,
											"name": "tag",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 2367,
											"end": 2731,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2455,
											"end": 2458,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2483,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 2516,
											"end": 2521,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2483,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 2483,
											"end": 2522,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2483,
											"end": 2522,
											"name": "tag",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 2483,
											"end": 2522,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2538,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 2602,
											"end": 2608,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2597,
											"end": 2600,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2538,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 2538,
											"end": 2609,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2538,
											"end": 2609,
											"name": "tag",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 2538,
											"end": 2609,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2531,
											"end": 2609,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2531,
											"end": 2609,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2618,
											"end": 2670,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 2663,
											"end": 2669,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2658,
											"end": 2661,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2651,
											"end": 2655,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2644,
											"end": 2649,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2640,
											"end": 2656,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2618,
											"end": 2670,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 2618,
											"end": 2670,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2618,
											"end": 2670,
											"name": "tag",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 2618,
											"end": 2670,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2695,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 2717,
											"end": 2723,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2695,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 2695,
											"end": 2724,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2695,
											"end": 2724,
											"name": "tag",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 2695,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2690,
											"end": 2693,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2686,
											"end": 2725,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2679,
											"end": 2725,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2679,
											"end": 2725,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2459,
											"end": 2731,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2459,
											"end": 2731,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2459,
											"end": 2731,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2459,
											"end": 2731,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2459,
											"end": 2731,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2459,
											"end": 2731,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2737,
											"end": 3103,
											"name": "tag",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 2737,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2879,
											"end": 2882,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2900,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 2964,
											"end": 2966,
											"name": "PUSH",
											"source": 8,
											"value": "2E"
										},
										{
											"begin": 2959,
											"end": 2962,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2900,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 2900,
											"end": 2967,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2900,
											"end": 2967,
											"name": "tag",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 2900,
											"end": 2967,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2893,
											"end": 2967,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2893,
											"end": 2967,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2976,
											"end": 3069,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 3065,
											"end": 3068,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2976,
											"end": 3069,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 2976,
											"end": 3069,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2976,
											"end": 3069,
											"name": "tag",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 2976,
											"end": 3069,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3094,
											"end": 3096,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3089,
											"end": 3092,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3078,
											"end": 3097,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3078,
											"end": 3097,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2883,
											"end": 3103,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2883,
											"end": 3103,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2883,
											"end": 3103,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2883,
											"end": 3103,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3109,
											"end": 3475,
											"name": "tag",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 3109,
											"end": 3475,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3251,
											"end": 3254,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3272,
											"end": 3339,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 3336,
											"end": 3338,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 3331,
											"end": 3334,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3272,
											"end": 3339,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 3272,
											"end": 3339,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3272,
											"end": 3339,
											"name": "tag",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 3272,
											"end": 3339,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3265,
											"end": 3339,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3265,
											"end": 3339,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3348,
											"end": 3441,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 3437,
											"end": 3440,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3348,
											"end": 3441,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 3348,
											"end": 3441,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3348,
											"end": 3441,
											"name": "tag",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 3348,
											"end": 3441,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3466,
											"end": 3468,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3461,
											"end": 3464,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3457,
											"end": 3469,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3450,
											"end": 3469,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3450,
											"end": 3469,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3255,
											"end": 3475,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3255,
											"end": 3475,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3255,
											"end": 3475,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3255,
											"end": 3475,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3481,
											"end": 3847,
											"name": "tag",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 3481,
											"end": 3847,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3623,
											"end": 3626,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3644,
											"end": 3711,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 3708,
											"end": 3710,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 3703,
											"end": 3706,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3644,
											"end": 3711,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 3644,
											"end": 3711,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3644,
											"end": 3711,
											"name": "tag",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 3644,
											"end": 3711,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3637,
											"end": 3711,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3637,
											"end": 3711,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3720,
											"end": 3813,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 3809,
											"end": 3812,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3720,
											"end": 3813,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 3720,
											"end": 3813,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3720,
											"end": 3813,
											"name": "tag",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 3720,
											"end": 3813,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3838,
											"end": 3840,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3833,
											"end": 3836,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3829,
											"end": 3841,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3822,
											"end": 3841,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3822,
											"end": 3841,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3627,
											"end": 3847,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3627,
											"end": 3847,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3627,
											"end": 3847,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3627,
											"end": 3847,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3853,
											"end": 4219,
											"name": "tag",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 3853,
											"end": 4219,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3995,
											"end": 3998,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4016,
											"end": 4083,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 4080,
											"end": 4082,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 4075,
											"end": 4078,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4016,
											"end": 4083,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 4016,
											"end": 4083,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4016,
											"end": 4083,
											"name": "tag",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 4016,
											"end": 4083,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4009,
											"end": 4083,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4009,
											"end": 4083,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4092,
											"end": 4185,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 4181,
											"end": 4184,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4092,
											"end": 4185,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 4092,
											"end": 4185,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4092,
											"end": 4185,
											"name": "tag",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 4092,
											"end": 4185,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4210,
											"end": 4212,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4205,
											"end": 4208,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4201,
											"end": 4213,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4194,
											"end": 4213,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4194,
											"end": 4213,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3999,
											"end": 4219,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3999,
											"end": 4219,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3999,
											"end": 4219,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3999,
											"end": 4219,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4225,
											"end": 4593,
											"name": "tag",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 4225,
											"end": 4593,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4367,
											"end": 4370,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4388,
											"end": 4456,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 4452,
											"end": 4455,
											"name": "PUSH",
											"source": 8,
											"value": "6E"
										},
										{
											"begin": 4447,
											"end": 4450,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4388,
											"end": 4456,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 4388,
											"end": 4456,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4388,
											"end": 4456,
											"name": "tag",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 4388,
											"end": 4456,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4381,
											"end": 4456,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4381,
											"end": 4456,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4465,
											"end": 4558,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 4554,
											"end": 4557,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4465,
											"end": 4558,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 4465,
											"end": 4558,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4465,
											"end": 4558,
											"name": "tag",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 4465,
											"end": 4558,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4583,
											"end": 4586,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 4578,
											"end": 4581,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4574,
											"end": 4587,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4567,
											"end": 4587,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4567,
											"end": 4587,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4371,
											"end": 4593,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4371,
											"end": 4593,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4371,
											"end": 4593,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4371,
											"end": 4593,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4599,
											"end": 4965,
											"name": "tag",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 4599,
											"end": 4965,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4741,
											"end": 4744,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4762,
											"end": 4829,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 4826,
											"end": 4828,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4821,
											"end": 4824,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4762,
											"end": 4829,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 4762,
											"end": 4829,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4762,
											"end": 4829,
											"name": "tag",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 4762,
											"end": 4829,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4755,
											"end": 4829,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4755,
											"end": 4829,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4838,
											"end": 4931,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 4927,
											"end": 4930,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4838,
											"end": 4931,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 4838,
											"end": 4931,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4838,
											"end": 4931,
											"name": "tag",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 4838,
											"end": 4931,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4956,
											"end": 4958,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4951,
											"end": 4954,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4947,
											"end": 4959,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4940,
											"end": 4959,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4940,
											"end": 4959,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4745,
											"end": 4965,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4745,
											"end": 4965,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4745,
											"end": 4965,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4745,
											"end": 4965,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4971,
											"end": 5337,
											"name": "tag",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 4971,
											"end": 5337,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5113,
											"end": 5116,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5134,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 5198,
											"end": 5200,
											"name": "PUSH",
											"source": 8,
											"value": "1D"
										},
										{
											"begin": 5193,
											"end": 5196,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5134,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 5134,
											"end": 5201,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5134,
											"end": 5201,
											"name": "tag",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 5134,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5127,
											"end": 5201,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5127,
											"end": 5201,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5210,
											"end": 5303,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 5299,
											"end": 5302,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5210,
											"end": 5303,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 5210,
											"end": 5303,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5210,
											"end": 5303,
											"name": "tag",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 5210,
											"end": 5303,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5328,
											"end": 5330,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5323,
											"end": 5326,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5319,
											"end": 5331,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5312,
											"end": 5331,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5312,
											"end": 5331,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5117,
											"end": 5337,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5117,
											"end": 5337,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5117,
											"end": 5337,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5117,
											"end": 5337,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5343,
											"end": 5709,
											"name": "tag",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 5343,
											"end": 5709,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5485,
											"end": 5488,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5506,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 5570,
											"end": 5572,
											"name": "PUSH",
											"source": 8,
											"value": "1D"
										},
										{
											"begin": 5565,
											"end": 5568,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5506,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 5506,
											"end": 5573,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5506,
											"end": 5573,
											"name": "tag",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 5506,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5499,
											"end": 5573,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5499,
											"end": 5573,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5582,
											"end": 5675,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 5671,
											"end": 5674,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5582,
											"end": 5675,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 5582,
											"end": 5675,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5582,
											"end": 5675,
											"name": "tag",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 5582,
											"end": 5675,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5700,
											"end": 5702,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5695,
											"end": 5698,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5691,
											"end": 5703,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5684,
											"end": 5703,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5684,
											"end": 5703,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5489,
											"end": 5709,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5489,
											"end": 5709,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5489,
											"end": 5709,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5489,
											"end": 5709,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5715,
											"end": 6081,
											"name": "tag",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 5715,
											"end": 6081,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5857,
											"end": 5860,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5878,
											"end": 5945,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 5942,
											"end": 5944,
											"name": "PUSH",
											"source": 8,
											"value": "2A"
										},
										{
											"begin": 5937,
											"end": 5940,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5878,
											"end": 5945,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 5878,
											"end": 5945,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5878,
											"end": 5945,
											"name": "tag",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 5878,
											"end": 5945,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5871,
											"end": 5945,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5871,
											"end": 5945,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5954,
											"end": 6047,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 6043,
											"end": 6046,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5954,
											"end": 6047,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 5954,
											"end": 6047,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5954,
											"end": 6047,
											"name": "tag",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 5954,
											"end": 6047,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6072,
											"end": 6074,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6067,
											"end": 6070,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6063,
											"end": 6075,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6056,
											"end": 6075,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6056,
											"end": 6075,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5861,
											"end": 6081,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5861,
											"end": 6081,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5861,
											"end": 6081,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5861,
											"end": 6081,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6087,
											"end": 6453,
											"name": "tag",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 6087,
											"end": 6453,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6229,
											"end": 6232,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6250,
											"end": 6317,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 6314,
											"end": 6316,
											"name": "PUSH",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 6309,
											"end": 6312,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6250,
											"end": 6317,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 6250,
											"end": 6317,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6250,
											"end": 6317,
											"name": "tag",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 6250,
											"end": 6317,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6243,
											"end": 6317,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6243,
											"end": 6317,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6326,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 6415,
											"end": 6418,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6326,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 6326,
											"end": 6419,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6326,
											"end": 6419,
											"name": "tag",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 6326,
											"end": 6419,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6444,
											"end": 6446,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6439,
											"end": 6442,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6435,
											"end": 6447,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6428,
											"end": 6447,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6428,
											"end": 6447,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6233,
											"end": 6453,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6233,
											"end": 6453,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6233,
											"end": 6453,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6233,
											"end": 6453,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6459,
											"end": 6825,
											"name": "tag",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 6459,
											"end": 6825,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6601,
											"end": 6604,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6622,
											"end": 6689,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 6686,
											"end": 6688,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 6681,
											"end": 6684,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6622,
											"end": 6689,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 6622,
											"end": 6689,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6622,
											"end": 6689,
											"name": "tag",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 6622,
											"end": 6689,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6615,
											"end": 6689,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6615,
											"end": 6689,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6698,
											"end": 6791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 6787,
											"end": 6790,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6698,
											"end": 6791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 6698,
											"end": 6791,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6698,
											"end": 6791,
											"name": "tag",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 6698,
											"end": 6791,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6816,
											"end": 6818,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6811,
											"end": 6814,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6807,
											"end": 6819,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6800,
											"end": 6819,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6800,
											"end": 6819,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6605,
											"end": 6825,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6605,
											"end": 6825,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6605,
											"end": 6825,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6605,
											"end": 6825,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6831,
											"end": 7197,
											"name": "tag",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 6831,
											"end": 7197,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6973,
											"end": 6976,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6994,
											"end": 7061,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 7058,
											"end": 7060,
											"name": "PUSH",
											"source": 8,
											"value": "1B"
										},
										{
											"begin": 7053,
											"end": 7056,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6994,
											"end": 7061,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 6994,
											"end": 7061,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6994,
											"end": 7061,
											"name": "tag",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 6994,
											"end": 7061,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6987,
											"end": 7061,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6987,
											"end": 7061,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7070,
											"end": 7163,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 7159,
											"end": 7162,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7070,
											"end": 7163,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 7070,
											"end": 7163,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7070,
											"end": 7163,
											"name": "tag",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 7070,
											"end": 7163,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7188,
											"end": 7190,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7183,
											"end": 7186,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7179,
											"end": 7191,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7172,
											"end": 7191,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7172,
											"end": 7191,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6977,
											"end": 7197,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6977,
											"end": 7197,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6977,
											"end": 7197,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6977,
											"end": 7197,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7203,
											"end": 7321,
											"name": "tag",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 7203,
											"end": 7321,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7290,
											"end": 7314,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 7308,
											"end": 7313,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7290,
											"end": 7314,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 7290,
											"end": 7314,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7290,
											"end": 7314,
											"name": "tag",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 7290,
											"end": 7314,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7285,
											"end": 7288,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7278,
											"end": 7315,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7268,
											"end": 7321,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7268,
											"end": 7321,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7268,
											"end": 7321,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7327,
											"end": 7598,
											"name": "tag",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 7327,
											"end": 7598,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7457,
											"end": 7460,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7479,
											"end": 7572,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 7568,
											"end": 7571,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7559,
											"end": 7565,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7479,
											"end": 7572,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 7479,
											"end": 7572,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7479,
											"end": 7572,
											"name": "tag",
											"source": 8,
											"value": "325"
										},
										{
											"begin": 7479,
											"end": 7572,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7472,
											"end": 7572,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7472,
											"end": 7572,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7589,
											"end": 7592,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7582,
											"end": 7592,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7582,
											"end": 7592,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7461,
											"end": 7598,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7461,
											"end": 7598,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7461,
											"end": 7598,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7461,
											"end": 7598,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7461,
											"end": 7598,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7604,
											"end": 7826,
											"name": "tag",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 7604,
											"end": 7826,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7697,
											"end": 7701,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7735,
											"end": 7737,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7724,
											"end": 7733,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7720,
											"end": 7738,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7712,
											"end": 7738,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7712,
											"end": 7738,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7748,
											"end": 7819,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 7816,
											"end": 7817,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7805,
											"end": 7814,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7801,
											"end": 7818,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7792,
											"end": 7798,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7748,
											"end": 7819,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 7748,
											"end": 7819,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 7748,
											"end": 7819,
											"name": "tag",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 7748,
											"end": 7819,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7702,
											"end": 7826,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7702,
											"end": 7826,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7702,
											"end": 7826,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7702,
											"end": 7826,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7702,
											"end": 7826,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7832,
											"end": 8274,
											"name": "tag",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 7832,
											"end": 8274,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7981,
											"end": 7985,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8019,
											"end": 8021,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 8008,
											"end": 8017,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8004,
											"end": 8022,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7996,
											"end": 8022,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7996,
											"end": 8022,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8032,
											"end": 8103,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 8100,
											"end": 8101,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8089,
											"end": 8098,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8085,
											"end": 8102,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8076,
											"end": 8082,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 8032,
											"end": 8103,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 8032,
											"end": 8103,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8032,
											"end": 8103,
											"name": "tag",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 8032,
											"end": 8103,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8113,
											"end": 8185,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 8181,
											"end": 8183,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8170,
											"end": 8179,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8166,
											"end": 8184,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8157,
											"end": 8163,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8113,
											"end": 8185,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 8113,
											"end": 8185,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8113,
											"end": 8185,
											"name": "tag",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 8113,
											"end": 8185,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8195,
											"end": 8267,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 8263,
											"end": 8265,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8252,
											"end": 8261,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8248,
											"end": 8266,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8239,
											"end": 8245,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8195,
											"end": 8267,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 8195,
											"end": 8267,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8195,
											"end": 8267,
											"name": "tag",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 8195,
											"end": 8267,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7986,
											"end": 8274,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 7986,
											"end": 8274,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 7986,
											"end": 8274,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7986,
											"end": 8274,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7986,
											"end": 8274,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7986,
											"end": 8274,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7986,
											"end": 8274,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 8280,
											"end": 8612,
											"name": "tag",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 8280,
											"end": 8612,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8401,
											"end": 8405,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8439,
											"end": 8441,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8428,
											"end": 8437,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8424,
											"end": 8442,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8416,
											"end": 8442,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8416,
											"end": 8442,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8452,
											"end": 8523,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 8520,
											"end": 8521,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8509,
											"end": 8518,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8505,
											"end": 8522,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8496,
											"end": 8502,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8452,
											"end": 8523,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 8452,
											"end": 8523,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8452,
											"end": 8523,
											"name": "tag",
											"source": 8,
											"value": "333"
										},
										{
											"begin": 8452,
											"end": 8523,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8533,
											"end": 8605,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 8601,
											"end": 8603,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8590,
											"end": 8599,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8586,
											"end": 8604,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8577,
											"end": 8583,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8533,
											"end": 8605,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 8533,
											"end": 8605,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8533,
											"end": 8605,
											"name": "tag",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 8533,
											"end": 8605,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8406,
											"end": 8612,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 8406,
											"end": 8612,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8406,
											"end": 8612,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8406,
											"end": 8612,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8406,
											"end": 8612,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8406,
											"end": 8612,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 8618,
											"end": 8868,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 8618,
											"end": 8868,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8725,
											"end": 8729,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8763,
											"end": 8765,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8752,
											"end": 8761,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8748,
											"end": 8766,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8740,
											"end": 8766,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8740,
											"end": 8766,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8776,
											"end": 8861,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 8858,
											"end": 8859,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8847,
											"end": 8856,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8843,
											"end": 8860,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8834,
											"end": 8840,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8776,
											"end": 8861,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 8776,
											"end": 8861,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8776,
											"end": 8861,
											"name": "tag",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 8776,
											"end": 8861,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8730,
											"end": 8868,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8730,
											"end": 8868,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8730,
											"end": 8868,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8730,
											"end": 8868,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8730,
											"end": 8868,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 8874,
											"end": 9187,
											"name": "tag",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 8874,
											"end": 9187,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8987,
											"end": 8991,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9025,
											"end": 9027,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9014,
											"end": 9023,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9010,
											"end": 9028,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9002,
											"end": 9028,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9002,
											"end": 9028,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9074,
											"end": 9083,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9068,
											"end": 9072,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9064,
											"end": 9084,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9060,
											"end": 9061,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9049,
											"end": 9058,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9045,
											"end": 9062,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9038,
											"end": 9085,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9102,
											"end": 9180,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 9175,
											"end": 9179,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9166,
											"end": 9172,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9102,
											"end": 9180,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 9102,
											"end": 9180,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9102,
											"end": 9180,
											"name": "tag",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 9102,
											"end": 9180,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9094,
											"end": 9180,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9094,
											"end": 9180,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8992,
											"end": 9187,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8992,
											"end": 9187,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8992,
											"end": 9187,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8992,
											"end": 9187,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8992,
											"end": 9187,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 9193,
											"end": 9612,
											"name": "tag",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 9193,
											"end": 9612,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9359,
											"end": 9363,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9397,
											"end": 9399,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9386,
											"end": 9395,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9382,
											"end": 9400,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9374,
											"end": 9400,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9374,
											"end": 9400,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9446,
											"end": 9455,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9440,
											"end": 9444,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9436,
											"end": 9456,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9432,
											"end": 9433,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9421,
											"end": 9430,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9417,
											"end": 9434,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9410,
											"end": 9457,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9474,
											"end": 9605,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 9600,
											"end": 9604,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9474,
											"end": 9605,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 9474,
											"end": 9605,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9474,
											"end": 9605,
											"name": "tag",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 9474,
											"end": 9605,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9466,
											"end": 9605,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9466,
											"end": 9605,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9364,
											"end": 9612,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9364,
											"end": 9612,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9364,
											"end": 9612,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9364,
											"end": 9612,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 9618,
											"end": 10037,
											"name": "tag",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 9618,
											"end": 10037,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9784,
											"end": 9788,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9822,
											"end": 9824,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9811,
											"end": 9820,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9807,
											"end": 9825,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9799,
											"end": 9825,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9799,
											"end": 9825,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9871,
											"end": 9880,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9865,
											"end": 9869,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9861,
											"end": 9881,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9857,
											"end": 9858,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9846,
											"end": 9855,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9842,
											"end": 9859,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9835,
											"end": 9882,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9899,
											"end": 10030,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 10025,
											"end": 10029,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9899,
											"end": 10030,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 9899,
											"end": 10030,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 9899,
											"end": 10030,
											"name": "tag",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 9899,
											"end": 10030,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9891,
											"end": 10030,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9891,
											"end": 10030,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9789,
											"end": 10037,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9789,
											"end": 10037,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9789,
											"end": 10037,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9789,
											"end": 10037,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 10043,
											"end": 10462,
											"name": "tag",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 10043,
											"end": 10462,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10209,
											"end": 10213,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10247,
											"end": 10249,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10236,
											"end": 10245,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10232,
											"end": 10250,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10224,
											"end": 10250,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10224,
											"end": 10250,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10296,
											"end": 10305,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10290,
											"end": 10294,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10286,
											"end": 10306,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10282,
											"end": 10283,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10271,
											"end": 10280,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10267,
											"end": 10284,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10260,
											"end": 10307,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10324,
											"end": 10455,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 10450,
											"end": 10454,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10324,
											"end": 10455,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 10324,
											"end": 10455,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10324,
											"end": 10455,
											"name": "tag",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 10324,
											"end": 10455,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10316,
											"end": 10455,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10316,
											"end": 10455,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10214,
											"end": 10462,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10214,
											"end": 10462,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10214,
											"end": 10462,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10214,
											"end": 10462,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 10468,
											"end": 10887,
											"name": "tag",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 10468,
											"end": 10887,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10634,
											"end": 10638,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10672,
											"end": 10674,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10661,
											"end": 10670,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10657,
											"end": 10675,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10649,
											"end": 10675,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10649,
											"end": 10675,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10721,
											"end": 10730,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10715,
											"end": 10719,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10711,
											"end": 10731,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10707,
											"end": 10708,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10696,
											"end": 10705,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10692,
											"end": 10709,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10685,
											"end": 10732,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10749,
											"end": 10880,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 10875,
											"end": 10879,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10749,
											"end": 10880,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 10749,
											"end": 10880,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 10749,
											"end": 10880,
											"name": "tag",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 10749,
											"end": 10880,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10741,
											"end": 10880,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10741,
											"end": 10880,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10639,
											"end": 10887,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10639,
											"end": 10887,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10639,
											"end": 10887,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10639,
											"end": 10887,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 10893,
											"end": 11312,
											"name": "tag",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 10893,
											"end": 11312,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11059,
											"end": 11063,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11097,
											"end": 11099,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11086,
											"end": 11095,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11082,
											"end": 11100,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11074,
											"end": 11100,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11074,
											"end": 11100,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11146,
											"end": 11155,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11140,
											"end": 11144,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11136,
											"end": 11156,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11132,
											"end": 11133,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11121,
											"end": 11130,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11117,
											"end": 11134,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11110,
											"end": 11157,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11174,
											"end": 11305,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 11300,
											"end": 11304,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11174,
											"end": 11305,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 11174,
											"end": 11305,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11174,
											"end": 11305,
											"name": "tag",
											"source": 8,
											"value": "348"
										},
										{
											"begin": 11174,
											"end": 11305,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11166,
											"end": 11305,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11166,
											"end": 11305,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11064,
											"end": 11312,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11064,
											"end": 11312,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11064,
											"end": 11312,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11064,
											"end": 11312,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 11318,
											"end": 11737,
											"name": "tag",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 11318,
											"end": 11737,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11484,
											"end": 11488,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11522,
											"end": 11524,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11511,
											"end": 11520,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11507,
											"end": 11525,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11499,
											"end": 11525,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11499,
											"end": 11525,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11571,
											"end": 11580,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11565,
											"end": 11569,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11561,
											"end": 11581,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11557,
											"end": 11558,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11546,
											"end": 11555,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11542,
											"end": 11559,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11535,
											"end": 11582,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11599,
											"end": 11730,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 11725,
											"end": 11729,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11599,
											"end": 11730,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 11599,
											"end": 11730,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 11599,
											"end": 11730,
											"name": "tag",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 11599,
											"end": 11730,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11591,
											"end": 11730,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11591,
											"end": 11730,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11489,
											"end": 11737,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11489,
											"end": 11737,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11489,
											"end": 11737,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11489,
											"end": 11737,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 11743,
											"end": 12162,
											"name": "tag",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 11743,
											"end": 12162,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11909,
											"end": 11913,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11947,
											"end": 11949,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11936,
											"end": 11945,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11932,
											"end": 11950,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11924,
											"end": 11950,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11924,
											"end": 11950,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11996,
											"end": 12005,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11990,
											"end": 11994,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11986,
											"end": 12006,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11982,
											"end": 11983,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11971,
											"end": 11980,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11967,
											"end": 11984,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11960,
											"end": 12007,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12024,
											"end": 12155,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 12150,
											"end": 12154,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12024,
											"end": 12155,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 12024,
											"end": 12155,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12024,
											"end": 12155,
											"name": "tag",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 12024,
											"end": 12155,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12016,
											"end": 12155,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12016,
											"end": 12155,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11914,
											"end": 12162,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11914,
											"end": 12162,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11914,
											"end": 12162,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11914,
											"end": 12162,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 12168,
											"end": 12587,
											"name": "tag",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 12168,
											"end": 12587,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12334,
											"end": 12338,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12372,
											"end": 12374,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12361,
											"end": 12370,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12357,
											"end": 12375,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12349,
											"end": 12375,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12349,
											"end": 12375,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12421,
											"end": 12430,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12415,
											"end": 12419,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12411,
											"end": 12431,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12407,
											"end": 12408,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12396,
											"end": 12405,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12392,
											"end": 12409,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12385,
											"end": 12432,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12449,
											"end": 12580,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 12575,
											"end": 12579,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12449,
											"end": 12580,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 12449,
											"end": 12580,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12449,
											"end": 12580,
											"name": "tag",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 12449,
											"end": 12580,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12441,
											"end": 12580,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12441,
											"end": 12580,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12339,
											"end": 12587,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12339,
											"end": 12587,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12339,
											"end": 12587,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12339,
											"end": 12587,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 12593,
											"end": 13012,
											"name": "tag",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 12593,
											"end": 13012,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12759,
											"end": 12763,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12797,
											"end": 12799,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12786,
											"end": 12795,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12782,
											"end": 12800,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12774,
											"end": 12800,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12774,
											"end": 12800,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12846,
											"end": 12855,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12840,
											"end": 12844,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12836,
											"end": 12856,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12832,
											"end": 12833,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12821,
											"end": 12830,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12817,
											"end": 12834,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12810,
											"end": 12857,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12874,
											"end": 13005,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 13000,
											"end": 13004,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12874,
											"end": 13005,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 12874,
											"end": 13005,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 12874,
											"end": 13005,
											"name": "tag",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 12874,
											"end": 13005,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12866,
											"end": 13005,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12866,
											"end": 13005,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12764,
											"end": 13012,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12764,
											"end": 13012,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12764,
											"end": 13012,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12764,
											"end": 13012,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 13018,
											"end": 13437,
											"name": "tag",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 13018,
											"end": 13437,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13184,
											"end": 13188,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13222,
											"end": 13224,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13211,
											"end": 13220,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13207,
											"end": 13225,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13199,
											"end": 13225,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13199,
											"end": 13225,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13271,
											"end": 13280,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13265,
											"end": 13269,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13261,
											"end": 13281,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13257,
											"end": 13258,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13246,
											"end": 13255,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13242,
											"end": 13259,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13235,
											"end": 13282,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13299,
											"end": 13430,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 13425,
											"end": 13429,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13299,
											"end": 13430,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 13299,
											"end": 13430,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 13299,
											"end": 13430,
											"name": "tag",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 13299,
											"end": 13430,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13291,
											"end": 13430,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13291,
											"end": 13430,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13189,
											"end": 13437,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13189,
											"end": 13437,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13189,
											"end": 13437,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13189,
											"end": 13437,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 13443,
											"end": 13862,
											"name": "tag",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 13443,
											"end": 13862,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13609,
											"end": 13613,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13647,
											"end": 13649,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13636,
											"end": 13645,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13632,
											"end": 13650,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13624,
											"end": 13650,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13624,
											"end": 13650,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13696,
											"end": 13705,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13690,
											"end": 13694,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13686,
											"end": 13706,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13682,
											"end": 13683,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13671,
											"end": 13680,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13667,
											"end": 13684,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13660,
											"end": 13707,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13724,
											"end": 13855,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 13850,
											"end": 13854,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13724,
											"end": 13855,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 13724,
											"end": 13855,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 13724,
											"end": 13855,
											"name": "tag",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 13724,
											"end": 13855,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13716,
											"end": 13855,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13716,
											"end": 13855,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13614,
											"end": 13862,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13614,
											"end": 13862,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13614,
											"end": 13862,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13614,
											"end": 13862,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 13868,
											"end": 14287,
											"name": "tag",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 13868,
											"end": 14287,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14034,
											"end": 14038,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14072,
											"end": 14074,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14061,
											"end": 14070,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14057,
											"end": 14075,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14049,
											"end": 14075,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14049,
											"end": 14075,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14121,
											"end": 14130,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14115,
											"end": 14119,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14111,
											"end": 14131,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 14107,
											"end": 14108,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14096,
											"end": 14105,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14092,
											"end": 14109,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14085,
											"end": 14132,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14149,
											"end": 14280,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 14275,
											"end": 14279,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14149,
											"end": 14280,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 14149,
											"end": 14280,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 14149,
											"end": 14280,
											"name": "tag",
											"source": 8,
											"value": "362"
										},
										{
											"begin": 14149,
											"end": 14280,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14141,
											"end": 14280,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14141,
											"end": 14280,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14039,
											"end": 14287,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14039,
											"end": 14287,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14039,
											"end": 14287,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14039,
											"end": 14287,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 14293,
											"end": 14515,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 14293,
											"end": 14515,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14386,
											"end": 14390,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14424,
											"end": 14426,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14413,
											"end": 14422,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14409,
											"end": 14427,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14401,
											"end": 14427,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14401,
											"end": 14427,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14437,
											"end": 14508,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 14505,
											"end": 14506,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14494,
											"end": 14503,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14490,
											"end": 14507,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14481,
											"end": 14487,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 14437,
											"end": 14508,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 14437,
											"end": 14508,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 14437,
											"end": 14508,
											"name": "tag",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 14437,
											"end": 14508,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14391,
											"end": 14515,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14391,
											"end": 14515,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14391,
											"end": 14515,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14391,
											"end": 14515,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14391,
											"end": 14515,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 14521,
											"end": 14853,
											"name": "tag",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 14521,
											"end": 14853,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14642,
											"end": 14646,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14680,
											"end": 14682,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 14669,
											"end": 14678,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14665,
											"end": 14683,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14657,
											"end": 14683,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14657,
											"end": 14683,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14693,
											"end": 14764,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 14761,
											"end": 14762,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14750,
											"end": 14759,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14746,
											"end": 14763,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14737,
											"end": 14743,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 14693,
											"end": 14764,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 14693,
											"end": 14764,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 14693,
											"end": 14764,
											"name": "tag",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 14693,
											"end": 14764,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14774,
											"end": 14846,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 14842,
											"end": 14844,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14831,
											"end": 14840,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14827,
											"end": 14845,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14818,
											"end": 14824,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 14774,
											"end": 14846,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 14774,
											"end": 14846,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 14774,
											"end": 14846,
											"name": "tag",
											"source": 8,
											"value": "367"
										},
										{
											"begin": 14774,
											"end": 14846,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14647,
											"end": 14853,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 14647,
											"end": 14853,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14647,
											"end": 14853,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14647,
											"end": 14853,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14647,
											"end": 14853,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14647,
											"end": 14853,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 14859,
											"end": 14957,
											"name": "tag",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 14859,
											"end": 14957,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14910,
											"end": 14916,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14944,
											"end": 14949,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14938,
											"end": 14950,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 14928,
											"end": 14950,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14928,
											"end": 14950,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14917,
											"end": 14957,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14917,
											"end": 14957,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14917,
											"end": 14957,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14917,
											"end": 14957,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 14963,
											"end": 15062,
											"name": "tag",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 14963,
											"end": 15062,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15015,
											"end": 15021,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15049,
											"end": 15054,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15043,
											"end": 15055,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 15033,
											"end": 15055,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15033,
											"end": 15055,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15022,
											"end": 15062,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15022,
											"end": 15062,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15022,
											"end": 15062,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15022,
											"end": 15062,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 15068,
											"end": 15215,
											"name": "tag",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 15068,
											"end": 15215,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15169,
											"end": 15180,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15206,
											"end": 15209,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15191,
											"end": 15209,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15191,
											"end": 15209,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15181,
											"end": 15215,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 15181,
											"end": 15215,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15181,
											"end": 15215,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15181,
											"end": 15215,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15181,
											"end": 15215,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 15221,
											"end": 15390,
											"name": "tag",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 15221,
											"end": 15390,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15305,
											"end": 15316,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15339,
											"end": 15345,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15334,
											"end": 15337,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15327,
											"end": 15346,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15379,
											"end": 15383,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15374,
											"end": 15377,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15370,
											"end": 15384,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15355,
											"end": 15384,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15355,
											"end": 15384,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15317,
											"end": 15390,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 15317,
											"end": 15390,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15317,
											"end": 15390,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15317,
											"end": 15390,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15317,
											"end": 15390,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 15396,
											"end": 15701,
											"name": "tag",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 15396,
											"end": 15701,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15436,
											"end": 15439,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15455,
											"end": 15475,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 15473,
											"end": 15474,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15455,
											"end": 15475,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 15455,
											"end": 15475,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 15455,
											"end": 15475,
											"name": "tag",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 15455,
											"end": 15475,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15450,
											"end": 15475,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15450,
											"end": 15475,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15489,
											"end": 15509,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 15507,
											"end": 15508,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15489,
											"end": 15509,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 15489,
											"end": 15509,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 15489,
											"end": 15509,
											"name": "tag",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 15489,
											"end": 15509,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15484,
											"end": 15509,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 15484,
											"end": 15509,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15643,
											"end": 15644,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15575,
											"end": 15641,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15571,
											"end": 15645,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 15568,
											"end": 15569,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15565,
											"end": 15646,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 15562,
											"end": 15564,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 15562,
											"end": 15564,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 15562,
											"end": 15564,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 15649,
											"end": 15667,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "376"
										},
										{
											"begin": 15649,
											"end": 15667,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 15649,
											"end": 15667,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 15649,
											"end": 15667,
											"name": "tag",
											"source": 8,
											"value": "376"
										},
										{
											"begin": 15649,
											"end": 15667,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15562,
											"end": 15564,
											"name": "tag",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 15562,
											"end": 15564,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15693,
											"end": 15694,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15690,
											"end": 15691,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15686,
											"end": 15695,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15679,
											"end": 15695,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15679,
											"end": 15695,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15440,
											"end": 15701,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 15440,
											"end": 15701,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15440,
											"end": 15701,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15440,
											"end": 15701,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15440,
											"end": 15701,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 15707,
											"end": 15892,
											"name": "tag",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 15707,
											"end": 15892,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15747,
											"end": 15748,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15764,
											"end": 15784,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 15782,
											"end": 15783,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15764,
											"end": 15784,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 15764,
											"end": 15784,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 15764,
											"end": 15784,
											"name": "tag",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 15764,
											"end": 15784,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15759,
											"end": 15784,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15759,
											"end": 15784,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15798,
											"end": 15818,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 15816,
											"end": 15817,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15798,
											"end": 15818,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 15798,
											"end": 15818,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 15798,
											"end": 15818,
											"name": "tag",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 15798,
											"end": 15818,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15793,
											"end": 15818,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 15793,
											"end": 15818,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15837,
											"end": 15838,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15827,
											"end": 15829,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 15827,
											"end": 15829,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 15842,
											"end": 15860,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 15842,
											"end": 15860,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 15842,
											"end": 15860,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 15842,
											"end": 15860,
											"name": "tag",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 15842,
											"end": 15860,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15827,
											"end": 15829,
											"name": "tag",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 15827,
											"end": 15829,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15884,
											"end": 15885,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15881,
											"end": 15882,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15877,
											"end": 15886,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 15872,
											"end": 15886,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15872,
											"end": 15886,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15749,
											"end": 15892,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 15749,
											"end": 15892,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15749,
											"end": 15892,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15749,
											"end": 15892,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15749,
											"end": 15892,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 15898,
											"end": 15994,
											"name": "tag",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 15898,
											"end": 15994,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15935,
											"end": 15942,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15964,
											"end": 15988,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 15982,
											"end": 15987,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15964,
											"end": 15988,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 15964,
											"end": 15988,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 15964,
											"end": 15988,
											"name": "tag",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 15964,
											"end": 15988,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15953,
											"end": 15988,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15953,
											"end": 15988,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15943,
											"end": 15994,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15943,
											"end": 15994,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15943,
											"end": 15994,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15943,
											"end": 15994,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 16000,
											"end": 16090,
											"name": "tag",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 16000,
											"end": 16090,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16034,
											"end": 16041,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16077,
											"end": 16082,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16070,
											"end": 16083,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16063,
											"end": 16084,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16052,
											"end": 16084,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16052,
											"end": 16084,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16042,
											"end": 16090,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16042,
											"end": 16090,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16042,
											"end": 16090,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16042,
											"end": 16090,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 16096,
											"end": 16222,
											"name": "tag",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 16096,
											"end": 16222,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16133,
											"end": 16140,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16173,
											"end": 16215,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16166,
											"end": 16171,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16162,
											"end": 16216,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 16151,
											"end": 16216,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16151,
											"end": 16216,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16141,
											"end": 16222,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16141,
											"end": 16222,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16141,
											"end": 16222,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16141,
											"end": 16222,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 16228,
											"end": 16305,
											"name": "tag",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 16228,
											"end": 16305,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16265,
											"end": 16272,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16294,
											"end": 16299,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16283,
											"end": 16299,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16283,
											"end": 16299,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16273,
											"end": 16305,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16273,
											"end": 16305,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16273,
											"end": 16305,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16273,
											"end": 16305,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 16311,
											"end": 16465,
											"name": "tag",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 16311,
											"end": 16465,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16375,
											"end": 16384,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16408,
											"end": 16459,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 16453,
											"end": 16458,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16408,
											"end": 16459,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 16408,
											"end": 16459,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 16408,
											"end": 16459,
											"name": "tag",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 16408,
											"end": 16459,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16395,
											"end": 16459,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16395,
											"end": 16459,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16385,
											"end": 16465,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16385,
											"end": 16465,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16385,
											"end": 16465,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16385,
											"end": 16465,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 16471,
											"end": 16598,
											"name": "tag",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 16471,
											"end": 16598,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16535,
											"end": 16544,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16568,
											"end": 16592,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 16586,
											"end": 16591,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16568,
											"end": 16592,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 16568,
											"end": 16592,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 16568,
											"end": 16592,
											"name": "tag",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 16568,
											"end": 16592,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16555,
											"end": 16592,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16555,
											"end": 16592,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16545,
											"end": 16598,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16545,
											"end": 16598,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16545,
											"end": 16598,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16545,
											"end": 16598,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 16604,
											"end": 16911,
											"name": "tag",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 16604,
											"end": 16911,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16672,
											"end": 16673,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16682,
											"end": 16795,
											"name": "tag",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 16682,
											"end": 16795,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16696,
											"end": 16702,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16693,
											"end": 16694,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16690,
											"end": 16703,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 16682,
											"end": 16795,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16682,
											"end": 16795,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 16682,
											"end": 16795,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16781,
											"end": 16782,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 16776,
											"end": 16779,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 16772,
											"end": 16783,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16766,
											"end": 16784,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 16762,
											"end": 16763,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16757,
											"end": 16760,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 16753,
											"end": 16764,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16746,
											"end": 16785,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16718,
											"end": 16720,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 16715,
											"end": 16716,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16711,
											"end": 16721,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16706,
											"end": 16721,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16706,
											"end": 16721,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16682,
											"end": 16795,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 16682,
											"end": 16795,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16682,
											"end": 16795,
											"name": "tag",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 16682,
											"end": 16795,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16813,
											"end": 16819,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 16810,
											"end": 16811,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16807,
											"end": 16820,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 16804,
											"end": 16806,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16804,
											"end": 16806,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 16804,
											"end": 16806,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16893,
											"end": 16894,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16884,
											"end": 16890,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 16879,
											"end": 16882,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 16875,
											"end": 16891,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16868,
											"end": 16895,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16804,
											"end": 16806,
											"name": "tag",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 16804,
											"end": 16806,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16653,
											"end": 16911,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16653,
											"end": 16911,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16653,
											"end": 16911,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16653,
											"end": 16911,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16653,
											"end": 16911,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 16917,
											"end": 17097,
											"name": "tag",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 16917,
											"end": 17097,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16965,
											"end": 17042,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16962,
											"end": 16963,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16955,
											"end": 17043,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17062,
											"end": 17066,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 17059,
											"end": 17060,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 17052,
											"end": 17067,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17086,
											"end": 17090,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 17083,
											"end": 17084,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17076,
											"end": 17091,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 17103,
											"end": 17283,
											"name": "tag",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 17103,
											"end": 17283,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17151,
											"end": 17228,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17148,
											"end": 17149,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17141,
											"end": 17229,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17248,
											"end": 17252,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 17245,
											"end": 17246,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 17238,
											"end": 17253,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17272,
											"end": 17276,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 17269,
											"end": 17270,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17262,
											"end": 17277,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 17289,
											"end": 17391,
											"name": "tag",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 17289,
											"end": 17391,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17330,
											"end": 17336,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17381,
											"end": 17383,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 17377,
											"end": 17384,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 17372,
											"end": 17374,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 17365,
											"end": 17370,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 17361,
											"end": 17375,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17357,
											"end": 17385,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 17347,
											"end": 17385,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17347,
											"end": 17385,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17337,
											"end": 17391,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 17337,
											"end": 17391,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 17337,
											"end": 17391,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17337,
											"end": 17391,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 17397,
											"end": 17630,
											"name": "tag",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 17397,
											"end": 17630,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17537,
											"end": 17571,
											"name": "PUSH",
											"source": 8,
											"value": "416D6F756E742069732067726561746572207468616E207468652062616C616E"
										},
										{
											"begin": 17533,
											"end": 17534,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17525,
											"end": 17531,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17521,
											"end": 17535,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17514,
											"end": 17572,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17606,
											"end": 17622,
											"name": "PUSH",
											"source": 8,
											"value": "6365206F6620636F6E7472616374000000000000000000000000000000000000"
										},
										{
											"begin": 17601,
											"end": 17603,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17593,
											"end": 17599,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17589,
											"end": 17604,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17582,
											"end": 17623,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17503,
											"end": 17630,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17503,
											"end": 17630,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 17636,
											"end": 17861,
											"name": "tag",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 17636,
											"end": 17861,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17776,
											"end": 17810,
											"name": "PUSH",
											"source": 8,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 17772,
											"end": 17773,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17764,
											"end": 17770,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17760,
											"end": 17774,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17753,
											"end": 17811,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17845,
											"end": 17853,
											"name": "PUSH",
											"source": 8,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17840,
											"end": 17842,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 17832,
											"end": 17838,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17828,
											"end": 17843,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17821,
											"end": 17854,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17742,
											"end": 17861,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17742,
											"end": 17861,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 17867,
											"end": 18032,
											"name": "tag",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 17867,
											"end": 18032,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18007,
											"end": 18024,
											"name": "PUSH",
											"source": 8,
											"value": "4E6F7420656E6F75676820555344540000000000000000000000000000000000"
										},
										{
											"begin": 18003,
											"end": 18004,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 17995,
											"end": 18001,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 17991,
											"end": 18005,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17984,
											"end": 18025,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17973,
											"end": 18032,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17973,
											"end": 18032,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 18038,
											"end": 18263,
											"name": "tag",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 18038,
											"end": 18263,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18178,
											"end": 18212,
											"name": "PUSH",
											"source": 8,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 18174,
											"end": 18175,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18166,
											"end": 18172,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18162,
											"end": 18176,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18155,
											"end": 18213,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18247,
											"end": 18255,
											"name": "PUSH",
											"source": 8,
											"value": "722063616C6C0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18242,
											"end": 18244,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18234,
											"end": 18240,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18230,
											"end": 18245,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18223,
											"end": 18256,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18144,
											"end": 18263,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18144,
											"end": 18263,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 18269,
											"end": 18640,
											"name": "tag",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 18269,
											"end": 18640,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18409,
											"end": 18443,
											"name": "PUSH",
											"source": 8,
											"value": "546865206E756D626572206F6620746F6B656E73207468617420757365727320"
										},
										{
											"begin": 18405,
											"end": 18406,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18397,
											"end": 18403,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18393,
											"end": 18407,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18386,
											"end": 18444,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18478,
											"end": 18512,
											"name": "PUSH",
											"source": 8,
											"value": "77616E7420746F207075726368617365206578636565647320746865206E756D"
										},
										{
											"begin": 18473,
											"end": 18475,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 18465,
											"end": 18471,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18461,
											"end": 18476,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18454,
											"end": 18513,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18547,
											"end": 18581,
											"name": "PUSH",
											"source": 8,
											"value": "626572206F6620746F6B656E732063757272656E746C7920617661696C61626C"
										},
										{
											"begin": 18542,
											"end": 18544,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 18534,
											"end": 18540,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18530,
											"end": 18545,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18523,
											"end": 18582,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18616,
											"end": 18632,
											"name": "PUSH",
											"source": 8,
											"value": "6520666F72207075726368617365000000000000000000000000000000000000"
										},
										{
											"begin": 18611,
											"end": 18613,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 18603,
											"end": 18609,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18599,
											"end": 18614,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18592,
											"end": 18633,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18375,
											"end": 18640,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18375,
											"end": 18640,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 18646,
											"end": 18828,
											"name": "tag",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 18646,
											"end": 18828,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18786,
											"end": 18820,
											"name": "PUSH",
											"source": 8,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 18782,
											"end": 18783,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18774,
											"end": 18780,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18770,
											"end": 18784,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18763,
											"end": 18821,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18752,
											"end": 18828,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18752,
											"end": 18828,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 18834,
											"end": 19013,
											"name": "tag",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 18834,
											"end": 19013,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18974,
											"end": 19005,
											"name": "PUSH",
											"source": 8,
											"value": "5472616E7366657220746F206D73672E73656E646572206661696C6564000000"
										},
										{
											"begin": 18970,
											"end": 18971,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 18962,
											"end": 18968,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 18958,
											"end": 18972,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18951,
											"end": 19006,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18940,
											"end": 19013,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18940,
											"end": 19013,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 19019,
											"end": 19198,
											"name": "tag",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 19019,
											"end": 19198,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19159,
											"end": 19190,
											"name": "PUSH",
											"source": 8,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 19155,
											"end": 19156,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19147,
											"end": 19153,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19143,
											"end": 19157,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19136,
											"end": 19191,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19125,
											"end": 19198,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19125,
											"end": 19198,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 19204,
											"end": 19433,
											"name": "tag",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 19204,
											"end": 19433,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19344,
											"end": 19378,
											"name": "PUSH",
											"source": 8,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 19340,
											"end": 19341,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19332,
											"end": 19338,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19328,
											"end": 19342,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19321,
											"end": 19379,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19413,
											"end": 19425,
											"name": "PUSH",
											"source": 8,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 19408,
											"end": 19410,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 19400,
											"end": 19406,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19396,
											"end": 19411,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19389,
											"end": 19426,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19310,
											"end": 19433,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19310,
											"end": 19433,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 19439,
											"end": 19666,
											"name": "tag",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 19439,
											"end": 19666,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19579,
											"end": 19613,
											"name": "PUSH",
											"source": 8,
											"value": "412073696E676C6520757365722063616E6E6F742062757920746F6F206D616E"
										},
										{
											"begin": 19575,
											"end": 19576,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19567,
											"end": 19573,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19563,
											"end": 19577,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19556,
											"end": 19614,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19648,
											"end": 19658,
											"name": "PUSH",
											"source": 8,
											"value": "7920746F6B656E73000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19643,
											"end": 19645,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 19635,
											"end": 19641,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19631,
											"end": 19646,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19624,
											"end": 19659,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19545,
											"end": 19666,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19545,
											"end": 19666,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 19672,
											"end": 19853,
											"name": "tag",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 19672,
											"end": 19853,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19812,
											"end": 19845,
											"name": "PUSH",
											"source": 8,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 19808,
											"end": 19809,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19800,
											"end": 19806,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19796,
											"end": 19810,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19789,
											"end": 19846,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19778,
											"end": 19853,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19778,
											"end": 19853,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 19859,
											"end": 20036,
											"name": "tag",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 19859,
											"end": 20036,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 19999,
											"end": 20028,
											"name": "PUSH",
											"source": 8,
											"value": "5472616E7366657220746F20636F6E7472616374206661696C65640000000000"
										},
										{
											"begin": 19995,
											"end": 19996,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 19987,
											"end": 19993,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 19983,
											"end": 19997,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 19976,
											"end": 20029,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 19965,
											"end": 20036,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 19965,
											"end": 20036,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 20042,
											"end": 20164,
											"name": "tag",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 20042,
											"end": 20164,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20115,
											"end": 20139,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 20133,
											"end": 20138,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20115,
											"end": 20139,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 20115,
											"end": 20139,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 20115,
											"end": 20139,
											"name": "tag",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 20115,
											"end": 20139,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20108,
											"end": 20113,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20105,
											"end": 20140,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 20095,
											"end": 20097,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 20095,
											"end": 20097,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 20154,
											"end": 20155,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20151,
											"end": 20152,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 20144,
											"end": 20156,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 20095,
											"end": 20097,
											"name": "tag",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 20095,
											"end": 20097,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20085,
											"end": 20164,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20085,
											"end": 20164,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 20170,
											"end": 20286,
											"name": "tag",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 20170,
											"end": 20286,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20240,
											"end": 20261,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 20255,
											"end": 20260,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20240,
											"end": 20261,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 20240,
											"end": 20261,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 20240,
											"end": 20261,
											"name": "tag",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 20240,
											"end": 20261,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20233,
											"end": 20238,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20230,
											"end": 20262,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 20220,
											"end": 20222,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 20220,
											"end": 20222,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 20276,
											"end": 20277,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20273,
											"end": 20274,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 20266,
											"end": 20278,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 20220,
											"end": 20222,
											"name": "tag",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 20220,
											"end": 20222,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20210,
											"end": 20286,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20210,
											"end": 20286,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 20292,
											"end": 20414,
											"name": "tag",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 20292,
											"end": 20414,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20365,
											"end": 20389,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 20383,
											"end": 20388,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20365,
											"end": 20389,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 20365,
											"end": 20389,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 20365,
											"end": 20389,
											"name": "tag",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 20365,
											"end": 20389,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20358,
											"end": 20363,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 20355,
											"end": 20390,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 20345,
											"end": 20347,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 20345,
											"end": 20347,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 20404,
											"end": 20405,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 20401,
											"end": 20402,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 20394,
											"end": 20406,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 20345,
											"end": 20347,
											"name": "tag",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 20345,
											"end": 20347,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 20335,
											"end": 20414,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 20335,
											"end": 20414,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"buyToken(uint256)": "2d296bf1",
							"cumulativePurchase(address)": "7a80d062",
							"exchangeRate()": "3ba0b9a9",
							"maxAmout()": "8d951832",
							"myToken()": "b8fcf937",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setExchangeRate(uint256)": "db068e0e",
							"setMaxAmout(uint256)": "65583cae",
							"transferOwnership(address)": "f2fde38b",
							"usdt()": "2f48ab7d",
							"withdrawUSDT(uint256)": "3ea521ef"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdtAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_exchangeRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxAmout\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"usdtAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"BuyToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"buyToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"cumulativePurchase\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exchangeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxAmout\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"myToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_exchangeRate\",\"type\":\"uint256\"}],\"name\":\"setExchangeRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxAmount\",\"type\":\"uint256\"}],\"name\":\"setMaxAmout\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdt\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawUSDT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BuyToken.sol\":\"TokenExchange\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"BuyToken.sol\":{\"keccak256\":\"0xc5eac578992d91632c04ba252c7b9935074bf137b7c561840e18e22eff951b97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8b110d188fb6873ed3bdfb81b2378c3e29906cd04c336fba69e4326c28cafe4\",\"dweb:/ipfs/QmPYJEM86BawGhwHpTaXRXeNU1PQwaw8MThpo2zbY6DiYK\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0//contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x2526b7c6a366fc211bbc176078ab02b83833e7682abcc5b3bed9d700b34e2a3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f9529d3d365e8415155cee11394e0f7c0de2152b601b7e77508fce16cb4a509\",\"dweb:/ipfs/QmVhbcLVsAzvqfjsdLwy25XMjgVJm7Z3w2JCNiNbZF2GHT\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x99f5c21018d796db7833a2100bb0e7411999e248a3c950fb526eee5d2bf47cb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b31b80dd57f8c28320b01fa4f3ed98ac1aa678f61846c1db2771c996b77a9451\",\"dweb:/ipfs/QmcT2Di5L9t82A9XdYDZ4tWMEPGFVFazKDwC2Vrd135AA3\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":{\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a4c96fafff76deda5697c3c5c98cade6e6e1b178254544c106bf360c079ce4e\",\"dweb:/ipfs/QmXmxubE3jnatFgZuN8ay1VV6hZ8WRmhvUjNpeVjki15HX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "BuyToken.sol:TokenExchange",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 123,
								"contract": "BuyToken.sol:TokenExchange",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 209,
								"contract": "BuyToken.sol:TokenExchange",
								"label": "usdt",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)806"
							},
							{
								"astId": 212,
								"contract": "BuyToken.sol:TokenExchange",
								"label": "myToken",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(IERC20)806"
							},
							{
								"astId": 214,
								"contract": "BuyToken.sol:TokenExchange",
								"label": "exchangeRate",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 216,
								"contract": "BuyToken.sol:TokenExchange",
								"label": "maxAmout",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 220,
								"contract": "BuyToken.sol:TokenExchange",
								"label": "cumulativePurchase",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)806": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0//contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0//contracts/utils/math/SafeMath.sol\":398:6832  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0//contracts/utils/math/SafeMath.sol\":398:6832  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122002479e9cc7f2741007e0513a6a08a2e45c1c19928cefb6db3738e5d6527aed5664736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122002479e9cc7f2741007e0513a6a08a2e45c1c19928cefb6db3738e5d6527aed5664736f6c63430008040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL SELFBALANCE SWAP15 SWAP13 0xC7 CALLCODE PUSH21 0x1007E0513A6A08A2E45C1C19928CEFB6DB3738E5D6 MSTORE PUSH27 0xED5664736F6C634300080400330000000000000000000000000000 ",
							"sourceMap": "398:6434:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122002479e9cc7f2741007e0513a6a08a2e45c1c19928cefb6db3738e5d6527aed5664736f6c63430008040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL SELFBALANCE SWAP15 SWAP13 0xC7 CALLCODE PUSH21 0x1007E0513A6A08A2E45C1C19928CEFB6DB3738E5D6 MSTORE PUSH27 0xED5664736F6C634300080400330000000000000000000000000000 ",
							"sourceMap": "398:6434:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 398,
									"end": 6832,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 398,
									"end": 6832,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 398,
									"end": 6832,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 398,
									"end": 6832,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6832,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6832,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6832,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6832,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6832,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6832,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6832,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6832,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 398,
									"end": 6832,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6832,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 398,
									"end": 6832,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6832,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 398,
									"end": 6832,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6832,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6832,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6832,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 398,
									"end": 6832,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6832,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 398,
									"end": 6832,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6832,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6832,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 398,
									"end": 6832,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6832,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6832,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 398,
									"end": 6832,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6832,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 398,
									"end": 6832,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6832,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6832,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6832,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 398,
									"end": 6832,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122002479e9cc7f2741007e0513a6a08a2e45c1c19928cefb6db3738e5d6527aed5664736f6c63430008040033",
									".code": [
										{
											"begin": 398,
											"end": 6832,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 398,
											"end": 6832,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 398,
											"end": 6832,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 398,
											"end": 6832,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 398,
											"end": 6832,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 398,
											"end": 6832,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 398,
											"end": 6832,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 398,
											"end": 6832,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 398,
											"end": 6832,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0//contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0//contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x2526b7c6a366fc211bbc176078ab02b83833e7682abcc5b3bed9d700b34e2a3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f9529d3d365e8415155cee11394e0f7c0de2152b601b7e77508fce16cb4a509\",\"dweb:/ipfs/QmVhbcLVsAzvqfjsdLwy25XMjgVJm7Z3w2JCNiNbZF2GHT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/token/ERC20/utils/SafeERC20.sol\":578:3775  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/token/ERC20/utils/SafeERC20.sol\":578:3775  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201957a4dfd14e78f257769c532337b539b789d1f51d9fff403c3070cba3f5534164736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201957a4dfd14e78f257769c532337b539b789d1f51d9fff403c3070cba3f5534164736f6c63430008040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT JUMPI LOG4 0xDF 0xD1 0x4E PUSH25 0xF257769C532337B539B789D1F51D9FFF403C3070CBA3F55341 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "578:3197:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201957a4dfd14e78f257769c532337b539b789d1f51d9fff403c3070cba3f5534164736f6c63430008040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT JUMPI LOG4 0xDF 0xD1 0x4E PUSH25 0xF257769C532337B539B789D1F51D9FFF403C3070CBA3F55341 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "578:3197:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 578,
									"end": 3775,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 578,
									"end": 3775,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 578,
									"end": 3775,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 578,
									"end": 3775,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 578,
									"end": 3775,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 578,
									"end": 3775,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 578,
									"end": 3775,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 578,
									"end": 3775,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 578,
									"end": 3775,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 578,
									"end": 3775,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 578,
									"end": 3775,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 578,
									"end": 3775,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 578,
									"end": 3775,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 578,
									"end": 3775,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 578,
									"end": 3775,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 578,
									"end": 3775,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 578,
									"end": 3775,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 578,
									"end": 3775,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 578,
									"end": 3775,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 578,
									"end": 3775,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 578,
									"end": 3775,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 578,
									"end": 3775,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 578,
									"end": 3775,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 578,
									"end": 3775,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 578,
									"end": 3775,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 578,
									"end": 3775,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 578,
									"end": 3775,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 578,
									"end": 3775,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 578,
									"end": 3775,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 578,
									"end": 3775,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 578,
									"end": 3775,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 578,
									"end": 3775,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 578,
									"end": 3775,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 578,
									"end": 3775,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 578,
									"end": 3775,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201957a4dfd14e78f257769c532337b539b789d1f51d9fff403c3070cba3f5534164736f6c63430008040033",
									".code": [
										{
											"begin": 578,
											"end": 3775,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 578,
											"end": 3775,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 578,
											"end": 3775,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 578,
											"end": 3775,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 578,
											"end": 3775,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 578,
											"end": 3775,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 578,
											"end": 3775,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 578,
											"end": 3775,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 578,
											"end": 3775,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x99f5c21018d796db7833a2100bb0e7411999e248a3c950fb526eee5d2bf47cb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b31b80dd57f8c28320b01fa4f3ed98ac1aa678f61846c1db2771c996b77a9451\",\"dweb:/ipfs/QmcT2Di5L9t82A9XdYDZ4tWMEPGFVFazKDwC2Vrd135AA3\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":{\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a4c96fafff76deda5697c3c5c98cade6e6e1b178254544c106bf360c079ce4e\",\"dweb:/ipfs/QmXmxubE3jnatFgZuN8ay1VV6hZ8WRmhvUjNpeVjki15HX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":126:7810  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":126:7810  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220662f2321f1135902ad1c6b936b7bb6c448c9ee54df93a23798c34688f6bff83a64736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220662f2321f1135902ad1c6b936b7bb6c448c9ee54df93a23798c34688f6bff83a64736f6c63430008040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0x2F2321F1135902 0xAD SHR PUSH12 0x936B7BB6C448C9EE54DF93A2 CALLDATACOPY SWAP9 0xC3 CHAINID DUP9 0xF6 0xBF 0xF8 GASPRICE PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "126:7684:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220662f2321f1135902ad1c6b936b7bb6c448c9ee54df93a23798c34688f6bff83a64736f6c63430008040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0x2F2321F1135902 0xAD SHR PUSH12 0x936B7BB6C448C9EE54DF93A2 CALLDATACOPY SWAP9 0xC3 CHAINID DUP9 0xF6 0xBF 0xF8 GASPRICE PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "126:7684:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220662f2321f1135902ad1c6b936b7bb6c448c9ee54df93a23798c34688f6bff83a64736f6c63430008040033",
									".code": [
										{
											"begin": 126,
											"end": 7810,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 126,
											"end": 7810,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 126,
											"end": 7810,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 126,
											"end": 7810,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 126,
											"end": 7810,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 126,
											"end": 7810,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 126,
											"end": 7810,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 7810,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 126,
											"end": 7810,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol\":{\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a4c96fafff76deda5697c3c5c98cade6e6e1b178254544c106bf360c079ce4e\",\"dweb:/ipfs/QmXmxubE3jnatFgZuN8ay1VV6hZ8WRmhvUjNpeVjki15HX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							188
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 189,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 188,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								188
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 178,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 178,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							166
						]
					},
					"id": 167,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:1",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 166,
							"linearizedBaseContracts": [
								166
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 118,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 166,
									"src": "1676:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 116,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 117,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 121,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 166,
									"src": "1723:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 119,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 120,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 123,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 166,
									"src": "1767:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 122,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "1811:39:1",
										"statements": [
											{
												"expression": {
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 126,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "1821:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 127,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "1831:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 129,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:1"
											}
										]
									},
									"id": 131,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:1"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:1"
									},
									"scope": 166,
									"src": "1797:53:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 141,
										"nodeType": "Block",
										"src": "2251:79:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 134,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 157,
														"src": "2261:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 136,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:1"
											},
											{
												"id": 137,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:1"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 138,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 165,
														"src": "2303:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:1"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:1",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 142,
									"name": "nonReentrant",
									"nameLocation": "2236:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:1"
									},
									"src": "2227:103:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 156,
										"nodeType": "Block",
										"src": "2375:248:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 146,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 123,
																"src": "2468:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 147,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 121,
																"src": "2479:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 149,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 145,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 151,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:1"
											},
											{
												"expression": {
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 152,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2598:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 153,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 121,
														"src": "2608:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 155,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:1"
											}
										]
									},
									"id": 157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:1"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:1"
									},
									"scope": 166,
									"src": "2336:287:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 164,
										"nodeType": "Block",
										"src": "2667:171:1",
										"statements": [
											{
												"expression": {
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 160,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2809:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 161,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "2819:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 163,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:1"
											}
										]
									},
									"id": 165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:1"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:1"
									},
									"scope": 166,
									"src": "2629:209:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 167,
							"src": "888:1952:1",
							"usedErrors": []
						}
					],
					"src": "112:2729:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							188
						]
					},
					"id": 189,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 168,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 169,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 188,
							"linearizedBaseContracts": [
								188
							],
							"name": "Context",
							"nameLocation": "626:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 177,
										"nodeType": "Block",
										"src": "702:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 174,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 173,
												"id": 176,
												"nodeType": "Return",
												"src": "712:17:2"
											}
										]
									},
									"id": 178,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:2"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "693:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:2"
									},
									"scope": 188,
									"src": "640:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 186,
										"nodeType": "Block",
										"src": "809:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 183,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 182,
												"id": 185,
												"nodeType": "Return",
												"src": "819:15:2"
											}
										]
									},
									"id": 187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:2"
									},
									"returnParameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "793:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 180,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:2"
									},
									"scope": 188,
									"src": "742:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 189,
							"src": "608:235:2",
							"usedErrors": []
						}
					],
					"src": "86:758:2"
				},
				"id": 2
			},
			"BuyToken.sol": {
				"ast": {
					"absolutePath": "BuyToken.sol",
					"exportedSymbols": {
						"Address": [
							1326
						],
						"Context": [
							188
						],
						"IERC20": [
							806
						],
						"Ownable": [
							112
						],
						"ReentrancyGuard": [
							166
						],
						"SafeERC20": [
							1030
						],
						"SafeMath": [
							728
						],
						"TokenExchange": [
							416
						]
					},
					"id": 417,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 190,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:3"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/token/ERC20/IERC20.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/token/ERC20/IERC20.sol",
							"id": 191,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 417,
							"sourceUnit": 807,
							"src": "58:115:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 192,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 417,
							"sourceUnit": 1031,
							"src": "174:124:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0//contracts/utils/math/SafeMath.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0//contracts/utils/math/SafeMath.sol",
							"id": 193,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 417,
							"sourceUnit": 729,
							"src": "299:117:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 194,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 417,
							"sourceUnit": 113,
							"src": "417:52:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 195,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 417,
							"sourceUnit": 167,
							"src": "470:62:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 196,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "583:7:3"
									},
									"id": 197,
									"nodeType": "InheritanceSpecifier",
									"src": "583:7:3"
								},
								{
									"baseName": {
										"id": 198,
										"name": "ReentrancyGuard",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 166,
										"src": "592:15:3"
									},
									"id": 199,
									"nodeType": "InheritanceSpecifier",
									"src": "592:15:3"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 416,
							"linearizedBaseContracts": [
								416,
								166,
								112,
								188
							],
							"name": "TokenExchange",
							"nameLocation": "566:13:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 202,
									"libraryName": {
										"id": 200,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 728,
										"src": "620:8:3"
									},
									"nodeType": "UsingForDirective",
									"src": "614:27:3",
									"typeName": {
										"id": 201,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "633:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 206,
									"libraryName": {
										"id": 203,
										"name": "SafeERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1030,
										"src": "652:9:3"
									},
									"nodeType": "UsingForDirective",
									"src": "646:27:3",
									"typeName": {
										"id": 205,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 204,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 806,
											"src": "666:6:3"
										},
										"referencedDeclaration": 806,
										"src": "666:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$806",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "2f48ab7d",
									"id": 209,
									"mutability": "mutable",
									"name": "usdt",
									"nameLocation": "692:4:3",
									"nodeType": "VariableDeclaration",
									"scope": 416,
									"src": "678:18:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$806",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 208,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 207,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 806,
											"src": "678:6:3"
										},
										"referencedDeclaration": 806,
										"src": "678:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$806",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b8fcf937",
									"id": 212,
									"mutability": "mutable",
									"name": "myToken",
									"nameLocation": "737:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 416,
									"src": "723:21:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$806",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 211,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 210,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 806,
											"src": "723:6:3"
										},
										"referencedDeclaration": 806,
										"src": "723:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$806",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3ba0b9a9",
									"id": 214,
									"mutability": "mutable",
									"name": "exchangeRate",
									"nameLocation": "796:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 416,
									"src": "781:27:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 213,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "781:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8d951832",
									"id": 216,
									"mutability": "mutable",
									"name": "maxAmout",
									"nameLocation": "893:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 416,
									"src": "878:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 215,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "878:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7a80d062",
									"id": 220,
									"mutability": "mutable",
									"name": "cumulativePurchase",
									"nameLocation": "982:18:3",
									"nodeType": "VariableDeclaration",
									"scope": 416,
									"src": "947:53:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 219,
										"keyType": {
											"id": 217,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "955:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "947:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 218,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "966:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 228,
									"name": "BuyToken",
									"nameLocation": "1043:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1068:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "1052:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1052:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"indexed": false,
												"mutability": "mutable",
												"name": "usdtAmount",
												"nameLocation": "1082:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "1074:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1074:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "1101:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "1093:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1051:62:3"
									},
									"src": "1037:77:3"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "1258:184:3",
										"statements": [
											{
												"expression": {
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 239,
														"name": "usdt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 209,
														"src": "1268:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$806",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 241,
																"name": "_usdtAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 230,
																"src": "1282:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 240,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 806,
															"src": "1275:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$806_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 242,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1275:20:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$806",
															"typeString": "contract IERC20"
														}
													},
													"src": "1268:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$806",
														"typeString": "contract IERC20"
													}
												},
												"id": 244,
												"nodeType": "ExpressionStatement",
												"src": "1268:27:3"
											},
											{
												"expression": {
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 245,
														"name": "myToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 212,
														"src": "1305:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$806",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 247,
																"name": "_tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 232,
																"src": "1322:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 246,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 806,
															"src": "1315:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$806_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 248,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1315:21:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$806",
															"typeString": "contract IERC20"
														}
													},
													"src": "1305:31:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$806",
														"typeString": "contract IERC20"
													}
												},
												"id": 250,
												"nodeType": "ExpressionStatement",
												"src": "1305:31:3"
											},
											{
												"expression": {
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 251,
														"name": "exchangeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 214,
														"src": "1346:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 252,
														"name": "_exchangeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 234,
														"src": "1361:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1346:28:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 254,
												"nodeType": "ExpressionStatement",
												"src": "1346:28:3"
											},
											{
												"expression": {
													"id": 257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 255,
														"name": "maxAmout",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 216,
														"src": "1384:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 256,
														"name": "_maxAmout",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 236,
														"src": "1395:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1384:20:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 258,
												"nodeType": "ExpressionStatement",
												"src": "1384:20:3"
											}
										]
									},
									"id": 260,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "_usdtAddress",
												"nameLocation": "1150:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "1142:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1142:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "_tokenAddress",
												"nameLocation": "1180:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "1172:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1172:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "_exchangeRate",
												"nameLocation": "1211:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "1203:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "_maxAmout",
												"nameLocation": "1242:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "1234:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1132:125:3"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1258:0:3"
									},
									"scope": 416,
									"src": "1121:321:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 355,
										"nodeType": "Block",
										"src": "2364:854:3",
										"statements": [
											{
												"assignments": [
													268
												],
												"declarations": [
													{
														"constant": false,
														"id": 268,
														"mutability": "mutable",
														"name": "_usdtAmount",
														"nameLocation": "2382:11:3",
														"nodeType": "VariableDeclaration",
														"scope": 355,
														"src": "2374:19:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 267,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2374:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 273,
												"initialValue": {
													"arguments": [
														{
															"id": 271,
															"name": "exchangeRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "2412:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 269,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "2396:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 270,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 637,
														"src": "2396:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2396:29:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2374:51:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 275,
																"name": "maxAmout",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 216,
																"src": "2504:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 281,
																		"name": "tokenAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 262,
																		"src": "2551:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"baseExpression": {
																			"id": 276,
																			"name": "cumulativePurchase",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 220,
																			"src": "2516:18:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 279,
																		"indexExpression": {
																			"expression": {
																				"id": 277,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "2535:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 278,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "2535:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2516:30:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 592,
																	"src": "2516:34:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 282,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2516:47:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2504:59:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "412073696e676c6520757365722063616e6e6f742062757920746f6f206d616e7920746f6b656e73",
															"id": 284,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2564:42:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e94ebbe97738d26ef18f98359dd710e88707511548aea5cdd20da1ff63cb4b15",
																"typeString": "literal_string \"A single user cannot buy too many tokens\""
															},
															"value": "A single user cannot buy too many tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e94ebbe97738d26ef18f98359dd710e88707511548aea5cdd20da1ff63cb4b15",
																"typeString": "literal_string \"A single user cannot buy too many tokens\""
															}
														],
														"id": 274,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2496:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2496:111:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 286,
												"nodeType": "ExpressionStatement",
												"src": "2496:111:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 292,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "2651:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_TokenExchange_$416",
																					"typeString": "contract TokenExchange"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_TokenExchange_$416",
																					"typeString": "contract TokenExchange"
																				}
																			],
																			"id": 291,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2643:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 290,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2643:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2643:13:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 288,
																		"name": "myToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 212,
																		"src": "2625:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$806",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 289,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 745,
																	"src": "2625:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 294,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2625:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 295,
																"name": "tokenAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 262,
																"src": "2659:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2625:45:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546865206e756d626572206f6620746f6b656e7320746861742075736572732077616e7420746f207075726368617365206578636565647320746865206e756d626572206f6620746f6b656e732063757272656e746c7920617661696c61626c6520666f72207075726368617365",
															"id": 297,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2671:112:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8117a842b1b74b9f085d66bcb31c74534644607cf75899dbba62f4f92bdb2e15",
																"typeString": "literal_string \"The number of tokens that users want to purchase exceeds the number of tokens currently available for purchase\""
															},
															"value": "The number of tokens that users want to purchase exceeds the number of tokens currently available for purchase"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8117a842b1b74b9f085d66bcb31c74534644607cf75899dbba62f4f92bdb2e15",
																"typeString": "literal_string \"The number of tokens that users want to purchase exceeds the number of tokens currently available for purchase\""
															}
														],
														"id": 287,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2617:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2617:167:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 299,
												"nodeType": "ExpressionStatement",
												"src": "2617:167:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 303,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2817:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 304,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2817:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 301,
																		"name": "usdt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 209,
																		"src": "2802:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$806",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 302,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 745,
																	"src": "2802:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 305,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2802:26:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 306,
																"name": "_usdtAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "2832:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2802:41:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f7567682055534454",
															"id": 308,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2845:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3f4c9edb77832b8eb572476d0e088d41e262af00262f660c8e16d8957b4a9d92",
																"typeString": "literal_string \"Not enough USDT\""
															},
															"value": "Not enough USDT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3f4c9edb77832b8eb572476d0e088d41e262af00262f660c8e16d8957b4a9d92",
																"typeString": "literal_string \"Not enough USDT\""
															}
														],
														"id": 300,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2794:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2794:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 310,
												"nodeType": "ExpressionStatement",
												"src": "2794:69:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 314,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2899:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2899:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 318,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2919:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_TokenExchange_$416",
																				"typeString": "contract TokenExchange"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_TokenExchange_$416",
																				"typeString": "contract TokenExchange"
																			}
																		],
																		"id": 317,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2911:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 316,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2911:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 319,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2911:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 320,
																	"name": "_usdtAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 268,
																	"src": "2926:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 312,
																	"name": "usdt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 209,
																	"src": "2881:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$806",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 313,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 787,
																"src": "2881:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2881:57:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657220746f20636f6e7472616374206661696c6564",
															"id": 322,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2939:29:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f7e29493e369d5887701308a5470d671ee67c6441cb80cb1cae94c614ec3083e",
																"typeString": "literal_string \"Transfer to contract failed\""
															},
															"value": "Transfer to contract failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f7e29493e369d5887701308a5470d671ee67c6441cb80cb1cae94c614ec3083e",
																"typeString": "literal_string \"Transfer to contract failed\""
															}
														],
														"id": 311,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2873:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2873:96:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "2873:96:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 328,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3004:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3004:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 330,
																	"name": "tokenAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 262,
																	"src": "3016:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 326,
																	"name": "myToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 212,
																	"src": "2987:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$806",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 327,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 755,
																"src": "2987:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2987:41:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657220746f206d73672e73656e646572206661696c6564",
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3029:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b8487189d7c5947907556565e7b58776a15e36c5b0e47d9f7a183fcbb6db6633",
																"typeString": "literal_string \"Transfer to msg.sender failed\""
															},
															"value": "Transfer to msg.sender failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b8487189d7c5947907556565e7b58776a15e36c5b0e47d9f7a183fcbb6db6633",
																"typeString": "literal_string \"Transfer to msg.sender failed\""
															}
														],
														"id": 325,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2979:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2979:82:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "2979:82:3"
											},
											{
												"expression": {
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 335,
															"name": "cumulativePurchase",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 220,
															"src": "3071:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 338,
														"indexExpression": {
															"expression": {
																"id": 336,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3090:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3090:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3071:30:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 344,
																"name": "tokenAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 262,
																"src": "3139:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 339,
																	"name": "cumulativePurchase",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 220,
																	"src": "3104:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 342,
																"indexExpression": {
																	"expression": {
																		"id": 340,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3123:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 341,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3123:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3104:30:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 592,
															"src": "3104:34:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 345,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3104:47:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3071:80:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 347,
												"nodeType": "ExpressionStatement",
												"src": "3071:80:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 349,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3175:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3175:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 351,
															"name": "_usdtAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 268,
															"src": "3187:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 352,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "3199:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 348,
														"name": "BuyToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 228,
														"src": "3166:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3166:45:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 354,
												"nodeType": "EmitStatement",
												"src": "3161:50:3"
											}
										]
									},
									"functionSelector": "2d296bf1",
									"id": 356,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 265,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 264,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 142,
												"src": "2351:12:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2351:12:3"
										}
									],
									"name": "buyToken",
									"nameLocation": "2312:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "2329:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "2321:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2321:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2320:21:3"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:0:3"
									},
									"scope": 416,
									"src": "2303:915:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 390,
										"nodeType": "Block",
										"src": "3616:179:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 368,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3657:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_TokenExchange_$416",
																					"typeString": "contract TokenExchange"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_TokenExchange_$416",
																					"typeString": "contract TokenExchange"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3649:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3649:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3649:13:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 364,
																		"name": "usdt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 209,
																		"src": "3634:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$806",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 745,
																	"src": "3634:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3634:29:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 371,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 358,
																"src": "3665:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3634:37:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e742069732067726561746572207468616e207468652062616c616e6365206f6620636f6e7472616374",
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3672:48:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_09860fac4af1ee37e0129844fbcbe2b3a883f2f52f18c92ac1fbaada41f6594c",
																"typeString": "literal_string \"Amount is greater than the balance of contract\""
															},
															"value": "Amount is greater than the balance of contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_09860fac4af1ee37e0129844fbcbe2b3a883f2f52f18c92ac1fbaada41f6594c",
																"typeString": "literal_string \"Amount is greater than the balance of contract\""
															}
														],
														"id": 363,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3626:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3626:95:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 375,
												"nodeType": "ExpressionStatement",
												"src": "3626:95:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 379,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 40,
																"src": "3749:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3749:7:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 385,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3781:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_TokenExchange_$416",
																				"typeString": "contract TokenExchange"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_TokenExchange_$416",
																				"typeString": "contract TokenExchange"
																			}
																		],
																		"id": 384,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3773:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 383,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3773:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3773:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 381,
																	"name": "usdt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 209,
																	"src": "3758:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$806",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 382,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 745,
																"src": "3758:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3758:29:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 376,
															"name": "usdt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 209,
															"src": "3731:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$806",
																"typeString": "contract IERC20"
															}
														},
														"id": 378,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 837,
														"src": "3731:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$806_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$806_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3731:57:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 389,
												"nodeType": "ExpressionStatement",
												"src": "3731:57:3"
											}
										]
									},
									"functionSelector": "3ea521ef",
									"id": 391,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 361,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 360,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "3607:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "3607:9:3"
										}
									],
									"name": "withdrawUSDT",
									"nameLocation": "3569:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3590:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "3582:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3582:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3581:16:3"
									},
									"returnParameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3616:0:3"
									},
									"scope": 416,
									"src": "3560:235:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "3893:45:3",
										"statements": [
											{
												"expression": {
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 398,
														"name": "exchangeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 214,
														"src": "3903:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 399,
														"name": "_exchangeRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 393,
														"src": "3918:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3903:28:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "3903:28:3"
											}
										]
									},
									"functionSelector": "db068e0e",
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 396,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 395,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "3884:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "3884:9:3"
										}
									],
									"name": "setExchangeRate",
									"nameLocation": "3836:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "_exchangeRate",
												"nameLocation": "3860:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "3852:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3852:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3851:23:3"
									},
									"returnParameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3893:0:3"
									},
									"scope": 416,
									"src": "3827:111:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 414,
										"nodeType": "Block",
										"src": "4047:38:3",
										"statements": [
											{
												"expression": {
													"id": 412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 410,
														"name": "maxAmout",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 216,
														"src": "4057:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 411,
														"name": "_maxAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "4068:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4057:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 413,
												"nodeType": "ExpressionStatement",
												"src": "4057:21:3"
											}
										]
									},
									"functionSelector": "65583cae",
									"id": 415,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 408,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 407,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "4038:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "4038:9:3"
										}
									],
									"name": "setMaxAmout",
									"nameLocation": "3997:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "_maxAmount",
												"nameLocation": "4017:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "4009:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4009:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4008:20:3"
									},
									"returnParameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4047:0:3"
									},
									"scope": 416,
									"src": "3988:97:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 417,
							"src": "557:3530:3",
							"usedErrors": []
						}
					],
					"src": "33:4054:3"
				},
				"id": 3
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0//contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0//contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							728
						]
					},
					"id": 729,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 418,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 419,
								"nodeType": "StructuredDocumentation",
								"src": "211:186:4",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 728,
							"linearizedBaseContracts": [
								728
							],
							"name": "SafeMath",
							"nameLocation": "406:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 450,
										"nodeType": "Block",
										"src": "633:140:4",
										"statements": [
											{
												"id": 449,
												"nodeType": "UncheckedBlock",
												"src": "643:124:4",
												"statements": [
													{
														"assignments": [
															432
														],
														"declarations": [
															{
																"constant": false,
																"id": 432,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "675:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 449,
																"src": "667:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 431,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "667:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 436,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 433,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 422,
																"src": "679:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 434,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 424,
																"src": "683:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "679:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "667:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 437,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 432,
																"src": "702:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 438,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 422,
																"src": "706:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "702:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 444,
														"nodeType": "IfStatement",
														"src": "698:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 440,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "717:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 441,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "724:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 442,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "716:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 430,
															"id": 443,
															"nodeType": "Return",
															"src": "709:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 445,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "748:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 446,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 432,
																	"src": "754:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 447,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "747:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 430,
														"id": 448,
														"nodeType": "Return",
														"src": "740:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 420,
										"nodeType": "StructuredDocumentation",
										"src": "421:131:4",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 451,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "566:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "581:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "573:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "573:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "592:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "584:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "584:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "572:22:4"
									},
									"returnParameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "618:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 426,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "618:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "624:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "617:15:4"
									},
									"scope": 728,
									"src": "557:216:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 478,
										"nodeType": "Block",
										"src": "995:113:4",
										"statements": [
											{
												"id": 477,
												"nodeType": "UncheckedBlock",
												"src": "1005:97:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 463,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 456,
																"src": "1033:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 464,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 454,
																"src": "1037:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1033:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 470,
														"nodeType": "IfStatement",
														"src": "1029:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 466,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1048:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 467,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1055:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 468,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1047:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 462,
															"id": 469,
															"nodeType": "Return",
															"src": "1040:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 471,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1079:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 474,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 472,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 454,
																		"src": "1085:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 473,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 456,
																		"src": "1089:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1085:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 475,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1078:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 462,
														"id": 476,
														"nodeType": "Return",
														"src": "1071:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 452,
										"nodeType": "StructuredDocumentation",
										"src": "779:135:4",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 479,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "928:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "943:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "935:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "954:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "946:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "946:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "934:22:4"
									},
									"returnParameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "980:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 458,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "980:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "986:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "986:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "979:15:4"
									},
									"scope": 728,
									"src": "919:189:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 520,
										"nodeType": "Block",
										"src": "1332:417:4",
										"statements": [
											{
												"id": 519,
												"nodeType": "UncheckedBlock",
												"src": "1342:401:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 491,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 482,
																"src": "1600:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 492,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1605:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1600:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 498,
														"nodeType": "IfStatement",
														"src": "1596:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 494,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1616:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 495,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1622:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 496,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1615:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 490,
															"id": 497,
															"nodeType": "Return",
															"src": "1608:16:4"
														}
													},
													{
														"assignments": [
															500
														],
														"declarations": [
															{
																"constant": false,
																"id": 500,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1646:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 519,
																"src": "1638:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 499,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1638:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 504,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 501,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 482,
																"src": "1650:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 502,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 484,
																"src": "1654:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1650:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1638:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 507,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 505,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 500,
																	"src": "1673:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 506,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 482,
																	"src": "1677:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1673:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 508,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 484,
																"src": "1682:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1673:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 514,
														"nodeType": "IfStatement",
														"src": "1669:33:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 510,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1693:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 511,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1700:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 512,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1692:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 490,
															"id": 513,
															"nodeType": "Return",
															"src": "1685:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1724:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 516,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 500,
																	"src": "1730:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 517,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1723:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 490,
														"id": 518,
														"nodeType": "Return",
														"src": "1716:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 480,
										"nodeType": "StructuredDocumentation",
										"src": "1114:137:4",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1265:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1280:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "1272:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1272:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1291:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "1283:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1283:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1271:22:4"
									},
									"returnParameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "1317:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 486,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1317:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "1323:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1323:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1316:15:4"
									},
									"scope": 728,
									"src": "1256:493:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 548,
										"nodeType": "Block",
										"src": "1974:114:4",
										"statements": [
											{
												"id": 547,
												"nodeType": "UncheckedBlock",
												"src": "1984:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 533,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 526,
																"src": "2012:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 534,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2017:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2012:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 540,
														"nodeType": "IfStatement",
														"src": "2008:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 536,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2028:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 537,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2035:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 538,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2027:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 532,
															"id": 539,
															"nodeType": "Return",
															"src": "2020:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 541,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2059:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 544,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 542,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 524,
																		"src": "2065:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 543,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 526,
																		"src": "2069:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2065:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 545,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2058:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 532,
														"id": 546,
														"nodeType": "Return",
														"src": "2051:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 522,
										"nodeType": "StructuredDocumentation",
										"src": "1755:138:4",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1907:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1922:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "1914:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1914:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1933:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "1925:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1925:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1913:22:4"
									},
									"returnParameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "1959:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 528,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1959:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "1965:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1965:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1958:15:4"
									},
									"scope": 728,
									"src": "1898:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 576,
										"nodeType": "Block",
										"src": "2323:114:4",
										"statements": [
											{
												"id": 575,
												"nodeType": "UncheckedBlock",
												"src": "2333:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 561,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 554,
																"src": "2361:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 562,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2366:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2361:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 568,
														"nodeType": "IfStatement",
														"src": "2357:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2377:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 565,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2384:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 566,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2376:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 560,
															"id": 567,
															"nodeType": "Return",
															"src": "2369:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 569,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2408:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 572,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 570,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 552,
																		"src": "2414:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 571,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 554,
																		"src": "2418:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2414:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 573,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2407:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 560,
														"id": 574,
														"nodeType": "Return",
														"src": "2400:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 550,
										"nodeType": "StructuredDocumentation",
										"src": "2094:148:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 577,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2256:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2271:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "2263:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2263:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2282:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "2274:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2274:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2262:22:4"
									},
									"returnParameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "2308:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 556,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2308:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "2314:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 558,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2314:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2307:15:4"
									},
									"scope": 728,
									"src": "2247:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 591,
										"nodeType": "Block",
										"src": "2739:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 587,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 580,
														"src": "2756:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 588,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 582,
														"src": "2760:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2756:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 586,
												"id": 590,
												"nodeType": "Return",
												"src": "2749:12:4"
											}
										]
									},
									"documentation": {
										"id": 578,
										"nodeType": "StructuredDocumentation",
										"src": "2443:224:4",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 592,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2681:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2693:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "2685:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2685:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2704:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "2696:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2696:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2684:22:4"
									},
									"returnParameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "2730:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 584,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2730:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2729:9:4"
									},
									"scope": 728,
									"src": "2672:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 606,
										"nodeType": "Block",
										"src": "3106:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 602,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 595,
														"src": "3123:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 603,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "3127:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3123:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 601,
												"id": 605,
												"nodeType": "Return",
												"src": "3116:12:4"
											}
										]
									},
									"documentation": {
										"id": 593,
										"nodeType": "StructuredDocumentation",
										"src": "2774:260:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 607,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3048:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3060:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "3052:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3052:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3071:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "3063:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 596,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3063:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3051:22:4"
									},
									"returnParameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "3097:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 599,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3097:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3096:9:4"
									},
									"scope": 728,
									"src": "3039:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 621,
										"nodeType": "Block",
										"src": "3449:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 617,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 610,
														"src": "3466:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 618,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 612,
														"src": "3470:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3466:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 616,
												"id": 620,
												"nodeType": "Return",
												"src": "3459:12:4"
											}
										]
									},
									"documentation": {
										"id": 608,
										"nodeType": "StructuredDocumentation",
										"src": "3141:236:4",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 622,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3391:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3403:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "3395:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3395:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3414:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "3406:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3406:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3394:22:4"
									},
									"returnParameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "3440:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3440:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3439:9:4"
									},
									"scope": 728,
									"src": "3382:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 636,
										"nodeType": "Block",
										"src": "3834:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 632,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 625,
														"src": "3851:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 633,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 627,
														"src": "3855:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3851:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 631,
												"id": 635,
												"nodeType": "Return",
												"src": "3844:12:4"
											}
										]
									},
									"documentation": {
										"id": 623,
										"nodeType": "StructuredDocumentation",
										"src": "3484:278:4",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3776:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3788:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "3780:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3780:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3799:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "3791:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 626,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3779:22:4"
									},
									"returnParameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "3825:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3825:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3824:9:4"
									},
									"scope": 728,
									"src": "3767:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 651,
										"nodeType": "Block",
										"src": "4383:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 640,
														"src": "4400:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 648,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "4404:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4400:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 646,
												"id": 650,
												"nodeType": "Return",
												"src": "4393:12:4"
											}
										]
									},
									"documentation": {
										"id": 638,
										"nodeType": "StructuredDocumentation",
										"src": "3869:442:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 652,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4325:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4337:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "4329:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4329:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4348:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "4340:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 641,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4340:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4328:22:4"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "4374:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:9:4"
									},
									"scope": 728,
									"src": "4316:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 676,
										"nodeType": "Block",
										"src": "4971:106:4",
										"statements": [
											{
												"id": 675,
												"nodeType": "UncheckedBlock",
												"src": "4981:90:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 667,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 665,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 657,
																		"src": "5013:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 666,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 655,
																		"src": "5018:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5013:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 668,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 659,
																	"src": "5021:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 664,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5005:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 669,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5005:29:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 670,
														"nodeType": "ExpressionStatement",
														"src": "5005:29:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 673,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 671,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 655,
																"src": "5055:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 672,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 657,
																"src": "5059:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5055:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 663,
														"id": 674,
														"nodeType": "Return",
														"src": "5048:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 653,
										"nodeType": "StructuredDocumentation",
										"src": "4418:453:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 677,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4885:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4897:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "4889:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 654,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4889:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4908:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "4900:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4900:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4925:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "4911:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 658,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4911:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4888:50:4"
									},
									"returnParameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "4962:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4962:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4961:9:4"
									},
									"scope": 728,
									"src": "4876:201:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 701,
										"nodeType": "Block",
										"src": "5879:105:4",
										"statements": [
											{
												"id": 700,
												"nodeType": "UncheckedBlock",
												"src": "5889:89:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 690,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 682,
																		"src": "5921:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 691,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5925:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5921:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 693,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 684,
																	"src": "5928:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 689,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5913:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 694,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5913:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 695,
														"nodeType": "ExpressionStatement",
														"src": "5913:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 696,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 680,
																"src": "5962:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 697,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 682,
																"src": "5966:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5962:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 688,
														"id": 699,
														"nodeType": "Return",
														"src": "5955:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 678,
										"nodeType": "StructuredDocumentation",
										"src": "5083:696:4",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5793:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5805:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "5797:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5797:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5816:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "5808:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5808:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5833:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "5819:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 683,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5819:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5796:50:4"
									},
									"returnParameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "5870:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5870:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5869:9:4"
									},
									"scope": 728,
									"src": "5784:200:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 726,
										"nodeType": "Block",
										"src": "6725:105:4",
										"statements": [
											{
												"id": 725,
												"nodeType": "UncheckedBlock",
												"src": "6735:89:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 717,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 715,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 707,
																		"src": "6767:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 716,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6771:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6767:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 718,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 709,
																	"src": "6774:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 714,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6759:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6759:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 720,
														"nodeType": "ExpressionStatement",
														"src": "6759:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 723,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 721,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 705,
																"src": "6808:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 722,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 707,
																"src": "6812:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6808:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 713,
														"id": 724,
														"nodeType": "Return",
														"src": "6801:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 703,
										"nodeType": "StructuredDocumentation",
										"src": "5990:635:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 727,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6639:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6651:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "6643:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 704,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6643:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6662:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "6654:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6654:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6679:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "6665:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 708,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6665:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6642:50:4"
									},
									"returnParameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "6716:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 711,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6716:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6715:9:4"
									},
									"scope": 728,
									"src": "6630:200:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 729,
							"src": "398:6434:4",
							"usedErrors": []
						}
					],
					"src": "33:6800:4"
				},
				"id": 4
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							806
						]
					},
					"id": 807,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 730,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 731,
								"nodeType": "StructuredDocumentation",
								"src": "58:70:5",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 806,
							"linearizedBaseContracts": [
								806
							],
							"name": "IERC20",
							"nameLocation": "139:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 732,
										"nodeType": "StructuredDocumentation",
										"src": "152:66:5",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 737,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "232:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "243:2:5"
									},
									"returnParameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "269:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 734,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "269:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "268:9:5"
									},
									"scope": 806,
									"src": "223:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 738,
										"nodeType": "StructuredDocumentation",
										"src": "284:72:5",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 745,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "370:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "388:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "380:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "380:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "379:17:5"
									},
									"returnParameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "420:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "420:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "419:9:5"
									},
									"scope": 806,
									"src": "361:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 746,
										"nodeType": "StructuredDocumentation",
										"src": "435:209:5",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 755,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "658:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "675:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "667:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 747,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "667:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "694:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "686:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "686:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "666:35:5"
									},
									"returnParameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "720:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 752,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "720:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "719:6:5"
									},
									"scope": 806,
									"src": "649:77:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 756,
										"nodeType": "StructuredDocumentation",
										"src": "732:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 765,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1010:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1028:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "1020:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 757,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1020:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1043:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "1035:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 759,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1035:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1019:32:5"
									},
									"returnParameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "1075:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1075:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1074:9:5"
									},
									"scope": 806,
									"src": "1001:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 766,
										"nodeType": "StructuredDocumentation",
										"src": "1090:642:5",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 775,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1746:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1762:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 775,
												"src": "1754:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 767,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1754:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1779:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 775,
												"src": "1771:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 769,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1771:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1753:33:5"
									},
									"returnParameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 775,
												"src": "1805:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 772,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1805:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:6:5"
									},
									"scope": 806,
									"src": "1737:74:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 776,
										"nodeType": "StructuredDocumentation",
										"src": "1817:296:5",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 787,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2127:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2148:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "2140:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 777,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2140:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2164:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "2156:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2156:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2183:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "2175:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2175:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2139:51:5"
									},
									"returnParameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "2209:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 784,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2209:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2208:6:5"
									},
									"scope": 806,
									"src": "2118:97:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 788,
										"nodeType": "StructuredDocumentation",
										"src": "2221:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 796,
									"name": "Transfer",
									"nameLocation": "2390:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 790,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2415:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "2399:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 789,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2399:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 792,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2437:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "2421:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 791,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2421:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 794,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2449:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "2441:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2441:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2398:57:5"
									},
									"src": "2384:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 797,
										"nodeType": "StructuredDocumentation",
										"src": "2462:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 805,
									"name": "Approval",
									"nameLocation": "2621:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2646:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "2630:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 798,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2630:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 801,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2669:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "2653:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 800,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 803,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2686:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "2678:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2678:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2629:63:5"
									},
									"src": "2615:78:5"
								}
							],
							"scope": 807,
							"src": "129:2566:5",
							"usedErrors": []
						}
					],
					"src": "33:2663:5"
				},
				"id": 5
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1326
						],
						"IERC20": [
							806
						],
						"SafeERC20": [
							1030
						]
					},
					"id": 1031,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 808,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:6"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 809,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1031,
							"sourceUnit": 807,
							"src": "58:23:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 810,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1031,
							"sourceUnit": 1327,
							"src": "82:36:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 811,
								"nodeType": "StructuredDocumentation",
								"src": "120:457:6",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1030,
							"linearizedBaseContracts": [
								1030
							],
							"name": "SafeERC20",
							"nameLocation": "586:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 814,
									"libraryName": {
										"id": 812,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1326,
										"src": "608:7:6"
									},
									"nodeType": "UsingForDirective",
									"src": "602:26:6",
									"typeName": {
										"id": 813,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "620:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 836,
										"nodeType": "Block",
										"src": "706:103:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 825,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "736:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$806",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 828,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 817,
																			"src": "766:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$806",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 829,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 755,
																		"src": "766:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 830,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "766:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 831,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 819,
																	"src": "791:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 832,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 821,
																	"src": "795:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 826,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "743:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 827,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "743:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 833,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "743:58:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$806",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 824,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1029,
														"src": "716:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$806_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "716:86:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 835,
												"nodeType": "ExpressionStatement",
												"src": "716:86:6"
											}
										]
									},
									"id": 837,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "643:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "663:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "656:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$806",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 816,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 815,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 806,
														"src": "656:6:6"
													},
													"referencedDeclaration": 806,
													"src": "656:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$806",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "678:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "670:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 818,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "682:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "655:41:6"
									},
									"returnParameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:0:6"
									},
									"scope": 1030,
									"src": "634:175:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 862,
										"nodeType": "Block",
										"src": "905:113:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 850,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "935:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$806",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 853,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 840,
																			"src": "965:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$806",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 854,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 787,
																		"src": "965:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 855,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "965:27:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 856,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 842,
																	"src": "994:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 857,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 844,
																	"src": "1000:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 858,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 846,
																	"src": "1004:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 851,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "942:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 852,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "942:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 859,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "942:68:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$806",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 849,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1029,
														"src": "915:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$806_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "915:96:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 861,
												"nodeType": "ExpressionStatement",
												"src": "915:96:6"
											}
										]
									},
									"id": 863,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "824:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "848:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "841:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$806",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 839,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 838,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 806,
														"src": "841:6:6"
													},
													"referencedDeclaration": 806,
													"src": "841:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$806",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "863:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "855:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 841,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "855:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "877:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "869:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 843,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "869:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "889:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "881:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 845,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "881:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "840:55:6"
									},
									"returnParameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "905:0:6"
									},
									"scope": 1030,
									"src": "815:203:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 906,
										"nodeType": "Block",
										"src": "1354:537:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 890,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 877,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 875,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 871,
																			"src": "1643:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 876,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1652:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1643:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 878,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1642:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 888,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 883,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1683:4:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$1030",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$1030",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 882,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1675:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 881,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1675:7:6",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 884,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1675:13:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 885,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 869,
																					"src": "1690:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 879,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 867,
																					"src": "1659:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$806",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 880,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 765,
																				"src": "1659:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 886,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1659:39:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 887,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1702:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1659:44:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 889,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1658:46:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1642:62:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 891,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1718:56:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 874,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1634:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1634:150:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 893,
												"nodeType": "ExpressionStatement",
												"src": "1634:150:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 895,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 867,
															"src": "1814:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$806",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 898,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 867,
																			"src": "1844:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$806",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 899,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 775,
																		"src": "1844:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 900,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1844:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 901,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 869,
																	"src": "1868:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 902,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 871,
																	"src": "1877:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 896,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1821:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 897,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1821:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 903,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1821:62:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$806",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 894,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1029,
														"src": "1794:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$806_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1794:90:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 905,
												"nodeType": "ExpressionStatement",
												"src": "1794:90:6"
											}
										]
									},
									"documentation": {
										"id": 864,
										"nodeType": "StructuredDocumentation",
										"src": "1024:249:6",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 907,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1287:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1306:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "1299:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$806",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 866,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 865,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 806,
														"src": "1299:6:6"
													},
													"referencedDeclaration": 806,
													"src": "1299:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$806",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1321:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "1313:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1313:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1338:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "1330:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1330:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1298:46:6"
									},
									"returnParameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1354:0:6"
									},
									"scope": 1030,
									"src": "1278:613:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 942,
										"nodeType": "Block",
										"src": "1983:194:6",
										"statements": [
											{
												"assignments": [
													918
												],
												"declarations": [
													{
														"constant": false,
														"id": 918,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2001:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 942,
														"src": "1993:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 917,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1993:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 929,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 923,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2040:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$1030",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$1030",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 922,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2032:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 921,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2032:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 924,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2032:13:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 925,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 912,
																"src": "2047:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 919,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 910,
																"src": "2016:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$806",
																	"typeString": "contract IERC20"
																}
															},
															"id": 920,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 765,
															"src": "2016:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 926,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2016:39:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 927,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 914,
														"src": "2058:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2016:47:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1993:70:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 931,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "2093:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$806",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 934,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 910,
																			"src": "2123:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$806",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 935,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 775,
																		"src": "2123:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 936,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2123:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 937,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 912,
																	"src": "2147:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 938,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 918,
																	"src": "2156:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 932,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2100:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 933,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2100:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 939,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2100:69:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$806",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 930,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1029,
														"src": "2073:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$806_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2073:97:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 941,
												"nodeType": "ExpressionStatement",
												"src": "2073:97:6"
											}
										]
									},
									"id": 943,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "1906:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1935:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "1928:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$806",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 909,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 908,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 806,
														"src": "1928:6:6"
													},
													"referencedDeclaration": 806,
													"src": "1928:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$806",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1950:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "1942:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 911,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1942:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1967:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "1959:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1959:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1927:46:6"
									},
									"returnParameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1983:0:6"
									},
									"scope": 1030,
									"src": "1897:280:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 990,
										"nodeType": "Block",
										"src": "2269:370:6",
										"statements": [
											{
												"id": 989,
												"nodeType": "UncheckedBlock",
												"src": "2279:354:6",
												"statements": [
													{
														"assignments": [
															954
														],
														"declarations": [
															{
																"constant": false,
																"id": 954,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "2311:12:6",
																"nodeType": "VariableDeclaration",
																"scope": 989,
																"src": "2303:20:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 953,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2303:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 963,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 959,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2350:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1030",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1030",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 958,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2342:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 957,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2342:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 960,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2342:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 961,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 948,
																	"src": "2357:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 955,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 946,
																	"src": "2326:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$806",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 956,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 765,
																"src": "2326:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 962,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2326:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2303:62:6"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 967,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 965,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 954,
																		"src": "2387:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 966,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 950,
																		"src": "2403:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2387:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 968,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2410:43:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 964,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2379:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 969,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2379:75:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 970,
														"nodeType": "ExpressionStatement",
														"src": "2379:75:6"
													},
													{
														"assignments": [
															972
														],
														"declarations": [
															{
																"constant": false,
																"id": 972,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "2476:12:6",
																"nodeType": "VariableDeclaration",
																"scope": 989,
																"src": "2468:20:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 971,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2468:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 976,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 975,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 973,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 954,
																"src": "2491:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 974,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 950,
																"src": "2506:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2491:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2468:43:6"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 978,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 946,
																	"src": "2545:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$806",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 981,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 946,
																					"src": "2575:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$806",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 982,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 775,
																				"src": "2575:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 983,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2575:22:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 984,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 948,
																			"src": "2599:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 985,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 972,
																			"src": "2608:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 979,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2552:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 980,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2552:22:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 986,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2552:69:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$806",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 977,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1029,
																"src": "2525:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$806_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 987,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2525:97:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 988,
														"nodeType": "ExpressionStatement",
														"src": "2525:97:6"
													}
												]
											}
										]
									},
									"id": 991,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2192:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2221:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "2214:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$806",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 945,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 944,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 806,
														"src": "2214:6:6"
													},
													"referencedDeclaration": 806,
													"src": "2214:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$806",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2236:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "2228:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 947,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2228:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2253:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "2245:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 949,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2245:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2213:46:6"
									},
									"returnParameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2269:0:6"
									},
									"scope": 1030,
									"src": "2183:456:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1028,
										"nodeType": "Block",
										"src": "3092:681:6",
										"statements": [
											{
												"assignments": [
													1001
												],
												"declarations": [
													{
														"constant": false,
														"id": 1001,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3454:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1028,
														"src": "3441:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1000,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3441:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1010,
												"initialValue": {
													"arguments": [
														{
															"id": 1007,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "3495:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1008,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3501:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1004,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 995,
																	"src": "3475:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$806",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$806",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1003,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3467:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1002,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3467:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1005,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3467:14:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1006,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1121,
														"src": "3467:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3467:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3441:95:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1011,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1001,
															"src": "3550:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1012,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3550:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1013,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3570:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3550:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1027,
												"nodeType": "IfStatement",
												"src": "3546:221:6",
												"trueBody": {
													"id": 1026,
													"nodeType": "Block",
													"src": "3573:194:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1018,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1001,
																				"src": "3690:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1020,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3703:4:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 1019,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3703:4:6",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 1021,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3702:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 1016,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3679:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1017,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "3679:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1022,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3679:30:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 1023,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3711:44:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 1015,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3671:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1024,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3671:85:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1025,
															"nodeType": "ExpressionStatement",
															"src": "3671:85:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 992,
										"nodeType": "StructuredDocumentation",
										"src": "2645:372:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 1029,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3031:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3058:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "3051:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$806",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 994,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 993,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 806,
														"src": "3051:6:6"
													},
													"referencedDeclaration": 806,
													"src": "3051:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$806",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3078:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "3065:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 996,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3065:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:33:6"
									},
									"returnParameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3092:0:6"
									},
									"scope": 1030,
									"src": "3022:751:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1031,
							"src": "578:3197:6",
							"usedErrors": []
						}
					],
					"src": "33:3743:6"
				},
				"id": 6
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/release-v4.0/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1326
						]
					},
					"id": 1327,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1032,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1033,
								"nodeType": "StructuredDocumentation",
								"src": "58:67:7",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1326,
							"linearizedBaseContracts": [
								1326
							],
							"name": "Address",
							"nameLocation": "134:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1049,
										"nodeType": "Block",
										"src": "784:347:7",
										"statements": [
											{
												"assignments": [
													1042
												],
												"declarations": [
													{
														"constant": false,
														"id": 1042,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "989:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1049,
														"src": "981:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1041,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "981:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1043,
												"nodeType": "VariableDeclarationStatement",
												"src": "981:12:7"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1068:32:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1070:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1090:7:7"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1078:11:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1078:20:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1070:4:7"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1036,
														"isOffset": false,
														"isSlot": false,
														"src": "1090:7:7",
														"valueSize": 1
													},
													{
														"declaration": 1042,
														"isOffset": false,
														"isSlot": false,
														"src": "1070:4:7",
														"valueSize": 1
													}
												],
												"id": 1044,
												"nodeType": "InlineAssembly",
												"src": "1059:41:7"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1045,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1042,
														"src": "1116:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1046,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1123:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1116:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1040,
												"id": 1048,
												"nodeType": "Return",
												"src": "1109:15:7"
											}
										]
									},
									"documentation": {
										"id": 1034,
										"nodeType": "StructuredDocumentation",
										"src": "148:565:7",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 1050,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "727:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "746:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "738:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1035,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:17:7"
									},
									"returnParameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "778:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1038,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "778:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "777:6:7"
									},
									"scope": 1326,
									"src": "718:413:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1083,
										"nodeType": "Block",
										"src": "2119:320:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1065,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1061,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2145:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1326",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1326",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1060,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2137:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1059,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2137:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1062,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2137:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1063,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2137:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1064,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1055,
																"src": "2162:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2137:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1066,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2170:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1058,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2129:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2129:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1068,
												"nodeType": "ExpressionStatement",
												"src": "2129:73:7"
											},
											{
												"assignments": [
													1070,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1070,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2296:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1083,
														"src": "2291:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1069,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2291:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1077,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1075,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2341:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1071,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1053,
																"src": "2309:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2309:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1074,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1073,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1055,
																"src": "2332:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2309:31:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2309:35:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2290:54:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1079,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1070,
															"src": "2362:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1080,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2371:60:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1078,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2354:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2354:78:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1082,
												"nodeType": "ExpressionStatement",
												"src": "2354:78:7"
											}
										]
									},
									"documentation": {
										"id": 1051,
										"nodeType": "StructuredDocumentation",
										"src": "1137:906:7",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1084,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2057:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2083:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "2067:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1052,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2067:15:7",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2102:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "2094:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1054,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2094:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2066:43:7"
									},
									"returnParameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2119:0:7"
									},
									"scope": 1326,
									"src": "2048:391:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1100,
										"nodeType": "Block",
										"src": "3269:82:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1095,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "3297:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1096,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "3305:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1097,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3311:32:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1094,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1101,
															1121
														],
														"referencedDeclaration": 1121,
														"src": "3284:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3284:60:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1093,
												"id": 1099,
												"nodeType": "Return",
												"src": "3277:67:7"
											}
										]
									},
									"documentation": {
										"id": 1085,
										"nodeType": "StructuredDocumentation",
										"src": "2445:730:7",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3189:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3210:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "3202:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3202:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3231:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "3218:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1088,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3218:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3201:35:7"
									},
									"returnParameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "3255:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1091,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3255:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3254:14:7"
									},
									"scope": 1326,
									"src": "3180:171:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1120,
										"nodeType": "Block",
										"src": "3690:76:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1114,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1104,
															"src": "3729:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1115,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1106,
															"src": "3737:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1116,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3743:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1117,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1108,
															"src": "3746:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1113,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1141,
															1191
														],
														"referencedDeclaration": 1191,
														"src": "3707:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3707:52:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1112,
												"id": 1119,
												"nodeType": "Return",
												"src": "3700:59:7"
											}
										]
									},
									"documentation": {
										"id": 1102,
										"nodeType": "StructuredDocumentation",
										"src": "3357:211:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1121,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3582:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3603:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "3595:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3595:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3624:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "3611:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1105,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3611:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3644:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "3630:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1107,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3630:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3594:63:7"
									},
									"returnParameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "3676:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1110,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3676:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3675:14:7"
									},
									"scope": 1326,
									"src": "3573:193:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1140,
										"nodeType": "Block",
										"src": "4241:111:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1134,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1124,
															"src": "4280:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1135,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1126,
															"src": "4288:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1136,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1128,
															"src": "4294:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1137,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4301:43:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1133,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1141,
															1191
														],
														"referencedDeclaration": 1191,
														"src": "4258:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4258:87:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1132,
												"id": 1139,
												"nodeType": "Return",
												"src": "4251:94:7"
											}
										]
									},
									"documentation": {
										"id": 1122,
										"nodeType": "StructuredDocumentation",
										"src": "3772:351:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4137:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4167:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "4159:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4159:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1126,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4188:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "4175:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1125,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4175:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4202:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "4194:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4194:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4158:50:7"
									},
									"returnParameters": {
										"id": 1132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "4227:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1130,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4227:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4226:14:7"
									},
									"scope": 1326,
									"src": "4128:224:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1190,
										"nodeType": "Block",
										"src": "4741:382:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1158,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4767:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1326",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1326",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1157,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4759:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1156,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4759:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1159,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4759:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1160,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4759:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1161,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1148,
																"src": "4784:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4759:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1163,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4791:40:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1155,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4751:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4751:81:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1165,
												"nodeType": "ExpressionStatement",
												"src": "4751:81:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1168,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1144,
																	"src": "4861:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1167,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1050,
																"src": "4850:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1169,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4850:18:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1170,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4870:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 1166,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4842:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4842:60:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1172,
												"nodeType": "ExpressionStatement",
												"src": "4842:60:7"
											},
											{
												"assignments": [
													1174,
													1176
												],
												"declarations": [
													{
														"constant": false,
														"id": 1174,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4978:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1190,
														"src": "4973:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1173,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4973:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1176,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5000:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1190,
														"src": "4987:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1175,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4987:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1183,
												"initialValue": {
													"arguments": [
														{
															"id": 1181,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1146,
															"src": "5042:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1177,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1144,
																"src": "5014:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5014:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1180,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1179,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1148,
																"src": "5034:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5014:27:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5014:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4972:75:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1185,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1174,
															"src": "5082:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1186,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1176,
															"src": "5091:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1187,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1150,
															"src": "5103:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1184,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1325,
														"src": "5064:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5064:52:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1154,
												"id": 1189,
												"nodeType": "Return",
												"src": "5057:59:7"
											}
										]
									},
									"documentation": {
										"id": 1142,
										"nodeType": "StructuredDocumentation",
										"src": "4358:237:7",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1191,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4609:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4639:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "4631:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4631:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4660:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "4647:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1145,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4647:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4674:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "4666:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4666:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4695:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "4681:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1149,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4681:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4630:78:7"
									},
									"returnParameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "4727:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1152,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4727:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4726:14:7"
									},
									"scope": 1326,
									"src": "4600:523:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1207,
										"nodeType": "Block",
										"src": "5400:97:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1202,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1194,
															"src": "5436:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1203,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1196,
															"src": "5444:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1204,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5450:39:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1201,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1208,
															1243
														],
														"referencedDeclaration": 1243,
														"src": "5417:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5417:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1200,
												"id": 1206,
												"nodeType": "Return",
												"src": "5410:80:7"
											}
										]
									},
									"documentation": {
										"id": 1192,
										"nodeType": "StructuredDocumentation",
										"src": "5129:166:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1208,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5309:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5336:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "5328:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5328:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5357:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "5344:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1195,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5344:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5327:35:7"
									},
									"returnParameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "5386:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1198,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5386:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5385:14:7"
									},
									"scope": 1326,
									"src": "5300:197:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1242,
										"nodeType": "Block",
										"src": "5809:288:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1222,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1211,
																	"src": "5838:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1221,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1050,
																"src": "5827:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5827:18:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1224,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5847:38:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 1220,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5819:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5819:67:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1226,
												"nodeType": "ExpressionStatement",
												"src": "5819:67:7"
											},
											{
												"assignments": [
													1228,
													1230
												],
												"declarations": [
													{
														"constant": false,
														"id": 1228,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5962:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1242,
														"src": "5957:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1227,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5957:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1230,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5984:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1242,
														"src": "5971:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1229,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5971:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1235,
												"initialValue": {
													"arguments": [
														{
															"id": 1233,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1213,
															"src": "6016:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1231,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1211,
															"src": "5998:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1232,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "5998:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5998:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5956:65:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1237,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1228,
															"src": "6056:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1238,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1230,
															"src": "6065:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1239,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1215,
															"src": "6077:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1236,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1325,
														"src": "6038:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6038:52:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1219,
												"id": 1241,
												"nodeType": "Return",
												"src": "6031:59:7"
											}
										]
									},
									"documentation": {
										"id": 1209,
										"nodeType": "StructuredDocumentation",
										"src": "5503:173:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1243,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5690:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5717:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "5709:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5738:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "5725:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1212,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5725:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5758:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "5744:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1214,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5744:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5708:63:7"
									},
									"returnParameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "5795:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1217,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5795:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5794:14:7"
									},
									"scope": 1326,
									"src": "5681:416:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1259,
										"nodeType": "Block",
										"src": "6373:101:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1254,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1246,
															"src": "6411:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1255,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1248,
															"src": "6419:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1256,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6425:41:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1253,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1260,
															1295
														],
														"referencedDeclaration": 1295,
														"src": "6390:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:77:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1252,
												"id": 1258,
												"nodeType": "Return",
												"src": "6383:84:7"
											}
										]
									},
									"documentation": {
										"id": 1244,
										"nodeType": "StructuredDocumentation",
										"src": "6103:168:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6285:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6314:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "6306:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6306:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6335:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "6322:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1247,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6322:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6305:35:7"
									},
									"returnParameters": {
										"id": 1252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "6359:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1250,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6359:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6358:14:7"
									},
									"scope": 1326,
									"src": "6276:198:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1294,
										"nodeType": "Block",
										"src": "6785:292:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1274,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1263,
																	"src": "6814:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1273,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1050,
																"src": "6803:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6803:18:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1276,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6823:40:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 1272,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6795:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6795:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1278,
												"nodeType": "ExpressionStatement",
												"src": "6795:69:7"
											},
											{
												"assignments": [
													1280,
													1282
												],
												"declarations": [
													{
														"constant": false,
														"id": 1280,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6940:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1294,
														"src": "6935:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1279,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6935:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1282,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6962:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1294,
														"src": "6949:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1281,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6949:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1287,
												"initialValue": {
													"arguments": [
														{
															"id": 1285,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1265,
															"src": "6996:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1283,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1263,
															"src": "6976:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1284,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "6976:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6976:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6934:67:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1289,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1280,
															"src": "7036:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1290,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1282,
															"src": "7045:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1291,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1267,
															"src": "7057:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1288,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1325,
														"src": "7018:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7018:52:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1271,
												"id": 1293,
												"nodeType": "Return",
												"src": "7011:59:7"
											}
										]
									},
									"documentation": {
										"id": 1261,
										"nodeType": "StructuredDocumentation",
										"src": "6480:175:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6669:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6698:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "6690:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6690:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6719:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "6706:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1264,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6706:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6739:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "6725:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1266,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6725:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6689:63:7"
									},
									"returnParameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "6771:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1269,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6771:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6770:14:7"
									},
									"scope": 1326,
									"src": "6660:417:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1324,
										"nodeType": "Block",
										"src": "7212:596:7",
										"statements": [
											{
												"condition": {
													"id": 1306,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1297,
													"src": "7226:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1322,
													"nodeType": "Block",
													"src": "7283:519:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1313,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1310,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1299,
																		"src": "7367:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1311,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7367:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7387:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7367:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1320,
																"nodeType": "Block",
																"src": "7739:53:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1317,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1301,
																					"src": "7764:12:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1316,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "7757:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1318,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7757:20:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1319,
																		"nodeType": "ExpressionStatement",
																		"src": "7757:20:7"
																	}
																]
															},
															"id": 1321,
															"nodeType": "IfStatement",
															"src": "7363:429:7",
															"trueBody": {
																"id": 1315,
																"nodeType": "Block",
																"src": "7390:343:7",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7574:145:7",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7596:40:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7625:10:7"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7619:5:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7619:17:7"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7600:15:7",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7668:2:7",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7672:10:7"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7664:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7664:19:7"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7685:15:7"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7657:6:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7657:44:7"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7657:44:7"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 1299,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7625:10:7",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1299,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7672:10:7",
																				"valueSize": 1
																			}
																		],
																		"id": 1314,
																		"nodeType": "InlineAssembly",
																		"src": "7565:154:7"
																	}
																]
															}
														}
													]
												},
												"id": 1323,
												"nodeType": "IfStatement",
												"src": "7222:580:7",
												"trueBody": {
													"id": 1309,
													"nodeType": "Block",
													"src": "7235:42:7",
													"statements": [
														{
															"expression": {
																"id": 1307,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1299,
																"src": "7256:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1305,
															"id": 1308,
															"nodeType": "Return",
															"src": "7249:17:7"
														}
													]
												}
											}
										]
									},
									"id": 1325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_verifyCallResult",
									"nameLocation": "7092:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7115:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "7110:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1296,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7110:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1299,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7137:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "7124:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1298,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7124:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7163:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "7149:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1300,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7149:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7109:67:7"
									},
									"returnParameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "7198:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1303,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7198:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7197:14:7"
									},
									"scope": 1326,
									"src": "7083:725:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1327,
							"src": "126:7684:7",
							"usedErrors": []
						}
					],
					"src": "33:7778:7"
				},
				"id": 7
			}
		}
	}
}