{
	"id": "bc2d265d3e7d713383e4c34bf7d2033a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.4",
	"solcLongVersion": "0.8.4+commit.c7e474f2",
	"input": {
		"language": "Solidity",
		"sources": {
			"evic/EVIC.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.4;\n\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\ncontract EvicToken {\n    using SafeMath for uint256;\n    using SafeERC20 for IERC20;\n    IERC20 public usdt; // USDT 合约实例\n\n    string public name = \"EVIC Token\";\n    string public symbol = \"EVIC\";\n    uint256 public decimals = 18;\n    uint256 public totalSupply;\n    uint256 public evicPrice; // 1 USDT = 100 EVIC\n\n    address public owner;\n\n    mapping(address => uint256) public balances;\n    mapping(address => mapping(address => uint256)) public allowances;\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n    event BuyEvic(address indexed buyer, uint256 amount, uint256 tokensBought);\n    event WithDrawEvic(address indexed owner, uint256 amount, uint256 usdtReceived);\n\n\n    constructor(address _usdtAddress, uint256 _evicPrice) {\n        owner = msg.sender;\n        usdt = IERC20(_usdtAddress);\n        evicPrice = _evicPrice;\n    }\n\n    function buyEvic(uint256 usdtAmount) external {\n        uint256 amount = usdtAmount.mul(evicPrice); // 处理溢出\n        require(usdt.allowance(msg.sender, address(this)) >= usdtAmount, \"Insufficient allowance\");\n        require(usdt.transferFrom(msg.sender, address(this), usdtAmount), \"USDT transfer failed\");\n        balances[msg.sender] = balances[msg.sender].add(amount); // 处理溢出\n        totalSupply = totalSupply.add(amount); // 处理溢出\n        emit Transfer(address(0), msg.sender, amount);\n        emit BuyEvic(msg.sender, usdtAmount, amount);\n    }\n\n    function withDrawEvic(uint256 amount) external {\n        require(balances[msg.sender] >= amount, \"Insufficient balance\");\n        balances[msg.sender] = balances[msg.sender].sub(amount);\n        totalSupply = totalSupply.sub(amount);\n        uint256 usdtAmount = amount.div(evicPrice); // 处理溢出\n        require(usdt.transfer(msg.sender, usdtAmount), \"USDT transfer failed\");\n        emit Transfer(msg.sender, address(0), amount);\n        emit WithDrawEvic(msg.sender, amount, usdtAmount);\n    }\n\n    function approve(address spender, uint256 amount) external virtual returns (bool) {\n        allowances[msg.sender][spender] = amount;\n        emit Approval(msg.sender, spender, amount);\n        return true;\n    }\n\n    function transfer(address recipient, uint256 amount) external virtual returns (bool) {\n        _transfer(msg.sender, recipient, amount);\n        return true;\n    }\n\n    function transferFrom(address sender, address recipient, uint256 amount) external virtual returns (bool) {\n        require(allowances[sender][msg.sender] >= amount, \"Insufficient allowance\");\n        allowances[sender][msg.sender] = allowances[sender][msg.sender].sub(amount);\n        _transfer(sender, recipient, amount);\n        return true;\n    }\n\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\n        require(sender != address(0), \"Transfer from zero address\");\n        require(recipient != address(0), \"Transfer to zero address\");\n        uint256 senderBalance = balances[sender];\n        require(senderBalance >= amount, \"Insufficient balance\");\n        balances[sender] = senderBalance.sub(amount); \n        balances[recipient] = balances[recipient].add(amount); \n        // 处理溢出 \n        emit Transfer(sender, recipient, amount); \n    }\n    function balanceOf(address account) external view virtual returns (uint256) {\n        return balances[account];\n    }\n\n    function allowance(address owner, address spender) external view virtual returns (uint256) {\n        return allowances[owner][spender];\n    }\n\n}"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/draft-IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":707:4455  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":707:4455  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220cf8fde4ceaa52f371ad0c7ed3b4f78e67884d71be39a09d3ebd696ecdf21ea9e64736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cf8fde4ceaa52f371ad0c7ed3b4f78e67884d71be39a09d3ebd696ecdf21ea9e64736f6c63430008040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF DUP16 0xDE 0x4C 0xEA 0xA5 0x2F CALLDATACOPY BYTE 0xD0 0xC7 0xED EXTCODESIZE 0x4F PUSH25 0xE67884D71BE39A09D3EBD696ECDF21EA9E64736F6C63430008 DIV STOP CALLER ",
							"sourceMap": "707:3748:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cf8fde4ceaa52f371ad0c7ed3b4f78e67884d71be39a09d3ebd696ecdf21ea9e64736f6c63430008040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF DUP16 0xDE 0x4C 0xEA 0xA5 0x2F CALLDATACOPY BYTE 0xD0 0xC7 0xED EXTCODESIZE 0x4F PUSH25 0xE67884D71BE39A09D3EBD696ECDF21EA9E64736F6C63430008 DIV STOP CALLER ",
							"sourceMap": "707:3748:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safePermit(contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cf8fde4ceaa52f371ad0c7ed3b4f78e67884d71be39a09d3ebd696ecdf21ea9e64736f6c63430008040033",
									".code": [
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:9158  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:9158  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220cef5f42e07c23b8d0eed50088a7f166c312c74f013d7daa70c5dcf49f2132d6364736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cef5f42e07c23b8d0eed50088a7f166c312c74f013d7daa70c5dcf49f2132d6364736f6c63430008040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE CREATE2 DELEGATECALL 0x2E SMOD 0xC2 EXTCODESIZE DUP14 0xE 0xED POP ADDMOD DUP11 PUSH32 0x166C312C74F013D7DAA70C5DCF49F2132D6364736F6C63430008040033000000 ",
							"sourceMap": "194:8964:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cef5f42e07c23b8d0eed50088a7f166c312c74f013d7daa70c5dcf49f2132d6364736f6c63430008040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE CREATE2 DELEGATECALL 0x2E SMOD 0xC2 EXTCODESIZE DUP14 0xE 0xED POP ADDMOD DUP11 PUSH32 0x166C312C74F013D7DAA70C5DCF49F2132D6364736F6C63430008040033000000 ",
							"sourceMap": "194:8964:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cef5f42e07c23b8d0eed50088a7f166c312c74f013d7daa70c5dcf49f2132d6364736f6c63430008040033",
									".code": [
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202bbac305fb28cc6d6b99ac62b4043f030bd0bde7d28eb7d7b559be9a5354e3d464736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202bbac305fb28cc6d6b99ac62b4043f030bd0bde7d28eb7d7b559be9a5354e3d464736f6c63430008040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B 0xBA 0xC3 SDIV 0xFB 0x28 0xCC PUSH14 0x6B99AC62B4043F030BD0BDE7D28E 0xB7 0xD7 0xB5 MSIZE 0xBE SWAP11 MSTORE8 SLOAD 0xE3 0xD4 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "482:6300:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202bbac305fb28cc6d6b99ac62b4043f030bd0bde7d28eb7d7b559be9a5354e3d464736f6c63430008040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B 0xBA 0xC3 SDIV 0xFB 0x28 0xCC PUSH14 0x6B99AC62B4043F030BD0BDE7D28E 0xB7 0xD7 0xB5 MSIZE 0xBE SWAP11 MSTORE8 SLOAD 0xE3 0xD4 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
							"sourceMap": "482:6300:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202bbac305fb28cc6d6b99ac62b4043f030bd0bde7d28eb7d7b559be9a5354e3d464736f6c63430008040033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"evic/EVIC.sol": {
				"EvicToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_usdtAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_evicPrice",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokensBought",
									"type": "uint256"
								}
							],
							"name": "BuyEvic",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "usdtReceived",
									"type": "uint256"
								}
							],
							"name": "WithDrawEvic",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "usdtAmount",
									"type": "uint256"
								}
							],
							"name": "buyEvic",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "evicPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "usdt",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withDrawEvic",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"evic/EVIC.sol\":240:3850  contract EvicToken {... */\n  mstore(0x40, 0x80)\n    /* \"evic/EVIC.sol\":375:408  string public name = \"EVIC Token\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0a\n  dup2\n  mstore\n  0x20\n  add\n  0x4556494320546f6b656e00000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  0x01\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_1\n  swap3\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n  pop\n    /* \"evic/EVIC.sol\":414:443  string public symbol = \"EVIC\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x4556494300000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  0x02\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_3\n  swap3\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_3:\n  pop\n    /* \"evic/EVIC.sol\":475:477  18 */\n  0x12\n    /* \"evic/EVIC.sol\":449:477  uint256 public decimals = 18 */\n  0x03\n  sstore\n    /* \"evic/EVIC.sol\":1042:1200  constructor(address _usdtAddress, uint256 _evicPrice) {... */\n  callvalue\n  dup1\n  iszero\n  tag_4\n  jumpi\n  0x00\n  dup1\n  revert\ntag_4:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n    /* \"evic/EVIC.sol\":1114:1124  msg.sender */\n  caller\n    /* \"evic/EVIC.sol\":1106:1111  owner */\n  0x06\n  0x00\n    /* \"evic/EVIC.sol\":1106:1124  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"evic/EVIC.sol\":1148:1160  _usdtAddress */\n  dup2\n    /* \"evic/EVIC.sol\":1134:1138  usdt */\n  0x00\n  dup1\n    /* \"evic/EVIC.sol\":1134:1161  usdt = IERC20(_usdtAddress) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"evic/EVIC.sol\":1183:1193  _evicPrice */\n  dup1\n    /* \"evic/EVIC.sol\":1171:1180  evicPrice */\n  0x05\n    /* \"evic/EVIC.sol\":1171:1193  evicPrice = _evicPrice */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"evic/EVIC.sol\":1042:1200  constructor(address _usdtAddress, uint256 _evicPrice) {... */\n  pop\n  pop\n    /* \"evic/EVIC.sol\":240:3850  contract EvicToken {... */\n  jump(tag_9)\ntag_2:\n  dup3\n  dup1\n  sload\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_13\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_12)\ntag_13:\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_12)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_12\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\ntag_12:\n  pop\n  swap1\n  pop\n  tag_17\n  swap2\n  swap1\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_20\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_19)\ntag_20:\n  pop\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:150   */\ntag_22:\n    /* \"#utility.yul\":64:69   */\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_24\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_25\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":70:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:299   */\ntag_26:\n    /* \"#utility.yul\":213:218   */\n  0x00\n    /* \"#utility.yul\":244:250   */\n  dup2\n    /* \"#utility.yul\":238:251   */\n  mload\n    /* \"#utility.yul\":229:251   */\n  swap1\n  pop\n    /* \"#utility.yul\":260:293   */\n  tag_28\n    /* \"#utility.yul\":287:292   */\n  dup2\n    /* \"#utility.yul\":260:293   */\n  tag_29\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":219:299   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":305:745   */\ntag_6:\n    /* \"#utility.yul\":384:390   */\n  0x00\n    /* \"#utility.yul\":392:398   */\n  dup1\n    /* \"#utility.yul\":441:443   */\n  0x40\n    /* \"#utility.yul\":429:438   */\n  dup4\n    /* \"#utility.yul\":420:427   */\n  dup6\n    /* \"#utility.yul\":416:439   */\n  sub\n    /* \"#utility.yul\":412:444   */\n  slt\n    /* \"#utility.yul\":409:411   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":457:458   */\n  0x00\n    /* \"#utility.yul\":454:455   */\n  dup1\n    /* \"#utility.yul\":447:459   */\n  revert\n    /* \"#utility.yul\":409:411   */\ntag_31:\n    /* \"#utility.yul\":500:501   */\n  0x00\n    /* \"#utility.yul\":525:589   */\n  tag_32\n    /* \"#utility.yul\":581:588   */\n  dup6\n    /* \"#utility.yul\":572:578   */\n  dup3\n    /* \"#utility.yul\":561:570   */\n  dup7\n    /* \"#utility.yul\":557:579   */\n  add\n    /* \"#utility.yul\":525:589   */\n  tag_22\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":515:589   */\n  swap3\n  pop\n    /* \"#utility.yul\":471:599   */\n  pop\n    /* \"#utility.yul\":638:640   */\n  0x20\n    /* \"#utility.yul\":664:728   */\n  tag_33\n    /* \"#utility.yul\":720:727   */\n  dup6\n    /* \"#utility.yul\":711:717   */\n  dup3\n    /* \"#utility.yul\":700:709   */\n  dup7\n    /* \"#utility.yul\":696:718   */\n  add\n    /* \"#utility.yul\":664:728   */\n  tag_26\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":654:728   */\n  swap2\n  pop\n    /* \"#utility.yul\":609:738   */\n  pop\n    /* \"#utility.yul\":399:745   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":751:847   */\ntag_34:\n    /* \"#utility.yul\":788:795   */\n  0x00\n    /* \"#utility.yul\":817:841   */\n  tag_36\n    /* \"#utility.yul\":835:840   */\n  dup3\n    /* \"#utility.yul\":817:841   */\n  tag_37\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":806:841   */\n  swap1\n  pop\n    /* \"#utility.yul\":796:847   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":853:979   */\ntag_37:\n    /* \"#utility.yul\":890:897   */\n  0x00\n    /* \"#utility.yul\":930:972   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":923:928   */\n  dup3\n    /* \"#utility.yul\":919:973   */\n  and\n    /* \"#utility.yul\":908:973   */\n  swap1\n  pop\n    /* \"#utility.yul\":898:979   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":985:1062   */\ntag_39:\n    /* \"#utility.yul\":1022:1029   */\n  0x00\n    /* \"#utility.yul\":1051:1056   */\n  dup2\n    /* \"#utility.yul\":1040:1056   */\n  swap1\n  pop\n    /* \"#utility.yul\":1030:1062   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1068:1388   */\ntag_11:\n    /* \"#utility.yul\":1112:1118   */\n  0x00\n    /* \"#utility.yul\":1149:1150   */\n  0x02\n    /* \"#utility.yul\":1143:1147   */\n  dup3\n    /* \"#utility.yul\":1139:1151   */\n  div\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1196:1197   */\n  0x01\n    /* \"#utility.yul\":1190:1194   */\n  dup3\n    /* \"#utility.yul\":1186:1198   */\n  and\n    /* \"#utility.yul\":1217:1235   */\n  dup1\n    /* \"#utility.yul\":1207:1209   */\n  tag_42\n  jumpi\n    /* \"#utility.yul\":1273:1277   */\n  0x7f\n    /* \"#utility.yul\":1265:1271   */\n  dup3\n    /* \"#utility.yul\":1261:1278   */\n  and\n    /* \"#utility.yul\":1251:1278   */\n  swap2\n  pop\n    /* \"#utility.yul\":1207:1209   */\ntag_42:\n    /* \"#utility.yul\":1335:1337   */\n  0x20\n    /* \"#utility.yul\":1327:1333   */\n  dup3\n    /* \"#utility.yul\":1324:1338   */\n  lt\n    /* \"#utility.yul\":1304:1322   */\n  dup2\n    /* \"#utility.yul\":1301:1339   */\n  eq\n    /* \"#utility.yul\":1298:1300   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1354:1372   */\n  tag_44\n  tag_45\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":1298:1300   */\ntag_43:\n    /* \"#utility.yul\":1119:1388   */\n  pop\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1394:1574   */\ntag_45:\n    /* \"#utility.yul\":1442:1519   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1439:1440   */\n  0x00\n    /* \"#utility.yul\":1432:1520   */\n  mstore\n    /* \"#utility.yul\":1539:1543   */\n  0x22\n    /* \"#utility.yul\":1536:1537   */\n  0x04\n    /* \"#utility.yul\":1529:1544   */\n  mstore\n    /* \"#utility.yul\":1563:1567   */\n  0x24\n    /* \"#utility.yul\":1560:1561   */\n  0x00\n    /* \"#utility.yul\":1553:1568   */\n  revert\n    /* \"#utility.yul\":1580:1702   */\ntag_25:\n    /* \"#utility.yul\":1653:1677   */\n  tag_48\n    /* \"#utility.yul\":1671:1676   */\n  dup2\n    /* \"#utility.yul\":1653:1677   */\n  tag_34\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1646:1651   */\n  dup2\n    /* \"#utility.yul\":1643:1678   */\n  eq\n    /* \"#utility.yul\":1633:1635   */\n  tag_49\n  jumpi\n    /* \"#utility.yul\":1692:1693   */\n  0x00\n    /* \"#utility.yul\":1689:1690   */\n  dup1\n    /* \"#utility.yul\":1682:1694   */\n  revert\n    /* \"#utility.yul\":1633:1635   */\ntag_49:\n    /* \"#utility.yul\":1623:1702   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1708:1830   */\ntag_29:\n    /* \"#utility.yul\":1781:1805   */\n  tag_51\n    /* \"#utility.yul\":1799:1804   */\n  dup2\n    /* \"#utility.yul\":1781:1805   */\n  tag_39\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1774:1779   */\n  dup2\n    /* \"#utility.yul\":1771:1806   */\n  eq\n    /* \"#utility.yul\":1761:1763   */\n  tag_52\n  jumpi\n    /* \"#utility.yul\":1820:1821   */\n  0x00\n    /* \"#utility.yul\":1817:1818   */\n  dup1\n    /* \"#utility.yul\":1810:1822   */\n  revert\n    /* \"#utility.yul\":1761:1763   */\ntag_52:\n    /* \"#utility.yul\":1751:1830   */\n  pop\n  jump\t// out\n    /* \"evic/EVIC.sol\":240:3850  contract EvicToken {... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"evic/EVIC.sol\":240:3850  contract EvicToken {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xa604f570\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa604f570\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xef1f4b84\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x954724b4\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x27e235e3\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x27e235e3\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2f48ab7d\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x55b6ed5c\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"evic/EVIC.sol\":375:408  string public name = \"EVIC Token\" */\n    tag_3:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"evic/EVIC.sol\":2292:2504  function approve(address spender, uint256 amount) external virtual returns (bool) {... */\n    tag_4:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"evic/EVIC.sol\":483:509  uint256 public totalSupply */\n    tag_5:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"evic/EVIC.sol\":2679:3028  function transferFrom(address sender, address recipient, uint256 amount) external virtual returns (bool) {... */\n    tag_6:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"evic/EVIC.sol\":594:637  mapping(address => uint256) public balances */\n    tag_7:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"evic/EVIC.sol\":329:347  IERC20 public usdt */\n    tag_8:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"evic/EVIC.sol\":449:477  uint256 public decimals = 18 */\n    tag_9:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"evic/EVIC.sol\":643:708  mapping(address => mapping(address => uint256)) public allowances */\n    tag_10:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"evic/EVIC.sol\":3583:3700  function balanceOf(address account) external view virtual returns (uint256) {... */\n    tag_11:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"evic/EVIC.sol\":567:587  address public owner */\n    tag_12:\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"evic/EVIC.sol\":1206:1779  function buyEvic(uint256 usdtAmount) external {... */\n    tag_13:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      tag_69\n      jump\t// in\n    tag_66:\n      stop\n        /* \"evic/EVIC.sol\":414:443  string public symbol = \"EVIC\" */\n    tag_14:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"evic/EVIC.sol\":1785:2286  function withDrawEvic(uint256 amount) external {... */\n    tag_15:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n    tag_73:\n      stop\n        /* \"evic/EVIC.sol\":2510:2673  function transfer(address recipient, uint256 amount) external virtual returns (bool) {... */\n    tag_16:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_77:\n      tag_78\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"evic/EVIC.sol\":3706:3847  function allowance(address owner, address spender) external view virtual returns (uint256) {... */\n    tag_17:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_81:\n      tag_82\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"evic/EVIC.sol\":515:539  uint256 public evicPrice */\n    tag_18:\n      tag_84\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"evic/EVIC.sol\":375:408  string public name = \"EVIC Token\" */\n    tag_23:\n      0x01\n      dup1\n      sload\n      tag_87\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_89\n      swap1\n      tag_88\n      jump\t// in\n    tag_89:\n      dup1\n      iszero\n      tag_90\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_91\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_90)\n    tag_91:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_92:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_92\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_90:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"evic/EVIC.sol\":2292:2504  function approve(address spender, uint256 amount) external virtual returns (bool) {... */\n    tag_29:\n        /* \"evic/EVIC.sol\":2368:2372  bool */\n      0x00\n        /* \"evic/EVIC.sol\":2418:2424  amount */\n      dup2\n        /* \"evic/EVIC.sol\":2384:2394  allowances */\n      0x08\n        /* \"evic/EVIC.sol\":2384:2406  allowances[msg.sender] */\n      0x00\n        /* \"evic/EVIC.sol\":2395:2405  msg.sender */\n      caller\n        /* \"evic/EVIC.sol\":2384:2406  allowances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"evic/EVIC.sol\":2384:2415  allowances[msg.sender][spender] */\n      0x00\n        /* \"evic/EVIC.sol\":2407:2414  spender */\n      dup6\n        /* \"evic/EVIC.sol\":2384:2415  allowances[msg.sender][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"evic/EVIC.sol\":2384:2424  allowances[msg.sender][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"evic/EVIC.sol\":2460:2467  spender */\n      dup3\n        /* \"evic/EVIC.sol\":2439:2476  Approval(msg.sender, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"evic/EVIC.sol\":2448:2458  msg.sender */\n      caller\n        /* \"evic/EVIC.sol\":2439:2476  Approval(msg.sender, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"evic/EVIC.sol\":2469:2475  amount */\n      dup5\n        /* \"evic/EVIC.sol\":2439:2476  Approval(msg.sender, spender, amount) */\n      mload(0x40)\n      tag_94\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"evic/EVIC.sol\":2493:2497  true */\n      0x01\n        /* \"evic/EVIC.sol\":2486:2497  return true */\n      swap1\n      pop\n        /* \"evic/EVIC.sol\":2292:2504  function approve(address spender, uint256 amount) external virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"evic/EVIC.sol\":483:509  uint256 public totalSupply */\n    tag_33:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"evic/EVIC.sol\":2679:3028  function transferFrom(address sender, address recipient, uint256 amount) external virtual returns (bool) {... */\n    tag_39:\n        /* \"evic/EVIC.sol\":2778:2782  bool */\n      0x00\n        /* \"evic/EVIC.sol\":2836:2842  amount */\n      dup2\n        /* \"evic/EVIC.sol\":2802:2812  allowances */\n      0x08\n        /* \"evic/EVIC.sol\":2802:2820  allowances[sender] */\n      0x00\n        /* \"evic/EVIC.sol\":2813:2819  sender */\n      dup7\n        /* \"evic/EVIC.sol\":2802:2820  allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"evic/EVIC.sol\":2802:2832  allowances[sender][msg.sender] */\n      0x00\n        /* \"evic/EVIC.sol\":2821:2831  msg.sender */\n      caller\n        /* \"evic/EVIC.sol\":2802:2832  allowances[sender][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"evic/EVIC.sol\":2802:2842  allowances[sender][msg.sender] >= amount */\n      lt\n      iszero\n        /* \"evic/EVIC.sol\":2794:2869  require(allowances[sender][msg.sender] >= amount, \"Insufficient allowance\") */\n      tag_96\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_97\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_96:\n        /* \"evic/EVIC.sol\":2912:2954  allowances[sender][msg.sender].sub(amount) */\n      tag_99\n        /* \"evic/EVIC.sol\":2947:2953  amount */\n      dup3\n        /* \"evic/EVIC.sol\":2912:2922  allowances */\n      0x08\n        /* \"evic/EVIC.sol\":2912:2930  allowances[sender] */\n      0x00\n        /* \"evic/EVIC.sol\":2923:2929  sender */\n      dup8\n        /* \"evic/EVIC.sol\":2912:2930  allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"evic/EVIC.sol\":2912:2942  allowances[sender][msg.sender] */\n      0x00\n        /* \"evic/EVIC.sol\":2931:2941  msg.sender */\n      caller\n        /* \"evic/EVIC.sol\":2912:2942  allowances[sender][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"evic/EVIC.sol\":2912:2946  allowances[sender][msg.sender].sub */\n      tag_100\n      swap1\n        /* \"evic/EVIC.sol\":2912:2954  allowances[sender][msg.sender].sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_99:\n        /* \"evic/EVIC.sol\":2879:2889  allowances */\n      0x08\n        /* \"evic/EVIC.sol\":2879:2897  allowances[sender] */\n      0x00\n        /* \"evic/EVIC.sol\":2890:2896  sender */\n      dup7\n        /* \"evic/EVIC.sol\":2879:2897  allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"evic/EVIC.sol\":2879:2909  allowances[sender][msg.sender] */\n      0x00\n        /* \"evic/EVIC.sol\":2898:2908  msg.sender */\n      caller\n        /* \"evic/EVIC.sol\":2879:2909  allowances[sender][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"evic/EVIC.sol\":2879:2954  allowances[sender][msg.sender] = allowances[sender][msg.sender].sub(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"evic/EVIC.sol\":2964:3000  _transfer(sender, recipient, amount) */\n      tag_101\n        /* \"evic/EVIC.sol\":2974:2980  sender */\n      dup5\n        /* \"evic/EVIC.sol\":2982:2991  recipient */\n      dup5\n        /* \"evic/EVIC.sol\":2993:2999  amount */\n      dup5\n        /* \"evic/EVIC.sol\":2964:2973  _transfer */\n      tag_102\n        /* \"evic/EVIC.sol\":2964:3000  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_101:\n        /* \"evic/EVIC.sol\":3017:3021  true */\n      0x01\n        /* \"evic/EVIC.sol\":3010:3021  return true */\n      swap1\n      pop\n        /* \"evic/EVIC.sol\":2679:3028  function transferFrom(address sender, address recipient, uint256 amount) external virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"evic/EVIC.sol\":594:637  mapping(address => uint256) public balances */\n    tag_44:\n      mstore(0x20, 0x07)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"evic/EVIC.sol\":329:347  IERC20 public usdt */\n    tag_47:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"evic/EVIC.sol\":449:477  uint256 public decimals = 18 */\n    tag_51:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"evic/EVIC.sol\":643:708  mapping(address => mapping(address => uint256)) public allowances */\n    tag_56:\n      mstore(0x20, 0x08)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"evic/EVIC.sol\":3583:3700  function balanceOf(address account) external view virtual returns (uint256) {... */\n    tag_60:\n        /* \"evic/EVIC.sol\":3650:3657  uint256 */\n      0x00\n        /* \"evic/EVIC.sol\":3676:3684  balances */\n      0x07\n        /* \"evic/EVIC.sol\":3676:3693  balances[account] */\n      0x00\n        /* \"evic/EVIC.sol\":3685:3692  account */\n      dup4\n        /* \"evic/EVIC.sol\":3676:3693  balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"evic/EVIC.sol\":3669:3693  return balances[account] */\n      swap1\n      pop\n        /* \"evic/EVIC.sol\":3583:3700  function balanceOf(address account) external view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"evic/EVIC.sol\":567:587  address public owner */\n    tag_63:\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"evic/EVIC.sol\":1206:1779  function buyEvic(uint256 usdtAmount) external {... */\n    tag_69:\n        /* \"evic/EVIC.sol\":1262:1276  uint256 amount */\n      0x00\n        /* \"evic/EVIC.sol\":1279:1304  usdtAmount.mul(evicPrice) */\n      tag_105\n        /* \"evic/EVIC.sol\":1294:1303  evicPrice */\n      sload(0x05)\n        /* \"evic/EVIC.sol\":1279:1289  usdtAmount */\n      dup4\n        /* \"evic/EVIC.sol\":1279:1293  usdtAmount.mul */\n      tag_106\n      swap1\n        /* \"evic/EVIC.sol\":1279:1304  usdtAmount.mul(evicPrice) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_105:\n        /* \"evic/EVIC.sol\":1262:1304  uint256 amount = usdtAmount.mul(evicPrice) */\n      swap1\n      pop\n        /* \"evic/EVIC.sol\":1383:1393  usdtAmount */\n      dup2\n        /* \"evic/EVIC.sol\":1338:1342  usdt */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"evic/EVIC.sol\":1338:1352  usdt.allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"evic/EVIC.sol\":1353:1363  msg.sender */\n      caller\n        /* \"evic/EVIC.sol\":1373:1377  this */\n      address\n        /* \"evic/EVIC.sol\":1338:1379  usdt.allowance(msg.sender, address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap3\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_109\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_109:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_111\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_111:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_112\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n        /* \"evic/EVIC.sol\":1338:1393  usdt.allowance(msg.sender, address(this)) >= usdtAmount */\n      lt\n      iszero\n        /* \"evic/EVIC.sol\":1330:1420  require(usdt.allowance(msg.sender, address(this)) >= usdtAmount, \"Insufficient allowance\") */\n      tag_114\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_115\n      swap1\n      tag_98\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_114:\n        /* \"evic/EVIC.sol\":1438:1442  usdt */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"evic/EVIC.sol\":1438:1455  usdt.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"evic/EVIC.sol\":1456:1466  msg.sender */\n      caller\n        /* \"evic/EVIC.sol\":1476:1480  this */\n      address\n        /* \"evic/EVIC.sol\":1483:1493  usdtAmount */\n      dup6\n        /* \"evic/EVIC.sol\":1438:1494  usdt.transferFrom(msg.sender, address(this), usdtAmount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_116\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_118\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_118:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_120\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_120:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_121\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n        /* \"evic/EVIC.sol\":1430:1519  require(usdt.transferFrom(msg.sender, address(this), usdtAmount), \"USDT transfer failed\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_124\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_123:\n        /* \"evic/EVIC.sol\":1552:1584  balances[msg.sender].add(amount) */\n      tag_126\n        /* \"evic/EVIC.sol\":1577:1583  amount */\n      dup2\n        /* \"evic/EVIC.sol\":1552:1560  balances */\n      0x07\n        /* \"evic/EVIC.sol\":1552:1572  balances[msg.sender] */\n      0x00\n        /* \"evic/EVIC.sol\":1561:1571  msg.sender */\n      caller\n        /* \"evic/EVIC.sol\":1552:1572  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"evic/EVIC.sol\":1552:1576  balances[msg.sender].add */\n      tag_127\n      swap1\n        /* \"evic/EVIC.sol\":1552:1584  balances[msg.sender].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_126:\n        /* \"evic/EVIC.sol\":1529:1537  balances */\n      0x07\n        /* \"evic/EVIC.sol\":1529:1549  balances[msg.sender] */\n      0x00\n        /* \"evic/EVIC.sol\":1538:1548  msg.sender */\n      caller\n        /* \"evic/EVIC.sol\":1529:1549  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"evic/EVIC.sol\":1529:1584  balances[msg.sender] = balances[msg.sender].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"evic/EVIC.sol\":1624:1647  totalSupply.add(amount) */\n      tag_128\n        /* \"evic/EVIC.sol\":1640:1646  amount */\n      dup2\n        /* \"evic/EVIC.sol\":1624:1635  totalSupply */\n      sload(0x04)\n        /* \"evic/EVIC.sol\":1624:1639  totalSupply.add */\n      tag_127\n      swap1\n        /* \"evic/EVIC.sol\":1624:1647  totalSupply.add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_128:\n        /* \"evic/EVIC.sol\":1610:1621  totalSupply */\n      0x04\n        /* \"evic/EVIC.sol\":1610:1647  totalSupply = totalSupply.add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"evic/EVIC.sol\":1699:1709  msg.sender */\n      caller\n        /* \"evic/EVIC.sol\":1678:1718  Transfer(address(0), msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"evic/EVIC.sol\":1695:1696  0 */\n      0x00\n        /* \"evic/EVIC.sol\":1678:1718  Transfer(address(0), msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"evic/EVIC.sol\":1711:1717  amount */\n      dup4\n        /* \"evic/EVIC.sol\":1678:1718  Transfer(address(0), msg.sender, amount) */\n      mload(0x40)\n      tag_129\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"evic/EVIC.sol\":1741:1751  msg.sender */\n      caller\n        /* \"evic/EVIC.sol\":1733:1772  BuyEvic(msg.sender, usdtAmount, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe290c002cbac2415677ae4cc3941e55c4d4c03145539bc16eb9516662c806b51\n        /* \"evic/EVIC.sol\":1753:1763  usdtAmount */\n      dup4\n        /* \"evic/EVIC.sol\":1765:1771  amount */\n      dup4\n        /* \"evic/EVIC.sol\":1733:1772  BuyEvic(msg.sender, usdtAmount, amount) */\n      mload(0x40)\n      tag_130\n      swap3\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"evic/EVIC.sol\":1206:1779  function buyEvic(uint256 usdtAmount) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"evic/EVIC.sol\":414:443  string public symbol = \"EVIC\" */\n    tag_71:\n      0x02\n      dup1\n      sload\n      tag_132\n      swap1\n      tag_88\n      jump\t// in\n    tag_132:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_133\n      swap1\n      tag_88\n      jump\t// in\n    tag_133:\n      dup1\n      iszero\n      tag_134\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_135\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_134)\n    tag_135:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_136:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_136\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_134:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"evic/EVIC.sol\":1785:2286  function withDrawEvic(uint256 amount) external {... */\n    tag_75:\n        /* \"evic/EVIC.sol\":1874:1880  amount */\n      dup1\n        /* \"evic/EVIC.sol\":1850:1858  balances */\n      0x07\n        /* \"evic/EVIC.sol\":1850:1870  balances[msg.sender] */\n      0x00\n        /* \"evic/EVIC.sol\":1859:1869  msg.sender */\n      caller\n        /* \"evic/EVIC.sol\":1850:1870  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"evic/EVIC.sol\":1850:1880  balances[msg.sender] >= amount */\n      lt\n      iszero\n        /* \"evic/EVIC.sol\":1842:1905  require(balances[msg.sender] >= amount, \"Insufficient balance\") */\n      tag_138\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_138:\n        /* \"evic/EVIC.sol\":1938:1970  balances[msg.sender].sub(amount) */\n      tag_141\n        /* \"evic/EVIC.sol\":1963:1969  amount */\n      dup2\n        /* \"evic/EVIC.sol\":1938:1946  balances */\n      0x07\n        /* \"evic/EVIC.sol\":1938:1958  balances[msg.sender] */\n      0x00\n        /* \"evic/EVIC.sol\":1947:1957  msg.sender */\n      caller\n        /* \"evic/EVIC.sol\":1938:1958  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"evic/EVIC.sol\":1938:1962  balances[msg.sender].sub */\n      tag_100\n      swap1\n        /* \"evic/EVIC.sol\":1938:1970  balances[msg.sender].sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_141:\n        /* \"evic/EVIC.sol\":1915:1923  balances */\n      0x07\n        /* \"evic/EVIC.sol\":1915:1935  balances[msg.sender] */\n      0x00\n        /* \"evic/EVIC.sol\":1924:1934  msg.sender */\n      caller\n        /* \"evic/EVIC.sol\":1915:1935  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"evic/EVIC.sol\":1915:1970  balances[msg.sender] = balances[msg.sender].sub(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"evic/EVIC.sol\":1994:2017  totalSupply.sub(amount) */\n      tag_142\n        /* \"evic/EVIC.sol\":2010:2016  amount */\n      dup2\n        /* \"evic/EVIC.sol\":1994:2005  totalSupply */\n      sload(0x04)\n        /* \"evic/EVIC.sol\":1994:2009  totalSupply.sub */\n      tag_100\n      swap1\n        /* \"evic/EVIC.sol\":1994:2017  totalSupply.sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_142:\n        /* \"evic/EVIC.sol\":1980:1991  totalSupply */\n      0x04\n        /* \"evic/EVIC.sol\":1980:2017  totalSupply = totalSupply.sub(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"evic/EVIC.sol\":2027:2045  uint256 usdtAmount */\n      0x00\n        /* \"evic/EVIC.sol\":2048:2069  amount.div(evicPrice) */\n      tag_143\n        /* \"evic/EVIC.sol\":2059:2068  evicPrice */\n      sload(0x05)\n        /* \"evic/EVIC.sol\":2048:2054  amount */\n      dup4\n        /* \"evic/EVIC.sol\":2048:2058  amount.div */\n      tag_144\n      swap1\n        /* \"evic/EVIC.sol\":2048:2069  amount.div(evicPrice) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_143:\n        /* \"evic/EVIC.sol\":2027:2069  uint256 usdtAmount = amount.div(evicPrice) */\n      swap1\n      pop\n        /* \"evic/EVIC.sol\":2103:2107  usdt */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"evic/EVIC.sol\":2103:2116  usdt.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"evic/EVIC.sol\":2117:2127  msg.sender */\n      caller\n        /* \"evic/EVIC.sol\":2129:2139  usdtAmount */\n      dup4\n        /* \"evic/EVIC.sol\":2103:2140  usdt.transfer(msg.sender, usdtAmount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_145\n      swap3\n      swap2\n      swap1\n      tag_146\n      jump\t// in\n    tag_145:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_147\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_147:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_149\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_149:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_150\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_150:\n        /* \"evic/EVIC.sol\":2095:2165  require(usdt.transfer(msg.sender, usdtAmount), \"USDT transfer failed\") */\n      tag_151\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_152\n      swap1\n      tag_125\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_151:\n        /* \"evic/EVIC.sol\":2209:2210  0 */\n      0x00\n        /* \"evic/EVIC.sol\":2180:2220  Transfer(msg.sender, address(0), amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"evic/EVIC.sol\":2189:2199  msg.sender */\n      caller\n        /* \"evic/EVIC.sol\":2180:2220  Transfer(msg.sender, address(0), amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"evic/EVIC.sol\":2213:2219  amount */\n      dup5\n        /* \"evic/EVIC.sol\":2180:2220  Transfer(msg.sender, address(0), amount) */\n      mload(0x40)\n      tag_153\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"evic/EVIC.sol\":2248:2258  msg.sender */\n      caller\n        /* \"evic/EVIC.sol\":2235:2279  WithDrawEvic(msg.sender, amount, usdtAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9b9a581d969359be3d456613e9e95901b643c75b7b9f369f45494e7151deb03f\n        /* \"evic/EVIC.sol\":2260:2266  amount */\n      dup4\n        /* \"evic/EVIC.sol\":2268:2278  usdtAmount */\n      dup4\n        /* \"evic/EVIC.sol\":2235:2279  WithDrawEvic(msg.sender, amount, usdtAmount) */\n      mload(0x40)\n      tag_154\n      swap3\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"evic/EVIC.sol\":1785:2286  function withDrawEvic(uint256 amount) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"evic/EVIC.sol\":2510:2673  function transfer(address recipient, uint256 amount) external virtual returns (bool) {... */\n    tag_78:\n        /* \"evic/EVIC.sol\":2589:2593  bool */\n      0x00\n        /* \"evic/EVIC.sol\":2605:2645  _transfer(msg.sender, recipient, amount) */\n      tag_156\n        /* \"evic/EVIC.sol\":2615:2625  msg.sender */\n      caller\n        /* \"evic/EVIC.sol\":2627:2636  recipient */\n      dup5\n        /* \"evic/EVIC.sol\":2638:2644  amount */\n      dup5\n        /* \"evic/EVIC.sol\":2605:2614  _transfer */\n      tag_102\n        /* \"evic/EVIC.sol\":2605:2645  _transfer(msg.sender, recipient, amount) */\n      jump\t// in\n    tag_156:\n        /* \"evic/EVIC.sol\":2662:2666  true */\n      0x01\n        /* \"evic/EVIC.sol\":2655:2666  return true */\n      swap1\n      pop\n        /* \"evic/EVIC.sol\":2510:2673  function transfer(address recipient, uint256 amount) external virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"evic/EVIC.sol\":3706:3847  function allowance(address owner, address spender) external view virtual returns (uint256) {... */\n    tag_82:\n        /* \"evic/EVIC.sol\":3788:3795  uint256 */\n      0x00\n        /* \"evic/EVIC.sol\":3814:3824  allowances */\n      0x08\n        /* \"evic/EVIC.sol\":3814:3831  allowances[owner] */\n      0x00\n        /* \"evic/EVIC.sol\":3825:3830  owner */\n      dup5\n        /* \"evic/EVIC.sol\":3814:3831  allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"evic/EVIC.sol\":3814:3840  allowances[owner][spender] */\n      0x00\n        /* \"evic/EVIC.sol\":3832:3839  spender */\n      dup4\n        /* \"evic/EVIC.sol\":3814:3840  allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"evic/EVIC.sol\":3807:3840  return allowances[owner][spender] */\n      swap1\n      pop\n        /* \"evic/EVIC.sol\":3706:3847  function allowance(address owner, address spender) external view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"evic/EVIC.sol\":515:539  uint256 public evicPrice */\n    tag_85:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_159\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_159:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"evic/EVIC.sol\":3034:3578  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n    tag_102:\n        /* \"evic/EVIC.sol\":3157:3158  0 */\n      0x00\n        /* \"evic/EVIC.sol\":3139:3159  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"evic/EVIC.sol\":3139:3145  sender */\n      dup4\n        /* \"evic/EVIC.sol\":3139:3159  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"evic/EVIC.sol\":3131:3190  require(sender != address(0), \"Transfer from zero address\") */\n      tag_162\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_163\n      swap1\n      tag_164\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_162:\n        /* \"evic/EVIC.sol\":3229:3230  0 */\n      0x00\n        /* \"evic/EVIC.sol\":3208:3231  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"evic/EVIC.sol\":3208:3217  recipient */\n      dup3\n        /* \"evic/EVIC.sol\":3208:3231  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"evic/EVIC.sol\":3200:3260  require(recipient != address(0), \"Transfer to zero address\") */\n      tag_165\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      tag_167\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_165:\n        /* \"evic/EVIC.sol\":3270:3291  uint256 senderBalance */\n      0x00\n        /* \"evic/EVIC.sol\":3294:3302  balances */\n      0x07\n        /* \"evic/EVIC.sol\":3294:3310  balances[sender] */\n      0x00\n        /* \"evic/EVIC.sol\":3303:3309  sender */\n      dup6\n        /* \"evic/EVIC.sol\":3294:3310  balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"evic/EVIC.sol\":3270:3310  uint256 senderBalance = balances[sender] */\n      swap1\n      pop\n        /* \"evic/EVIC.sol\":3345:3351  amount */\n      dup2\n        /* \"evic/EVIC.sol\":3328:3341  senderBalance */\n      dup2\n        /* \"evic/EVIC.sol\":3328:3351  senderBalance >= amount */\n      lt\n      iszero\n        /* \"evic/EVIC.sol\":3320:3376  require(senderBalance >= amount, \"Insufficient balance\") */\n      tag_168\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_140\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_168:\n        /* \"evic/EVIC.sol\":3405:3430  senderBalance.sub(amount) */\n      tag_170\n        /* \"evic/EVIC.sol\":3423:3429  amount */\n      dup3\n        /* \"evic/EVIC.sol\":3405:3418  senderBalance */\n      dup3\n        /* \"evic/EVIC.sol\":3405:3422  senderBalance.sub */\n      tag_100\n      swap1\n        /* \"evic/EVIC.sol\":3405:3430  senderBalance.sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_170:\n        /* \"evic/EVIC.sol\":3386:3394  balances */\n      0x07\n        /* \"evic/EVIC.sol\":3386:3402  balances[sender] */\n      0x00\n        /* \"evic/EVIC.sol\":3395:3401  sender */\n      dup7\n        /* \"evic/EVIC.sol\":3386:3402  balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"evic/EVIC.sol\":3386:3430  balances[sender] = senderBalance.sub(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"evic/EVIC.sol\":3463:3494  balances[recipient].add(amount) */\n      tag_171\n        /* \"evic/EVIC.sol\":3487:3493  amount */\n      dup3\n        /* \"evic/EVIC.sol\":3463:3471  balances */\n      0x07\n        /* \"evic/EVIC.sol\":3463:3482  balances[recipient] */\n      0x00\n        /* \"evic/EVIC.sol\":3472:3481  recipient */\n      dup7\n        /* \"evic/EVIC.sol\":3463:3482  balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"evic/EVIC.sol\":3463:3486  balances[recipient].add */\n      tag_127\n      swap1\n        /* \"evic/EVIC.sol\":3463:3494  balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_171:\n        /* \"evic/EVIC.sol\":3441:3449  balances */\n      0x07\n        /* \"evic/EVIC.sol\":3441:3460  balances[recipient] */\n      0x00\n        /* \"evic/EVIC.sol\":3450:3459  recipient */\n      dup6\n        /* \"evic/EVIC.sol\":3441:3460  balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"evic/EVIC.sol\":3441:3494  balances[recipient] = balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"evic/EVIC.sol\":3552:3561  recipient */\n      dup3\n        /* \"evic/EVIC.sol\":3535:3570  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"evic/EVIC.sol\":3544:3550  sender */\n      dup5\n        /* \"evic/EVIC.sol\":3535:3570  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"evic/EVIC.sol\":3563:3569  amount */\n      dup5\n        /* \"evic/EVIC.sol\":3535:3570  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      tag_172\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"evic/EVIC.sol\":3034:3578  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_174\n      swap2\n      swap1\n      tag_175\n      jump\t// in\n    tag_174:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3542:3554  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_177\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_144:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_180\n      swap2\n      swap1\n      tag_181\n      jump\t// in\n    tag_180:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3927:3939  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_183:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_185\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_186\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":59:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:289   */\n    tag_187:\n        /* \"#utility.yul\":206:211   */\n      0x00\n        /* \"#utility.yul\":237:243   */\n      dup2\n        /* \"#utility.yul\":231:244   */\n      mload\n        /* \"#utility.yul\":222:244   */\n      swap1\n      pop\n        /* \"#utility.yul\":253:283   */\n      tag_189\n        /* \"#utility.yul\":277:282   */\n      dup2\n        /* \"#utility.yul\":253:283   */\n      tag_190\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":212:289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":295:434   */\n    tag_191:\n        /* \"#utility.yul\":341:346   */\n      0x00\n        /* \"#utility.yul\":379:385   */\n      dup2\n        /* \"#utility.yul\":366:386   */\n      calldataload\n        /* \"#utility.yul\":357:386   */\n      swap1\n      pop\n        /* \"#utility.yul\":395:428   */\n      tag_193\n        /* \"#utility.yul\":422:427   */\n      dup2\n        /* \"#utility.yul\":395:428   */\n      tag_194\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":347:434   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":440:583   */\n    tag_195:\n        /* \"#utility.yul\":497:502   */\n      0x00\n        /* \"#utility.yul\":528:534   */\n      dup2\n        /* \"#utility.yul\":522:535   */\n      mload\n        /* \"#utility.yul\":513:535   */\n      swap1\n      pop\n        /* \"#utility.yul\":544:577   */\n      tag_197\n        /* \"#utility.yul\":571:576   */\n      dup2\n        /* \"#utility.yul\":544:577   */\n      tag_194\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":503:583   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":589:851   */\n    tag_43:\n        /* \"#utility.yul\":648:654   */\n      0x00\n        /* \"#utility.yul\":697:699   */\n      0x20\n        /* \"#utility.yul\":685:694   */\n      dup3\n        /* \"#utility.yul\":676:683   */\n      dup5\n        /* \"#utility.yul\":672:695   */\n      sub\n        /* \"#utility.yul\":668:700   */\n      slt\n        /* \"#utility.yul\":665:667   */\n      iszero\n      tag_199\n      jumpi\n        /* \"#utility.yul\":713:714   */\n      0x00\n        /* \"#utility.yul\":710:711   */\n      dup1\n        /* \"#utility.yul\":703:715   */\n      revert\n        /* \"#utility.yul\":665:667   */\n    tag_199:\n        /* \"#utility.yul\":756:757   */\n      0x00\n        /* \"#utility.yul\":781:834   */\n      tag_200\n        /* \"#utility.yul\":826:833   */\n      dup5\n        /* \"#utility.yul\":817:823   */\n      dup3\n        /* \"#utility.yul\":806:815   */\n      dup6\n        /* \"#utility.yul\":802:824   */\n      add\n        /* \"#utility.yul\":781:834   */\n      tag_183\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":771:834   */\n      swap2\n      pop\n        /* \"#utility.yul\":727:844   */\n      pop\n        /* \"#utility.yul\":655:851   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":857:1264   */\n    tag_55:\n        /* \"#utility.yul\":925:931   */\n      0x00\n        /* \"#utility.yul\":933:939   */\n      dup1\n        /* \"#utility.yul\":982:984   */\n      0x40\n        /* \"#utility.yul\":970:979   */\n      dup4\n        /* \"#utility.yul\":961:968   */\n      dup6\n        /* \"#utility.yul\":957:980   */\n      sub\n        /* \"#utility.yul\":953:985   */\n      slt\n        /* \"#utility.yul\":950:952   */\n      iszero\n      tag_202\n      jumpi\n        /* \"#utility.yul\":998:999   */\n      0x00\n        /* \"#utility.yul\":995:996   */\n      dup1\n        /* \"#utility.yul\":988:1000   */\n      revert\n        /* \"#utility.yul\":950:952   */\n    tag_202:\n        /* \"#utility.yul\":1041:1042   */\n      0x00\n        /* \"#utility.yul\":1066:1119   */\n      tag_203\n        /* \"#utility.yul\":1111:1118   */\n      dup6\n        /* \"#utility.yul\":1102:1108   */\n      dup3\n        /* \"#utility.yul\":1091:1100   */\n      dup7\n        /* \"#utility.yul\":1087:1109   */\n      add\n        /* \"#utility.yul\":1066:1119   */\n      tag_183\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":1056:1119   */\n      swap3\n      pop\n        /* \"#utility.yul\":1012:1129   */\n      pop\n        /* \"#utility.yul\":1168:1170   */\n      0x20\n        /* \"#utility.yul\":1194:1247   */\n      tag_204\n        /* \"#utility.yul\":1239:1246   */\n      dup6\n        /* \"#utility.yul\":1230:1236   */\n      dup3\n        /* \"#utility.yul\":1219:1228   */\n      dup7\n        /* \"#utility.yul\":1215:1237   */\n      add\n        /* \"#utility.yul\":1194:1247   */\n      tag_183\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":1184:1247   */\n      swap2\n      pop\n        /* \"#utility.yul\":1139:1257   */\n      pop\n        /* \"#utility.yul\":940:1264   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1270:1822   */\n    tag_38:\n        /* \"#utility.yul\":1347:1353   */\n      0x00\n        /* \"#utility.yul\":1355:1361   */\n      dup1\n        /* \"#utility.yul\":1363:1369   */\n      0x00\n        /* \"#utility.yul\":1412:1414   */\n      0x60\n        /* \"#utility.yul\":1400:1409   */\n      dup5\n        /* \"#utility.yul\":1391:1398   */\n      dup7\n        /* \"#utility.yul\":1387:1410   */\n      sub\n        /* \"#utility.yul\":1383:1415   */\n      slt\n        /* \"#utility.yul\":1380:1382   */\n      iszero\n      tag_206\n      jumpi\n        /* \"#utility.yul\":1428:1429   */\n      0x00\n        /* \"#utility.yul\":1425:1426   */\n      dup1\n        /* \"#utility.yul\":1418:1430   */\n      revert\n        /* \"#utility.yul\":1380:1382   */\n    tag_206:\n        /* \"#utility.yul\":1471:1472   */\n      0x00\n        /* \"#utility.yul\":1496:1549   */\n      tag_207\n        /* \"#utility.yul\":1541:1548   */\n      dup7\n        /* \"#utility.yul\":1532:1538   */\n      dup3\n        /* \"#utility.yul\":1521:1530   */\n      dup8\n        /* \"#utility.yul\":1517:1539   */\n      add\n        /* \"#utility.yul\":1496:1549   */\n      tag_183\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":1486:1549   */\n      swap4\n      pop\n        /* \"#utility.yul\":1442:1559   */\n      pop\n        /* \"#utility.yul\":1598:1600   */\n      0x20\n        /* \"#utility.yul\":1624:1677   */\n      tag_208\n        /* \"#utility.yul\":1669:1676   */\n      dup7\n        /* \"#utility.yul\":1660:1666   */\n      dup3\n        /* \"#utility.yul\":1649:1658   */\n      dup8\n        /* \"#utility.yul\":1645:1667   */\n      add\n        /* \"#utility.yul\":1624:1677   */\n      tag_183\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":1614:1677   */\n      swap3\n      pop\n        /* \"#utility.yul\":1569:1687   */\n      pop\n        /* \"#utility.yul\":1726:1728   */\n      0x40\n        /* \"#utility.yul\":1752:1805   */\n      tag_209\n        /* \"#utility.yul\":1797:1804   */\n      dup7\n        /* \"#utility.yul\":1788:1794   */\n      dup3\n        /* \"#utility.yul\":1777:1786   */\n      dup8\n        /* \"#utility.yul\":1773:1795   */\n      add\n        /* \"#utility.yul\":1752:1805   */\n      tag_191\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":1742:1805   */\n      swap2\n      pop\n        /* \"#utility.yul\":1697:1815   */\n      pop\n        /* \"#utility.yul\":1370:1822   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1828:2235   */\n    tag_28:\n        /* \"#utility.yul\":1896:1902   */\n      0x00\n        /* \"#utility.yul\":1904:1910   */\n      dup1\n        /* \"#utility.yul\":1953:1955   */\n      0x40\n        /* \"#utility.yul\":1941:1950   */\n      dup4\n        /* \"#utility.yul\":1932:1939   */\n      dup6\n        /* \"#utility.yul\":1928:1951   */\n      sub\n        /* \"#utility.yul\":1924:1956   */\n      slt\n        /* \"#utility.yul\":1921:1923   */\n      iszero\n      tag_211\n      jumpi\n        /* \"#utility.yul\":1969:1970   */\n      0x00\n        /* \"#utility.yul\":1966:1967   */\n      dup1\n        /* \"#utility.yul\":1959:1971   */\n      revert\n        /* \"#utility.yul\":1921:1923   */\n    tag_211:\n        /* \"#utility.yul\":2012:2013   */\n      0x00\n        /* \"#utility.yul\":2037:2090   */\n      tag_212\n        /* \"#utility.yul\":2082:2089   */\n      dup6\n        /* \"#utility.yul\":2073:2079   */\n      dup3\n        /* \"#utility.yul\":2062:2071   */\n      dup7\n        /* \"#utility.yul\":2058:2080   */\n      add\n        /* \"#utility.yul\":2037:2090   */\n      tag_183\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":2027:2090   */\n      swap3\n      pop\n        /* \"#utility.yul\":1983:2100   */\n      pop\n        /* \"#utility.yul\":2139:2141   */\n      0x20\n        /* \"#utility.yul\":2165:2218   */\n      tag_213\n        /* \"#utility.yul\":2210:2217   */\n      dup6\n        /* \"#utility.yul\":2201:2207   */\n      dup3\n        /* \"#utility.yul\":2190:2199   */\n      dup7\n        /* \"#utility.yul\":2186:2208   */\n      add\n        /* \"#utility.yul\":2165:2218   */\n      tag_191\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":2155:2218   */\n      swap2\n      pop\n        /* \"#utility.yul\":2110:2228   */\n      pop\n        /* \"#utility.yul\":1911:2235   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2241:2519   */\n    tag_122:\n        /* \"#utility.yul\":2308:2314   */\n      0x00\n        /* \"#utility.yul\":2357:2359   */\n      0x20\n        /* \"#utility.yul\":2345:2354   */\n      dup3\n        /* \"#utility.yul\":2336:2343   */\n      dup5\n        /* \"#utility.yul\":2332:2355   */\n      sub\n        /* \"#utility.yul\":2328:2360   */\n      slt\n        /* \"#utility.yul\":2325:2327   */\n      iszero\n      tag_215\n      jumpi\n        /* \"#utility.yul\":2373:2374   */\n      0x00\n        /* \"#utility.yul\":2370:2371   */\n      dup1\n        /* \"#utility.yul\":2363:2375   */\n      revert\n        /* \"#utility.yul\":2325:2327   */\n    tag_215:\n        /* \"#utility.yul\":2416:2417   */\n      0x00\n        /* \"#utility.yul\":2441:2502   */\n      tag_216\n        /* \"#utility.yul\":2494:2501   */\n      dup5\n        /* \"#utility.yul\":2485:2491   */\n      dup3\n        /* \"#utility.yul\":2474:2483   */\n      dup6\n        /* \"#utility.yul\":2470:2492   */\n      add\n        /* \"#utility.yul\":2441:2502   */\n      tag_187\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":2431:2502   */\n      swap2\n      pop\n        /* \"#utility.yul\":2387:2512   */\n      pop\n        /* \"#utility.yul\":2315:2519   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2525:2787   */\n    tag_68:\n        /* \"#utility.yul\":2584:2590   */\n      0x00\n        /* \"#utility.yul\":2633:2635   */\n      0x20\n        /* \"#utility.yul\":2621:2630   */\n      dup3\n        /* \"#utility.yul\":2612:2619   */\n      dup5\n        /* \"#utility.yul\":2608:2631   */\n      sub\n        /* \"#utility.yul\":2604:2636   */\n      slt\n        /* \"#utility.yul\":2601:2603   */\n      iszero\n      tag_218\n      jumpi\n        /* \"#utility.yul\":2649:2650   */\n      0x00\n        /* \"#utility.yul\":2646:2647   */\n      dup1\n        /* \"#utility.yul\":2639:2651   */\n      revert\n        /* \"#utility.yul\":2601:2603   */\n    tag_218:\n        /* \"#utility.yul\":2692:2693   */\n      0x00\n        /* \"#utility.yul\":2717:2770   */\n      tag_219\n        /* \"#utility.yul\":2762:2769   */\n      dup5\n        /* \"#utility.yul\":2753:2759   */\n      dup3\n        /* \"#utility.yul\":2742:2751   */\n      dup6\n        /* \"#utility.yul\":2738:2760   */\n      add\n        /* \"#utility.yul\":2717:2770   */\n      tag_191\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":2707:2770   */\n      swap2\n      pop\n        /* \"#utility.yul\":2663:2780   */\n      pop\n        /* \"#utility.yul\":2591:2787   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2793:3077   */\n    tag_113:\n        /* \"#utility.yul\":2863:2869   */\n      0x00\n        /* \"#utility.yul\":2912:2914   */\n      0x20\n        /* \"#utility.yul\":2900:2909   */\n      dup3\n        /* \"#utility.yul\":2891:2898   */\n      dup5\n        /* \"#utility.yul\":2887:2910   */\n      sub\n        /* \"#utility.yul\":2883:2915   */\n      slt\n        /* \"#utility.yul\":2880:2882   */\n      iszero\n      tag_221\n      jumpi\n        /* \"#utility.yul\":2928:2929   */\n      0x00\n        /* \"#utility.yul\":2925:2926   */\n      dup1\n        /* \"#utility.yul\":2918:2930   */\n      revert\n        /* \"#utility.yul\":2880:2882   */\n    tag_221:\n        /* \"#utility.yul\":2971:2972   */\n      0x00\n        /* \"#utility.yul\":2996:3060   */\n      tag_222\n        /* \"#utility.yul\":3052:3059   */\n      dup5\n        /* \"#utility.yul\":3043:3049   */\n      dup3\n        /* \"#utility.yul\":3032:3041   */\n      dup6\n        /* \"#utility.yul\":3028:3050   */\n      add\n        /* \"#utility.yul\":2996:3060   */\n      tag_195\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":2986:3060   */\n      swap2\n      pop\n        /* \"#utility.yul\":2942:3070   */\n      pop\n        /* \"#utility.yul\":2870:3077   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3083:3201   */\n    tag_223:\n        /* \"#utility.yul\":3170:3194   */\n      tag_225\n        /* \"#utility.yul\":3188:3193   */\n      dup2\n        /* \"#utility.yul\":3170:3194   */\n      tag_226\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":3165:3168   */\n      dup3\n        /* \"#utility.yul\":3158:3195   */\n      mstore\n        /* \"#utility.yul\":3148:3201   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3207:3316   */\n    tag_227:\n        /* \"#utility.yul\":3288:3309   */\n      tag_229\n        /* \"#utility.yul\":3303:3308   */\n      dup2\n        /* \"#utility.yul\":3288:3309   */\n      tag_230\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":3283:3286   */\n      dup3\n        /* \"#utility.yul\":3276:3310   */\n      mstore\n        /* \"#utility.yul\":3266:3316   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3322:3479   */\n    tag_231:\n        /* \"#utility.yul\":3422:3472   */\n      tag_233\n        /* \"#utility.yul\":3466:3471   */\n      dup2\n        /* \"#utility.yul\":3422:3472   */\n      tag_234\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":3417:3420   */\n      dup3\n        /* \"#utility.yul\":3410:3473   */\n      mstore\n        /* \"#utility.yul\":3400:3479   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3485:3849   */\n    tag_235:\n        /* \"#utility.yul\":3573:3576   */\n      0x00\n        /* \"#utility.yul\":3601:3640   */\n      tag_237\n        /* \"#utility.yul\":3634:3639   */\n      dup3\n        /* \"#utility.yul\":3601:3640   */\n      tag_238\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":3656:3727   */\n      tag_239\n        /* \"#utility.yul\":3720:3726   */\n      dup2\n        /* \"#utility.yul\":3715:3718   */\n      dup6\n        /* \"#utility.yul\":3656:3727   */\n      tag_240\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":3649:3727   */\n      swap4\n      pop\n        /* \"#utility.yul\":3736:3788   */\n      tag_241\n        /* \"#utility.yul\":3781:3787   */\n      dup2\n        /* \"#utility.yul\":3776:3779   */\n      dup6\n        /* \"#utility.yul\":3769:3773   */\n      0x20\n        /* \"#utility.yul\":3762:3767   */\n      dup7\n        /* \"#utility.yul\":3758:3774   */\n      add\n        /* \"#utility.yul\":3736:3788   */\n      tag_242\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":3813:3842   */\n      tag_243\n        /* \"#utility.yul\":3835:3841   */\n      dup2\n        /* \"#utility.yul\":3813:3842   */\n      tag_244\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":3808:3811   */\n      dup5\n        /* \"#utility.yul\":3804:3843   */\n      add\n        /* \"#utility.yul\":3797:3843   */\n      swap2\n      pop\n        /* \"#utility.yul\":3577:3849   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3855:4221   */\n    tag_245:\n        /* \"#utility.yul\":3997:4000   */\n      0x00\n        /* \"#utility.yul\":4018:4085   */\n      tag_247\n        /* \"#utility.yul\":4082:4084   */\n      0x16\n        /* \"#utility.yul\":4077:4080   */\n      dup4\n        /* \"#utility.yul\":4018:4085   */\n      tag_240\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":4011:4085   */\n      swap2\n      pop\n        /* \"#utility.yul\":4094:4187   */\n      tag_248\n        /* \"#utility.yul\":4183:4186   */\n      dup3\n        /* \"#utility.yul\":4094:4187   */\n      tag_249\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":4212:4214   */\n      0x20\n        /* \"#utility.yul\":4207:4210   */\n      dup3\n        /* \"#utility.yul\":4203:4215   */\n      add\n        /* \"#utility.yul\":4196:4215   */\n      swap1\n      pop\n        /* \"#utility.yul\":4001:4221   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4227:4593   */\n    tag_250:\n        /* \"#utility.yul\":4369:4372   */\n      0x00\n        /* \"#utility.yul\":4390:4457   */\n      tag_252\n        /* \"#utility.yul\":4454:4456   */\n      0x14\n        /* \"#utility.yul\":4449:4452   */\n      dup4\n        /* \"#utility.yul\":4390:4457   */\n      tag_240\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":4383:4457   */\n      swap2\n      pop\n        /* \"#utility.yul\":4466:4559   */\n      tag_253\n        /* \"#utility.yul\":4555:4558   */\n      dup3\n        /* \"#utility.yul\":4466:4559   */\n      tag_254\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":4584:4586   */\n      0x20\n        /* \"#utility.yul\":4579:4582   */\n      dup3\n        /* \"#utility.yul\":4575:4587   */\n      add\n        /* \"#utility.yul\":4568:4587   */\n      swap1\n      pop\n        /* \"#utility.yul\":4373:4593   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4599:4965   */\n    tag_255:\n        /* \"#utility.yul\":4741:4744   */\n      0x00\n        /* \"#utility.yul\":4762:4829   */\n      tag_257\n        /* \"#utility.yul\":4826:4828   */\n      0x1a\n        /* \"#utility.yul\":4821:4824   */\n      dup4\n        /* \"#utility.yul\":4762:4829   */\n      tag_240\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":4755:4829   */\n      swap2\n      pop\n        /* \"#utility.yul\":4838:4931   */\n      tag_258\n        /* \"#utility.yul\":4927:4930   */\n      dup3\n        /* \"#utility.yul\":4838:4931   */\n      tag_259\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":4956:4958   */\n      0x20\n        /* \"#utility.yul\":4951:4954   */\n      dup3\n        /* \"#utility.yul\":4947:4959   */\n      add\n        /* \"#utility.yul\":4940:4959   */\n      swap1\n      pop\n        /* \"#utility.yul\":4745:4965   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4971:5337   */\n    tag_260:\n        /* \"#utility.yul\":5113:5116   */\n      0x00\n        /* \"#utility.yul\":5134:5201   */\n      tag_262\n        /* \"#utility.yul\":5198:5200   */\n      0x14\n        /* \"#utility.yul\":5193:5196   */\n      dup4\n        /* \"#utility.yul\":5134:5201   */\n      tag_240\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":5127:5201   */\n      swap2\n      pop\n        /* \"#utility.yul\":5210:5303   */\n      tag_263\n        /* \"#utility.yul\":5299:5302   */\n      dup3\n        /* \"#utility.yul\":5210:5303   */\n      tag_264\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":5328:5330   */\n      0x20\n        /* \"#utility.yul\":5323:5326   */\n      dup3\n        /* \"#utility.yul\":5319:5331   */\n      add\n        /* \"#utility.yul\":5312:5331   */\n      swap1\n      pop\n        /* \"#utility.yul\":5117:5337   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5343:5709   */\n    tag_265:\n        /* \"#utility.yul\":5485:5488   */\n      0x00\n        /* \"#utility.yul\":5506:5573   */\n      tag_267\n        /* \"#utility.yul\":5570:5572   */\n      0x18\n        /* \"#utility.yul\":5565:5568   */\n      dup4\n        /* \"#utility.yul\":5506:5573   */\n      tag_240\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":5499:5573   */\n      swap2\n      pop\n        /* \"#utility.yul\":5582:5675   */\n      tag_268\n        /* \"#utility.yul\":5671:5674   */\n      dup3\n        /* \"#utility.yul\":5582:5675   */\n      tag_269\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":5700:5702   */\n      0x20\n        /* \"#utility.yul\":5695:5698   */\n      dup3\n        /* \"#utility.yul\":5691:5703   */\n      add\n        /* \"#utility.yul\":5684:5703   */\n      swap1\n      pop\n        /* \"#utility.yul\":5489:5709   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5715:5833   */\n    tag_270:\n        /* \"#utility.yul\":5802:5826   */\n      tag_272\n        /* \"#utility.yul\":5820:5825   */\n      dup2\n        /* \"#utility.yul\":5802:5826   */\n      tag_273\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":5797:5800   */\n      dup3\n        /* \"#utility.yul\":5790:5827   */\n      mstore\n        /* \"#utility.yul\":5780:5833   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5839:6061   */\n    tag_65:\n        /* \"#utility.yul\":5932:5936   */\n      0x00\n        /* \"#utility.yul\":5970:5972   */\n      0x20\n        /* \"#utility.yul\":5959:5968   */\n      dup3\n        /* \"#utility.yul\":5955:5973   */\n      add\n        /* \"#utility.yul\":5947:5973   */\n      swap1\n      pop\n        /* \"#utility.yul\":5983:6054   */\n      tag_275\n        /* \"#utility.yul\":6051:6052   */\n      0x00\n        /* \"#utility.yul\":6040:6049   */\n      dup4\n        /* \"#utility.yul\":6036:6053   */\n      add\n        /* \"#utility.yul\":6027:6033   */\n      dup5\n        /* \"#utility.yul\":5983:6054   */\n      tag_223\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":5937:6061   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6067:6399   */\n    tag_108:\n        /* \"#utility.yul\":6188:6192   */\n      0x00\n        /* \"#utility.yul\":6226:6228   */\n      0x40\n        /* \"#utility.yul\":6215:6224   */\n      dup3\n        /* \"#utility.yul\":6211:6229   */\n      add\n        /* \"#utility.yul\":6203:6229   */\n      swap1\n      pop\n        /* \"#utility.yul\":6239:6310   */\n      tag_277\n        /* \"#utility.yul\":6307:6308   */\n      0x00\n        /* \"#utility.yul\":6296:6305   */\n      dup4\n        /* \"#utility.yul\":6292:6309   */\n      add\n        /* \"#utility.yul\":6283:6289   */\n      dup6\n        /* \"#utility.yul\":6239:6310   */\n      tag_223\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":6320:6392   */\n      tag_278\n        /* \"#utility.yul\":6388:6390   */\n      0x20\n        /* \"#utility.yul\":6377:6386   */\n      dup4\n        /* \"#utility.yul\":6373:6391   */\n      add\n        /* \"#utility.yul\":6364:6370   */\n      dup5\n        /* \"#utility.yul\":6320:6392   */\n      tag_223\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":6193:6399   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6405:6847   */\n    tag_117:\n        /* \"#utility.yul\":6554:6558   */\n      0x00\n        /* \"#utility.yul\":6592:6594   */\n      0x60\n        /* \"#utility.yul\":6581:6590   */\n      dup3\n        /* \"#utility.yul\":6577:6595   */\n      add\n        /* \"#utility.yul\":6569:6595   */\n      swap1\n      pop\n        /* \"#utility.yul\":6605:6676   */\n      tag_280\n        /* \"#utility.yul\":6673:6674   */\n      0x00\n        /* \"#utility.yul\":6662:6671   */\n      dup4\n        /* \"#utility.yul\":6658:6675   */\n      add\n        /* \"#utility.yul\":6649:6655   */\n      dup7\n        /* \"#utility.yul\":6605:6676   */\n      tag_223\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":6686:6758   */\n      tag_281\n        /* \"#utility.yul\":6754:6756   */\n      0x20\n        /* \"#utility.yul\":6743:6752   */\n      dup4\n        /* \"#utility.yul\":6739:6757   */\n      add\n        /* \"#utility.yul\":6730:6736   */\n      dup6\n        /* \"#utility.yul\":6686:6758   */\n      tag_223\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":6768:6840   */\n      tag_282\n        /* \"#utility.yul\":6836:6838   */\n      0x40\n        /* \"#utility.yul\":6825:6834   */\n      dup4\n        /* \"#utility.yul\":6821:6839   */\n      add\n        /* \"#utility.yul\":6812:6818   */\n      dup5\n        /* \"#utility.yul\":6768:6840   */\n      tag_270\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":6559:6847   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6853:7185   */\n    tag_146:\n        /* \"#utility.yul\":6974:6978   */\n      0x00\n        /* \"#utility.yul\":7012:7014   */\n      0x40\n        /* \"#utility.yul\":7001:7010   */\n      dup3\n        /* \"#utility.yul\":6997:7015   */\n      add\n        /* \"#utility.yul\":6989:7015   */\n      swap1\n      pop\n        /* \"#utility.yul\":7025:7096   */\n      tag_284\n        /* \"#utility.yul\":7093:7094   */\n      0x00\n        /* \"#utility.yul\":7082:7091   */\n      dup4\n        /* \"#utility.yul\":7078:7095   */\n      add\n        /* \"#utility.yul\":7069:7075   */\n      dup6\n        /* \"#utility.yul\":7025:7096   */\n      tag_223\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":7106:7178   */\n      tag_285\n        /* \"#utility.yul\":7174:7176   */\n      0x20\n        /* \"#utility.yul\":7163:7172   */\n      dup4\n        /* \"#utility.yul\":7159:7177   */\n      add\n        /* \"#utility.yul\":7150:7156   */\n      dup5\n        /* \"#utility.yul\":7106:7178   */\n      tag_270\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":6979:7185   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7191:7401   */\n    tag_31:\n        /* \"#utility.yul\":7278:7282   */\n      0x00\n        /* \"#utility.yul\":7316:7318   */\n      0x20\n        /* \"#utility.yul\":7305:7314   */\n      dup3\n        /* \"#utility.yul\":7301:7319   */\n      add\n        /* \"#utility.yul\":7293:7319   */\n      swap1\n      pop\n        /* \"#utility.yul\":7329:7394   */\n      tag_287\n        /* \"#utility.yul\":7391:7392   */\n      0x00\n        /* \"#utility.yul\":7380:7389   */\n      dup4\n        /* \"#utility.yul\":7376:7393   */\n      add\n        /* \"#utility.yul\":7367:7373   */\n      dup5\n        /* \"#utility.yul\":7329:7394   */\n      tag_227\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":7283:7401   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7407:7655   */\n    tag_49:\n        /* \"#utility.yul\":7513:7517   */\n      0x00\n        /* \"#utility.yul\":7551:7553   */\n      0x20\n        /* \"#utility.yul\":7540:7549   */\n      dup3\n        /* \"#utility.yul\":7536:7554   */\n      add\n        /* \"#utility.yul\":7528:7554   */\n      swap1\n      pop\n        /* \"#utility.yul\":7564:7648   */\n      tag_289\n        /* \"#utility.yul\":7645:7646   */\n      0x00\n        /* \"#utility.yul\":7634:7643   */\n      dup4\n        /* \"#utility.yul\":7630:7647   */\n      add\n        /* \"#utility.yul\":7621:7627   */\n      dup5\n        /* \"#utility.yul\":7564:7648   */\n      tag_231\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":7518:7655   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7661:7974   */\n    tag_25:\n        /* \"#utility.yul\":7774:7778   */\n      0x00\n        /* \"#utility.yul\":7812:7814   */\n      0x20\n        /* \"#utility.yul\":7801:7810   */\n      dup3\n        /* \"#utility.yul\":7797:7815   */\n      add\n        /* \"#utility.yul\":7789:7815   */\n      swap1\n      pop\n        /* \"#utility.yul\":7861:7870   */\n      dup2\n        /* \"#utility.yul\":7855:7859   */\n      dup2\n        /* \"#utility.yul\":7851:7871   */\n      sub\n        /* \"#utility.yul\":7847:7848   */\n      0x00\n        /* \"#utility.yul\":7836:7845   */\n      dup4\n        /* \"#utility.yul\":7832:7849   */\n      add\n        /* \"#utility.yul\":7825:7872   */\n      mstore\n        /* \"#utility.yul\":7889:7967   */\n      tag_291\n        /* \"#utility.yul\":7962:7966   */\n      dup2\n        /* \"#utility.yul\":7953:7959   */\n      dup5\n        /* \"#utility.yul\":7889:7967   */\n      tag_235\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":7881:7967   */\n      swap1\n      pop\n        /* \"#utility.yul\":7779:7974   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7980:8399   */\n    tag_98:\n        /* \"#utility.yul\":8146:8150   */\n      0x00\n        /* \"#utility.yul\":8184:8186   */\n      0x20\n        /* \"#utility.yul\":8173:8182   */\n      dup3\n        /* \"#utility.yul\":8169:8187   */\n      add\n        /* \"#utility.yul\":8161:8187   */\n      swap1\n      pop\n        /* \"#utility.yul\":8233:8242   */\n      dup2\n        /* \"#utility.yul\":8227:8231   */\n      dup2\n        /* \"#utility.yul\":8223:8243   */\n      sub\n        /* \"#utility.yul\":8219:8220   */\n      0x00\n        /* \"#utility.yul\":8208:8217   */\n      dup4\n        /* \"#utility.yul\":8204:8221   */\n      add\n        /* \"#utility.yul\":8197:8244   */\n      mstore\n        /* \"#utility.yul\":8261:8392   */\n      tag_293\n        /* \"#utility.yul\":8387:8391   */\n      dup2\n        /* \"#utility.yul\":8261:8392   */\n      tag_245\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":8253:8392   */\n      swap1\n      pop\n        /* \"#utility.yul\":8151:8399   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8405:8824   */\n    tag_140:\n        /* \"#utility.yul\":8571:8575   */\n      0x00\n        /* \"#utility.yul\":8609:8611   */\n      0x20\n        /* \"#utility.yul\":8598:8607   */\n      dup3\n        /* \"#utility.yul\":8594:8612   */\n      add\n        /* \"#utility.yul\":8586:8612   */\n      swap1\n      pop\n        /* \"#utility.yul\":8658:8667   */\n      dup2\n        /* \"#utility.yul\":8652:8656   */\n      dup2\n        /* \"#utility.yul\":8648:8668   */\n      sub\n        /* \"#utility.yul\":8644:8645   */\n      0x00\n        /* \"#utility.yul\":8633:8642   */\n      dup4\n        /* \"#utility.yul\":8629:8646   */\n      add\n        /* \"#utility.yul\":8622:8669   */\n      mstore\n        /* \"#utility.yul\":8686:8817   */\n      tag_295\n        /* \"#utility.yul\":8812:8816   */\n      dup2\n        /* \"#utility.yul\":8686:8817   */\n      tag_250\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":8678:8817   */\n      swap1\n      pop\n        /* \"#utility.yul\":8576:8824   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8830:9249   */\n    tag_164:\n        /* \"#utility.yul\":8996:9000   */\n      0x00\n        /* \"#utility.yul\":9034:9036   */\n      0x20\n        /* \"#utility.yul\":9023:9032   */\n      dup3\n        /* \"#utility.yul\":9019:9037   */\n      add\n        /* \"#utility.yul\":9011:9037   */\n      swap1\n      pop\n        /* \"#utility.yul\":9083:9092   */\n      dup2\n        /* \"#utility.yul\":9077:9081   */\n      dup2\n        /* \"#utility.yul\":9073:9093   */\n      sub\n        /* \"#utility.yul\":9069:9070   */\n      0x00\n        /* \"#utility.yul\":9058:9067   */\n      dup4\n        /* \"#utility.yul\":9054:9071   */\n      add\n        /* \"#utility.yul\":9047:9094   */\n      mstore\n        /* \"#utility.yul\":9111:9242   */\n      tag_297\n        /* \"#utility.yul\":9237:9241   */\n      dup2\n        /* \"#utility.yul\":9111:9242   */\n      tag_255\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":9103:9242   */\n      swap1\n      pop\n        /* \"#utility.yul\":9001:9249   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9255:9674   */\n    tag_125:\n        /* \"#utility.yul\":9421:9425   */\n      0x00\n        /* \"#utility.yul\":9459:9461   */\n      0x20\n        /* \"#utility.yul\":9448:9457   */\n      dup3\n        /* \"#utility.yul\":9444:9462   */\n      add\n        /* \"#utility.yul\":9436:9462   */\n      swap1\n      pop\n        /* \"#utility.yul\":9508:9517   */\n      dup2\n        /* \"#utility.yul\":9502:9506   */\n      dup2\n        /* \"#utility.yul\":9498:9518   */\n      sub\n        /* \"#utility.yul\":9494:9495   */\n      0x00\n        /* \"#utility.yul\":9483:9492   */\n      dup4\n        /* \"#utility.yul\":9479:9496   */\n      add\n        /* \"#utility.yul\":9472:9519   */\n      mstore\n        /* \"#utility.yul\":9536:9667   */\n      tag_299\n        /* \"#utility.yul\":9662:9666   */\n      dup2\n        /* \"#utility.yul\":9536:9667   */\n      tag_260\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":9528:9667   */\n      swap1\n      pop\n        /* \"#utility.yul\":9426:9674   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9680:10099   */\n    tag_167:\n        /* \"#utility.yul\":9846:9850   */\n      0x00\n        /* \"#utility.yul\":9884:9886   */\n      0x20\n        /* \"#utility.yul\":9873:9882   */\n      dup3\n        /* \"#utility.yul\":9869:9887   */\n      add\n        /* \"#utility.yul\":9861:9887   */\n      swap1\n      pop\n        /* \"#utility.yul\":9933:9942   */\n      dup2\n        /* \"#utility.yul\":9927:9931   */\n      dup2\n        /* \"#utility.yul\":9923:9943   */\n      sub\n        /* \"#utility.yul\":9919:9920   */\n      0x00\n        /* \"#utility.yul\":9908:9917   */\n      dup4\n        /* \"#utility.yul\":9904:9921   */\n      add\n        /* \"#utility.yul\":9897:9944   */\n      mstore\n        /* \"#utility.yul\":9961:10092   */\n      tag_301\n        /* \"#utility.yul\":10087:10091   */\n      dup2\n        /* \"#utility.yul\":9961:10092   */\n      tag_265\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":9953:10092   */\n      swap1\n      pop\n        /* \"#utility.yul\":9851:10099   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10105:10327   */\n    tag_35:\n        /* \"#utility.yul\":10198:10202   */\n      0x00\n        /* \"#utility.yul\":10236:10238   */\n      0x20\n        /* \"#utility.yul\":10225:10234   */\n      dup3\n        /* \"#utility.yul\":10221:10239   */\n      add\n        /* \"#utility.yul\":10213:10239   */\n      swap1\n      pop\n        /* \"#utility.yul\":10249:10320   */\n      tag_303\n        /* \"#utility.yul\":10317:10318   */\n      0x00\n        /* \"#utility.yul\":10306:10315   */\n      dup4\n        /* \"#utility.yul\":10302:10319   */\n      add\n        /* \"#utility.yul\":10293:10299   */\n      dup5\n        /* \"#utility.yul\":10249:10320   */\n      tag_270\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":10203:10327   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10333:10665   */\n    tag_131:\n        /* \"#utility.yul\":10454:10458   */\n      0x00\n        /* \"#utility.yul\":10492:10494   */\n      0x40\n        /* \"#utility.yul\":10481:10490   */\n      dup3\n        /* \"#utility.yul\":10477:10495   */\n      add\n        /* \"#utility.yul\":10469:10495   */\n      swap1\n      pop\n        /* \"#utility.yul\":10505:10576   */\n      tag_305\n        /* \"#utility.yul\":10573:10574   */\n      0x00\n        /* \"#utility.yul\":10562:10571   */\n      dup4\n        /* \"#utility.yul\":10558:10575   */\n      add\n        /* \"#utility.yul\":10549:10555   */\n      dup6\n        /* \"#utility.yul\":10505:10576   */\n      tag_270\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":10586:10658   */\n      tag_306\n        /* \"#utility.yul\":10654:10656   */\n      0x20\n        /* \"#utility.yul\":10643:10652   */\n      dup4\n        /* \"#utility.yul\":10639:10657   */\n      add\n        /* \"#utility.yul\":10630:10636   */\n      dup5\n        /* \"#utility.yul\":10586:10658   */\n      tag_270\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":10459:10665   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10671:10770   */\n    tag_238:\n        /* \"#utility.yul\":10723:10729   */\n      0x00\n        /* \"#utility.yul\":10757:10762   */\n      dup2\n        /* \"#utility.yul\":10751:10763   */\n      mload\n        /* \"#utility.yul\":10741:10763   */\n      swap1\n      pop\n        /* \"#utility.yul\":10730:10770   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10776:10945   */\n    tag_240:\n        /* \"#utility.yul\":10860:10871   */\n      0x00\n        /* \"#utility.yul\":10894:10900   */\n      dup3\n        /* \"#utility.yul\":10889:10892   */\n      dup3\n        /* \"#utility.yul\":10882:10901   */\n      mstore\n        /* \"#utility.yul\":10934:10938   */\n      0x20\n        /* \"#utility.yul\":10929:10932   */\n      dup3\n        /* \"#utility.yul\":10925:10939   */\n      add\n        /* \"#utility.yul\":10910:10939   */\n      swap1\n      pop\n        /* \"#utility.yul\":10872:10945   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10951:11256   */\n    tag_178:\n        /* \"#utility.yul\":10991:10994   */\n      0x00\n        /* \"#utility.yul\":11010:11030   */\n      tag_310\n        /* \"#utility.yul\":11028:11029   */\n      dup3\n        /* \"#utility.yul\":11010:11030   */\n      tag_273\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":11005:11030   */\n      swap2\n      pop\n        /* \"#utility.yul\":11044:11064   */\n      tag_311\n        /* \"#utility.yul\":11062:11063   */\n      dup4\n        /* \"#utility.yul\":11044:11064   */\n      tag_273\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":11039:11064   */\n      swap3\n      pop\n        /* \"#utility.yul\":11198:11199   */\n      dup3\n        /* \"#utility.yul\":11130:11196   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11126:11200   */\n      sub\n        /* \"#utility.yul\":11123:11124   */\n      dup3\n        /* \"#utility.yul\":11120:11201   */\n      gt\n        /* \"#utility.yul\":11117:11119   */\n      iszero\n      tag_312\n      jumpi\n        /* \"#utility.yul\":11204:11222   */\n      tag_313\n      tag_314\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":11117:11119   */\n    tag_312:\n        /* \"#utility.yul\":11248:11249   */\n      dup3\n        /* \"#utility.yul\":11245:11246   */\n      dup3\n        /* \"#utility.yul\":11241:11250   */\n      add\n        /* \"#utility.yul\":11234:11250   */\n      swap1\n      pop\n        /* \"#utility.yul\":10995:11256   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11262:11447   */\n    tag_181:\n        /* \"#utility.yul\":11302:11303   */\n      0x00\n        /* \"#utility.yul\":11319:11339   */\n      tag_316\n        /* \"#utility.yul\":11337:11338   */\n      dup3\n        /* \"#utility.yul\":11319:11339   */\n      tag_273\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":11314:11339   */\n      swap2\n      pop\n        /* \"#utility.yul\":11353:11373   */\n      tag_317\n        /* \"#utility.yul\":11371:11372   */\n      dup4\n        /* \"#utility.yul\":11353:11373   */\n      tag_273\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":11348:11373   */\n      swap3\n      pop\n        /* \"#utility.yul\":11392:11393   */\n      dup3\n        /* \"#utility.yul\":11382:11384   */\n      tag_318\n      jumpi\n        /* \"#utility.yul\":11397:11415   */\n      tag_319\n      tag_320\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":11382:11384   */\n    tag_318:\n        /* \"#utility.yul\":11439:11440   */\n      dup3\n        /* \"#utility.yul\":11436:11437   */\n      dup3\n        /* \"#utility.yul\":11432:11441   */\n      div\n        /* \"#utility.yul\":11427:11441   */\n      swap1\n      pop\n        /* \"#utility.yul\":11304:11447   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11453:11801   */\n    tag_175:\n        /* \"#utility.yul\":11493:11500   */\n      0x00\n        /* \"#utility.yul\":11516:11536   */\n      tag_322\n        /* \"#utility.yul\":11534:11535   */\n      dup3\n        /* \"#utility.yul\":11516:11536   */\n      tag_273\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":11511:11536   */\n      swap2\n      pop\n        /* \"#utility.yul\":11550:11570   */\n      tag_323\n        /* \"#utility.yul\":11568:11569   */\n      dup4\n        /* \"#utility.yul\":11550:11570   */\n      tag_273\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":11545:11570   */\n      swap3\n      pop\n        /* \"#utility.yul\":11738:11739   */\n      dup2\n        /* \"#utility.yul\":11670:11736   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11666:11740   */\n      div\n        /* \"#utility.yul\":11663:11664   */\n      dup4\n        /* \"#utility.yul\":11660:11741   */\n      gt\n        /* \"#utility.yul\":11655:11656   */\n      dup3\n        /* \"#utility.yul\":11648:11657   */\n      iszero\n        /* \"#utility.yul\":11641:11658   */\n      iszero\n        /* \"#utility.yul\":11637:11742   */\n      and\n        /* \"#utility.yul\":11634:11636   */\n      iszero\n      tag_324\n      jumpi\n        /* \"#utility.yul\":11745:11763   */\n      tag_325\n      tag_314\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":11634:11636   */\n    tag_324:\n        /* \"#utility.yul\":11793:11794   */\n      dup3\n        /* \"#utility.yul\":11790:11791   */\n      dup3\n        /* \"#utility.yul\":11786:11795   */\n      mul\n        /* \"#utility.yul\":11775:11795   */\n      swap1\n      pop\n        /* \"#utility.yul\":11501:11801   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11807:11998   */\n    tag_160:\n        /* \"#utility.yul\":11847:11851   */\n      0x00\n        /* \"#utility.yul\":11867:11887   */\n      tag_327\n        /* \"#utility.yul\":11885:11886   */\n      dup3\n        /* \"#utility.yul\":11867:11887   */\n      tag_273\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":11862:11887   */\n      swap2\n      pop\n        /* \"#utility.yul\":11901:11921   */\n      tag_328\n        /* \"#utility.yul\":11919:11920   */\n      dup4\n        /* \"#utility.yul\":11901:11921   */\n      tag_273\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":11896:11921   */\n      swap3\n      pop\n        /* \"#utility.yul\":11940:11941   */\n      dup3\n        /* \"#utility.yul\":11937:11938   */\n      dup3\n        /* \"#utility.yul\":11934:11942   */\n      lt\n        /* \"#utility.yul\":11931:11933   */\n      iszero\n      tag_329\n      jumpi\n        /* \"#utility.yul\":11945:11963   */\n      tag_330\n      tag_314\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":11931:11933   */\n    tag_329:\n        /* \"#utility.yul\":11990:11991   */\n      dup3\n        /* \"#utility.yul\":11987:11988   */\n      dup3\n        /* \"#utility.yul\":11983:11992   */\n      sub\n        /* \"#utility.yul\":11975:11992   */\n      swap1\n      pop\n        /* \"#utility.yul\":11852:11998   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12004:12100   */\n    tag_226:\n        /* \"#utility.yul\":12041:12048   */\n      0x00\n        /* \"#utility.yul\":12070:12094   */\n      tag_332\n        /* \"#utility.yul\":12088:12093   */\n      dup3\n        /* \"#utility.yul\":12070:12094   */\n      tag_333\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":12059:12094   */\n      swap1\n      pop\n        /* \"#utility.yul\":12049:12100   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12106:12196   */\n    tag_230:\n        /* \"#utility.yul\":12140:12147   */\n      0x00\n        /* \"#utility.yul\":12183:12188   */\n      dup2\n        /* \"#utility.yul\":12176:12189   */\n      iszero\n        /* \"#utility.yul\":12169:12190   */\n      iszero\n        /* \"#utility.yul\":12158:12190   */\n      swap1\n      pop\n        /* \"#utility.yul\":12148:12196   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12202:12328   */\n    tag_333:\n        /* \"#utility.yul\":12239:12246   */\n      0x00\n        /* \"#utility.yul\":12279:12321   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":12272:12277   */\n      dup3\n        /* \"#utility.yul\":12268:12322   */\n      and\n        /* \"#utility.yul\":12257:12322   */\n      swap1\n      pop\n        /* \"#utility.yul\":12247:12328   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12334:12411   */\n    tag_273:\n        /* \"#utility.yul\":12371:12378   */\n      0x00\n        /* \"#utility.yul\":12400:12405   */\n      dup2\n        /* \"#utility.yul\":12389:12405   */\n      swap1\n      pop\n        /* \"#utility.yul\":12379:12411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12417:12569   */\n    tag_234:\n        /* \"#utility.yul\":12480:12489   */\n      0x00\n        /* \"#utility.yul\":12513:12563   */\n      tag_338\n        /* \"#utility.yul\":12557:12562   */\n      dup3\n        /* \"#utility.yul\":12513:12563   */\n      tag_339\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":12500:12563   */\n      swap1\n      pop\n        /* \"#utility.yul\":12490:12569   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12575:12701   */\n    tag_339:\n        /* \"#utility.yul\":12638:12647   */\n      0x00\n        /* \"#utility.yul\":12671:12695   */\n      tag_341\n        /* \"#utility.yul\":12689:12694   */\n      dup3\n        /* \"#utility.yul\":12671:12695   */\n      tag_333\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":12658:12695   */\n      swap1\n      pop\n        /* \"#utility.yul\":12648:12701   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12707:13014   */\n    tag_242:\n        /* \"#utility.yul\":12775:12776   */\n      0x00\n        /* \"#utility.yul\":12785:12898   */\n    tag_343:\n        /* \"#utility.yul\":12799:12805   */\n      dup4\n        /* \"#utility.yul\":12796:12797   */\n      dup2\n        /* \"#utility.yul\":12793:12806   */\n      lt\n        /* \"#utility.yul\":12785:12898   */\n      iszero\n      tag_345\n      jumpi\n        /* \"#utility.yul\":12884:12885   */\n      dup1\n        /* \"#utility.yul\":12879:12882   */\n      dup3\n        /* \"#utility.yul\":12875:12886   */\n      add\n        /* \"#utility.yul\":12869:12887   */\n      mload\n        /* \"#utility.yul\":12865:12866   */\n      dup2\n        /* \"#utility.yul\":12860:12863   */\n      dup5\n        /* \"#utility.yul\":12856:12867   */\n      add\n        /* \"#utility.yul\":12849:12888   */\n      mstore\n        /* \"#utility.yul\":12821:12823   */\n      0x20\n        /* \"#utility.yul\":12818:12819   */\n      dup2\n        /* \"#utility.yul\":12814:12824   */\n      add\n        /* \"#utility.yul\":12809:12824   */\n      swap1\n      pop\n        /* \"#utility.yul\":12785:12898   */\n      jump(tag_343)\n    tag_345:\n        /* \"#utility.yul\":12916:12922   */\n      dup4\n        /* \"#utility.yul\":12913:12914   */\n      dup2\n        /* \"#utility.yul\":12910:12923   */\n      gt\n        /* \"#utility.yul\":12907:12909   */\n      iszero\n      tag_346\n      jumpi\n        /* \"#utility.yul\":12996:12997   */\n      0x00\n        /* \"#utility.yul\":12987:12993   */\n      dup5\n        /* \"#utility.yul\":12982:12985   */\n      dup5\n        /* \"#utility.yul\":12978:12994   */\n      add\n        /* \"#utility.yul\":12971:12998   */\n      mstore\n        /* \"#utility.yul\":12907:12909   */\n    tag_346:\n        /* \"#utility.yul\":12756:13014   */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13020:13340   */\n    tag_88:\n        /* \"#utility.yul\":13064:13070   */\n      0x00\n        /* \"#utility.yul\":13101:13102   */\n      0x02\n        /* \"#utility.yul\":13095:13099   */\n      dup3\n        /* \"#utility.yul\":13091:13103   */\n      div\n        /* \"#utility.yul\":13081:13103   */\n      swap1\n      pop\n        /* \"#utility.yul\":13148:13149   */\n      0x01\n        /* \"#utility.yul\":13142:13146   */\n      dup3\n        /* \"#utility.yul\":13138:13150   */\n      and\n        /* \"#utility.yul\":13169:13187   */\n      dup1\n        /* \"#utility.yul\":13159:13161   */\n      tag_348\n      jumpi\n        /* \"#utility.yul\":13225:13229   */\n      0x7f\n        /* \"#utility.yul\":13217:13223   */\n      dup3\n        /* \"#utility.yul\":13213:13230   */\n      and\n        /* \"#utility.yul\":13203:13230   */\n      swap2\n      pop\n        /* \"#utility.yul\":13159:13161   */\n    tag_348:\n        /* \"#utility.yul\":13287:13289   */\n      0x20\n        /* \"#utility.yul\":13279:13285   */\n      dup3\n        /* \"#utility.yul\":13276:13290   */\n      lt\n        /* \"#utility.yul\":13256:13274   */\n      dup2\n        /* \"#utility.yul\":13253:13291   */\n      eq\n        /* \"#utility.yul\":13250:13252   */\n      iszero\n      tag_349\n      jumpi\n        /* \"#utility.yul\":13306:13324   */\n      tag_350\n      tag_351\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":13250:13252   */\n    tag_349:\n        /* \"#utility.yul\":13071:13340   */\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13346:13526   */\n    tag_314:\n        /* \"#utility.yul\":13394:13471   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13391:13392   */\n      0x00\n        /* \"#utility.yul\":13384:13472   */\n      mstore\n        /* \"#utility.yul\":13491:13495   */\n      0x11\n        /* \"#utility.yul\":13488:13489   */\n      0x04\n        /* \"#utility.yul\":13481:13496   */\n      mstore\n        /* \"#utility.yul\":13515:13519   */\n      0x24\n        /* \"#utility.yul\":13512:13513   */\n      0x00\n        /* \"#utility.yul\":13505:13520   */\n      revert\n        /* \"#utility.yul\":13532:13712   */\n    tag_320:\n        /* \"#utility.yul\":13580:13657   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13577:13578   */\n      0x00\n        /* \"#utility.yul\":13570:13658   */\n      mstore\n        /* \"#utility.yul\":13677:13681   */\n      0x12\n        /* \"#utility.yul\":13674:13675   */\n      0x04\n        /* \"#utility.yul\":13667:13682   */\n      mstore\n        /* \"#utility.yul\":13701:13705   */\n      0x24\n        /* \"#utility.yul\":13698:13699   */\n      0x00\n        /* \"#utility.yul\":13691:13706   */\n      revert\n        /* \"#utility.yul\":13718:13898   */\n    tag_351:\n        /* \"#utility.yul\":13766:13843   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13763:13764   */\n      0x00\n        /* \"#utility.yul\":13756:13844   */\n      mstore\n        /* \"#utility.yul\":13863:13867   */\n      0x22\n        /* \"#utility.yul\":13860:13861   */\n      0x04\n        /* \"#utility.yul\":13853:13868   */\n      mstore\n        /* \"#utility.yul\":13887:13891   */\n      0x24\n        /* \"#utility.yul\":13884:13885   */\n      0x00\n        /* \"#utility.yul\":13877:13892   */\n      revert\n        /* \"#utility.yul\":13904:14006   */\n    tag_244:\n        /* \"#utility.yul\":13945:13951   */\n      0x00\n        /* \"#utility.yul\":13996:13998   */\n      0x1f\n        /* \"#utility.yul\":13992:13999   */\n      not\n        /* \"#utility.yul\":13987:13989   */\n      0x1f\n        /* \"#utility.yul\":13980:13985   */\n      dup4\n        /* \"#utility.yul\":13976:13990   */\n      add\n        /* \"#utility.yul\":13972:14000   */\n      and\n        /* \"#utility.yul\":13962:14000   */\n      swap1\n      pop\n        /* \"#utility.yul\":13952:14006   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14012:14184   */\n    tag_249:\n        /* \"#utility.yul\":14152:14176   */\n      0x496e73756666696369656e7420616c6c6f77616e636500000000000000000000\n        /* \"#utility.yul\":14148:14149   */\n      0x00\n        /* \"#utility.yul\":14140:14146   */\n      dup3\n        /* \"#utility.yul\":14136:14150   */\n      add\n        /* \"#utility.yul\":14129:14177   */\n      mstore\n        /* \"#utility.yul\":14118:14184   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14190:14360   */\n    tag_254:\n        /* \"#utility.yul\":14330:14352   */\n      0x496e73756666696369656e742062616c616e6365000000000000000000000000\n        /* \"#utility.yul\":14326:14327   */\n      0x00\n        /* \"#utility.yul\":14318:14324   */\n      dup3\n        /* \"#utility.yul\":14314:14328   */\n      add\n        /* \"#utility.yul\":14307:14353   */\n      mstore\n        /* \"#utility.yul\":14296:14360   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14366:14542   */\n    tag_259:\n        /* \"#utility.yul\":14506:14534   */\n      0x5472616e736665722066726f6d207a65726f2061646472657373000000000000\n        /* \"#utility.yul\":14502:14503   */\n      0x00\n        /* \"#utility.yul\":14494:14500   */\n      dup3\n        /* \"#utility.yul\":14490:14504   */\n      add\n        /* \"#utility.yul\":14483:14535   */\n      mstore\n        /* \"#utility.yul\":14472:14542   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14548:14718   */\n    tag_264:\n        /* \"#utility.yul\":14688:14710   */\n      0x55534454207472616e73666572206661696c6564000000000000000000000000\n        /* \"#utility.yul\":14684:14685   */\n      0x00\n        /* \"#utility.yul\":14676:14682   */\n      dup3\n        /* \"#utility.yul\":14672:14686   */\n      add\n        /* \"#utility.yul\":14665:14711   */\n      mstore\n        /* \"#utility.yul\":14654:14718   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14724:14898   */\n    tag_269:\n        /* \"#utility.yul\":14864:14890   */\n      0x5472616e7366657220746f207a65726f20616464726573730000000000000000\n        /* \"#utility.yul\":14860:14861   */\n      0x00\n        /* \"#utility.yul\":14852:14858   */\n      dup3\n        /* \"#utility.yul\":14848:14862   */\n      add\n        /* \"#utility.yul\":14841:14891   */\n      mstore\n        /* \"#utility.yul\":14830:14898   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14904:15026   */\n    tag_186:\n        /* \"#utility.yul\":14977:15001   */\n      tag_362\n        /* \"#utility.yul\":14995:15000   */\n      dup2\n        /* \"#utility.yul\":14977:15001   */\n      tag_226\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":14970:14975   */\n      dup2\n        /* \"#utility.yul\":14967:15002   */\n      eq\n        /* \"#utility.yul\":14957:14959   */\n      tag_363\n      jumpi\n        /* \"#utility.yul\":15016:15017   */\n      0x00\n        /* \"#utility.yul\":15013:15014   */\n      dup1\n        /* \"#utility.yul\":15006:15018   */\n      revert\n        /* \"#utility.yul\":14957:14959   */\n    tag_363:\n        /* \"#utility.yul\":14947:15026   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15032:15148   */\n    tag_190:\n        /* \"#utility.yul\":15102:15123   */\n      tag_365\n        /* \"#utility.yul\":15117:15122   */\n      dup2\n        /* \"#utility.yul\":15102:15123   */\n      tag_230\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":15095:15100   */\n      dup2\n        /* \"#utility.yul\":15092:15124   */\n      eq\n        /* \"#utility.yul\":15082:15084   */\n      tag_366\n      jumpi\n        /* \"#utility.yul\":15138:15139   */\n      0x00\n        /* \"#utility.yul\":15135:15136   */\n      dup1\n        /* \"#utility.yul\":15128:15140   */\n      revert\n        /* \"#utility.yul\":15082:15084   */\n    tag_366:\n        /* \"#utility.yul\":15072:15148   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15154:15276   */\n    tag_194:\n        /* \"#utility.yul\":15227:15251   */\n      tag_368\n        /* \"#utility.yul\":15245:15250   */\n      dup2\n        /* \"#utility.yul\":15227:15251   */\n      tag_273\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":15220:15225   */\n      dup2\n        /* \"#utility.yul\":15217:15252   */\n      eq\n        /* \"#utility.yul\":15207:15209   */\n      tag_369\n      jumpi\n        /* \"#utility.yul\":15266:15267   */\n      0x00\n        /* \"#utility.yul\":15263:15264   */\n      dup1\n        /* \"#utility.yul\":15256:15268   */\n      revert\n        /* \"#utility.yul\":15207:15209   */\n    tag_369:\n        /* \"#utility.yul\":15197:15276   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204be8d417f4fad8fda3b5b7c4525f7f838acbe6e2d5d87d61ae6f7cf54bb0262764736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1833:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:6"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:6",
														"type": ""
													}
												],
												"src": "7:143:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "219:80:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "229:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "244:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "238:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "238:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "229:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "287:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "260:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "260:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "260:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "197:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "205:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "213:5:6",
														"type": ""
													}
												],
												"src": "156:143:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "399:346:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "445:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "454:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "457:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "447:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "447:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "447:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "420:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "429:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "416:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "416:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "441:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "412:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "412:32:6"
															},
															"nodeType": "YulIf",
															"src": "409:2:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "471:128:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "486:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "500:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "490:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "515:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "561:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "572:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "557:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "557:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "581:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "525:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "525:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "515:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "609:129:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "624:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "638:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "628:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "654:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "700:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "711:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "696:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "696:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "720:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "664:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "664:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "654:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "361:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "372:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "384:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "392:6:6",
														"type": ""
													}
												],
												"src": "305:440:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "796:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "806:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "835:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "817:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "817:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "806:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "778:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "788:7:6",
														"type": ""
													}
												],
												"src": "751:96:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "898:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "908:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "923:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "930:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "919:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "919:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "908:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "880:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "890:7:6",
														"type": ""
													}
												],
												"src": "853:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1030:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1040:16:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1051:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1040:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1012:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1022:7:6",
														"type": ""
													}
												],
												"src": "985:77:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1119:269:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1129:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1143:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1149:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1139:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1139:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1129:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1160:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1190:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1196:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1186:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1186:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1164:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1237:51:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1251:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1265:6:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1273:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1261:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1261:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1251:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1217:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1210:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1210:26:6"
															},
															"nodeType": "YulIf",
															"src": "1207:2:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1340:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "1354:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1354:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1354:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1304:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1327:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1335:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1324:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1324:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1301:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1301:38:6"
															},
															"nodeType": "YulIf",
															"src": "1298:2:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1103:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1112:6:6",
														"type": ""
													}
												],
												"src": "1068:320:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1422:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1439:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1442:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1432:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1432:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1432:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1536:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1539:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1529:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1529:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1529:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1560:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1563:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1553:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1553:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1553:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "1394:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1623:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1680:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1689:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1692:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1682:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1682:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1682:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1646:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1671:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1653:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1653:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1643:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1643:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1636:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1636:43:6"
															},
															"nodeType": "YulIf",
															"src": "1633:2:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1616:5:6",
														"type": ""
													}
												],
												"src": "1580:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1751:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1808:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1817:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1820:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1810:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1810:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1810:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1774:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1799:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1781:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1781:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1771:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1771:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1764:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1764:43:6"
															},
															"nodeType": "YulIf",
															"src": "1761:2:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1744:5:6",
														"type": ""
													}
												],
												"src": "1708:122:6"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526040518060400160405280600a81526020017f4556494320546f6b656e00000000000000000000000000000000000000000000815250600190805190602001906200005192919062000168565b506040518060400160405280600481526020017f4556494300000000000000000000000000000000000000000000000000000000815250600290805190602001906200009f92919062000168565b506012600355348015620000b257600080fd5b5060405162001e5038038062001e508339818101604052810190620000d8919062000246565b33600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060058190555050506200035e565b8280546200017690620002c5565b90600052602060002090601f0160209004810192826200019a5760008555620001e6565b82601f10620001b557805160ff1916838001178555620001e6565b82800160010185558215620001e6579182015b82811115620001e5578251825591602001919060010190620001c8565b5b509050620001f59190620001f9565b5090565b5b8082111562000214576000816000905550600101620001fa565b5090565b60008151905062000229816200032a565b92915050565b600081519050620002408162000344565b92915050565b600080604083850312156200025a57600080fd5b60006200026a8582860162000218565b92505060206200027d858286016200022f565b9150509250929050565b600062000294826200029b565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006002820490506001821680620002de57607f821691505b60208210811415620002f557620002f4620002fb565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b620003358162000287565b81146200034157600080fd5b50565b6200034f81620002bb565b81146200035b57600080fd5b50565b611ae2806200036e6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063a604f57011610066578063a604f570146102c5578063a9059cbb146102e1578063dd62ed3e14610311578063ef1f4b841461034157610100565b806370a082311461023d5780638da5cb5b1461026d578063954724b41461028b57806395d89b41146102a757610100565b806327e235e3116100d357806327e235e3146101a15780632f48ab7d146101d1578063313ce567146101ef57806355b6ed5c1461020d57610100565b806306fdde0314610105578063095ea7b31461012357806318160ddd1461015357806323b872dd14610171575b600080fd5b61010d61035f565b60405161011a91906115f4565b60405180910390f35b61013d6004803603810190610138919061133f565b6103ed565b60405161014a91906115be565b60405180910390f35b61015b6104df565b60405161016891906116b6565b60405180910390f35b61018b600480360381019061018691906112f0565b6104e5565b60405161019891906115be565b60405180910390f35b6101bb60048036038101906101b6919061128b565b6106cb565b6040516101c891906116b6565b60405180910390f35b6101d96106e3565b6040516101e691906115d9565b60405180910390f35b6101f7610707565b60405161020491906116b6565b60405180910390f35b610227600480360381019061022291906112b4565b61070d565b60405161023491906116b6565b60405180910390f35b6102576004803603810190610252919061128b565b610732565b60405161026491906116b6565b60405180910390f35b61027561077b565b604051610282919061151a565b60405180910390f35b6102a560048036038101906102a091906113a4565b6107a1565b005b6102af610aff565b6040516102bc91906115f4565b60405180910390f35b6102df60048036038101906102da91906113a4565b610b8d565b005b6102fb60048036038101906102f6919061133f565b610e7e565b60405161030891906115be565b60405180910390f35b61032b600480360381019061032691906112b4565b610e95565b60405161033891906116b6565b60405180910390f35b610349610f1c565b60405161035691906116b6565b60405180910390f35b6001805461036c906118ca565b80601f0160208091040260200160405190810160405280929190818152602001828054610398906118ca565b80156103e55780601f106103ba576101008083540402835291602001916103e5565b820191906000526020600020905b8154815290600101906020018083116103c857829003601f168201915b505050505081565b600081600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516104cd91906116b6565b60405180910390a36001905092915050565b60045481565b600081600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156105a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059d90611616565b60405180910390fd5b61063582600860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f2290919063ffffffff16565b600860008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506106c0848484610f38565b600190509392505050565b60076020528060005260406000206000915090505481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b6008602052816000526040600020602052806000526040600020600091509150505481565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006107b8600554836111f590919063ffffffff16565b90508160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401610816929190611535565b60206040518083038186803b15801561082e57600080fd5b505afa158015610842573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086691906113cd565b10156108a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089e90611616565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016109049392919061155e565b602060405180830381600087803b15801561091e57600080fd5b505af1158015610932573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610956919061137b565b610995576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098c90611676565b60405180910390fd5b6109e781600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461120b90919063ffffffff16565b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610a3f8160045461120b90919063ffffffff16565b6004819055503373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610aa391906116b6565b60405180910390a33373ffffffffffffffffffffffffffffffffffffffff167fe290c002cbac2415677ae4cc3941e55c4d4c03145539bc16eb9516662c806b518383604051610af39291906116d1565b60405180910390a25050565b60028054610b0c906118ca565b80601f0160208091040260200160405190810160405280929190818152602001828054610b38906118ca565b8015610b855780601f10610b5a57610100808354040283529160200191610b85565b820191906000526020600020905b815481529060010190602001808311610b6857829003601f168201915b505050505081565b80600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610c0f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0690611636565b60405180910390fd5b610c6181600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f2290919063ffffffff16565b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610cb981600454610f2290919063ffffffff16565b6004819055506000610cd66005548361122190919063ffffffff16565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610d33929190611595565b602060405180830381600087803b158015610d4d57600080fd5b505af1158015610d61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d85919061137b565b610dc4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dbb90611676565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e2291906116b6565b60405180910390a33373ffffffffffffffffffffffffffffffffffffffff167f9b9a581d969359be3d456613e9e95901b643c75b7b9f369f45494e7151deb03f8383604051610e729291906116d1565b60405180910390a25050565b6000610e8b338484610f38565b6001905092915050565b6000600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60055481565b60008183610f3091906117f7565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610fa8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9f90611656565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611018576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161100f90611696565b60405180910390fd5b6000600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561109f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161109690611636565b60405180910390fd5b6110b28282610f2290919063ffffffff16565b600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061114782600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461120b90919063ffffffff16565b600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516111e791906116b6565b60405180910390a350505050565b60008183611203919061179d565b905092915050565b600081836112199190611716565b905092915050565b6000818361122f919061176c565b905092915050565b60008135905061124681611a67565b92915050565b60008151905061125b81611a7e565b92915050565b60008135905061127081611a95565b92915050565b60008151905061128581611a95565b92915050565b60006020828403121561129d57600080fd5b60006112ab84828501611237565b91505092915050565b600080604083850312156112c757600080fd5b60006112d585828601611237565b92505060206112e685828601611237565b9150509250929050565b60008060006060848603121561130557600080fd5b600061131386828701611237565b935050602061132486828701611237565b925050604061133586828701611261565b9150509250925092565b6000806040838503121561135257600080fd5b600061136085828601611237565b925050602061137185828601611261565b9150509250929050565b60006020828403121561138d57600080fd5b600061139b8482850161124c565b91505092915050565b6000602082840312156113b657600080fd5b60006113c484828501611261565b91505092915050565b6000602082840312156113df57600080fd5b60006113ed84828501611276565b91505092915050565b6113ff8161182b565b82525050565b61140e8161183d565b82525050565b61141d81611873565b82525050565b600061142e826116fa565b6114388185611705565b9350611448818560208601611897565b61145181611989565b840191505092915050565b6000611469601683611705565b91506114748261199a565b602082019050919050565b600061148c601483611705565b9150611497826119c3565b602082019050919050565b60006114af601a83611705565b91506114ba826119ec565b602082019050919050565b60006114d2601483611705565b91506114dd82611a15565b602082019050919050565b60006114f5601883611705565b915061150082611a3e565b602082019050919050565b61151481611869565b82525050565b600060208201905061152f60008301846113f6565b92915050565b600060408201905061154a60008301856113f6565b61155760208301846113f6565b9392505050565b600060608201905061157360008301866113f6565b61158060208301856113f6565b61158d604083018461150b565b949350505050565b60006040820190506115aa60008301856113f6565b6115b7602083018461150b565b9392505050565b60006020820190506115d36000830184611405565b92915050565b60006020820190506115ee6000830184611414565b92915050565b6000602082019050818103600083015261160e8184611423565b905092915050565b6000602082019050818103600083015261162f8161145c565b9050919050565b6000602082019050818103600083015261164f8161147f565b9050919050565b6000602082019050818103600083015261166f816114a2565b9050919050565b6000602082019050818103600083015261168f816114c5565b9050919050565b600060208201905081810360008301526116af816114e8565b9050919050565b60006020820190506116cb600083018461150b565b92915050565b60006040820190506116e6600083018561150b565b6116f3602083018461150b565b9392505050565b600081519050919050565b600082825260208201905092915050565b600061172182611869565b915061172c83611869565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611761576117606118fc565b5b828201905092915050565b600061177782611869565b915061178283611869565b9250826117925761179161192b565b5b828204905092915050565b60006117a882611869565b91506117b383611869565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156117ec576117eb6118fc565b5b828202905092915050565b600061180282611869565b915061180d83611869565b9250828210156118205761181f6118fc565b5b828203905092915050565b600061183682611849565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061187e82611885565b9050919050565b600061189082611849565b9050919050565b60005b838110156118b557808201518184015260208101905061189a565b838111156118c4576000848401525b50505050565b600060028204905060018216806118e257607f821691505b602082108114156118f6576118f561195a565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f496e73756666696369656e7420616c6c6f77616e636500000000000000000000600082015250565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b7f5472616e736665722066726f6d207a65726f2061646472657373000000000000600082015250565b7f55534454207472616e73666572206661696c6564000000000000000000000000600082015250565b7f5472616e7366657220746f207a65726f20616464726573730000000000000000600082015250565b611a708161182b565b8114611a7b57600080fd5b50565b611a878161183d565b8114611a9257600080fd5b50565b611a9e81611869565b8114611aa957600080fd5b5056fea26469706673582212204be8d417f4fad8fda3b5b7c4525f7f838acbe6e2d5d87d61ae6f7cf54bb0262764736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4556494320546F6B656E00000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x51 SWAP3 SWAP2 SWAP1 PUSH3 0x168 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4556494300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x9F SWAP3 SWAP2 SWAP1 PUSH3 0x168 JUMP JUMPDEST POP PUSH1 0x12 PUSH1 0x3 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0xB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1E50 CODESIZE SUB DUP1 PUSH3 0x1E50 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0xD8 SWAP2 SWAP1 PUSH3 0x246 JUMP JUMPDEST CALLER PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP POP PUSH3 0x35E JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x176 SWAP1 PUSH3 0x2C5 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x19A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x1E6 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x1B5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x1E6 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x1E6 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x1E5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x1C8 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x1F5 SWAP2 SWAP1 PUSH3 0x1F9 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x214 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x1FA JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x229 DUP2 PUSH3 0x32A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x240 DUP2 PUSH3 0x344 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x25A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x26A DUP6 DUP3 DUP7 ADD PUSH3 0x218 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x27D DUP6 DUP3 DUP7 ADD PUSH3 0x22F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x294 DUP3 PUSH3 0x29B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2DE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x2F5 JUMPI PUSH3 0x2F4 PUSH3 0x2FB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x335 DUP2 PUSH3 0x287 JUMP JUMPDEST DUP2 EQ PUSH3 0x341 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x34F DUP2 PUSH3 0x2BB JUMP JUMPDEST DUP2 EQ PUSH3 0x35B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1AE2 DUP1 PUSH3 0x36E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA604F570 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA604F570 EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x311 JUMPI DUP1 PUSH4 0xEF1F4B84 EQ PUSH2 0x341 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0x954724B4 EQ PUSH2 0x28B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2A7 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x27E235E3 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x2F48AB7D EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x55B6ED5C EQ PUSH2 0x20D JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x171 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x35F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x15F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x133F JUMP JUMPDEST PUSH2 0x3ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x15BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x16B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x12F0 JUMP JUMPDEST PUSH2 0x4E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x15BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x128B JUMP JUMPDEST PUSH2 0x6CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C8 SWAP2 SWAP1 PUSH2 0x16B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D9 PUSH2 0x6E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x15D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F7 PUSH2 0x707 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x16B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x227 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x222 SWAP2 SWAP1 PUSH2 0x12B4 JUMP JUMPDEST PUSH2 0x70D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x234 SWAP2 SWAP1 PUSH2 0x16B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x257 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x252 SWAP2 SWAP1 PUSH2 0x128B JUMP JUMPDEST PUSH2 0x732 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x264 SWAP2 SWAP1 PUSH2 0x16B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x275 PUSH2 0x77B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x282 SWAP2 SWAP1 PUSH2 0x151A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A0 SWAP2 SWAP1 PUSH2 0x13A4 JUMP JUMPDEST PUSH2 0x7A1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AF PUSH2 0xAFF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x15F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0x13A4 JUMP JUMPDEST PUSH2 0xB8D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F6 SWAP2 SWAP1 PUSH2 0x133F JUMP JUMPDEST PUSH2 0xE7E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x308 SWAP2 SWAP1 PUSH2 0x15BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x326 SWAP2 SWAP1 PUSH2 0x12B4 JUMP JUMPDEST PUSH2 0xE95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x338 SWAP2 SWAP1 PUSH2 0x16B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x349 PUSH2 0xF1C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x356 SWAP2 SWAP1 PUSH2 0x16B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x36C SWAP1 PUSH2 0x18CA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x398 SWAP1 PUSH2 0x18CA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3E5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3BA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3E5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3C8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x4CD SWAP2 SWAP1 PUSH2 0x16B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x8 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x5A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59D SWAP1 PUSH2 0x1616 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x635 DUP3 PUSH1 0x8 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF22 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x6C0 DUP5 DUP5 DUP5 PUSH2 0xF38 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B8 PUSH1 0x5 SLOAD DUP4 PUSH2 0x11F5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x816 SWAP3 SWAP2 SWAP1 PUSH2 0x1535 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x82E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x842 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x866 SWAP2 SWAP1 PUSH2 0x13CD JUMP JUMPDEST LT ISZERO PUSH2 0x8A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x89E SWAP1 PUSH2 0x1616 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x904 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x155E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x91E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x932 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x956 SWAP2 SWAP1 PUSH2 0x137B JUMP JUMPDEST PUSH2 0x995 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x98C SWAP1 PUSH2 0x1676 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9E7 DUP2 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x120B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xA3F DUP2 PUSH1 0x4 SLOAD PUSH2 0x120B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xAA3 SWAP2 SWAP1 PUSH2 0x16B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE290C002CBAC2415677AE4CC3941E55C4D4C03145539BC16EB9516662C806B51 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xAF3 SWAP3 SWAP2 SWAP1 PUSH2 0x16D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0xB0C SWAP1 PUSH2 0x18CA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB38 SWAP1 PUSH2 0x18CA JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB85 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB5A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB85 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB68 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0xC0F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC06 SWAP1 PUSH2 0x1636 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC61 DUP2 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF22 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xCB9 DUP2 PUSH1 0x4 SLOAD PUSH2 0xF22 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0xCD6 PUSH1 0x5 SLOAD DUP4 PUSH2 0x1221 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD33 SWAP3 SWAP2 SWAP1 PUSH2 0x1595 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD61 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD85 SWAP2 SWAP1 PUSH2 0x137B JUMP JUMPDEST PUSH2 0xDC4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDBB SWAP1 PUSH2 0x1676 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xE22 SWAP2 SWAP1 PUSH2 0x16B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9B9A581D969359BE3D456613E9E95901B643C75B7B9F369F45494E7151DEB03F DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xE72 SWAP3 SWAP2 SWAP1 PUSH2 0x16D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE8B CALLER DUP5 DUP5 PUSH2 0xF38 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xF30 SWAP2 SWAP1 PUSH2 0x17F7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xFA8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF9F SWAP1 PUSH2 0x1656 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1018 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x100F SWAP1 PUSH2 0x1696 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x109F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1096 SWAP1 PUSH2 0x1636 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10B2 DUP3 DUP3 PUSH2 0xF22 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1147 DUP3 PUSH1 0x7 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x120B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x11E7 SWAP2 SWAP1 PUSH2 0x16B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1203 SWAP2 SWAP1 PUSH2 0x179D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1219 SWAP2 SWAP1 PUSH2 0x1716 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x122F SWAP2 SWAP1 PUSH2 0x176C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1246 DUP2 PUSH2 0x1A67 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x125B DUP2 PUSH2 0x1A7E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1270 DUP2 PUSH2 0x1A95 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1285 DUP2 PUSH2 0x1A95 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x129D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x12AB DUP5 DUP3 DUP6 ADD PUSH2 0x1237 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x12D5 DUP6 DUP3 DUP7 ADD PUSH2 0x1237 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x12E6 DUP6 DUP3 DUP7 ADD PUSH2 0x1237 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1305 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1313 DUP7 DUP3 DUP8 ADD PUSH2 0x1237 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1324 DUP7 DUP3 DUP8 ADD PUSH2 0x1237 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1335 DUP7 DUP3 DUP8 ADD PUSH2 0x1261 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1352 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1360 DUP6 DUP3 DUP7 ADD PUSH2 0x1237 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1371 DUP6 DUP3 DUP7 ADD PUSH2 0x1261 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x138D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x139B DUP5 DUP3 DUP6 ADD PUSH2 0x124C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x13C4 DUP5 DUP3 DUP6 ADD PUSH2 0x1261 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x13ED DUP5 DUP3 DUP6 ADD PUSH2 0x1276 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13FF DUP2 PUSH2 0x182B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x140E DUP2 PUSH2 0x183D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x141D DUP2 PUSH2 0x1873 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x142E DUP3 PUSH2 0x16FA JUMP JUMPDEST PUSH2 0x1438 DUP2 DUP6 PUSH2 0x1705 JUMP JUMPDEST SWAP4 POP PUSH2 0x1448 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1897 JUMP JUMPDEST PUSH2 0x1451 DUP2 PUSH2 0x1989 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1469 PUSH1 0x16 DUP4 PUSH2 0x1705 JUMP JUMPDEST SWAP2 POP PUSH2 0x1474 DUP3 PUSH2 0x199A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x148C PUSH1 0x14 DUP4 PUSH2 0x1705 JUMP JUMPDEST SWAP2 POP PUSH2 0x1497 DUP3 PUSH2 0x19C3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14AF PUSH1 0x1A DUP4 PUSH2 0x1705 JUMP JUMPDEST SWAP2 POP PUSH2 0x14BA DUP3 PUSH2 0x19EC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14D2 PUSH1 0x14 DUP4 PUSH2 0x1705 JUMP JUMPDEST SWAP2 POP PUSH2 0x14DD DUP3 PUSH2 0x1A15 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14F5 PUSH1 0x18 DUP4 PUSH2 0x1705 JUMP JUMPDEST SWAP2 POP PUSH2 0x1500 DUP3 PUSH2 0x1A3E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1514 DUP2 PUSH2 0x1869 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x152F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x154A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x13F6 JUMP JUMPDEST PUSH2 0x1557 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x13F6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1573 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x13F6 JUMP JUMPDEST PUSH2 0x1580 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x13F6 JUMP JUMPDEST PUSH2 0x158D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x150B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x15AA PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x13F6 JUMP JUMPDEST PUSH2 0x15B7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x150B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15D3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1405 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15EE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1414 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x160E DUP2 DUP5 PUSH2 0x1423 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x162F DUP2 PUSH2 0x145C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x164F DUP2 PUSH2 0x147F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x166F DUP2 PUSH2 0x14A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x168F DUP2 PUSH2 0x14C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16AF DUP2 PUSH2 0x14E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16CB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x150B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x16E6 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x150B JUMP JUMPDEST PUSH2 0x16F3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x150B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1721 DUP3 PUSH2 0x1869 JUMP JUMPDEST SWAP2 POP PUSH2 0x172C DUP4 PUSH2 0x1869 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1761 JUMPI PUSH2 0x1760 PUSH2 0x18FC JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1777 DUP3 PUSH2 0x1869 JUMP JUMPDEST SWAP2 POP PUSH2 0x1782 DUP4 PUSH2 0x1869 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1792 JUMPI PUSH2 0x1791 PUSH2 0x192B JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17A8 DUP3 PUSH2 0x1869 JUMP JUMPDEST SWAP2 POP PUSH2 0x17B3 DUP4 PUSH2 0x1869 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x17EC JUMPI PUSH2 0x17EB PUSH2 0x18FC JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1802 DUP3 PUSH2 0x1869 JUMP JUMPDEST SWAP2 POP PUSH2 0x180D DUP4 PUSH2 0x1869 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1820 JUMPI PUSH2 0x181F PUSH2 0x18FC JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1836 DUP3 PUSH2 0x1849 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x187E DUP3 PUSH2 0x1885 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1890 DUP3 PUSH2 0x1849 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x18B5 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x189A JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x18C4 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x18E2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x18F6 JUMPI PUSH2 0x18F5 PUSH2 0x195A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420616C6C6F77616E636500000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5472616E736665722066726F6D207A65726F2061646472657373000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x55534454207472616E73666572206661696C6564000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5472616E7366657220746F207A65726F20616464726573730000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x1A70 DUP2 PUSH2 0x182B JUMP JUMPDEST DUP2 EQ PUSH2 0x1A7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1A87 DUP2 PUSH2 0x183D JUMP JUMPDEST DUP2 EQ PUSH2 0x1A92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1A9E DUP2 PUSH2 0x1869 JUMP JUMPDEST DUP2 EQ PUSH2 0x1AA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B 0xE8 0xD4 OR DELEGATECALL STATICCALL 0xD8 REVERT LOG3 0xB5 0xB7 0xC4 MSTORE 0x5F PUSH32 0x838ACBE6E2D5D87D61AE6F7CF54BB0262764736F6C6343000804003300000000 ",
							"sourceMap": "240:3610:5:-:0;;;375:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;414:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;475:2;449:28;;1042:158;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1114:10;1106:5;;:18;;;;;;;;;;;;;;;;;;1148:12;1134:4;;:27;;;;;;;;;;;;;;;;;;1183:10;1171:9;:22;;;;1042:158;;240:3610;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:143:6:-;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:143::-;213:5;244:6;238:13;229:22;;260:33;287:5;260:33;:::i;:::-;219:80;;;;:::o;305:440::-;384:6;392;441:2;429:9;420:7;416:23;412:32;409:2;;;457:1;454;447:12;409:2;500:1;525:64;581:7;572:6;561:9;557:22;525:64;:::i;:::-;515:74;;471:128;638:2;664:64;720:7;711:6;700:9;696:22;664:64;:::i;:::-;654:74;;609:129;399:346;;;;;:::o;751:96::-;788:7;817:24;835:5;817:24;:::i;:::-;806:35;;796:51;;;:::o;853:126::-;890:7;930:42;923:5;919:54;908:65;;898:81;;;:::o;985:77::-;1022:7;1051:5;1040:16;;1030:32;;;:::o;1068:320::-;1112:6;1149:1;1143:4;1139:12;1129:22;;1196:1;1190:4;1186:12;1217:18;1207:2;;1273:4;1265:6;1261:17;1251:27;;1207:2;1335;1327:6;1324:14;1304:18;1301:38;1298:2;;;1354:18;;:::i;:::-;1298:2;1119:269;;;;:::o;1394:180::-;1442:77;1439:1;1432:88;1539:4;1536:1;1529:15;1563:4;1560:1;1553:15;1580:122;1653:24;1671:5;1653:24;:::i;:::-;1646:5;1643:35;1633:2;;1692:1;1689;1682:12;1633:2;1623:79;:::o;1708:122::-;1781:24;1799:5;1781:24;:::i;:::-;1774:5;1771:35;1761:2;;1820:1;1817;1810:12;1761:2;1751:79;:::o;240:3610:5:-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:15279:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:6",
														"type": ""
													}
												],
												"src": "7:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "212:77:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "222:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "237:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "231:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "222:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "277:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "253:23:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "253:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "253:30:6"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "190:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "198:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "206:5:6",
														"type": ""
													}
												],
												"src": "152:137:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "347:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "357:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "379:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "366:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "366:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "357:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "422:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "395:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "395:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "395:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "325:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "333:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "341:5:6",
														"type": ""
													}
												],
												"src": "295:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "503:80:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "513:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "528:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "522:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "522:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "513:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "571:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "544:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "544:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "481:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "489:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "497:5:6",
														"type": ""
													}
												],
												"src": "440:143:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "655:196:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "701:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "710:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "713:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "703:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "703:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "703:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "676:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "685:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "672:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "672:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "697:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "668:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "668:32:6"
															},
															"nodeType": "YulIf",
															"src": "665:2:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "727:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "742:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "756:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "746:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "771:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "806:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "817:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "802:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "802:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "826:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "781:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "781:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "771:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "625:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "636:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "648:6:6",
														"type": ""
													}
												],
												"src": "589:262:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "940:324:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "986:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "995:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "998:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "988:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "988:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "988:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "961:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "970:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "957:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "957:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "982:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "953:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "953:32:6"
															},
															"nodeType": "YulIf",
															"src": "950:2:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "1012:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1027:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1041:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1031:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1056:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1091:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1102:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1087:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1087:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1111:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1066:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1066:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1056:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1139:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1154:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1168:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1158:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1184:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1219:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1230:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1215:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1215:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1239:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1194:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1194:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1184:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "902:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "913:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "925:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "933:6:6",
														"type": ""
													}
												],
												"src": "857:407:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1370:452:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1416:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1425:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1428:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1418:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1418:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1418:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1391:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1400:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1387:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1387:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1412:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1383:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1383:32:6"
															},
															"nodeType": "YulIf",
															"src": "1380:2:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "1442:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1457:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1471:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1461:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1486:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1521:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1532:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1517:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1517:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1541:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1496:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1496:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1486:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1569:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1584:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1598:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1588:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1614:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1649:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1660:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1645:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1645:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1669:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1624:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1624:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1614:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1697:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1712:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1726:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1716:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1742:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1777:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1788:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1773:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1773:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1797:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1752:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1752:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1742:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1324:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1335:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1347:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1355:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1363:6:6",
														"type": ""
													}
												],
												"src": "1270:552:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1911:324:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1957:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1966:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1969:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1959:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1959:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1959:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1932:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1941:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1928:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1928:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1953:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1924:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1924:32:6"
															},
															"nodeType": "YulIf",
															"src": "1921:2:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "1983:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1998:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2012:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2002:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2027:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2062:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2073:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2058:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2058:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2082:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2037:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2037:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2027:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2110:118:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2125:16:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2139:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2129:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2155:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2190:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2201:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2186:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2186:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2210:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2165:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2165:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2155:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1873:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1884:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1896:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1904:6:6",
														"type": ""
													}
												],
												"src": "1828:407:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2315:204:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2361:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2370:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2373:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2363:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2363:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2363:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2336:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2345:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2332:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2332:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2357:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2328:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2328:32:6"
															},
															"nodeType": "YulIf",
															"src": "2325:2:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "2387:125:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2402:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2416:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2406:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2431:71:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2474:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2485:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2470:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2470:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2494:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2441:28:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2441:61:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2431:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2285:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2296:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2308:6:6",
														"type": ""
													}
												],
												"src": "2241:278:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2591:196:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2637:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2646:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2649:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2639:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2639:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2639:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2612:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2621:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2608:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2608:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2633:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2604:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2604:32:6"
															},
															"nodeType": "YulIf",
															"src": "2601:2:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "2663:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2678:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2692:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2682:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2707:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2742:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2753:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2738:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2738:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2762:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2717:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2717:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2707:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2561:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2572:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2584:6:6",
														"type": ""
													}
												],
												"src": "2525:262:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2870:207:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2916:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2925:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2928:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2918:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2918:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2918:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2891:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2900:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2887:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2887:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2912:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2883:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2883:32:6"
															},
															"nodeType": "YulIf",
															"src": "2880:2:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "2942:128:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2957:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2971:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2961:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2986:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3032:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3043:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3028:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3028:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3052:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2996:31:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2996:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2986:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2840:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2851:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2863:6:6",
														"type": ""
													}
												],
												"src": "2793:284:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3148:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3165:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3188:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3170:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3170:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3158:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3158:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3158:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3136:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3143:3:6",
														"type": ""
													}
												],
												"src": "3083:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3266:50:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3283:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3303:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3288:14:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3288:21:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3276:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3276:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3276:34:6"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3254:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3261:3:6",
														"type": ""
													}
												],
												"src": "3207:109:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3400:79:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3417:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3466:5:6"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$77_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3422:43:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3422:50:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3410:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3410:63:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3410:63:6"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3388:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3395:3:6",
														"type": ""
													}
												],
												"src": "3322:157:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3577:272:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3587:53:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3634:5:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3601:32:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3601:39:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3591:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3649:78:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3715:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3720:6:6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3656:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3656:71:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3649:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3762:5:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3769:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3758:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3758:16:6"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3776:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3781:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3736:21:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3736:52:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3736:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3797:46:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3808:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3835:6:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "3813:21:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3813:29:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3804:39:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3797:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3558:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3565:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3573:3:6",
														"type": ""
													}
												],
												"src": "3485:364:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4001:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4011:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4077:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4082:2:6",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4018:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4018:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4011:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4183:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc",
																	"nodeType": "YulIdentifier",
																	"src": "4094:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4094:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4094:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4196:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4207:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4212:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4203:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4203:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4196:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3989:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3997:3:6",
														"type": ""
													}
												],
												"src": "3855:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4373:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4383:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4449:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4454:2:6",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4390:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4390:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4383:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4555:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																	"nodeType": "YulIdentifier",
																	"src": "4466:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4466:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4466:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4568:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4579:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4584:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4575:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4575:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4568:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4361:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4369:3:6",
														"type": ""
													}
												],
												"src": "4227:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4745:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4755:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4821:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4826:2:6",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4762:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4762:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4755:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4927:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9327589bf0ac3c8391456c2ba71427407eee4108207e593161489f5cc3bfd328",
																	"nodeType": "YulIdentifier",
																	"src": "4838:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4838:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4838:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4940:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4951:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4956:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4947:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4947:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4940:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9327589bf0ac3c8391456c2ba71427407eee4108207e593161489f5cc3bfd328_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4733:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4741:3:6",
														"type": ""
													}
												],
												"src": "4599:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5117:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5127:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5193:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5198:2:6",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5134:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5134:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5127:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5299:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4",
																	"nodeType": "YulIdentifier",
																	"src": "5210:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5210:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5210:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5312:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5323:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5328:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5319:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5319:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5312:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5105:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5113:3:6",
														"type": ""
													}
												],
												"src": "4971:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5489:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5499:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5565:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5570:2:6",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5506:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5506:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5499:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5671:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e2dfeab02b222f051bcdc198fffb9c7808c9161f9ffd1d262daa2f4a220cf47b",
																	"nodeType": "YulIdentifier",
																	"src": "5582:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5582:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5582:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5684:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5695:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5700:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5691:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5691:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5684:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e2dfeab02b222f051bcdc198fffb9c7808c9161f9ffd1d262daa2f4a220cf47b_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5477:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5485:3:6",
														"type": ""
													}
												],
												"src": "5343:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5780:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5797:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5820:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5802:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5802:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5790:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5790:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5790:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5768:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5775:3:6",
														"type": ""
													}
												],
												"src": "5715:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5937:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5947:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5959:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5970:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5955:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5955:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5947:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6027:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6040:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6051:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6036:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6036:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5983:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5983:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5983:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5909:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5921:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5932:4:6",
														"type": ""
													}
												],
												"src": "5839:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6193:206:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6203:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6215:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6226:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6211:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6211:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6203:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6283:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6296:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6307:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6292:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6292:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6239:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6239:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6239:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6364:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6377:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6388:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6373:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6373:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6320:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6320:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6320:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6157:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6169:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6177:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6188:4:6",
														"type": ""
													}
												],
												"src": "6067:332:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6559:288:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6569:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6581:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6592:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6577:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6577:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6569:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6649:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6662:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6673:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6658:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6658:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6605:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6605:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6605:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6730:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6743:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6754:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6739:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6739:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6686:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6686:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6686:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6812:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6825:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6836:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6821:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6821:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6768:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6768:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6768:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6515:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6527:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6535:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6543:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6554:4:6",
														"type": ""
													}
												],
												"src": "6405:442:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6979:206:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6989:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7001:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7012:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6997:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6997:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6989:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7069:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7082:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7093:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7078:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7078:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7025:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7025:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7025:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7150:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7163:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7174:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7159:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7159:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7106:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7106:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7106:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6943:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6955:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6963:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6974:4:6",
														"type": ""
													}
												],
												"src": "6853:332:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7283:118:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7293:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7305:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7316:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7301:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7301:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7293:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7367:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7380:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7391:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7376:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7376:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7329:37:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7329:65:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7329:65:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7255:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7267:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7278:4:6",
														"type": ""
													}
												],
												"src": "7191:210:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7518:137:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7528:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7540:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7551:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7536:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7536:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7528:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7621:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7634:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7645:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7630:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7630:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7564:56:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7564:84:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7564:84:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7490:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7502:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7513:4:6",
														"type": ""
													}
												],
												"src": "7407:248:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7779:195:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7789:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7801:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7812:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7797:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7797:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7789:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7836:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7847:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7832:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7832:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7855:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7861:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7851:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7851:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7825:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7825:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7825:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7881:86:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7953:6:6"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7962:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7889:63:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7889:78:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7881:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7751:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7763:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7774:4:6",
														"type": ""
													}
												],
												"src": "7661:313:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8151:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8161:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8173:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8184:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8169:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8169:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8161:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8208:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8219:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8204:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8204:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8227:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8233:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8223:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8223:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8197:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8197:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8197:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8253:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8387:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8261:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8261:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8253:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8131:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8146:4:6",
														"type": ""
													}
												],
												"src": "7980:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8576:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8586:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8598:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8609:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8594:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8594:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8586:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8633:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8644:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8629:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8629:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8652:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8658:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8648:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8648:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8622:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8622:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8622:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8678:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8812:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8686:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8686:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8678:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8556:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8571:4:6",
														"type": ""
													}
												],
												"src": "8405:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9001:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9011:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9023:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9034:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9019:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9019:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9011:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9058:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9069:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9054:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9054:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9077:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9083:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9073:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9073:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9047:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9047:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9047:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9103:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9237:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9327589bf0ac3c8391456c2ba71427407eee4108207e593161489f5cc3bfd328_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9111:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9111:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9103:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9327589bf0ac3c8391456c2ba71427407eee4108207e593161489f5cc3bfd328__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8981:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8996:4:6",
														"type": ""
													}
												],
												"src": "8830:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9426:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9436:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9448:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9459:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9444:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9444:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9436:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9483:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9494:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9479:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9479:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9502:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9508:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9498:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9498:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9472:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9472:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9472:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9528:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9662:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9536:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9536:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9528:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9406:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9421:4:6",
														"type": ""
													}
												],
												"src": "9255:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9851:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9861:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9873:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9884:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9869:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9869:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9861:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9908:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9919:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9904:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9904:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9927:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9933:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9923:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9923:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9897:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9897:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9897:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9953:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10087:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e2dfeab02b222f051bcdc198fffb9c7808c9161f9ffd1d262daa2f4a220cf47b_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9961:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "9961:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9953:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e2dfeab02b222f051bcdc198fffb9c7808c9161f9ffd1d262daa2f4a220cf47b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9831:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9846:4:6",
														"type": ""
													}
												],
												"src": "9680:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10203:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10213:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10225:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10236:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10221:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10221:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10213:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10293:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10306:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10317:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10302:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10302:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10249:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10249:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10249:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10175:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10187:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10198:4:6",
														"type": ""
													}
												],
												"src": "10105:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10459:206:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10469:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10481:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10492:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10477:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10477:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10469:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10549:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10562:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10573:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10558:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10558:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10505:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10505:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10505:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10630:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10643:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10654:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10639:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10639:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10586:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10586:72:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10586:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10423:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10435:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10443:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10454:4:6",
														"type": ""
													}
												],
												"src": "10333:332:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10730:40:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10741:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10757:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10751:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10751:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "10741:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10713:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10723:6:6",
														"type": ""
													}
												],
												"src": "10671:99:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10872:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10889:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10894:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10882:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10882:19:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10882:19:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10910:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10929:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10934:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10925:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "10925:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "10910:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10844:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10849:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "10860:11:6",
														"type": ""
													}
												],
												"src": "10776:169:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10995:261:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11005:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11028:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11010:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11010:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11005:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11039:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11062:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11044:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11044:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11039:1:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11202:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11204:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11204:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11204:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11123:1:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11130:66:6",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "11198:1:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11126:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11126:74:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11120:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11120:81:6"
															},
															"nodeType": "YulIf",
															"src": "11117:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11234:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11245:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11248:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11241:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11241:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "11234:3:6"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10982:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10985:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "10991:3:6",
														"type": ""
													}
												],
												"src": "10951:305:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11304:143:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11314:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11337:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11319:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11319:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11314:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11348:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11371:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11353:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11353:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11348:1:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11395:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "11397:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11397:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11397:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11392:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11385:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11385:9:6"
															},
															"nodeType": "YulIf",
															"src": "11382:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11427:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11436:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11439:1:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "11432:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11432:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "11427:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11293:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11296:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "11302:1:6",
														"type": ""
													}
												],
												"src": "11262:185:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11501:300:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11511:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11534:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11516:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11516:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11511:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11545:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11568:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11550:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11550:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11545:1:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11743:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11745:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11745:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11745:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "11655:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "11648:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11648:9:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "11641:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11641:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "11663:1:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11670:66:6",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "11738:1:6"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "11666:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11666:74:6"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "11660:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11660:81:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11637:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11637:105:6"
															},
															"nodeType": "YulIf",
															"src": "11634:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11775:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11790:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11793:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "11786:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11786:9:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "11775:7:6"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11484:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11487:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "11493:7:6",
														"type": ""
													}
												],
												"src": "11453:348:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11852:146:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11862:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11885:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11867:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11867:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11862:1:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11896:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11919:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11901:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11901:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11896:1:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11943:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11945:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11945:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11945:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11937:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11940:1:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "11934:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11934:8:6"
															},
															"nodeType": "YulIf",
															"src": "11931:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11975:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11987:1:6"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11990:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "11983:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "11983:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "11975:4:6"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11838:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11841:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "11847:4:6",
														"type": ""
													}
												],
												"src": "11807:191:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12049:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12059:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12088:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "12070:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12070:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "12059:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12031:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "12041:7:6",
														"type": ""
													}
												],
												"src": "12004:96:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12148:48:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12158:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12183:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "12176:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12176:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12169:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12169:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "12158:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12130:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "12140:7:6",
														"type": ""
													}
												],
												"src": "12106:90:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12247:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12257:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12272:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12279:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12268:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12268:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "12257:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12229:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "12239:7:6",
														"type": ""
													}
												],
												"src": "12202:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12379:32:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12389:16:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "12400:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "12389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "12371:7:6",
														"type": ""
													}
												],
												"src": "12334:77:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12490:79:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12500:63:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12557:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_contract$_IERC20_$77_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "12513:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12513:50:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "12500:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$77_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12470:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "12480:9:6",
														"type": ""
													}
												],
												"src": "12417:152:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12648:53:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12658:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12689:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "12671:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12671:24:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "12658:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$77_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12628:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "12638:9:6",
														"type": ""
													}
												],
												"src": "12575:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12756:258:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12766:10:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "12775:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "12770:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12835:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "12860:3:6"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "12865:1:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "12856:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12856:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "12879:3:6"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "12884:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "12875:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "12875:11:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "12869:5:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12869:18:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12849:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12849:39:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12849:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "12796:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12799:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "12793:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12793:13:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "12807:19:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "12809:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "12818:1:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12821:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "12814:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12814:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "12809:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "12789:3:6",
																"statements": []
															},
															"src": "12785:113:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12932:76:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "12982:3:6"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "12987:6:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "12978:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12978:16:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12996:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12971:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12971:27:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12971:27:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "12913:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12916:6:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12910:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "12910:13:6"
															},
															"nodeType": "YulIf",
															"src": "12907:2:6"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "12738:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "12743:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12748:6:6",
														"type": ""
													}
												],
												"src": "12707:307:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13071:269:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13081:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "13095:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13101:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "13091:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13091:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "13081:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13112:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "13142:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13148:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "13138:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13138:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "13116:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13189:51:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "13203:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "13217:6:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13225:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "13213:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13213:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "13203:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "13169:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13162:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13162:26:6"
															},
															"nodeType": "YulIf",
															"src": "13159:2:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13292:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "13306:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13306:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13306:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "13256:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "13279:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13287:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "13276:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13276:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "13253:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13253:38:6"
															},
															"nodeType": "YulIf",
															"src": "13250:2:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "13055:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13064:6:6",
														"type": ""
													}
												],
												"src": "13020:320:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13374:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13391:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13394:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13384:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13384:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13384:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13488:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13491:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13481:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13481:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13481:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13512:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13515:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13505:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13505:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13505:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "13346:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13560:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13577:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13580:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13570:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13570:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13570:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13674:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13677:4:6",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13667:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13667:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13667:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13698:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13701:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13691:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13691:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13691:15:6"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "13532:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13746:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13763:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13766:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13756:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13756:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13756:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13860:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13863:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13853:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13853:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13853:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13884:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13887:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13877:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13877:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13877:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "13718:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13952:54:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13962:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13980:5:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13987:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13976:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13976:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13996:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "13992:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13992:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "13972:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "13972:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "13962:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13935:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "13945:6:6",
														"type": ""
													}
												],
												"src": "13904:102:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14118:66:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14140:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14148:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14136:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14136:14:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14152:24:6",
																		"type": "",
																		"value": "Insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14129:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14129:48:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14129:48:6"
														}
													]
												},
												"name": "store_literal_in_memory_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14110:6:6",
														"type": ""
													}
												],
												"src": "14012:172:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14296:64:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14318:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14326:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14314:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14314:14:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14330:22:6",
																		"type": "",
																		"value": "Insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14307:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14307:46:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14307:46:6"
														}
													]
												},
												"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14288:6:6",
														"type": ""
													}
												],
												"src": "14190:170:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14472:70:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14494:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14502:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14490:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14490:14:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14506:28:6",
																		"type": "",
																		"value": "Transfer from zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14483:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14483:52:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14483:52:6"
														}
													]
												},
												"name": "store_literal_in_memory_9327589bf0ac3c8391456c2ba71427407eee4108207e593161489f5cc3bfd328",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14464:6:6",
														"type": ""
													}
												],
												"src": "14366:176:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14654:64:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14676:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14684:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14672:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14672:14:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14688:22:6",
																		"type": "",
																		"value": "USDT transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14665:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14665:46:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14665:46:6"
														}
													]
												},
												"name": "store_literal_in_memory_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14646:6:6",
														"type": ""
													}
												],
												"src": "14548:170:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14830:68:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14852:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14860:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14848:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14848:14:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14864:26:6",
																		"type": "",
																		"value": "Transfer to zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14841:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14841:50:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14841:50:6"
														}
													]
												},
												"name": "store_literal_in_memory_e2dfeab02b222f051bcdc198fffb9c7808c9161f9ffd1d262daa2f4a220cf47b",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14822:6:6",
														"type": ""
													}
												],
												"src": "14724:174:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14947:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15004:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15013:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15016:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "15006:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15006:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15006:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14970:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "14995:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "14977:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14977:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "14967:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14967:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14960:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "14960:43:6"
															},
															"nodeType": "YulIf",
															"src": "14957:2:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14940:5:6",
														"type": ""
													}
												],
												"src": "14904:122:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15072:76:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15126:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15135:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15138:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "15128:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15128:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15128:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15095:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "15117:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "15102:14:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15102:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "15092:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15092:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15085:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "15085:40:6"
															},
															"nodeType": "YulIf",
															"src": "15082:2:6"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15065:5:6",
														"type": ""
													}
												],
												"src": "15032:116:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15197:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15254:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15263:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15266:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "15256:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15256:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15256:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15220:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "15245:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "15227:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15227:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "15217:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15217:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15210:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "15210:43:6"
															},
															"nodeType": "YulIf",
															"src": "15207:2:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15190:5:6",
														"type": ""
													}
												],
												"src": "15154:122:6"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$77_to_t_address(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9327589bf0ac3c8391456c2ba71427407eee4108207e593161489f5cc3bfd328_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_9327589bf0ac3c8391456c2ba71427407eee4108207e593161489f5cc3bfd328(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_e2dfeab02b222f051bcdc198fffb9c7808c9161f9ffd1d262daa2f4a220cf47b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_e2dfeab02b222f051bcdc198fffb9c7808c9161f9ffd1d262daa2f4a220cf47b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9327589bf0ac3c8391456c2ba71427407eee4108207e593161489f5cc3bfd328__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9327589bf0ac3c8391456c2ba71427407eee4108207e593161489f5cc3bfd328_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e2dfeab02b222f051bcdc198fffb9c7808c9161f9ffd1d262daa2f4a220cf47b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e2dfeab02b222f051bcdc198fffb9c7808c9161f9ffd1d262daa2f4a220cf47b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IERC20_$77_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IERC20_$77_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$77_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient allowance\")\n\n    }\n\n    function store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance\")\n\n    }\n\n    function store_literal_in_memory_9327589bf0ac3c8391456c2ba71427407eee4108207e593161489f5cc3bfd328(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer from zero address\")\n\n    }\n\n    function store_literal_in_memory_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4(memPtr) {\n\n        mstore(add(memPtr, 0), \"USDT transfer failed\")\n\n    }\n\n    function store_literal_in_memory_e2dfeab02b222f051bcdc198fffb9c7808c9161f9ffd1d262daa2f4a220cf47b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer to zero address\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA604F570 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA604F570 EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x311 JUMPI DUP1 PUSH4 0xEF1F4B84 EQ PUSH2 0x341 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0x954724B4 EQ PUSH2 0x28B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2A7 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x27E235E3 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x2F48AB7D EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x55B6ED5C EQ PUSH2 0x20D JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x171 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x35F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x15F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x133F JUMP JUMPDEST PUSH2 0x3ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x15BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH2 0x4DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x16B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x12F0 JUMP JUMPDEST PUSH2 0x4E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x15BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x128B JUMP JUMPDEST PUSH2 0x6CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C8 SWAP2 SWAP1 PUSH2 0x16B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D9 PUSH2 0x6E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x15D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F7 PUSH2 0x707 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x16B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x227 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x222 SWAP2 SWAP1 PUSH2 0x12B4 JUMP JUMPDEST PUSH2 0x70D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x234 SWAP2 SWAP1 PUSH2 0x16B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x257 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x252 SWAP2 SWAP1 PUSH2 0x128B JUMP JUMPDEST PUSH2 0x732 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x264 SWAP2 SWAP1 PUSH2 0x16B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x275 PUSH2 0x77B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x282 SWAP2 SWAP1 PUSH2 0x151A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A0 SWAP2 SWAP1 PUSH2 0x13A4 JUMP JUMPDEST PUSH2 0x7A1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AF PUSH2 0xAFF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x15F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0x13A4 JUMP JUMPDEST PUSH2 0xB8D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F6 SWAP2 SWAP1 PUSH2 0x133F JUMP JUMPDEST PUSH2 0xE7E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x308 SWAP2 SWAP1 PUSH2 0x15BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x326 SWAP2 SWAP1 PUSH2 0x12B4 JUMP JUMPDEST PUSH2 0xE95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x338 SWAP2 SWAP1 PUSH2 0x16B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x349 PUSH2 0xF1C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x356 SWAP2 SWAP1 PUSH2 0x16B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x36C SWAP1 PUSH2 0x18CA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x398 SWAP1 PUSH2 0x18CA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3E5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3BA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3E5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3C8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x4CD SWAP2 SWAP1 PUSH2 0x16B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x8 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0x5A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x59D SWAP1 PUSH2 0x1616 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x635 DUP3 PUSH1 0x8 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF22 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x6C0 DUP5 DUP5 DUP5 PUSH2 0xF38 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B8 PUSH1 0x5 SLOAD DUP4 PUSH2 0x11F5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x816 SWAP3 SWAP2 SWAP1 PUSH2 0x1535 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x82E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x842 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x866 SWAP2 SWAP1 PUSH2 0x13CD JUMP JUMPDEST LT ISZERO PUSH2 0x8A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x89E SWAP1 PUSH2 0x1616 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x904 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x155E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x91E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x932 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x956 SWAP2 SWAP1 PUSH2 0x137B JUMP JUMPDEST PUSH2 0x995 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x98C SWAP1 PUSH2 0x1676 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9E7 DUP2 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x120B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xA3F DUP2 PUSH1 0x4 SLOAD PUSH2 0x120B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xAA3 SWAP2 SWAP1 PUSH2 0x16B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE290C002CBAC2415677AE4CC3941E55C4D4C03145539BC16EB9516662C806B51 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xAF3 SWAP3 SWAP2 SWAP1 PUSH2 0x16D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0xB0C SWAP1 PUSH2 0x18CA JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB38 SWAP1 PUSH2 0x18CA JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB85 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB5A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB85 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB68 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO PUSH2 0xC0F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC06 SWAP1 PUSH2 0x1636 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC61 DUP2 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF22 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xCB9 DUP2 PUSH1 0x4 SLOAD PUSH2 0xF22 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0xCD6 PUSH1 0x5 SLOAD DUP4 PUSH2 0x1221 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD33 SWAP3 SWAP2 SWAP1 PUSH2 0x1595 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD61 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD85 SWAP2 SWAP1 PUSH2 0x137B JUMP JUMPDEST PUSH2 0xDC4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDBB SWAP1 PUSH2 0x1676 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xE22 SWAP2 SWAP1 PUSH2 0x16B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9B9A581D969359BE3D456613E9E95901B643C75B7B9F369F45494E7151DEB03F DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xE72 SWAP3 SWAP2 SWAP1 PUSH2 0x16D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE8B CALLER DUP5 DUP5 PUSH2 0xF38 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xF30 SWAP2 SWAP1 PUSH2 0x17F7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xFA8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF9F SWAP1 PUSH2 0x1656 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1018 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x100F SWAP1 PUSH2 0x1696 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x109F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1096 SWAP1 PUSH2 0x1636 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10B2 DUP3 DUP3 PUSH2 0xF22 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1147 DUP3 PUSH1 0x7 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x120B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x11E7 SWAP2 SWAP1 PUSH2 0x16B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1203 SWAP2 SWAP1 PUSH2 0x179D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1219 SWAP2 SWAP1 PUSH2 0x1716 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x122F SWAP2 SWAP1 PUSH2 0x176C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1246 DUP2 PUSH2 0x1A67 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x125B DUP2 PUSH2 0x1A7E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1270 DUP2 PUSH2 0x1A95 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1285 DUP2 PUSH2 0x1A95 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x129D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x12AB DUP5 DUP3 DUP6 ADD PUSH2 0x1237 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x12D5 DUP6 DUP3 DUP7 ADD PUSH2 0x1237 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x12E6 DUP6 DUP3 DUP7 ADD PUSH2 0x1237 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1305 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1313 DUP7 DUP3 DUP8 ADD PUSH2 0x1237 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1324 DUP7 DUP3 DUP8 ADD PUSH2 0x1237 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1335 DUP7 DUP3 DUP8 ADD PUSH2 0x1261 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1352 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1360 DUP6 DUP3 DUP7 ADD PUSH2 0x1237 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1371 DUP6 DUP3 DUP7 ADD PUSH2 0x1261 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x138D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x139B DUP5 DUP3 DUP6 ADD PUSH2 0x124C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x13C4 DUP5 DUP3 DUP6 ADD PUSH2 0x1261 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x13ED DUP5 DUP3 DUP6 ADD PUSH2 0x1276 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13FF DUP2 PUSH2 0x182B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x140E DUP2 PUSH2 0x183D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x141D DUP2 PUSH2 0x1873 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x142E DUP3 PUSH2 0x16FA JUMP JUMPDEST PUSH2 0x1438 DUP2 DUP6 PUSH2 0x1705 JUMP JUMPDEST SWAP4 POP PUSH2 0x1448 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1897 JUMP JUMPDEST PUSH2 0x1451 DUP2 PUSH2 0x1989 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1469 PUSH1 0x16 DUP4 PUSH2 0x1705 JUMP JUMPDEST SWAP2 POP PUSH2 0x1474 DUP3 PUSH2 0x199A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x148C PUSH1 0x14 DUP4 PUSH2 0x1705 JUMP JUMPDEST SWAP2 POP PUSH2 0x1497 DUP3 PUSH2 0x19C3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14AF PUSH1 0x1A DUP4 PUSH2 0x1705 JUMP JUMPDEST SWAP2 POP PUSH2 0x14BA DUP3 PUSH2 0x19EC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14D2 PUSH1 0x14 DUP4 PUSH2 0x1705 JUMP JUMPDEST SWAP2 POP PUSH2 0x14DD DUP3 PUSH2 0x1A15 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14F5 PUSH1 0x18 DUP4 PUSH2 0x1705 JUMP JUMPDEST SWAP2 POP PUSH2 0x1500 DUP3 PUSH2 0x1A3E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1514 DUP2 PUSH2 0x1869 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x152F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x154A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x13F6 JUMP JUMPDEST PUSH2 0x1557 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x13F6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1573 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x13F6 JUMP JUMPDEST PUSH2 0x1580 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x13F6 JUMP JUMPDEST PUSH2 0x158D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x150B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x15AA PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x13F6 JUMP JUMPDEST PUSH2 0x15B7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x150B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15D3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1405 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15EE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1414 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x160E DUP2 DUP5 PUSH2 0x1423 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x162F DUP2 PUSH2 0x145C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x164F DUP2 PUSH2 0x147F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x166F DUP2 PUSH2 0x14A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x168F DUP2 PUSH2 0x14C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16AF DUP2 PUSH2 0x14E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16CB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x150B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x16E6 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x150B JUMP JUMPDEST PUSH2 0x16F3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x150B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1721 DUP3 PUSH2 0x1869 JUMP JUMPDEST SWAP2 POP PUSH2 0x172C DUP4 PUSH2 0x1869 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1761 JUMPI PUSH2 0x1760 PUSH2 0x18FC JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1777 DUP3 PUSH2 0x1869 JUMP JUMPDEST SWAP2 POP PUSH2 0x1782 DUP4 PUSH2 0x1869 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1792 JUMPI PUSH2 0x1791 PUSH2 0x192B JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17A8 DUP3 PUSH2 0x1869 JUMP JUMPDEST SWAP2 POP PUSH2 0x17B3 DUP4 PUSH2 0x1869 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x17EC JUMPI PUSH2 0x17EB PUSH2 0x18FC JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1802 DUP3 PUSH2 0x1869 JUMP JUMPDEST SWAP2 POP PUSH2 0x180D DUP4 PUSH2 0x1869 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1820 JUMPI PUSH2 0x181F PUSH2 0x18FC JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1836 DUP3 PUSH2 0x1849 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x187E DUP3 PUSH2 0x1885 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1890 DUP3 PUSH2 0x1849 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x18B5 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x189A JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x18C4 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x18E2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x18F6 JUMPI PUSH2 0x18F5 PUSH2 0x195A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420616C6C6F77616E636500000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5472616E736665722066726F6D207A65726F2061646472657373000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x55534454207472616E73666572206661696C6564000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5472616E7366657220746F207A65726F20616464726573730000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x1A70 DUP2 PUSH2 0x182B JUMP JUMPDEST DUP2 EQ PUSH2 0x1A7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1A87 DUP2 PUSH2 0x183D JUMP JUMPDEST DUP2 EQ PUSH2 0x1A92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1A9E DUP2 PUSH2 0x1869 JUMP JUMPDEST DUP2 EQ PUSH2 0x1AA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B 0xE8 0xD4 OR DELEGATECALL STATICCALL 0xD8 REVERT LOG3 0xB5 0xB7 0xC4 MSTORE 0x5F PUSH32 0x838ACBE6E2D5D87D61AE6F7CF54BB0262764736F6C6343000804003300000000 ",
							"sourceMap": "240:3610:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;375:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2292:212;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;483:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2679:349;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;594:43;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;329:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;449:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;643:65;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3583:117;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;567:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1206:573;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;414:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1785:501;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2510:163;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3706:141;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;515:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;375:33;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2292:212::-;2368:4;2418:6;2384:10;:22;2395:10;2384:22;;;;;;;;;;;;;;;:31;2407:7;2384:31;;;;;;;;;;;;;;;:40;;;;2460:7;2439:37;;2448:10;2439:37;;;2469:6;2439:37;;;;;;:::i;:::-;;;;;;;;2493:4;2486:11;;2292:212;;;;:::o;483:26::-;;;;:::o;2679:349::-;2778:4;2836:6;2802:10;:18;2813:6;2802:18;;;;;;;;;;;;;;;:30;2821:10;2802:30;;;;;;;;;;;;;;;;:40;;2794:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;2912:42;2947:6;2912:10;:18;2923:6;2912:18;;;;;;;;;;;;;;;:30;2931:10;2912:30;;;;;;;;;;;;;;;;:34;;:42;;;;:::i;:::-;2879:10;:18;2890:6;2879:18;;;;;;;;;;;;;;;:30;2898:10;2879:30;;;;;;;;;;;;;;;:75;;;;2964:36;2974:6;2982:9;2993:6;2964:9;:36::i;:::-;3017:4;3010:11;;2679:349;;;;;:::o;594:43::-;;;;;;;;;;;;;;;;;:::o;329:18::-;;;;;;;;;;;;:::o;449:28::-;;;;:::o;643:65::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3583:117::-;3650:7;3676:8;:17;3685:7;3676:17;;;;;;;;;;;;;;;;3669:24;;3583:117;;;:::o;567:20::-;;;;;;;;;;;;;:::o;1206:573::-;1262:14;1279:25;1294:9;;1279:10;:14;;:25;;;;:::i;:::-;1262:42;;1383:10;1338:4;;;;;;;;;;:14;;;1353:10;1373:4;1338:41;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:55;;1330:90;;;;;;;;;;;;:::i;:::-;;;;;;;;;1438:4;;;;;;;;;;:17;;;1456:10;1476:4;1483:10;1438:56;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1430:89;;;;;;;;;;;;:::i;:::-;;;;;;;;;1552:32;1577:6;1552:8;:20;1561:10;1552:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;1529:8;:20;1538:10;1529:20;;;;;;;;;;;;;;;:55;;;;1624:23;1640:6;1624:11;;:15;;:23;;;;:::i;:::-;1610:11;:37;;;;1699:10;1678:40;;1695:1;1678:40;;;1711:6;1678:40;;;;;;:::i;:::-;;;;;;;;1741:10;1733:39;;;1753:10;1765:6;1733:39;;;;;;;:::i;:::-;;;;;;;;1206:573;;:::o;414:29::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1785:501::-;1874:6;1850:8;:20;1859:10;1850:20;;;;;;;;;;;;;;;;:30;;1842:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1938:32;1963:6;1938:8;:20;1947:10;1938:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;1915:8;:20;1924:10;1915:20;;;;;;;;;;;;;;;:55;;;;1994:23;2010:6;1994:11;;:15;;:23;;;;:::i;:::-;1980:11;:37;;;;2027:18;2048:21;2059:9;;2048:6;:10;;:21;;;;:::i;:::-;2027:42;;2103:4;;;;;;;;;;:13;;;2117:10;2129;2103:37;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2095:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;2209:1;2180:40;;2189:10;2180:40;;;2213:6;2180:40;;;;;;:::i;:::-;;;;;;;;2248:10;2235:44;;;2260:6;2268:10;2235:44;;;;;;;:::i;:::-;;;;;;;;1785:501;;:::o;2510:163::-;2589:4;2605:40;2615:10;2627:9;2638:6;2605:9;:40::i;:::-;2662:4;2655:11;;2510:163;;;;:::o;3706:141::-;3788:7;3814:10;:17;3825:5;3814:17;;;;;;;;;;;;;;;:26;3832:7;3814:26;;;;;;;;;;;;;;;;3807:33;;3706:141;;;;:::o;515:24::-;;;;:::o;3122:96:4:-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;3034:544:5:-;3157:1;3139:20;;:6;:20;;;;3131:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;3229:1;3208:23;;:9;:23;;;;3200:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;3270:21;3294:8;:16;3303:6;3294:16;;;;;;;;;;;;;;;;3270:40;;3345:6;3328:13;:23;;3320:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;3405:25;3423:6;3405:13;:17;;:25;;;;:::i;:::-;3386:8;:16;3395:6;3386:16;;;;;;;;;;;;;;;:44;;;;3463:31;3487:6;3463:8;:19;3472:9;3463:19;;;;;;;;;;;;;;;;:23;;:31;;;;:::i;:::-;3441:8;:19;3450:9;3441:19;;;;;;;;;;;;;;;:53;;;;3552:9;3535:35;;3544:6;3535:35;;;3563:6;3535:35;;;;;;:::i;:::-;;;;;;;;3034:544;;;;:::o;3465:96:4:-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;2755:::-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;3850:::-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;7:139:6:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:137::-;206:5;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;212:77;;;;:::o;295:139::-;341:5;379:6;366:20;357:29;;395:33;422:5;395:33;:::i;:::-;347:87;;;;:::o;440:143::-;497:5;528:6;522:13;513:22;;544:33;571:5;544:33;:::i;:::-;503:80;;;;:::o;589:262::-;648:6;697:2;685:9;676:7;672:23;668:32;665:2;;;713:1;710;703:12;665:2;756:1;781:53;826:7;817:6;806:9;802:22;781:53;:::i;:::-;771:63;;727:117;655:196;;;;:::o;857:407::-;925:6;933;982:2;970:9;961:7;957:23;953:32;950:2;;;998:1;995;988:12;950:2;1041:1;1066:53;1111:7;1102:6;1091:9;1087:22;1066:53;:::i;:::-;1056:63;;1012:117;1168:2;1194:53;1239:7;1230:6;1219:9;1215:22;1194:53;:::i;:::-;1184:63;;1139:118;940:324;;;;;:::o;1270:552::-;1347:6;1355;1363;1412:2;1400:9;1391:7;1387:23;1383:32;1380:2;;;1428:1;1425;1418:12;1380:2;1471:1;1496:53;1541:7;1532:6;1521:9;1517:22;1496:53;:::i;:::-;1486:63;;1442:117;1598:2;1624:53;1669:7;1660:6;1649:9;1645:22;1624:53;:::i;:::-;1614:63;;1569:118;1726:2;1752:53;1797:7;1788:6;1777:9;1773:22;1752:53;:::i;:::-;1742:63;;1697:118;1370:452;;;;;:::o;1828:407::-;1896:6;1904;1953:2;1941:9;1932:7;1928:23;1924:32;1921:2;;;1969:1;1966;1959:12;1921:2;2012:1;2037:53;2082:7;2073:6;2062:9;2058:22;2037:53;:::i;:::-;2027:63;;1983:117;2139:2;2165:53;2210:7;2201:6;2190:9;2186:22;2165:53;:::i;:::-;2155:63;;2110:118;1911:324;;;;;:::o;2241:278::-;2308:6;2357:2;2345:9;2336:7;2332:23;2328:32;2325:2;;;2373:1;2370;2363:12;2325:2;2416:1;2441:61;2494:7;2485:6;2474:9;2470:22;2441:61;:::i;:::-;2431:71;;2387:125;2315:204;;;;:::o;2525:262::-;2584:6;2633:2;2621:9;2612:7;2608:23;2604:32;2601:2;;;2649:1;2646;2639:12;2601:2;2692:1;2717:53;2762:7;2753:6;2742:9;2738:22;2717:53;:::i;:::-;2707:63;;2663:117;2591:196;;;;:::o;2793:284::-;2863:6;2912:2;2900:9;2891:7;2887:23;2883:32;2880:2;;;2928:1;2925;2918:12;2880:2;2971:1;2996:64;3052:7;3043:6;3032:9;3028:22;2996:64;:::i;:::-;2986:74;;2942:128;2870:207;;;;:::o;3083:118::-;3170:24;3188:5;3170:24;:::i;:::-;3165:3;3158:37;3148:53;;:::o;3207:109::-;3288:21;3303:5;3288:21;:::i;:::-;3283:3;3276:34;3266:50;;:::o;3322:157::-;3422:50;3466:5;3422:50;:::i;:::-;3417:3;3410:63;3400:79;;:::o;3485:364::-;3573:3;3601:39;3634:5;3601:39;:::i;:::-;3656:71;3720:6;3715:3;3656:71;:::i;:::-;3649:78;;3736:52;3781:6;3776:3;3769:4;3762:5;3758:16;3736:52;:::i;:::-;3813:29;3835:6;3813:29;:::i;:::-;3808:3;3804:39;3797:46;;3577:272;;;;;:::o;3855:366::-;3997:3;4018:67;4082:2;4077:3;4018:67;:::i;:::-;4011:74;;4094:93;4183:3;4094:93;:::i;:::-;4212:2;4207:3;4203:12;4196:19;;4001:220;;;:::o;4227:366::-;4369:3;4390:67;4454:2;4449:3;4390:67;:::i;:::-;4383:74;;4466:93;4555:3;4466:93;:::i;:::-;4584:2;4579:3;4575:12;4568:19;;4373:220;;;:::o;4599:366::-;4741:3;4762:67;4826:2;4821:3;4762:67;:::i;:::-;4755:74;;4838:93;4927:3;4838:93;:::i;:::-;4956:2;4951:3;4947:12;4940:19;;4745:220;;;:::o;4971:366::-;5113:3;5134:67;5198:2;5193:3;5134:67;:::i;:::-;5127:74;;5210:93;5299:3;5210:93;:::i;:::-;5328:2;5323:3;5319:12;5312:19;;5117:220;;;:::o;5343:366::-;5485:3;5506:67;5570:2;5565:3;5506:67;:::i;:::-;5499:74;;5582:93;5671:3;5582:93;:::i;:::-;5700:2;5695:3;5691:12;5684:19;;5489:220;;;:::o;5715:118::-;5802:24;5820:5;5802:24;:::i;:::-;5797:3;5790:37;5780:53;;:::o;5839:222::-;5932:4;5970:2;5959:9;5955:18;5947:26;;5983:71;6051:1;6040:9;6036:17;6027:6;5983:71;:::i;:::-;5937:124;;;;:::o;6067:332::-;6188:4;6226:2;6215:9;6211:18;6203:26;;6239:71;6307:1;6296:9;6292:17;6283:6;6239:71;:::i;:::-;6320:72;6388:2;6377:9;6373:18;6364:6;6320:72;:::i;:::-;6193:206;;;;;:::o;6405:442::-;6554:4;6592:2;6581:9;6577:18;6569:26;;6605:71;6673:1;6662:9;6658:17;6649:6;6605:71;:::i;:::-;6686:72;6754:2;6743:9;6739:18;6730:6;6686:72;:::i;:::-;6768;6836:2;6825:9;6821:18;6812:6;6768:72;:::i;:::-;6559:288;;;;;;:::o;6853:332::-;6974:4;7012:2;7001:9;6997:18;6989:26;;7025:71;7093:1;7082:9;7078:17;7069:6;7025:71;:::i;:::-;7106:72;7174:2;7163:9;7159:18;7150:6;7106:72;:::i;:::-;6979:206;;;;;:::o;7191:210::-;7278:4;7316:2;7305:9;7301:18;7293:26;;7329:65;7391:1;7380:9;7376:17;7367:6;7329:65;:::i;:::-;7283:118;;;;:::o;7407:248::-;7513:4;7551:2;7540:9;7536:18;7528:26;;7564:84;7645:1;7634:9;7630:17;7621:6;7564:84;:::i;:::-;7518:137;;;;:::o;7661:313::-;7774:4;7812:2;7801:9;7797:18;7789:26;;7861:9;7855:4;7851:20;7847:1;7836:9;7832:17;7825:47;7889:78;7962:4;7953:6;7889:78;:::i;:::-;7881:86;;7779:195;;;;:::o;7980:419::-;8146:4;8184:2;8173:9;8169:18;8161:26;;8233:9;8227:4;8223:20;8219:1;8208:9;8204:17;8197:47;8261:131;8387:4;8261:131;:::i;:::-;8253:139;;8151:248;;;:::o;8405:419::-;8571:4;8609:2;8598:9;8594:18;8586:26;;8658:9;8652:4;8648:20;8644:1;8633:9;8629:17;8622:47;8686:131;8812:4;8686:131;:::i;:::-;8678:139;;8576:248;;;:::o;8830:419::-;8996:4;9034:2;9023:9;9019:18;9011:26;;9083:9;9077:4;9073:20;9069:1;9058:9;9054:17;9047:47;9111:131;9237:4;9111:131;:::i;:::-;9103:139;;9001:248;;;:::o;9255:419::-;9421:4;9459:2;9448:9;9444:18;9436:26;;9508:9;9502:4;9498:20;9494:1;9483:9;9479:17;9472:47;9536:131;9662:4;9536:131;:::i;:::-;9528:139;;9426:248;;;:::o;9680:419::-;9846:4;9884:2;9873:9;9869:18;9861:26;;9933:9;9927:4;9923:20;9919:1;9908:9;9904:17;9897:47;9961:131;10087:4;9961:131;:::i;:::-;9953:139;;9851:248;;;:::o;10105:222::-;10198:4;10236:2;10225:9;10221:18;10213:26;;10249:71;10317:1;10306:9;10302:17;10293:6;10249:71;:::i;:::-;10203:124;;;;:::o;10333:332::-;10454:4;10492:2;10481:9;10477:18;10469:26;;10505:71;10573:1;10562:9;10558:17;10549:6;10505:71;:::i;:::-;10586:72;10654:2;10643:9;10639:18;10630:6;10586:72;:::i;:::-;10459:206;;;;;:::o;10671:99::-;10723:6;10757:5;10751:12;10741:22;;10730:40;;;:::o;10776:169::-;10860:11;10894:6;10889:3;10882:19;10934:4;10929:3;10925:14;10910:29;;10872:73;;;;:::o;10951:305::-;10991:3;11010:20;11028:1;11010:20;:::i;:::-;11005:25;;11044:20;11062:1;11044:20;:::i;:::-;11039:25;;11198:1;11130:66;11126:74;11123:1;11120:81;11117:2;;;11204:18;;:::i;:::-;11117:2;11248:1;11245;11241:9;11234:16;;10995:261;;;;:::o;11262:185::-;11302:1;11319:20;11337:1;11319:20;:::i;:::-;11314:25;;11353:20;11371:1;11353:20;:::i;:::-;11348:25;;11392:1;11382:2;;11397:18;;:::i;:::-;11382:2;11439:1;11436;11432:9;11427:14;;11304:143;;;;:::o;11453:348::-;11493:7;11516:20;11534:1;11516:20;:::i;:::-;11511:25;;11550:20;11568:1;11550:20;:::i;:::-;11545:25;;11738:1;11670:66;11666:74;11663:1;11660:81;11655:1;11648:9;11641:17;11637:105;11634:2;;;11745:18;;:::i;:::-;11634:2;11793:1;11790;11786:9;11775:20;;11501:300;;;;:::o;11807:191::-;11847:4;11867:20;11885:1;11867:20;:::i;:::-;11862:25;;11901:20;11919:1;11901:20;:::i;:::-;11896:25;;11940:1;11937;11934:8;11931:2;;;11945:18;;:::i;:::-;11931:2;11990:1;11987;11983:9;11975:17;;11852:146;;;;:::o;12004:96::-;12041:7;12070:24;12088:5;12070:24;:::i;:::-;12059:35;;12049:51;;;:::o;12106:90::-;12140:7;12183:5;12176:13;12169:21;12158:32;;12148:48;;;:::o;12202:126::-;12239:7;12279:42;12272:5;12268:54;12257:65;;12247:81;;;:::o;12334:77::-;12371:7;12400:5;12389:16;;12379:32;;;:::o;12417:152::-;12480:9;12513:50;12557:5;12513:50;:::i;:::-;12500:63;;12490:79;;;:::o;12575:126::-;12638:9;12671:24;12689:5;12671:24;:::i;:::-;12658:37;;12648:53;;;:::o;12707:307::-;12775:1;12785:113;12799:6;12796:1;12793:13;12785:113;;;12884:1;12879:3;12875:11;12869:18;12865:1;12860:3;12856:11;12849:39;12821:2;12818:1;12814:10;12809:15;;12785:113;;;12916:6;12913:1;12910:13;12907:2;;;12996:1;12987:6;12982:3;12978:16;12971:27;12907:2;12756:258;;;;:::o;13020:320::-;13064:6;13101:1;13095:4;13091:12;13081:22;;13148:1;13142:4;13138:12;13169:18;13159:2;;13225:4;13217:6;13213:17;13203:27;;13159:2;13287;13279:6;13276:14;13256:18;13253:38;13250:2;;;13306:18;;:::i;:::-;13250:2;13071:269;;;;:::o;13346:180::-;13394:77;13391:1;13384:88;13491:4;13488:1;13481:15;13515:4;13512:1;13505:15;13532:180;13580:77;13577:1;13570:88;13677:4;13674:1;13667:15;13701:4;13698:1;13691:15;13718:180;13766:77;13763:1;13756:88;13863:4;13860:1;13853:15;13887:4;13884:1;13877:15;13904:102;13945:6;13996:2;13992:7;13987:2;13980:5;13976:14;13972:28;13962:38;;13952:54;;;:::o;14012:172::-;14152:24;14148:1;14140:6;14136:14;14129:48;14118:66;:::o;14190:170::-;14330:22;14326:1;14318:6;14314:14;14307:46;14296:64;:::o;14366:176::-;14506:28;14502:1;14494:6;14490:14;14483:52;14472:70;:::o;14548:170::-;14688:22;14684:1;14676:6;14672:14;14665:46;14654:64;:::o;14724:174::-;14864:26;14860:1;14852:6;14848:14;14841:50;14830:68;:::o;14904:122::-;14977:24;14995:5;14977:24;:::i;:::-;14970:5;14967:35;14957:2;;15016:1;15013;15006:12;14957:2;14947:79;:::o;15032:116::-;15102:21;15117:5;15102:21;:::i;:::-;15095:5;15092:32;15082:2;;15138:1;15135;15128:12;15082:2;15072:76;:::o;15154:122::-;15227:24;15245:5;15227:24;:::i;:::-;15220:5;15217:35;15207:2;;15266:1;15263;15256:12;15207:2;15197:79;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1376400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"allowances(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1564",
								"balances(address)": "1537",
								"buyEvic(uint256)": "infinite",
								"decimals()": "1196",
								"evicPrice()": "1217",
								"name()": "infinite",
								"owner()": "1259",
								"symbol()": "infinite",
								"totalSupply()": "1197",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"usdt()": "1299",
								"withDrawEvic(uint256)": "infinite"
							},
							"internal": {
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 240,
									"end": 3850,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 375,
									"end": 408,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 375,
									"end": 408,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 375,
									"end": 408,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 375,
									"end": 408,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 375,
									"end": 408,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 375,
									"end": 408,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 375,
									"end": 408,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 375,
									"end": 408,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 375,
									"end": 408,
									"name": "PUSH",
									"source": 5,
									"value": "A"
								},
								{
									"begin": 375,
									"end": 408,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 375,
									"end": 408,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 375,
									"end": 408,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 375,
									"end": 408,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 375,
									"end": 408,
									"name": "PUSH",
									"source": 5,
									"value": "4556494320546F6B656E00000000000000000000000000000000000000000000"
								},
								{
									"begin": 375,
									"end": 408,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 375,
									"end": 408,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 375,
									"end": 408,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 375,
									"end": 408,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 375,
									"end": 408,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 375,
									"end": 408,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 375,
									"end": 408,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 375,
									"end": 408,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 375,
									"end": 408,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 375,
									"end": 408,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 375,
									"end": 408,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 375,
									"end": 408,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 375,
									"end": 408,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 375,
									"end": 408,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 375,
									"end": 408,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 375,
									"end": 408,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 375,
									"end": 408,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 375,
									"end": 408,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 375,
									"end": 408,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 375,
									"end": 408,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 414,
									"end": 443,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 414,
									"end": 443,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 414,
									"end": 443,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 414,
									"end": 443,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 414,
									"end": 443,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 414,
									"end": 443,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 414,
									"end": 443,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 414,
									"end": 443,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 414,
									"end": 443,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 414,
									"end": 443,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 414,
									"end": 443,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 414,
									"end": 443,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 414,
									"end": 443,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 414,
									"end": 443,
									"name": "PUSH",
									"source": 5,
									"value": "4556494300000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 414,
									"end": 443,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 414,
									"end": 443,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 414,
									"end": 443,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 414,
									"end": 443,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 414,
									"end": 443,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 414,
									"end": 443,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 414,
									"end": 443,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 414,
									"end": 443,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 414,
									"end": 443,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 414,
									"end": 443,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 414,
									"end": 443,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 414,
									"end": 443,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 414,
									"end": 443,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 414,
									"end": 443,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 414,
									"end": 443,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 414,
									"end": 443,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 414,
									"end": 443,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 414,
									"end": 443,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 414,
									"end": 443,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 414,
									"end": 443,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 475,
									"end": 477,
									"name": "PUSH",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 449,
									"end": 477,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 449,
									"end": 477,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1042,
									"end": 1200,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 1042,
									"end": 1200,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1042,
									"end": 1200,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1042,
									"end": 1200,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1042,
									"end": 1200,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1042,
									"end": 1200,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1042,
									"end": 1200,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1042,
									"end": 1200,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1042,
									"end": 1200,
									"name": "tag",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1042,
									"end": 1200,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1042,
									"end": 1200,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1042,
									"end": 1200,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1042,
									"end": 1200,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1042,
									"end": 1200,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 1042,
									"end": 1200,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 1042,
									"end": 1200,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1042,
									"end": 1200,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1042,
									"end": 1200,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 1042,
									"end": 1200,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1042,
									"end": 1200,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 1042,
									"end": 1200,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1042,
									"end": 1200,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1042,
									"end": 1200,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1042,
									"end": 1200,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1042,
									"end": 1200,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1042,
									"end": 1200,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1042,
									"end": 1200,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1042,
									"end": 1200,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1042,
									"end": 1200,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 1042,
									"end": 1200,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1042,
									"end": 1200,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1042,
									"end": 1200,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 1042,
									"end": 1200,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1042,
									"end": 1200,
									"name": "tag",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 1042,
									"end": 1200,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1114,
									"end": 1124,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 1106,
									"end": 1111,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 1106,
									"end": 1111,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1106,
									"end": 1124,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 1106,
									"end": 1124,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 1106,
									"end": 1124,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1106,
									"end": 1124,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1106,
									"end": 1124,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1106,
									"end": 1124,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1106,
									"end": 1124,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1106,
									"end": 1124,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 1106,
									"end": 1124,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1106,
									"end": 1124,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1106,
									"end": 1124,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1106,
									"end": 1124,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1106,
									"end": 1124,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1106,
									"end": 1124,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1106,
									"end": 1124,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1106,
									"end": 1124,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1106,
									"end": 1124,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1106,
									"end": 1124,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1148,
									"end": 1160,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1134,
									"end": 1138,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1134,
									"end": 1138,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1134,
									"end": 1161,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 1134,
									"end": 1161,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 1134,
									"end": 1161,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1134,
									"end": 1161,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1134,
									"end": 1161,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1134,
									"end": 1161,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1134,
									"end": 1161,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1134,
									"end": 1161,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 1134,
									"end": 1161,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1134,
									"end": 1161,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1134,
									"end": 1161,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1134,
									"end": 1161,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1134,
									"end": 1161,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1134,
									"end": 1161,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1134,
									"end": 1161,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1134,
									"end": 1161,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1134,
									"end": 1161,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1134,
									"end": 1161,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1183,
									"end": 1193,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1171,
									"end": 1180,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 1171,
									"end": 1193,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1171,
									"end": 1193,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1171,
									"end": 1193,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1171,
									"end": 1193,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1042,
									"end": 1200,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1042,
									"end": 1200,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "tag",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "PUSH",
									"source": 5,
									"value": "FF"
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "tag",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "tag",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "tag",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "tag",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "tag",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "tag",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "tag",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 64,
									"end": 69,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 70,
									"end": 150,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 70,
									"end": 150,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 70,
									"end": 150,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 70,
									"end": 150,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 70,
									"end": 150,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 299,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 156,
									"end": 299,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 213,
									"end": 218,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 250,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 238,
									"end": 251,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 229,
									"end": 251,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 229,
									"end": 251,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 260,
									"end": 293,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 287,
									"end": 292,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 260,
									"end": 293,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 260,
									"end": 293,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 260,
									"end": 293,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 260,
									"end": 293,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 219,
									"end": 299,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 219,
									"end": 299,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 219,
									"end": 299,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 219,
									"end": 299,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 219,
									"end": 299,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 305,
									"end": 745,
									"name": "tag",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 305,
									"end": 745,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 384,
									"end": 390,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 392,
									"end": 398,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 441,
									"end": 443,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 429,
									"end": 438,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 420,
									"end": 427,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 416,
									"end": 439,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 412,
									"end": 444,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 409,
									"end": 411,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 409,
									"end": 411,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 409,
									"end": 411,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 457,
									"end": 458,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 454,
									"end": 455,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 447,
									"end": 459,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 409,
									"end": 411,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 409,
									"end": 411,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 500,
									"end": 501,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 525,
									"end": 589,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 581,
									"end": 588,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 572,
									"end": 578,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 561,
									"end": 570,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 557,
									"end": 579,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 525,
									"end": 589,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 525,
									"end": 589,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 525,
									"end": 589,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 525,
									"end": 589,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 515,
									"end": 589,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 515,
									"end": 589,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 471,
									"end": 599,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 638,
									"end": 640,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 664,
									"end": 728,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 720,
									"end": 727,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 711,
									"end": 717,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 700,
									"end": 709,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 696,
									"end": 718,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 664,
									"end": 728,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 664,
									"end": 728,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 664,
									"end": 728,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 664,
									"end": 728,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 654,
									"end": 728,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 654,
									"end": 728,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 609,
									"end": 738,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 399,
									"end": 745,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 399,
									"end": 745,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 399,
									"end": 745,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 399,
									"end": 745,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 399,
									"end": 745,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 399,
									"end": 745,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 751,
									"end": 847,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 751,
									"end": 847,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 788,
									"end": 795,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 817,
									"end": 841,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 835,
									"end": 840,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 817,
									"end": 841,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 817,
									"end": 841,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 817,
									"end": 841,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 817,
									"end": 841,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 806,
									"end": 841,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 806,
									"end": 841,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 796,
									"end": 847,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 796,
									"end": 847,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 796,
									"end": 847,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 796,
									"end": 847,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 853,
									"end": 979,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 853,
									"end": 979,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 890,
									"end": 897,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 930,
									"end": 972,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 923,
									"end": 928,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 919,
									"end": 973,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 908,
									"end": 973,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 908,
									"end": 973,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 898,
									"end": 979,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 898,
									"end": 979,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 898,
									"end": 979,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 898,
									"end": 979,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 985,
									"end": 1062,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 985,
									"end": 1062,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1022,
									"end": 1029,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1051,
									"end": 1056,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1040,
									"end": 1056,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1040,
									"end": 1056,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1030,
									"end": 1062,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1030,
									"end": 1062,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1030,
									"end": 1062,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1030,
									"end": 1062,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 1068,
									"end": 1388,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 1068,
									"end": 1388,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1112,
									"end": 1118,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1149,
									"end": 1150,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1143,
									"end": 1147,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1139,
									"end": 1151,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1196,
									"end": 1197,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1190,
									"end": 1194,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1186,
									"end": 1198,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1217,
									"end": 1235,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1207,
									"end": 1209,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 1207,
									"end": 1209,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1273,
									"end": 1277,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 1265,
									"end": 1271,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1261,
									"end": 1278,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1278,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1251,
									"end": 1278,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1207,
									"end": 1209,
									"name": "tag",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 1207,
									"end": 1209,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1335,
									"end": 1337,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1327,
									"end": 1333,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1324,
									"end": 1338,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1304,
									"end": 1322,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1301,
									"end": 1339,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 1298,
									"end": 1300,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1298,
									"end": 1300,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 1298,
									"end": 1300,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1354,
									"end": 1372,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 1354,
									"end": 1372,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 1354,
									"end": 1372,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 1354,
									"end": 1372,
									"name": "tag",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 1354,
									"end": 1372,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1298,
									"end": 1300,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 1298,
									"end": 1300,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1119,
									"end": 1388,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1119,
									"end": 1388,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1119,
									"end": 1388,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1119,
									"end": 1388,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1119,
									"end": 1388,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 1394,
									"end": 1574,
									"name": "tag",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 1394,
									"end": 1574,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1442,
									"end": 1519,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1439,
									"end": 1440,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1432,
									"end": 1520,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1539,
									"end": 1543,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1536,
									"end": 1537,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1529,
									"end": 1544,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1563,
									"end": 1567,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1560,
									"end": 1561,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1553,
									"end": 1568,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1580,
									"end": 1702,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 1580,
									"end": 1702,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1653,
									"end": 1677,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 1671,
									"end": 1676,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1653,
									"end": 1677,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 1653,
									"end": 1677,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 1653,
									"end": 1677,
									"name": "tag",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 1653,
									"end": 1677,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1646,
									"end": 1651,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1643,
									"end": 1678,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 1633,
									"end": 1635,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 1633,
									"end": 1635,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1692,
									"end": 1693,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1689,
									"end": 1690,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1682,
									"end": 1694,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1633,
									"end": 1635,
									"name": "tag",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 1633,
									"end": 1635,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1623,
									"end": 1702,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1623,
									"end": 1702,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 1708,
									"end": 1830,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 1708,
									"end": 1830,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1781,
									"end": 1805,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 1799,
									"end": 1804,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1781,
									"end": 1805,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 1781,
									"end": 1805,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 1781,
									"end": 1805,
									"name": "tag",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 1781,
									"end": 1805,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1774,
									"end": 1779,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1771,
									"end": 1806,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 1761,
									"end": 1763,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 1761,
									"end": 1763,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1820,
									"end": 1821,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1817,
									"end": 1818,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1810,
									"end": 1822,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1761,
									"end": 1763,
									"name": "tag",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 1761,
									"end": 1763,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1751,
									"end": 1830,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1751,
									"end": 1830,
									"name": "JUMP",
									"source": 6,
									"value": "[out]"
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "tag",
									"source": 5,
									"value": "9"
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 240,
									"end": 3850,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204be8d417f4fad8fda3b5b7c4525f7f838acbe6e2d5d87d61ae6f7cf54bb0262764736f6c63430008040033",
									".code": [
										{
											"begin": 240,
											"end": 3850,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "PUSH",
											"source": 5,
											"value": "A604F570"
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "PUSH",
											"source": 5,
											"value": "A604F570"
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "PUSH",
											"source": 5,
											"value": "DD62ED3E"
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "PUSH",
											"source": 5,
											"value": "EF1F4B84"
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "PUSH",
											"source": 5,
											"value": "8DA5CB5B"
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "PUSH",
											"source": 5,
											"value": "954724B4"
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "PUSH",
											"source": 5,
											"value": "95D89B41"
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "PUSH",
											"source": 5,
											"value": "27E235E3"
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "PUSH",
											"source": 5,
											"value": "27E235E3"
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "PUSH",
											"source": 5,
											"value": "2F48AB7D"
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "PUSH",
											"source": 5,
											"value": "55B6ED5C"
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "PUSH",
											"source": 5,
											"value": "6FDDE03"
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "PUSH",
											"source": 5,
											"value": "95EA7B3"
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "PUSH",
											"source": 5,
											"value": "18160DDD"
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 240,
											"end": 3850,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 375,
											"end": 408,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 375,
											"end": 408,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 375,
											"end": 408,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 375,
											"end": 408,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 375,
											"end": 408,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 375,
											"end": 408,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 375,
											"end": 408,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 375,
											"end": 408,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 375,
											"end": 408,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 375,
											"end": 408,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 375,
											"end": 408,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2504,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2292,
											"end": 2504,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2504,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 2292,
											"end": 2504,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2292,
											"end": 2504,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2504,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2504,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2504,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2504,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2504,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2504,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 2292,
											"end": 2504,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2504,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2504,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 2292,
											"end": 2504,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2292,
											"end": 2504,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 2292,
											"end": 2504,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2504,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 2292,
											"end": 2504,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2292,
											"end": 2504,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 2292,
											"end": 2504,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2504,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2292,
											"end": 2504,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2504,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 2292,
											"end": 2504,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2504,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2504,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 2292,
											"end": 2504,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2292,
											"end": 2504,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 2292,
											"end": 2504,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2504,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2292,
											"end": 2504,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2504,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2504,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2504,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2504,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2504,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 483,
											"end": 509,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 483,
											"end": 509,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 483,
											"end": 509,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 483,
											"end": 509,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 483,
											"end": 509,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 483,
											"end": 509,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 483,
											"end": 509,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 483,
											"end": 509,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 509,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 483,
											"end": 509,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 483,
											"end": 509,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 483,
											"end": 509,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 483,
											"end": 509,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 483,
											"end": 509,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 483,
											"end": 509,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 483,
											"end": 509,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 483,
											"end": 509,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 483,
											"end": 509,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 483,
											"end": 509,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 483,
											"end": 509,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 483,
											"end": 509,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 483,
											"end": 509,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 483,
											"end": 509,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2679,
											"end": 3028,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 2679,
											"end": 3028,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2679,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 2679,
											"end": 3028,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2679,
											"end": 3028,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2679,
											"end": 3028,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2679,
											"end": 3028,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2679,
											"end": 3028,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2679,
											"end": 3028,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2679,
											"end": 3028,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2679,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 2679,
											"end": 3028,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2679,
											"end": 3028,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2679,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 2679,
											"end": 3028,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2679,
											"end": 3028,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 2679,
											"end": 3028,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2679,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 2679,
											"end": 3028,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2679,
											"end": 3028,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 2679,
											"end": 3028,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2679,
											"end": 3028,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2679,
											"end": 3028,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2679,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2679,
											"end": 3028,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2679,
											"end": 3028,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2679,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 2679,
											"end": 3028,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2679,
											"end": 3028,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2679,
											"end": 3028,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2679,
											"end": 3028,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2679,
											"end": 3028,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2679,
											"end": 3028,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2679,
											"end": 3028,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2679,
											"end": 3028,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2679,
											"end": 3028,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2679,
											"end": 3028,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 594,
											"end": 637,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 594,
											"end": 637,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 594,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 594,
											"end": 637,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 594,
											"end": 637,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 594,
											"end": 637,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 594,
											"end": 637,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 594,
											"end": 637,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 594,
											"end": 637,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 594,
											"end": 637,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 594,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 594,
											"end": 637,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 594,
											"end": 637,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 594,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 594,
											"end": 637,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 594,
											"end": 637,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 594,
											"end": 637,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 594,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 594,
											"end": 637,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 594,
											"end": 637,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 594,
											"end": 637,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 594,
											"end": 637,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 594,
											"end": 637,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 594,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 594,
											"end": 637,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 594,
											"end": 637,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 594,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 594,
											"end": 637,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 594,
											"end": 637,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 594,
											"end": 637,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 594,
											"end": 637,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 594,
											"end": 637,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 594,
											"end": 637,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 594,
											"end": 637,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 594,
											"end": 637,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 594,
											"end": 637,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 594,
											"end": 637,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 329,
											"end": 347,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 329,
											"end": 347,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 329,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 329,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 329,
											"end": 347,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 329,
											"end": 347,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 329,
											"end": 347,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 329,
											"end": 347,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 329,
											"end": 347,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 329,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 329,
											"end": 347,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 329,
											"end": 347,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 329,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 329,
											"end": 347,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 329,
											"end": 347,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 329,
											"end": 347,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 329,
											"end": 347,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 329,
											"end": 347,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 329,
											"end": 347,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 329,
											"end": 347,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 329,
											"end": 347,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 329,
											"end": 347,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 329,
											"end": 347,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 449,
											"end": 477,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 449,
											"end": 477,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 449,
											"end": 477,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 449,
											"end": 477,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 449,
											"end": 477,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 449,
											"end": 477,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 449,
											"end": 477,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 449,
											"end": 477,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 449,
											"end": 477,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 449,
											"end": 477,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 449,
											"end": 477,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 449,
											"end": 477,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 449,
											"end": 477,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 449,
											"end": 477,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 449,
											"end": 477,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 449,
											"end": 477,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 449,
											"end": 477,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 449,
											"end": 477,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 449,
											"end": 477,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 449,
											"end": 477,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 449,
											"end": 477,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 449,
											"end": 477,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 449,
											"end": 477,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 643,
											"end": 708,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 643,
											"end": 708,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 643,
											"end": 708,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 643,
											"end": 708,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 643,
											"end": 708,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 643,
											"end": 708,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 643,
											"end": 708,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 643,
											"end": 708,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 643,
											"end": 708,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 643,
											"end": 708,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 643,
											"end": 708,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 643,
											"end": 708,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 643,
											"end": 708,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 643,
											"end": 708,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 643,
											"end": 708,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 643,
											"end": 708,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 643,
											"end": 708,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 643,
											"end": 708,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 643,
											"end": 708,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 643,
											"end": 708,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 643,
											"end": 708,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 643,
											"end": 708,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 643,
											"end": 708,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 643,
											"end": 708,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 643,
											"end": 708,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 643,
											"end": 708,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 643,
											"end": 708,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 643,
											"end": 708,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 643,
											"end": 708,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 643,
											"end": 708,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 643,
											"end": 708,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 643,
											"end": 708,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 643,
											"end": 708,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 643,
											"end": 708,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 643,
											"end": 708,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 643,
											"end": 708,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 643,
											"end": 708,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3583,
											"end": 3700,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 3583,
											"end": 3700,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3583,
											"end": 3700,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 3583,
											"end": 3700,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3583,
											"end": 3700,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3583,
											"end": 3700,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3583,
											"end": 3700,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3583,
											"end": 3700,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3583,
											"end": 3700,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3583,
											"end": 3700,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3583,
											"end": 3700,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 3583,
											"end": 3700,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3583,
											"end": 3700,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3583,
											"end": 3700,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 3583,
											"end": 3700,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3583,
											"end": 3700,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 3583,
											"end": 3700,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3583,
											"end": 3700,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3583,
											"end": 3700,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3583,
											"end": 3700,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 3583,
											"end": 3700,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3583,
											"end": 3700,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3583,
											"end": 3700,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3583,
											"end": 3700,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 3583,
											"end": 3700,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3583,
											"end": 3700,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3583,
											"end": 3700,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 3583,
											"end": 3700,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3583,
											"end": 3700,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 3583,
											"end": 3700,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3583,
											"end": 3700,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3583,
											"end": 3700,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3583,
											"end": 3700,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3583,
											"end": 3700,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3583,
											"end": 3700,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3583,
											"end": 3700,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3583,
											"end": 3700,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 567,
											"end": 587,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 567,
											"end": 587,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 567,
											"end": 587,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 567,
											"end": 587,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 567,
											"end": 587,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 567,
											"end": 587,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 567,
											"end": 587,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 567,
											"end": 587,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 567,
											"end": 587,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 567,
											"end": 587,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 567,
											"end": 587,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 567,
											"end": 587,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 567,
											"end": 587,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 567,
											"end": 587,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 567,
											"end": 587,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 567,
											"end": 587,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 567,
											"end": 587,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 567,
											"end": 587,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 567,
											"end": 587,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 567,
											"end": 587,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 567,
											"end": 587,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 567,
											"end": 587,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 567,
											"end": 587,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1779,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 1206,
											"end": 1779,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 1206,
											"end": 1779,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1206,
											"end": 1779,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1779,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1779,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1779,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1779,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1779,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 1206,
											"end": 1779,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1779,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 1206,
											"end": 1779,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1206,
											"end": 1779,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 1206,
											"end": 1779,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1779,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 1206,
											"end": 1779,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1206,
											"end": 1779,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 1206,
											"end": 1779,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1779,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 414,
											"end": 443,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 414,
											"end": 443,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 414,
											"end": 443,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 414,
											"end": 443,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 414,
											"end": 443,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 414,
											"end": 443,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 414,
											"end": 443,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 414,
											"end": 443,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 414,
											"end": 443,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 414,
											"end": 443,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 414,
											"end": 443,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1785,
											"end": 2286,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 1785,
											"end": 2286,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1785,
											"end": 2286,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 1785,
											"end": 2286,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1785,
											"end": 2286,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1785,
											"end": 2286,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1785,
											"end": 2286,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1785,
											"end": 2286,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1785,
											"end": 2286,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1785,
											"end": 2286,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1785,
											"end": 2286,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 1785,
											"end": 2286,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1785,
											"end": 2286,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1785,
											"end": 2286,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 1785,
											"end": 2286,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1785,
											"end": 2286,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 1785,
											"end": 2286,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1785,
											"end": 2286,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 1785,
											"end": 2286,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1785,
											"end": 2286,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 1785,
											"end": 2286,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1785,
											"end": 2286,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 2510,
											"end": 2673,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 2510,
											"end": 2673,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2510,
											"end": 2673,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 2510,
											"end": 2673,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2510,
											"end": 2673,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2510,
											"end": 2673,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2510,
											"end": 2673,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2510,
											"end": 2673,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2510,
											"end": 2673,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2510,
											"end": 2673,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2510,
											"end": 2673,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 2510,
											"end": 2673,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2510,
											"end": 2673,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2510,
											"end": 2673,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 2510,
											"end": 2673,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2510,
											"end": 2673,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 2510,
											"end": 2673,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2510,
											"end": 2673,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 2510,
											"end": 2673,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2510,
											"end": 2673,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 2510,
											"end": 2673,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2510,
											"end": 2673,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2510,
											"end": 2673,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2510,
											"end": 2673,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 2510,
											"end": 2673,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2510,
											"end": 2673,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2510,
											"end": 2673,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 2510,
											"end": 2673,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2510,
											"end": 2673,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 2510,
											"end": 2673,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2510,
											"end": 2673,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2510,
											"end": 2673,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2510,
											"end": 2673,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2510,
											"end": 2673,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2510,
											"end": 2673,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2510,
											"end": 2673,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2510,
											"end": 2673,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3706,
											"end": 3847,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 3706,
											"end": 3847,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3706,
											"end": 3847,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 3706,
											"end": 3847,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3706,
											"end": 3847,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3706,
											"end": 3847,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3706,
											"end": 3847,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3706,
											"end": 3847,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3706,
											"end": 3847,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3706,
											"end": 3847,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3706,
											"end": 3847,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 3706,
											"end": 3847,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3706,
											"end": 3847,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3706,
											"end": 3847,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 3706,
											"end": 3847,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3706,
											"end": 3847,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 3706,
											"end": 3847,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3706,
											"end": 3847,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 3706,
											"end": 3847,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3706,
											"end": 3847,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 3706,
											"end": 3847,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3706,
											"end": 3847,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3706,
											"end": 3847,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3706,
											"end": 3847,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 3706,
											"end": 3847,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3706,
											"end": 3847,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3706,
											"end": 3847,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 3706,
											"end": 3847,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3706,
											"end": 3847,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 3706,
											"end": 3847,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3706,
											"end": 3847,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3706,
											"end": 3847,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3706,
											"end": 3847,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3706,
											"end": 3847,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3706,
											"end": 3847,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3706,
											"end": 3847,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3706,
											"end": 3847,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 515,
											"end": 539,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 515,
											"end": 539,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 515,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 515,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 515,
											"end": 539,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 515,
											"end": 539,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 515,
											"end": 539,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 515,
											"end": 539,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 515,
											"end": 539,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 515,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 515,
											"end": 539,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 515,
											"end": 539,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 515,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 515,
											"end": 539,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 515,
											"end": 539,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 515,
											"end": 539,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 515,
											"end": 539,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 515,
											"end": 539,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 515,
											"end": 539,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 515,
											"end": 539,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 515,
											"end": 539,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 515,
											"end": 539,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 515,
											"end": 539,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 375,
											"end": 408,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 375,
											"end": 408,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 375,
											"end": 408,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 375,
											"end": 408,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 375,
											"end": 408,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 375,
											"end": 408,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 375,
											"end": 408,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 375,
											"end": 408,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 375,
											"end": 408,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 375,
											"end": 408,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 375,
											"end": 408,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 375,
											"end": 408,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 375,
											"end": 408,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 375,
											"end": 408,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 375,
											"end": 408,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 375,
											"end": 408,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 375,
											"end": 408,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 375,
											"end": 408,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 375,
											"end": 408,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 375,
											"end": 408,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 375,
											"end": 408,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 375,
											"end": 408,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 375,
											"end": 408,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 375,
											"end": 408,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 375,
											"end": 408,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 375,
											"end": 408,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 375,
											"end": 408,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 375,
											"end": 408,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 375,
											"end": 408,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 375,
											"end": 408,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 375,
											"end": 408,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 375,
											"end": 408,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 375,
											"end": 408,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2292,
											"end": 2504,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 2292,
											"end": 2504,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2368,
											"end": 2372,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2418,
											"end": 2424,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2394,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2395,
											"end": 2405,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2407,
											"end": 2414,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2424,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2424,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2424,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2424,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2467,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2448,
											"end": 2458,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "PUSH",
											"source": 5,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 2469,
											"end": 2475,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 2493,
											"end": 2497,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2486,
											"end": 2497,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2486,
											"end": 2497,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2504,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2504,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2504,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2504,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2292,
											"end": 2504,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 483,
											"end": 509,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 483,
											"end": 509,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 483,
											"end": 509,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 483,
											"end": 509,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 483,
											"end": 509,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 483,
											"end": 509,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2679,
											"end": 3028,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 2679,
											"end": 3028,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2778,
											"end": 2782,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2836,
											"end": 2842,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2802,
											"end": 2812,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 2802,
											"end": 2820,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2813,
											"end": 2819,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2802,
											"end": 2820,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2802,
											"end": 2820,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2802,
											"end": 2820,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2802,
											"end": 2820,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2802,
											"end": 2820,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2802,
											"end": 2820,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2802,
											"end": 2820,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2802,
											"end": 2820,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2802,
											"end": 2820,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2802,
											"end": 2820,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2802,
											"end": 2820,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2802,
											"end": 2820,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2802,
											"end": 2820,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2802,
											"end": 2820,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2802,
											"end": 2820,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2802,
											"end": 2832,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2821,
											"end": 2831,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2802,
											"end": 2832,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2802,
											"end": 2832,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2802,
											"end": 2832,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2802,
											"end": 2832,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2802,
											"end": 2832,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2802,
											"end": 2832,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2802,
											"end": 2832,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2802,
											"end": 2832,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2802,
											"end": 2832,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2802,
											"end": 2832,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2802,
											"end": 2832,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2802,
											"end": 2832,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2802,
											"end": 2832,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2802,
											"end": 2832,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2802,
											"end": 2832,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2802,
											"end": 2832,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2802,
											"end": 2842,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2802,
											"end": 2842,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2869,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 2794,
											"end": 2869,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2869,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2869,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2869,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2794,
											"end": 2869,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2869,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2869,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2794,
											"end": 2869,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2869,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 2794,
											"end": 2869,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2869,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 2794,
											"end": 2869,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2794,
											"end": 2869,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 2794,
											"end": 2869,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2869,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2869,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2869,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2869,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2869,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2869,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2869,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2869,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 2794,
											"end": 2869,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 2954,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 2947,
											"end": 2953,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 2922,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 2912,
											"end": 2930,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2923,
											"end": 2929,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 2930,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2912,
											"end": 2930,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 2930,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2912,
											"end": 2930,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 2930,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 2930,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 2930,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2912,
											"end": 2930,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 2930,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 2930,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 2930,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 2930,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2912,
											"end": 2930,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 2930,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2912,
											"end": 2930,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 2942,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2931,
											"end": 2941,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 2942,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2912,
											"end": 2942,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 2942,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2912,
											"end": 2942,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 2942,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 2942,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 2942,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2912,
											"end": 2942,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 2942,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 2942,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 2942,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 2942,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2912,
											"end": 2942,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 2942,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2912,
											"end": 2942,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 2942,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2912,
											"end": 2946,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 2954,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 2954,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 2954,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2912,
											"end": 2954,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 2954,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2912,
											"end": 2954,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 2912,
											"end": 2954,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2879,
											"end": 2889,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 2879,
											"end": 2897,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2890,
											"end": 2896,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2879,
											"end": 2897,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2879,
											"end": 2897,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2879,
											"end": 2897,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2879,
											"end": 2897,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2879,
											"end": 2897,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2879,
											"end": 2897,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2879,
											"end": 2897,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2879,
											"end": 2897,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2879,
											"end": 2897,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2879,
											"end": 2897,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2879,
											"end": 2897,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2879,
											"end": 2897,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2879,
											"end": 2897,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2879,
											"end": 2897,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2879,
											"end": 2897,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2898,
											"end": 2908,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2879,
											"end": 2909,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2879,
											"end": 2954,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2879,
											"end": 2954,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2879,
											"end": 2954,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2879,
											"end": 2954,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2964,
											"end": 3000,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 2974,
											"end": 2980,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2982,
											"end": 2991,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2993,
											"end": 2999,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2964,
											"end": 2973,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 2964,
											"end": 3000,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2964,
											"end": 3000,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 2964,
											"end": 3000,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3017,
											"end": 3021,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3010,
											"end": 3021,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2679,
											"end": 3028,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2679,
											"end": 3028,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2679,
											"end": 3028,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2679,
											"end": 3028,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2679,
											"end": 3028,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2679,
											"end": 3028,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 594,
											"end": 637,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 594,
											"end": 637,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 594,
											"end": 637,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 594,
											"end": 637,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 594,
											"end": 637,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 594,
											"end": 637,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 594,
											"end": 637,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 594,
											"end": 637,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 594,
											"end": 637,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 594,
											"end": 637,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 594,
											"end": 637,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 594,
											"end": 637,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 594,
											"end": 637,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 594,
											"end": 637,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 594,
											"end": 637,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 594,
											"end": 637,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 594,
											"end": 637,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 594,
											"end": 637,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 594,
											"end": 637,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 329,
											"end": 347,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 329,
											"end": 347,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 329,
											"end": 347,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 329,
											"end": 347,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 329,
											"end": 347,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 329,
											"end": 347,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 329,
											"end": 347,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 329,
											"end": 347,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 329,
											"end": 347,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 329,
											"end": 347,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 329,
											"end": 347,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 329,
											"end": 347,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 329,
											"end": 347,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 329,
											"end": 347,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 449,
											"end": 477,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 449,
											"end": 477,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 449,
											"end": 477,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 449,
											"end": 477,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 449,
											"end": 477,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 449,
											"end": 477,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 643,
											"end": 708,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 643,
											"end": 708,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 643,
											"end": 708,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 643,
											"end": 708,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 643,
											"end": 708,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 643,
											"end": 708,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 643,
											"end": 708,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 643,
											"end": 708,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 643,
											"end": 708,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 643,
											"end": 708,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 643,
											"end": 708,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 643,
											"end": 708,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 643,
											"end": 708,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 643,
											"end": 708,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 643,
											"end": 708,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 643,
											"end": 708,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 643,
											"end": 708,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 643,
											"end": 708,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 643,
											"end": 708,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 643,
											"end": 708,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 643,
											"end": 708,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 643,
											"end": 708,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 643,
											"end": 708,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 643,
											"end": 708,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 643,
											"end": 708,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 643,
											"end": 708,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 643,
											"end": 708,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 643,
											"end": 708,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3583,
											"end": 3700,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3583,
											"end": 3700,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3650,
											"end": 3657,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3684,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 3676,
											"end": 3693,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3685,
											"end": 3692,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3676,
											"end": 3693,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3676,
											"end": 3693,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3676,
											"end": 3693,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3676,
											"end": 3693,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3676,
											"end": 3693,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3676,
											"end": 3693,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3676,
											"end": 3693,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3676,
											"end": 3693,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3676,
											"end": 3693,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3676,
											"end": 3693,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3676,
											"end": 3693,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3676,
											"end": 3693,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3676,
											"end": 3693,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3676,
											"end": 3693,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3693,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3676,
											"end": 3693,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3669,
											"end": 3693,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3669,
											"end": 3693,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3583,
											"end": 3700,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3583,
											"end": 3700,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3583,
											"end": 3700,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3583,
											"end": 3700,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 567,
											"end": 587,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 567,
											"end": 587,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 567,
											"end": 587,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 567,
											"end": 587,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 567,
											"end": 587,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 567,
											"end": 587,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 567,
											"end": 587,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 567,
											"end": 587,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 567,
											"end": 587,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 567,
											"end": 587,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 567,
											"end": 587,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 567,
											"end": 587,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 567,
											"end": 587,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 567,
											"end": 587,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 567,
											"end": 587,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1206,
											"end": 1779,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 1206,
											"end": 1779,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1262,
											"end": 1276,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1279,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 1294,
											"end": 1303,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1294,
											"end": 1303,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1279,
											"end": 1289,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1279,
											"end": 1293,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 1279,
											"end": 1293,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1279,
											"end": 1304,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1279,
											"end": 1304,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1279,
											"end": 1304,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1279,
											"end": 1304,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1279,
											"end": 1304,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1279,
											"end": 1304,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 1279,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1262,
											"end": 1304,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1262,
											"end": 1304,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1383,
											"end": 1393,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1342,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1338,
											"end": 1342,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1342,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1342,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1342,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1338,
											"end": 1342,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1342,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1342,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1342,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1338,
											"end": 1342,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1352,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1338,
											"end": 1352,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1352,
											"name": "PUSH",
											"source": 5,
											"value": "DD62ED3E"
										},
										{
											"begin": 1353,
											"end": 1363,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1373,
											"end": 1377,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 1338,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1393,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1338,
											"end": 1393,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1330,
											"end": 1420,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 1330,
											"end": 1420,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1330,
											"end": 1420,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1330,
											"end": 1420,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1330,
											"end": 1420,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1330,
											"end": 1420,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1330,
											"end": 1420,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1330,
											"end": 1420,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1330,
											"end": 1420,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1330,
											"end": 1420,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 1330,
											"end": 1420,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1330,
											"end": 1420,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 1330,
											"end": 1420,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1330,
											"end": 1420,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 1330,
											"end": 1420,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1330,
											"end": 1420,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1330,
											"end": 1420,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1330,
											"end": 1420,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1330,
											"end": 1420,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1330,
											"end": 1420,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1330,
											"end": 1420,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1330,
											"end": 1420,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1330,
											"end": 1420,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 1330,
											"end": 1420,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1442,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1438,
											"end": 1442,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1442,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1442,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1442,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1438,
											"end": 1442,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1442,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1442,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1442,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1438,
											"end": 1442,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1455,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1438,
											"end": 1455,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1455,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 1456,
											"end": 1466,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1476,
											"end": 1480,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 1483,
											"end": 1493,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 1438,
											"end": 1494,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1430,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 1430,
											"end": 1519,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1430,
											"end": 1519,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1430,
											"end": 1519,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1430,
											"end": 1519,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1430,
											"end": 1519,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1430,
											"end": 1519,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1430,
											"end": 1519,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1430,
											"end": 1519,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1430,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 1430,
											"end": 1519,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1430,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 1430,
											"end": 1519,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1430,
											"end": 1519,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 1430,
											"end": 1519,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1430,
											"end": 1519,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1430,
											"end": 1519,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1430,
											"end": 1519,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1430,
											"end": 1519,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1430,
											"end": 1519,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1430,
											"end": 1519,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1430,
											"end": 1519,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1430,
											"end": 1519,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 1430,
											"end": 1519,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1584,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 1577,
											"end": 1583,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1560,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 1552,
											"end": 1572,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1561,
											"end": 1571,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1572,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1552,
											"end": 1572,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1572,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1552,
											"end": 1572,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1572,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1572,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1572,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1552,
											"end": 1572,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1572,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1572,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1572,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1572,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1552,
											"end": 1572,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1572,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1552,
											"end": 1572,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1572,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1576,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 1552,
											"end": 1576,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1584,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1584,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1584,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1552,
											"end": 1584,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1552,
											"end": 1584,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1552,
											"end": 1584,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 1552,
											"end": 1584,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1529,
											"end": 1537,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 1529,
											"end": 1549,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1538,
											"end": 1548,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1529,
											"end": 1549,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1529,
											"end": 1549,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1529,
											"end": 1549,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1529,
											"end": 1549,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1529,
											"end": 1549,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1529,
											"end": 1549,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1529,
											"end": 1549,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1529,
											"end": 1549,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1529,
											"end": 1549,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1529,
											"end": 1549,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1529,
											"end": 1549,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1529,
											"end": 1549,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1529,
											"end": 1549,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1529,
											"end": 1549,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1529,
											"end": 1549,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1529,
											"end": 1584,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1529,
											"end": 1584,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1529,
											"end": 1584,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1529,
											"end": 1584,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 1647,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 1640,
											"end": 1646,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 1635,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1624,
											"end": 1635,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 1639,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 1624,
											"end": 1639,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 1647,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 1647,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 1647,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1624,
											"end": 1647,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 1647,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1624,
											"end": 1647,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 1624,
											"end": 1647,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1610,
											"end": 1621,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1610,
											"end": 1647,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1610,
											"end": 1647,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1610,
											"end": 1647,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1610,
											"end": 1647,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1699,
											"end": 1709,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1678,
											"end": 1718,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1678,
											"end": 1718,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 1696,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1678,
											"end": 1718,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1678,
											"end": 1718,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1678,
											"end": 1718,
											"name": "PUSH",
											"source": 5,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 1711,
											"end": 1717,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1678,
											"end": 1718,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1678,
											"end": 1718,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1678,
											"end": 1718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 1678,
											"end": 1718,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1678,
											"end": 1718,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1678,
											"end": 1718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 1678,
											"end": 1718,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1678,
											"end": 1718,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 1678,
											"end": 1718,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1678,
											"end": 1718,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1678,
											"end": 1718,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1678,
											"end": 1718,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1678,
											"end": 1718,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1678,
											"end": 1718,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1678,
											"end": 1718,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1678,
											"end": 1718,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 1741,
											"end": 1751,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1733,
											"end": 1772,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1733,
											"end": 1772,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1733,
											"end": 1772,
											"name": "PUSH",
											"source": 5,
											"value": "E290C002CBAC2415677AE4CC3941E55C4D4C03145539BC16EB9516662C806B51"
										},
										{
											"begin": 1753,
											"end": 1763,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1765,
											"end": 1771,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1733,
											"end": 1772,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1733,
											"end": 1772,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1733,
											"end": 1772,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 1733,
											"end": 1772,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1733,
											"end": 1772,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1733,
											"end": 1772,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1733,
											"end": 1772,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 1733,
											"end": 1772,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1733,
											"end": 1772,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 1733,
											"end": 1772,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1733,
											"end": 1772,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1733,
											"end": 1772,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1733,
											"end": 1772,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1733,
											"end": 1772,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1733,
											"end": 1772,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1733,
											"end": 1772,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1733,
											"end": 1772,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1779,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1779,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1779,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 414,
											"end": 443,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 414,
											"end": 443,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 414,
											"end": 443,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 414,
											"end": 443,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 414,
											"end": 443,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 414,
											"end": 443,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 414,
											"end": 443,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 414,
											"end": 443,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 414,
											"end": 443,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 414,
											"end": 443,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 414,
											"end": 443,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 414,
											"end": 443,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 414,
											"end": 443,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 414,
											"end": 443,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 414,
											"end": 443,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 414,
											"end": 443,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 414,
											"end": 443,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 414,
											"end": 443,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 414,
											"end": 443,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 414,
											"end": 443,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 414,
											"end": 443,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 414,
											"end": 443,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 414,
											"end": 443,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 414,
											"end": 443,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 414,
											"end": 443,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 414,
											"end": 443,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 414,
											"end": 443,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 414,
											"end": 443,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 414,
											"end": 443,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 414,
											"end": 443,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 414,
											"end": 443,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 414,
											"end": 443,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 414,
											"end": 443,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 414,
											"end": 443,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1785,
											"end": 2286,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 1785,
											"end": 2286,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1880,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1850,
											"end": 1858,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 1850,
											"end": 1870,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1859,
											"end": 1869,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1850,
											"end": 1870,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1850,
											"end": 1870,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1850,
											"end": 1870,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1850,
											"end": 1870,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1850,
											"end": 1870,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1850,
											"end": 1870,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1850,
											"end": 1870,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1850,
											"end": 1870,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1850,
											"end": 1870,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1850,
											"end": 1870,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1850,
											"end": 1870,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1850,
											"end": 1870,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1850,
											"end": 1870,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1850,
											"end": 1870,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1850,
											"end": 1870,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1850,
											"end": 1870,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1850,
											"end": 1880,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1850,
											"end": 1880,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1842,
											"end": 1905,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 1842,
											"end": 1905,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1842,
											"end": 1905,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1842,
											"end": 1905,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1842,
											"end": 1905,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1842,
											"end": 1905,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1842,
											"end": 1905,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1842,
											"end": 1905,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1842,
											"end": 1905,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1842,
											"end": 1905,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 1842,
											"end": 1905,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1842,
											"end": 1905,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 1842,
											"end": 1905,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1842,
											"end": 1905,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 1842,
											"end": 1905,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1842,
											"end": 1905,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1842,
											"end": 1905,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1842,
											"end": 1905,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1842,
											"end": 1905,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1842,
											"end": 1905,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1842,
											"end": 1905,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1842,
											"end": 1905,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1842,
											"end": 1905,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 1842,
											"end": 1905,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1938,
											"end": 1970,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 1963,
											"end": 1969,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1938,
											"end": 1946,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 1938,
											"end": 1958,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1947,
											"end": 1957,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1938,
											"end": 1958,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1938,
											"end": 1958,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1938,
											"end": 1958,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1938,
											"end": 1958,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1938,
											"end": 1958,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1938,
											"end": 1958,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1938,
											"end": 1958,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1938,
											"end": 1958,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1938,
											"end": 1958,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1938,
											"end": 1958,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1938,
											"end": 1958,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1938,
											"end": 1958,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1938,
											"end": 1958,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1938,
											"end": 1958,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1938,
											"end": 1958,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1938,
											"end": 1958,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1938,
											"end": 1962,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1938,
											"end": 1962,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1938,
											"end": 1970,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1938,
											"end": 1970,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1938,
											"end": 1970,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1938,
											"end": 1970,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1938,
											"end": 1970,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1938,
											"end": 1970,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 1938,
											"end": 1970,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1915,
											"end": 1923,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 1915,
											"end": 1935,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1924,
											"end": 1934,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1915,
											"end": 1935,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1915,
											"end": 1935,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1915,
											"end": 1935,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1915,
											"end": 1935,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1915,
											"end": 1935,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1915,
											"end": 1935,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1915,
											"end": 1935,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1915,
											"end": 1935,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1915,
											"end": 1935,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1915,
											"end": 1935,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1915,
											"end": 1935,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1915,
											"end": 1935,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1915,
											"end": 1935,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1915,
											"end": 1935,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1915,
											"end": 1935,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1915,
											"end": 1970,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1915,
											"end": 1970,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1915,
											"end": 1970,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1915,
											"end": 1970,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1994,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 2010,
											"end": 2016,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1994,
											"end": 2005,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1994,
											"end": 2005,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1994,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1994,
											"end": 2009,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1994,
											"end": 2017,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1994,
											"end": 2017,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1994,
											"end": 2017,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1994,
											"end": 2017,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1994,
											"end": 2017,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1994,
											"end": 2017,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 1994,
											"end": 2017,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1980,
											"end": 1991,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1980,
											"end": 2017,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1980,
											"end": 2017,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1980,
											"end": 2017,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1980,
											"end": 2017,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2027,
											"end": 2045,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2048,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 2059,
											"end": 2068,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2059,
											"end": 2068,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2054,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2058,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 2048,
											"end": 2058,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2069,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2069,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2069,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2048,
											"end": 2069,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2069,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2048,
											"end": 2069,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 2048,
											"end": 2069,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2027,
											"end": 2069,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2027,
											"end": 2069,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2107,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2103,
											"end": 2107,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2107,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2107,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2107,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2103,
											"end": 2107,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2107,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2107,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2107,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2103,
											"end": 2107,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2116,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2103,
											"end": 2116,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2116,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 2117,
											"end": 2127,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2129,
											"end": 2139,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2095,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 2095,
											"end": 2165,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2095,
											"end": 2165,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2095,
											"end": 2165,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2095,
											"end": 2165,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2095,
											"end": 2165,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2095,
											"end": 2165,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2095,
											"end": 2165,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2095,
											"end": 2165,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2095,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 2095,
											"end": 2165,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2095,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 2095,
											"end": 2165,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2095,
											"end": 2165,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 2095,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2095,
											"end": 2165,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2095,
											"end": 2165,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2095,
											"end": 2165,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2095,
											"end": 2165,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2095,
											"end": 2165,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2095,
											"end": 2165,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2095,
											"end": 2165,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2095,
											"end": 2165,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 2095,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2209,
											"end": 2210,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2180,
											"end": 2220,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2180,
											"end": 2220,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2189,
											"end": 2199,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2180,
											"end": 2220,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2180,
											"end": 2220,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2180,
											"end": 2220,
											"name": "PUSH",
											"source": 5,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 2213,
											"end": 2219,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2180,
											"end": 2220,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2180,
											"end": 2220,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2180,
											"end": 2220,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 2180,
											"end": 2220,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2180,
											"end": 2220,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2180,
											"end": 2220,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 2180,
											"end": 2220,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2180,
											"end": 2220,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 2180,
											"end": 2220,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2180,
											"end": 2220,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2180,
											"end": 2220,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2180,
											"end": 2220,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2180,
											"end": 2220,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2180,
											"end": 2220,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2180,
											"end": 2220,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2180,
											"end": 2220,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 2248,
											"end": 2258,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "PUSH",
											"source": 5,
											"value": "9B9A581D969359BE3D456613E9E95901B643C75B7B9F369F45494E7151DEB03F"
										},
										{
											"begin": 2260,
											"end": 2266,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2268,
											"end": 2278,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2235,
											"end": 2279,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 1785,
											"end": 2286,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1785,
											"end": 2286,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1785,
											"end": 2286,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2510,
											"end": 2673,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 2510,
											"end": 2673,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2589,
											"end": 2593,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2605,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 2615,
											"end": 2625,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2627,
											"end": 2636,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2638,
											"end": 2644,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2605,
											"end": 2614,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 2605,
											"end": 2645,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2605,
											"end": 2645,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 2605,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2662,
											"end": 2666,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2655,
											"end": 2666,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2655,
											"end": 2666,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2510,
											"end": 2673,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2510,
											"end": 2673,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2510,
											"end": 2673,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2510,
											"end": 2673,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2510,
											"end": 2673,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3706,
											"end": 3847,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 3706,
											"end": 3847,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3788,
											"end": 3795,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3814,
											"end": 3824,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 3814,
											"end": 3831,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3825,
											"end": 3830,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 3831,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3814,
											"end": 3831,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 3831,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3814,
											"end": 3831,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 3831,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 3831,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 3831,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3814,
											"end": 3831,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 3831,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 3831,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 3831,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 3831,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3814,
											"end": 3831,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 3831,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3814,
											"end": 3831,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 3840,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3832,
											"end": 3839,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 3840,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3814,
											"end": 3840,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 3840,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3814,
											"end": 3840,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 3840,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 3840,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 3840,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3814,
											"end": 3840,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 3840,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 3840,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 3840,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 3840,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3814,
											"end": 3840,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 3840,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3814,
											"end": 3840,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 3840,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3807,
											"end": 3840,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3807,
											"end": 3840,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3706,
											"end": 3847,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3706,
											"end": 3847,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3706,
											"end": 3847,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3706,
											"end": 3847,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3706,
											"end": 3847,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 515,
											"end": 539,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 515,
											"end": 539,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 515,
											"end": 539,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 515,
											"end": 539,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 515,
											"end": 539,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 515,
											"end": 539,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3034,
											"end": 3578,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 3034,
											"end": 3578,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3157,
											"end": 3158,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3139,
											"end": 3159,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3139,
											"end": 3159,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3139,
											"end": 3145,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3139,
											"end": 3159,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3139,
											"end": 3159,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3139,
											"end": 3159,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3139,
											"end": 3159,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3131,
											"end": 3190,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 3131,
											"end": 3190,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3131,
											"end": 3190,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3131,
											"end": 3190,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3131,
											"end": 3190,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3131,
											"end": 3190,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3131,
											"end": 3190,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3131,
											"end": 3190,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3131,
											"end": 3190,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3131,
											"end": 3190,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 3131,
											"end": 3190,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3131,
											"end": 3190,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 3131,
											"end": 3190,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3131,
											"end": 3190,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 3131,
											"end": 3190,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3131,
											"end": 3190,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3131,
											"end": 3190,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3131,
											"end": 3190,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3131,
											"end": 3190,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3131,
											"end": 3190,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3131,
											"end": 3190,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3131,
											"end": 3190,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3131,
											"end": 3190,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 3131,
											"end": 3190,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3229,
											"end": 3230,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3208,
											"end": 3231,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3208,
											"end": 3231,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3208,
											"end": 3217,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3208,
											"end": 3231,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3208,
											"end": 3231,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3208,
											"end": 3231,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3208,
											"end": 3231,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3200,
											"end": 3260,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 3200,
											"end": 3260,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3200,
											"end": 3260,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3200,
											"end": 3260,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3200,
											"end": 3260,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3200,
											"end": 3260,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3200,
											"end": 3260,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3200,
											"end": 3260,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3200,
											"end": 3260,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3200,
											"end": 3260,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 3200,
											"end": 3260,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3200,
											"end": 3260,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 3200,
											"end": 3260,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3200,
											"end": 3260,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 3200,
											"end": 3260,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3200,
											"end": 3260,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3200,
											"end": 3260,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3200,
											"end": 3260,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3200,
											"end": 3260,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3200,
											"end": 3260,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3200,
											"end": 3260,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3200,
											"end": 3260,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3200,
											"end": 3260,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 3200,
											"end": 3260,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3291,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3294,
											"end": 3302,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 3294,
											"end": 3310,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3303,
											"end": 3309,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3310,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3294,
											"end": 3310,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3310,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3294,
											"end": 3310,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3310,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3310,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3310,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3294,
											"end": 3310,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3310,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3310,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3310,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3310,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3294,
											"end": 3310,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3310,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3294,
											"end": 3310,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3294,
											"end": 3310,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3310,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3310,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3345,
											"end": 3351,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3328,
											"end": 3341,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3328,
											"end": 3351,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 3328,
											"end": 3351,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3320,
											"end": 3376,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 3320,
											"end": 3376,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3320,
											"end": 3376,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3320,
											"end": 3376,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3320,
											"end": 3376,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3320,
											"end": 3376,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3320,
											"end": 3376,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3320,
											"end": 3376,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3320,
											"end": 3376,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3320,
											"end": 3376,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 3320,
											"end": 3376,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3320,
											"end": 3376,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 3320,
											"end": 3376,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3320,
											"end": 3376,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 3320,
											"end": 3376,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3320,
											"end": 3376,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3320,
											"end": 3376,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3320,
											"end": 3376,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3320,
											"end": 3376,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3320,
											"end": 3376,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3320,
											"end": 3376,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3320,
											"end": 3376,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3320,
											"end": 3376,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 3320,
											"end": 3376,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3405,
											"end": 3430,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 3423,
											"end": 3429,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3405,
											"end": 3418,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3405,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3405,
											"end": 3422,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3405,
											"end": 3430,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3405,
											"end": 3430,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3405,
											"end": 3430,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3405,
											"end": 3430,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3405,
											"end": 3430,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3405,
											"end": 3430,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 3405,
											"end": 3430,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3386,
											"end": 3394,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 3386,
											"end": 3402,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3395,
											"end": 3401,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3386,
											"end": 3402,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3386,
											"end": 3402,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3386,
											"end": 3402,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3386,
											"end": 3402,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3386,
											"end": 3402,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3386,
											"end": 3402,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3386,
											"end": 3402,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3386,
											"end": 3402,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3386,
											"end": 3402,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3386,
											"end": 3402,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3386,
											"end": 3402,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3386,
											"end": 3402,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3386,
											"end": 3402,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3386,
											"end": 3402,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3386,
											"end": 3402,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3386,
											"end": 3430,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3386,
											"end": 3430,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3386,
											"end": 3430,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3386,
											"end": 3430,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3494,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 3487,
											"end": 3493,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3471,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 3463,
											"end": 3482,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3472,
											"end": 3481,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3482,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3463,
											"end": 3482,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3482,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3463,
											"end": 3482,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3482,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3482,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3482,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3463,
											"end": 3482,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3482,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3482,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3482,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3482,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3463,
											"end": 3482,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3482,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3463,
											"end": 3482,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3482,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3486,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 3463,
											"end": 3486,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3494,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3494,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3494,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3463,
											"end": 3494,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3494,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3463,
											"end": 3494,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 3463,
											"end": 3494,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3441,
											"end": 3449,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 3441,
											"end": 3460,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3450,
											"end": 3459,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3441,
											"end": 3460,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3441,
											"end": 3460,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3441,
											"end": 3460,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3441,
											"end": 3460,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3441,
											"end": 3460,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3441,
											"end": 3460,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3441,
											"end": 3460,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3441,
											"end": 3460,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3441,
											"end": 3460,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3441,
											"end": 3460,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3441,
											"end": 3460,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3441,
											"end": 3460,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3441,
											"end": 3460,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3441,
											"end": 3460,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3441,
											"end": 3460,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3441,
											"end": 3494,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3441,
											"end": 3494,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3441,
											"end": 3494,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3441,
											"end": 3494,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3552,
											"end": 3561,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3535,
											"end": 3570,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3535,
											"end": 3570,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3544,
											"end": 3550,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3535,
											"end": 3570,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3535,
											"end": 3570,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3535,
											"end": 3570,
											"name": "PUSH",
											"source": 5,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 3563,
											"end": 3569,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3535,
											"end": 3570,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3535,
											"end": 3570,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3535,
											"end": 3570,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 3535,
											"end": 3570,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3535,
											"end": 3570,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3535,
											"end": 3570,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 3535,
											"end": 3570,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3535,
											"end": 3570,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 3535,
											"end": 3570,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3535,
											"end": 3570,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3535,
											"end": 3570,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3535,
											"end": 3570,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3535,
											"end": 3570,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3535,
											"end": 3570,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3535,
											"end": 3570,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3535,
											"end": 3570,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 3034,
											"end": 3578,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3034,
											"end": 3578,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3034,
											"end": 3578,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3034,
											"end": 3578,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3034,
											"end": 3578,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 59,
											"end": 146,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 206,
											"end": 211,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 237,
											"end": 243,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 231,
											"end": 244,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 222,
											"end": 244,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 222,
											"end": 244,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 277,
											"end": 282,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 212,
											"end": 289,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 212,
											"end": 289,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 212,
											"end": 289,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 212,
											"end": 289,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 212,
											"end": 289,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 341,
											"end": 346,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 385,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 366,
											"end": 386,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 357,
											"end": 386,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 422,
											"end": 427,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 347,
											"end": 434,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 347,
											"end": 434,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 347,
											"end": 434,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 347,
											"end": 434,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 347,
											"end": 434,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 440,
											"end": 583,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 440,
											"end": 583,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 497,
											"end": 502,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 534,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 522,
											"end": 535,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 513,
											"end": 535,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 513,
											"end": 535,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 544,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 571,
											"end": 576,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 544,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 503,
											"end": 583,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 503,
											"end": 583,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 503,
											"end": 583,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 503,
											"end": 583,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 503,
											"end": 583,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 589,
											"end": 851,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 589,
											"end": 851,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 648,
											"end": 654,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 697,
											"end": 699,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 685,
											"end": 694,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 676,
											"end": 683,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 672,
											"end": 695,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 668,
											"end": 700,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 665,
											"end": 667,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 665,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 665,
											"end": 667,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 713,
											"end": 714,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 710,
											"end": 711,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 703,
											"end": 715,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 665,
											"end": 667,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 665,
											"end": 667,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 756,
											"end": 757,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 826,
											"end": 833,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 817,
											"end": 823,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 806,
											"end": 815,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 802,
											"end": 824,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 781,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 781,
											"end": 834,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 781,
											"end": 834,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 781,
											"end": 834,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 771,
											"end": 834,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 771,
											"end": 834,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 727,
											"end": 844,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 655,
											"end": 851,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 655,
											"end": 851,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 655,
											"end": 851,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 655,
											"end": 851,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 655,
											"end": 851,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 857,
											"end": 1264,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 857,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 925,
											"end": 931,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 933,
											"end": 939,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 982,
											"end": 984,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 970,
											"end": 979,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 961,
											"end": 968,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 957,
											"end": 980,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 953,
											"end": 985,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 950,
											"end": 952,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 950,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 950,
											"end": 952,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 998,
											"end": 999,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 995,
											"end": 996,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 988,
											"end": 1000,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 950,
											"end": 952,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 950,
											"end": 952,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1041,
											"end": 1042,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1066,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 1111,
											"end": 1118,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1108,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1091,
											"end": 1100,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1109,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1066,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 1066,
											"end": 1119,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1066,
											"end": 1119,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 1066,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1012,
											"end": 1129,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1168,
											"end": 1170,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1194,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 1239,
											"end": 1246,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1230,
											"end": 1236,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1228,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1215,
											"end": 1237,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1194,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 1194,
											"end": 1247,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1194,
											"end": 1247,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 1194,
											"end": 1247,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1247,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1247,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1139,
											"end": 1257,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 940,
											"end": 1264,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 940,
											"end": 1264,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 940,
											"end": 1264,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 940,
											"end": 1264,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 940,
											"end": 1264,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 940,
											"end": 1264,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1270,
											"end": 1822,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 1270,
											"end": 1822,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1347,
											"end": 1353,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1355,
											"end": 1361,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1363,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1412,
											"end": 1414,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1400,
											"end": 1409,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1391,
											"end": 1398,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1387,
											"end": 1410,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1383,
											"end": 1415,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1382,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 1380,
											"end": 1382,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1428,
											"end": 1429,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1425,
											"end": 1426,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1418,
											"end": 1430,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1382,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 1380,
											"end": 1382,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1471,
											"end": 1472,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1496,
											"end": 1549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 1541,
											"end": 1548,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1532,
											"end": 1538,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1521,
											"end": 1530,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1517,
											"end": 1539,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1496,
											"end": 1549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 1496,
											"end": 1549,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1496,
											"end": 1549,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 1496,
											"end": 1549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1486,
											"end": 1549,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1486,
											"end": 1549,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 1559,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1598,
											"end": 1600,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1624,
											"end": 1677,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 1669,
											"end": 1676,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1660,
											"end": 1666,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1649,
											"end": 1658,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1645,
											"end": 1667,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 1677,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 1624,
											"end": 1677,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1624,
											"end": 1677,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 1624,
											"end": 1677,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1614,
											"end": 1677,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1614,
											"end": 1677,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1687,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1726,
											"end": 1728,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1752,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 1797,
											"end": 1804,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1788,
											"end": 1794,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1777,
											"end": 1786,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 1795,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1752,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 1752,
											"end": 1805,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1752,
											"end": 1805,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 1752,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1742,
											"end": 1805,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1742,
											"end": 1805,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1697,
											"end": 1815,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1370,
											"end": 1822,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1370,
											"end": 1822,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1370,
											"end": 1822,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1370,
											"end": 1822,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1370,
											"end": 1822,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1370,
											"end": 1822,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1828,
											"end": 2235,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 1828,
											"end": 2235,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1896,
											"end": 1902,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1904,
											"end": 1910,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1953,
											"end": 1955,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1941,
											"end": 1950,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1932,
											"end": 1939,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1928,
											"end": 1951,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1924,
											"end": 1956,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1921,
											"end": 1923,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1921,
											"end": 1923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 1921,
											"end": 1923,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1969,
											"end": 1970,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1966,
											"end": 1967,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1959,
											"end": 1971,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1921,
											"end": 1923,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 1921,
											"end": 1923,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2012,
											"end": 2013,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2037,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 2082,
											"end": 2089,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2073,
											"end": 2079,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2062,
											"end": 2071,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2058,
											"end": 2080,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2037,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 2037,
											"end": 2090,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2037,
											"end": 2090,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 2037,
											"end": 2090,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2027,
											"end": 2090,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2027,
											"end": 2090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1983,
											"end": 2100,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2139,
											"end": 2141,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2165,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 2210,
											"end": 2217,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2201,
											"end": 2207,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2190,
											"end": 2199,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2208,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 2165,
											"end": 2218,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2165,
											"end": 2218,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 2165,
											"end": 2218,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2155,
											"end": 2218,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2155,
											"end": 2218,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2110,
											"end": 2228,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 2235,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 2235,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 2235,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 2235,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 2235,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1911,
											"end": 2235,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2241,
											"end": 2519,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 2241,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2308,
											"end": 2314,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2359,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2345,
											"end": 2354,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2336,
											"end": 2343,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2355,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2328,
											"end": 2360,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2325,
											"end": 2327,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2325,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 2325,
											"end": 2327,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2373,
											"end": 2374,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2370,
											"end": 2371,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2363,
											"end": 2375,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2325,
											"end": 2327,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 2325,
											"end": 2327,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2416,
											"end": 2417,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2441,
											"end": 2502,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 2494,
											"end": 2501,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2485,
											"end": 2491,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2474,
											"end": 2483,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2470,
											"end": 2492,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2441,
											"end": 2502,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 2441,
											"end": 2502,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2441,
											"end": 2502,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 2441,
											"end": 2502,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2431,
											"end": 2502,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2431,
											"end": 2502,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2512,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2315,
											"end": 2519,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2315,
											"end": 2519,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2315,
											"end": 2519,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2315,
											"end": 2519,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2315,
											"end": 2519,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2525,
											"end": 2787,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 2525,
											"end": 2787,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2590,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2633,
											"end": 2635,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2621,
											"end": 2630,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2612,
											"end": 2619,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2608,
											"end": 2631,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2604,
											"end": 2636,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2601,
											"end": 2603,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2601,
											"end": 2603,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 2601,
											"end": 2603,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2649,
											"end": 2650,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2646,
											"end": 2647,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2639,
											"end": 2651,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2601,
											"end": 2603,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 2601,
											"end": 2603,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2693,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2717,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 2762,
											"end": 2769,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2753,
											"end": 2759,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2742,
											"end": 2751,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2738,
											"end": 2760,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 2717,
											"end": 2770,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2717,
											"end": 2770,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 2717,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2770,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2770,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2663,
											"end": 2780,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2591,
											"end": 2787,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2591,
											"end": 2787,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2591,
											"end": 2787,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2591,
											"end": 2787,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2591,
											"end": 2787,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2793,
											"end": 3077,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 2793,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2863,
											"end": 2869,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2912,
											"end": 2914,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2900,
											"end": 2909,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2891,
											"end": 2898,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2887,
											"end": 2910,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2883,
											"end": 2915,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2880,
											"end": 2882,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2880,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 2880,
											"end": 2882,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2928,
											"end": 2929,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2925,
											"end": 2926,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2918,
											"end": 2930,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2880,
											"end": 2882,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 2880,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2971,
											"end": 2972,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2996,
											"end": 3060,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 3052,
											"end": 3059,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3043,
											"end": 3049,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3032,
											"end": 3041,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3028,
											"end": 3050,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3060,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 2996,
											"end": 3060,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2996,
											"end": 3060,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 2996,
											"end": 3060,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2986,
											"end": 3060,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2986,
											"end": 3060,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2942,
											"end": 3070,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 3077,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 3077,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 3077,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 3077,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 3077,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3083,
											"end": 3201,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 3083,
											"end": 3201,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3170,
											"end": 3194,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 3188,
											"end": 3193,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3170,
											"end": 3194,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 3170,
											"end": 3194,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3170,
											"end": 3194,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 3170,
											"end": 3194,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3165,
											"end": 3168,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3158,
											"end": 3195,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3148,
											"end": 3201,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3148,
											"end": 3201,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3148,
											"end": 3201,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3207,
											"end": 3316,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 3207,
											"end": 3316,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3288,
											"end": 3309,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 3303,
											"end": 3308,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3288,
											"end": 3309,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 3288,
											"end": 3309,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3288,
											"end": 3309,
											"name": "tag",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 3288,
											"end": 3309,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3283,
											"end": 3286,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3276,
											"end": 3310,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3266,
											"end": 3316,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3266,
											"end": 3316,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3266,
											"end": 3316,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3322,
											"end": 3479,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 3322,
											"end": 3479,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3422,
											"end": 3472,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 3466,
											"end": 3471,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3422,
											"end": 3472,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 3422,
											"end": 3472,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3422,
											"end": 3472,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 3422,
											"end": 3472,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3417,
											"end": 3420,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3410,
											"end": 3473,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3400,
											"end": 3479,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3400,
											"end": 3479,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3400,
											"end": 3479,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3485,
											"end": 3849,
											"name": "tag",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 3485,
											"end": 3849,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3573,
											"end": 3576,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3601,
											"end": 3640,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 3634,
											"end": 3639,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3601,
											"end": 3640,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 3601,
											"end": 3640,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3601,
											"end": 3640,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 3601,
											"end": 3640,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3656,
											"end": 3727,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 3720,
											"end": 3726,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3715,
											"end": 3718,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3656,
											"end": 3727,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 3656,
											"end": 3727,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3656,
											"end": 3727,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 3656,
											"end": 3727,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3727,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3727,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3736,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 3781,
											"end": 3787,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3776,
											"end": 3779,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3769,
											"end": 3773,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3762,
											"end": 3767,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3758,
											"end": 3774,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3736,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 3736,
											"end": 3788,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3736,
											"end": 3788,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 3736,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3813,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 3835,
											"end": 3841,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3813,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 3813,
											"end": 3842,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3813,
											"end": 3842,
											"name": "tag",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 3813,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3808,
											"end": 3811,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3804,
											"end": 3843,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3797,
											"end": 3843,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3797,
											"end": 3843,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3577,
											"end": 3849,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3577,
											"end": 3849,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3577,
											"end": 3849,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3577,
											"end": 3849,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3577,
											"end": 3849,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3577,
											"end": 3849,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3855,
											"end": 4221,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 3855,
											"end": 4221,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3997,
											"end": 4000,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4018,
											"end": 4085,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 4082,
											"end": 4084,
											"name": "PUSH",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 4077,
											"end": 4080,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4018,
											"end": 4085,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 4018,
											"end": 4085,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4018,
											"end": 4085,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 4018,
											"end": 4085,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4011,
											"end": 4085,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4011,
											"end": 4085,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4094,
											"end": 4187,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 4183,
											"end": 4186,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4094,
											"end": 4187,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 4094,
											"end": 4187,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4094,
											"end": 4187,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 4094,
											"end": 4187,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4212,
											"end": 4214,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4207,
											"end": 4210,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4203,
											"end": 4215,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4196,
											"end": 4215,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4196,
											"end": 4215,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4001,
											"end": 4221,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4001,
											"end": 4221,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4001,
											"end": 4221,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4001,
											"end": 4221,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4227,
											"end": 4593,
											"name": "tag",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 4227,
											"end": 4593,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4369,
											"end": 4372,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4390,
											"end": 4457,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 4454,
											"end": 4456,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 4449,
											"end": 4452,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4390,
											"end": 4457,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 4390,
											"end": 4457,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4390,
											"end": 4457,
											"name": "tag",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 4390,
											"end": 4457,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4383,
											"end": 4457,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4383,
											"end": 4457,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4466,
											"end": 4559,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 4555,
											"end": 4558,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4466,
											"end": 4559,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 4466,
											"end": 4559,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4466,
											"end": 4559,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 4466,
											"end": 4559,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4584,
											"end": 4586,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4579,
											"end": 4582,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4575,
											"end": 4587,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4568,
											"end": 4587,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4568,
											"end": 4587,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4373,
											"end": 4593,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4373,
											"end": 4593,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4373,
											"end": 4593,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4373,
											"end": 4593,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4599,
											"end": 4965,
											"name": "tag",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 4599,
											"end": 4965,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4741,
											"end": 4744,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4762,
											"end": 4829,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 4826,
											"end": 4828,
											"name": "PUSH",
											"source": 6,
											"value": "1A"
										},
										{
											"begin": 4821,
											"end": 4824,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4762,
											"end": 4829,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 4762,
											"end": 4829,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4762,
											"end": 4829,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 4762,
											"end": 4829,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4755,
											"end": 4829,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4755,
											"end": 4829,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4838,
											"end": 4931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 4927,
											"end": 4930,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4838,
											"end": 4931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 4838,
											"end": 4931,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4838,
											"end": 4931,
											"name": "tag",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 4838,
											"end": 4931,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4956,
											"end": 4958,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4951,
											"end": 4954,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4947,
											"end": 4959,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4940,
											"end": 4959,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4940,
											"end": 4959,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4745,
											"end": 4965,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4745,
											"end": 4965,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4745,
											"end": 4965,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4745,
											"end": 4965,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4971,
											"end": 5337,
											"name": "tag",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 4971,
											"end": 5337,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5113,
											"end": 5116,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5134,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 5198,
											"end": 5200,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 5193,
											"end": 5196,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5134,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 5134,
											"end": 5201,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5134,
											"end": 5201,
											"name": "tag",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 5134,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5127,
											"end": 5201,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5127,
											"end": 5201,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5210,
											"end": 5303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 5299,
											"end": 5302,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5210,
											"end": 5303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 5210,
											"end": 5303,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5210,
											"end": 5303,
											"name": "tag",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 5210,
											"end": 5303,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5328,
											"end": 5330,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5323,
											"end": 5326,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5319,
											"end": 5331,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5312,
											"end": 5331,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5312,
											"end": 5331,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5117,
											"end": 5337,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5117,
											"end": 5337,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5117,
											"end": 5337,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5117,
											"end": 5337,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5343,
											"end": 5709,
											"name": "tag",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 5343,
											"end": 5709,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5485,
											"end": 5488,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5506,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 5570,
											"end": 5572,
											"name": "PUSH",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 5565,
											"end": 5568,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5506,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 5506,
											"end": 5573,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5506,
											"end": 5573,
											"name": "tag",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 5506,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5499,
											"end": 5573,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5499,
											"end": 5573,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5582,
											"end": 5675,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 5671,
											"end": 5674,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5582,
											"end": 5675,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 5582,
											"end": 5675,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5582,
											"end": 5675,
											"name": "tag",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 5582,
											"end": 5675,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5700,
											"end": 5702,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5695,
											"end": 5698,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5691,
											"end": 5703,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5703,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5703,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5489,
											"end": 5709,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5489,
											"end": 5709,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5489,
											"end": 5709,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5489,
											"end": 5709,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5715,
											"end": 5833,
											"name": "tag",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 5715,
											"end": 5833,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5802,
											"end": 5826,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 5820,
											"end": 5825,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5802,
											"end": 5826,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 5802,
											"end": 5826,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5802,
											"end": 5826,
											"name": "tag",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 5802,
											"end": 5826,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5797,
											"end": 5800,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5790,
											"end": 5827,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5780,
											"end": 5833,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5780,
											"end": 5833,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5780,
											"end": 5833,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5839,
											"end": 6061,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 5839,
											"end": 6061,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5932,
											"end": 5936,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5970,
											"end": 5972,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5959,
											"end": 5968,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5955,
											"end": 5973,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5947,
											"end": 5973,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5947,
											"end": 5973,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5983,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 6051,
											"end": 6052,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6040,
											"end": 6049,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6036,
											"end": 6053,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6027,
											"end": 6033,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5983,
											"end": 6054,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 5983,
											"end": 6054,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5983,
											"end": 6054,
											"name": "tag",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 5983,
											"end": 6054,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5937,
											"end": 6061,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5937,
											"end": 6061,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5937,
											"end": 6061,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5937,
											"end": 6061,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5937,
											"end": 6061,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6067,
											"end": 6399,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 6067,
											"end": 6399,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6188,
											"end": 6192,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6226,
											"end": 6228,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6215,
											"end": 6224,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6211,
											"end": 6229,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6203,
											"end": 6229,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6203,
											"end": 6229,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6239,
											"end": 6310,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 6307,
											"end": 6308,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6296,
											"end": 6305,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6292,
											"end": 6309,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6283,
											"end": 6289,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6239,
											"end": 6310,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 6239,
											"end": 6310,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6239,
											"end": 6310,
											"name": "tag",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 6239,
											"end": 6310,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6320,
											"end": 6392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 6388,
											"end": 6390,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6377,
											"end": 6386,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6373,
											"end": 6391,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6364,
											"end": 6370,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6320,
											"end": 6392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 6320,
											"end": 6392,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6320,
											"end": 6392,
											"name": "tag",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 6320,
											"end": 6392,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6193,
											"end": 6399,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6193,
											"end": 6399,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6193,
											"end": 6399,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6193,
											"end": 6399,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6193,
											"end": 6399,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6193,
											"end": 6399,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6405,
											"end": 6847,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 6405,
											"end": 6847,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6554,
											"end": 6558,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6592,
											"end": 6594,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 6581,
											"end": 6590,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6577,
											"end": 6595,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6569,
											"end": 6595,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6569,
											"end": 6595,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6605,
											"end": 6676,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 6673,
											"end": 6674,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6662,
											"end": 6671,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6658,
											"end": 6675,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6649,
											"end": 6655,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6605,
											"end": 6676,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 6605,
											"end": 6676,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6605,
											"end": 6676,
											"name": "tag",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 6605,
											"end": 6676,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6686,
											"end": 6758,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 6754,
											"end": 6756,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6743,
											"end": 6752,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6739,
											"end": 6757,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6730,
											"end": 6736,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6686,
											"end": 6758,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 6686,
											"end": 6758,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6686,
											"end": 6758,
											"name": "tag",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 6686,
											"end": 6758,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6768,
											"end": 6840,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 6836,
											"end": 6838,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6825,
											"end": 6834,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6821,
											"end": 6839,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6812,
											"end": 6818,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6768,
											"end": 6840,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 6768,
											"end": 6840,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6768,
											"end": 6840,
											"name": "tag",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 6768,
											"end": 6840,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6559,
											"end": 6847,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 6559,
											"end": 6847,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6559,
											"end": 6847,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6559,
											"end": 6847,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6559,
											"end": 6847,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6559,
											"end": 6847,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6559,
											"end": 6847,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6853,
											"end": 7185,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 6853,
											"end": 7185,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6974,
											"end": 6978,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7012,
											"end": 7014,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7001,
											"end": 7010,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6997,
											"end": 7015,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6989,
											"end": 7015,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6989,
											"end": 7015,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7025,
											"end": 7096,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 7093,
											"end": 7094,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7082,
											"end": 7091,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7078,
											"end": 7095,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7069,
											"end": 7075,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7025,
											"end": 7096,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 7025,
											"end": 7096,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7025,
											"end": 7096,
											"name": "tag",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 7025,
											"end": 7096,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7106,
											"end": 7178,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 7174,
											"end": 7176,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7163,
											"end": 7172,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7159,
											"end": 7177,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7150,
											"end": 7156,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7106,
											"end": 7178,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 7106,
											"end": 7178,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7106,
											"end": 7178,
											"name": "tag",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 7106,
											"end": 7178,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6979,
											"end": 7185,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6979,
											"end": 7185,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6979,
											"end": 7185,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6979,
											"end": 7185,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6979,
											"end": 7185,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6979,
											"end": 7185,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7191,
											"end": 7401,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 7191,
											"end": 7401,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7278,
											"end": 7282,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7316,
											"end": 7318,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7305,
											"end": 7314,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7301,
											"end": 7319,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7293,
											"end": 7319,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7293,
											"end": 7319,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7329,
											"end": 7394,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 7391,
											"end": 7392,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7380,
											"end": 7389,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7376,
											"end": 7393,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7367,
											"end": 7373,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7329,
											"end": 7394,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 7329,
											"end": 7394,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7329,
											"end": 7394,
											"name": "tag",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 7329,
											"end": 7394,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7283,
											"end": 7401,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7283,
											"end": 7401,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7283,
											"end": 7401,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7283,
											"end": 7401,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7283,
											"end": 7401,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7407,
											"end": 7655,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 7407,
											"end": 7655,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7513,
											"end": 7517,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7551,
											"end": 7553,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7540,
											"end": 7549,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7536,
											"end": 7554,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7528,
											"end": 7554,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7528,
											"end": 7554,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7564,
											"end": 7648,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 7645,
											"end": 7646,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7634,
											"end": 7643,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7630,
											"end": 7647,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7621,
											"end": 7627,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7564,
											"end": 7648,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 7564,
											"end": 7648,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7564,
											"end": 7648,
											"name": "tag",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 7564,
											"end": 7648,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7518,
											"end": 7655,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7518,
											"end": 7655,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7518,
											"end": 7655,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7518,
											"end": 7655,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7518,
											"end": 7655,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7661,
											"end": 7974,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 7661,
											"end": 7974,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7774,
											"end": 7778,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7812,
											"end": 7814,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7801,
											"end": 7810,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7797,
											"end": 7815,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7789,
											"end": 7815,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7789,
											"end": 7815,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7861,
											"end": 7870,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7855,
											"end": 7859,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7851,
											"end": 7871,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7847,
											"end": 7848,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7836,
											"end": 7845,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7832,
											"end": 7849,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7825,
											"end": 7872,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7889,
											"end": 7967,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 7962,
											"end": 7966,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7953,
											"end": 7959,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7889,
											"end": 7967,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 7889,
											"end": 7967,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7889,
											"end": 7967,
											"name": "tag",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 7889,
											"end": 7967,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7881,
											"end": 7967,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7881,
											"end": 7967,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7779,
											"end": 7974,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7779,
											"end": 7974,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7779,
											"end": 7974,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7779,
											"end": 7974,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7779,
											"end": 7974,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7980,
											"end": 8399,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 7980,
											"end": 8399,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8146,
											"end": 8150,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8184,
											"end": 8186,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8173,
											"end": 8182,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8169,
											"end": 8187,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8161,
											"end": 8187,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8161,
											"end": 8187,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8233,
											"end": 8242,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8227,
											"end": 8231,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8223,
											"end": 8243,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8219,
											"end": 8220,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8208,
											"end": 8217,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8204,
											"end": 8221,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8197,
											"end": 8244,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8261,
											"end": 8392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 8387,
											"end": 8391,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8261,
											"end": 8392,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 8261,
											"end": 8392,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8261,
											"end": 8392,
											"name": "tag",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 8261,
											"end": 8392,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8253,
											"end": 8392,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8253,
											"end": 8392,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8151,
											"end": 8399,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8151,
											"end": 8399,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8151,
											"end": 8399,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8151,
											"end": 8399,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8405,
											"end": 8824,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 8405,
											"end": 8824,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8571,
											"end": 8575,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8609,
											"end": 8611,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8598,
											"end": 8607,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8594,
											"end": 8612,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8586,
											"end": 8612,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8586,
											"end": 8612,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8658,
											"end": 8667,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8652,
											"end": 8656,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8648,
											"end": 8668,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8644,
											"end": 8645,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8633,
											"end": 8642,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8629,
											"end": 8646,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8622,
											"end": 8669,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8686,
											"end": 8817,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 8812,
											"end": 8816,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8686,
											"end": 8817,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 8686,
											"end": 8817,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8686,
											"end": 8817,
											"name": "tag",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 8686,
											"end": 8817,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8678,
											"end": 8817,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8678,
											"end": 8817,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8576,
											"end": 8824,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8576,
											"end": 8824,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8576,
											"end": 8824,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8576,
											"end": 8824,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8830,
											"end": 9249,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 8830,
											"end": 9249,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8996,
											"end": 9000,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9034,
											"end": 9036,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9023,
											"end": 9032,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9019,
											"end": 9037,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9011,
											"end": 9037,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9011,
											"end": 9037,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9083,
											"end": 9092,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9077,
											"end": 9081,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9073,
											"end": 9093,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9069,
											"end": 9070,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9058,
											"end": 9067,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9054,
											"end": 9071,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9047,
											"end": 9094,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9111,
											"end": 9242,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 9237,
											"end": 9241,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9111,
											"end": 9242,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 9111,
											"end": 9242,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9111,
											"end": 9242,
											"name": "tag",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 9111,
											"end": 9242,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9103,
											"end": 9242,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9103,
											"end": 9242,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9001,
											"end": 9249,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9001,
											"end": 9249,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9001,
											"end": 9249,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9001,
											"end": 9249,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9255,
											"end": 9674,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 9255,
											"end": 9674,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9421,
											"end": 9425,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9459,
											"end": 9461,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9448,
											"end": 9457,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9444,
											"end": 9462,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9436,
											"end": 9462,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9436,
											"end": 9462,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9508,
											"end": 9517,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9502,
											"end": 9506,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9498,
											"end": 9518,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9494,
											"end": 9495,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9483,
											"end": 9492,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9479,
											"end": 9496,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9472,
											"end": 9519,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9536,
											"end": 9667,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 9662,
											"end": 9666,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9536,
											"end": 9667,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 9536,
											"end": 9667,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9536,
											"end": 9667,
											"name": "tag",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 9536,
											"end": 9667,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9528,
											"end": 9667,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9528,
											"end": 9667,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9426,
											"end": 9674,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9426,
											"end": 9674,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9426,
											"end": 9674,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9426,
											"end": 9674,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9680,
											"end": 10099,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 9680,
											"end": 10099,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9846,
											"end": 9850,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9884,
											"end": 9886,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9873,
											"end": 9882,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9869,
											"end": 9887,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9861,
											"end": 9887,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9861,
											"end": 9887,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9933,
											"end": 9942,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9927,
											"end": 9931,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9923,
											"end": 9943,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9919,
											"end": 9920,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9908,
											"end": 9917,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9904,
											"end": 9921,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9897,
											"end": 9944,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9961,
											"end": 10092,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 10087,
											"end": 10091,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9961,
											"end": 10092,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 9961,
											"end": 10092,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9961,
											"end": 10092,
											"name": "tag",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 9961,
											"end": 10092,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9953,
											"end": 10092,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9953,
											"end": 10092,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9851,
											"end": 10099,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9851,
											"end": 10099,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9851,
											"end": 10099,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9851,
											"end": 10099,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10105,
											"end": 10327,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 10105,
											"end": 10327,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10198,
											"end": 10202,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10236,
											"end": 10238,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10225,
											"end": 10234,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10221,
											"end": 10239,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10213,
											"end": 10239,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10213,
											"end": 10239,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10249,
											"end": 10320,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 10317,
											"end": 10318,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10306,
											"end": 10315,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10302,
											"end": 10319,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10293,
											"end": 10299,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10249,
											"end": 10320,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 10249,
											"end": 10320,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10249,
											"end": 10320,
											"name": "tag",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 10249,
											"end": 10320,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10203,
											"end": 10327,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10203,
											"end": 10327,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10203,
											"end": 10327,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10203,
											"end": 10327,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10203,
											"end": 10327,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10333,
											"end": 10665,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 10333,
											"end": 10665,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10454,
											"end": 10458,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10492,
											"end": 10494,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10481,
											"end": 10490,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10477,
											"end": 10495,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10469,
											"end": 10495,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10469,
											"end": 10495,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10505,
											"end": 10576,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 10573,
											"end": 10574,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10562,
											"end": 10571,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10558,
											"end": 10575,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10555,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 10505,
											"end": 10576,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 10505,
											"end": 10576,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10505,
											"end": 10576,
											"name": "tag",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 10505,
											"end": 10576,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10586,
											"end": 10658,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 10654,
											"end": 10656,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10643,
											"end": 10652,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10639,
											"end": 10657,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10630,
											"end": 10636,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10586,
											"end": 10658,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 10586,
											"end": 10658,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10586,
											"end": 10658,
											"name": "tag",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 10586,
											"end": 10658,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10459,
											"end": 10665,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 10459,
											"end": 10665,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10459,
											"end": 10665,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10459,
											"end": 10665,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10459,
											"end": 10665,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10459,
											"end": 10665,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10671,
											"end": 10770,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 10671,
											"end": 10770,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10723,
											"end": 10729,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10757,
											"end": 10762,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10751,
											"end": 10763,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10741,
											"end": 10763,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10741,
											"end": 10763,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10730,
											"end": 10770,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10730,
											"end": 10770,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10730,
											"end": 10770,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10730,
											"end": 10770,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10776,
											"end": 10945,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 10776,
											"end": 10945,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10860,
											"end": 10871,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10894,
											"end": 10900,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10889,
											"end": 10892,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10882,
											"end": 10901,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10934,
											"end": 10938,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10929,
											"end": 10932,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10925,
											"end": 10939,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10910,
											"end": 10939,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10910,
											"end": 10939,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10872,
											"end": 10945,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10872,
											"end": 10945,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10872,
											"end": 10945,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10872,
											"end": 10945,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10872,
											"end": 10945,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10951,
											"end": 11256,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 10951,
											"end": 11256,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10991,
											"end": 10994,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11010,
											"end": 11030,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 11028,
											"end": 11029,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11010,
											"end": 11030,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 11010,
											"end": 11030,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11010,
											"end": 11030,
											"name": "tag",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 11010,
											"end": 11030,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11005,
											"end": 11030,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11005,
											"end": 11030,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11044,
											"end": 11064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 11062,
											"end": 11063,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11044,
											"end": 11064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 11044,
											"end": 11064,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11044,
											"end": 11064,
											"name": "tag",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 11044,
											"end": 11064,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11039,
											"end": 11064,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11039,
											"end": 11064,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11198,
											"end": 11199,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11130,
											"end": 11196,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11126,
											"end": 11200,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11123,
											"end": 11124,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11120,
											"end": 11201,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 11117,
											"end": 11119,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11117,
											"end": 11119,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 11117,
											"end": 11119,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11204,
											"end": 11222,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 11204,
											"end": 11222,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 11204,
											"end": 11222,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11204,
											"end": 11222,
											"name": "tag",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 11204,
											"end": 11222,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11117,
											"end": 11119,
											"name": "tag",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 11117,
											"end": 11119,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11248,
											"end": 11249,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11245,
											"end": 11246,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11241,
											"end": 11250,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11234,
											"end": 11250,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11234,
											"end": 11250,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10995,
											"end": 11256,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10995,
											"end": 11256,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10995,
											"end": 11256,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10995,
											"end": 11256,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10995,
											"end": 11256,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 11262,
											"end": 11447,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 11262,
											"end": 11447,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11302,
											"end": 11303,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11319,
											"end": 11339,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 11337,
											"end": 11338,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11319,
											"end": 11339,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 11319,
											"end": 11339,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11319,
											"end": 11339,
											"name": "tag",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 11319,
											"end": 11339,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11314,
											"end": 11339,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11314,
											"end": 11339,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11353,
											"end": 11373,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 11371,
											"end": 11372,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11353,
											"end": 11373,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 11353,
											"end": 11373,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11353,
											"end": 11373,
											"name": "tag",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 11353,
											"end": 11373,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11348,
											"end": 11373,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11348,
											"end": 11373,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11392,
											"end": 11393,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11382,
											"end": 11384,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 11382,
											"end": 11384,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11397,
											"end": 11415,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 11397,
											"end": 11415,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 11397,
											"end": 11415,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11397,
											"end": 11415,
											"name": "tag",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 11397,
											"end": 11415,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11382,
											"end": 11384,
											"name": "tag",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 11382,
											"end": 11384,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11439,
											"end": 11440,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11436,
											"end": 11437,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11432,
											"end": 11441,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 11427,
											"end": 11441,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11427,
											"end": 11441,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11304,
											"end": 11447,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11304,
											"end": 11447,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11304,
											"end": 11447,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11304,
											"end": 11447,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11304,
											"end": 11447,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 11453,
											"end": 11801,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 11453,
											"end": 11801,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11493,
											"end": 11500,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11516,
											"end": 11536,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 11534,
											"end": 11535,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11516,
											"end": 11536,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 11516,
											"end": 11536,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11516,
											"end": 11536,
											"name": "tag",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 11516,
											"end": 11536,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11511,
											"end": 11536,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11511,
											"end": 11536,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11550,
											"end": 11570,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 11568,
											"end": 11569,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11550,
											"end": 11570,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 11550,
											"end": 11570,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11550,
											"end": 11570,
											"name": "tag",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 11550,
											"end": 11570,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11545,
											"end": 11570,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11545,
											"end": 11570,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11738,
											"end": 11739,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11736,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11666,
											"end": 11740,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 11663,
											"end": 11664,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11660,
											"end": 11741,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 11655,
											"end": 11656,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11648,
											"end": 11657,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11641,
											"end": 11658,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11637,
											"end": 11742,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11634,
											"end": 11636,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11634,
											"end": 11636,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 11634,
											"end": 11636,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11745,
											"end": 11763,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 11745,
											"end": 11763,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 11745,
											"end": 11763,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11745,
											"end": 11763,
											"name": "tag",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 11745,
											"end": 11763,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11634,
											"end": 11636,
											"name": "tag",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 11634,
											"end": 11636,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11793,
											"end": 11794,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11790,
											"end": 11791,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11786,
											"end": 11795,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 11775,
											"end": 11795,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11775,
											"end": 11795,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11501,
											"end": 11801,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11501,
											"end": 11801,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11501,
											"end": 11801,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11501,
											"end": 11801,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11501,
											"end": 11801,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 11807,
											"end": 11998,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 11807,
											"end": 11998,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11847,
											"end": 11851,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11867,
											"end": 11887,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 11885,
											"end": 11886,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11867,
											"end": 11887,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 11867,
											"end": 11887,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11867,
											"end": 11887,
											"name": "tag",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 11867,
											"end": 11887,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11862,
											"end": 11887,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11862,
											"end": 11887,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11901,
											"end": 11921,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 11919,
											"end": 11920,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11901,
											"end": 11921,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 11901,
											"end": 11921,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11901,
											"end": 11921,
											"name": "tag",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 11901,
											"end": 11921,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11896,
											"end": 11921,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11896,
											"end": 11921,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11940,
											"end": 11941,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11937,
											"end": 11938,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11934,
											"end": 11942,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 11931,
											"end": 11933,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11931,
											"end": 11933,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 11931,
											"end": 11933,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11945,
											"end": 11963,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 11945,
											"end": 11963,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 11945,
											"end": 11963,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11945,
											"end": 11963,
											"name": "tag",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 11945,
											"end": 11963,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11931,
											"end": 11933,
											"name": "tag",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 11931,
											"end": 11933,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11990,
											"end": 11991,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11987,
											"end": 11988,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11983,
											"end": 11992,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11975,
											"end": 11992,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11975,
											"end": 11992,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11852,
											"end": 11998,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11852,
											"end": 11998,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11852,
											"end": 11998,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11852,
											"end": 11998,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11852,
											"end": 11998,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 12004,
											"end": 12100,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 12004,
											"end": 12100,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12041,
											"end": 12048,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12070,
											"end": 12094,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 12088,
											"end": 12093,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12070,
											"end": 12094,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 12070,
											"end": 12094,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 12070,
											"end": 12094,
											"name": "tag",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 12070,
											"end": 12094,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12059,
											"end": 12094,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12059,
											"end": 12094,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12049,
											"end": 12100,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12049,
											"end": 12100,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12049,
											"end": 12100,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12049,
											"end": 12100,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 12106,
											"end": 12196,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 12106,
											"end": 12196,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12140,
											"end": 12147,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12183,
											"end": 12188,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12176,
											"end": 12189,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 12169,
											"end": 12190,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 12158,
											"end": 12190,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12158,
											"end": 12190,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12148,
											"end": 12196,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12148,
											"end": 12196,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12148,
											"end": 12196,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12148,
											"end": 12196,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 12202,
											"end": 12328,
											"name": "tag",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 12202,
											"end": 12328,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12239,
											"end": 12246,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12279,
											"end": 12321,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12272,
											"end": 12277,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12268,
											"end": 12322,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 12257,
											"end": 12322,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12257,
											"end": 12322,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12247,
											"end": 12328,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12247,
											"end": 12328,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12247,
											"end": 12328,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12247,
											"end": 12328,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 12334,
											"end": 12411,
											"name": "tag",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 12334,
											"end": 12411,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12371,
											"end": 12378,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12400,
											"end": 12405,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12389,
											"end": 12405,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12389,
											"end": 12405,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12379,
											"end": 12411,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12379,
											"end": 12411,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12379,
											"end": 12411,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12379,
											"end": 12411,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 12417,
											"end": 12569,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 12417,
											"end": 12569,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12480,
											"end": 12489,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12513,
											"end": 12563,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 12557,
											"end": 12562,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12513,
											"end": 12563,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 12513,
											"end": 12563,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 12513,
											"end": 12563,
											"name": "tag",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 12513,
											"end": 12563,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12500,
											"end": 12563,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12500,
											"end": 12563,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12490,
											"end": 12569,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12490,
											"end": 12569,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12490,
											"end": 12569,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12490,
											"end": 12569,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 12575,
											"end": 12701,
											"name": "tag",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 12575,
											"end": 12701,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12638,
											"end": 12647,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12671,
											"end": 12695,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 12689,
											"end": 12694,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12671,
											"end": 12695,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 12671,
											"end": 12695,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 12671,
											"end": 12695,
											"name": "tag",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 12671,
											"end": 12695,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12658,
											"end": 12695,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12658,
											"end": 12695,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12648,
											"end": 12701,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12648,
											"end": 12701,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12648,
											"end": 12701,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12648,
											"end": 12701,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 12707,
											"end": 13014,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 12707,
											"end": 13014,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12775,
											"end": 12776,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12785,
											"end": 12898,
											"name": "tag",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 12785,
											"end": 12898,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12799,
											"end": 12805,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12796,
											"end": 12797,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12793,
											"end": 12806,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 12785,
											"end": 12898,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 12785,
											"end": 12898,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 12785,
											"end": 12898,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12884,
											"end": 12885,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12879,
											"end": 12882,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12875,
											"end": 12886,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12869,
											"end": 12887,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 12865,
											"end": 12866,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12860,
											"end": 12863,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 12856,
											"end": 12867,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12849,
											"end": 12888,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12821,
											"end": 12823,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12818,
											"end": 12819,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12814,
											"end": 12824,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12809,
											"end": 12824,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12809,
											"end": 12824,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12785,
											"end": 12898,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 12785,
											"end": 12898,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12785,
											"end": 12898,
											"name": "tag",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 12785,
											"end": 12898,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12916,
											"end": 12922,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12913,
											"end": 12914,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12910,
											"end": 12923,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 12907,
											"end": 12909,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 12907,
											"end": 12909,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 12907,
											"end": 12909,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12996,
											"end": 12997,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12987,
											"end": 12993,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 12982,
											"end": 12985,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 12978,
											"end": 12994,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12971,
											"end": 12998,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12907,
											"end": 12909,
											"name": "tag",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 12907,
											"end": 12909,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12756,
											"end": 13014,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12756,
											"end": 13014,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12756,
											"end": 13014,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12756,
											"end": 13014,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12756,
											"end": 13014,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 13020,
											"end": 13340,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 13020,
											"end": 13340,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13064,
											"end": 13070,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13101,
											"end": 13102,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 13095,
											"end": 13099,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13091,
											"end": 13103,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 13081,
											"end": 13103,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13081,
											"end": 13103,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13148,
											"end": 13149,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 13142,
											"end": 13146,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13138,
											"end": 13150,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 13169,
											"end": 13187,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13159,
											"end": 13161,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "348"
										},
										{
											"begin": 13159,
											"end": 13161,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13225,
											"end": 13229,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 13217,
											"end": 13223,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13213,
											"end": 13230,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 13203,
											"end": 13230,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13203,
											"end": 13230,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13159,
											"end": 13161,
											"name": "tag",
											"source": 6,
											"value": "348"
										},
										{
											"begin": 13159,
											"end": 13161,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13287,
											"end": 13289,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13279,
											"end": 13285,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13276,
											"end": 13290,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 13256,
											"end": 13274,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13253,
											"end": 13291,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 13250,
											"end": 13252,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 13250,
											"end": 13252,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 13250,
											"end": 13252,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13306,
											"end": 13324,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "350"
										},
										{
											"begin": 13306,
											"end": 13324,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 13306,
											"end": 13324,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 13306,
											"end": 13324,
											"name": "tag",
											"source": 6,
											"value": "350"
										},
										{
											"begin": 13306,
											"end": 13324,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13250,
											"end": 13252,
											"name": "tag",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 13250,
											"end": 13252,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13071,
											"end": 13340,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13071,
											"end": 13340,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13071,
											"end": 13340,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13071,
											"end": 13340,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13071,
											"end": 13340,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 13346,
											"end": 13526,
											"name": "tag",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 13346,
											"end": 13526,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13394,
											"end": 13471,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13391,
											"end": 13392,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13384,
											"end": 13472,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13491,
											"end": 13495,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 13488,
											"end": 13489,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 13481,
											"end": 13496,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13515,
											"end": 13519,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 13512,
											"end": 13513,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13505,
											"end": 13520,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 13532,
											"end": 13712,
											"name": "tag",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 13532,
											"end": 13712,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13580,
											"end": 13657,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13577,
											"end": 13578,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13570,
											"end": 13658,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13677,
											"end": 13681,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 13674,
											"end": 13675,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 13667,
											"end": 13682,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13701,
											"end": 13705,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 13698,
											"end": 13699,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13691,
											"end": 13706,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 13718,
											"end": 13898,
											"name": "tag",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 13718,
											"end": 13898,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13766,
											"end": 13843,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13763,
											"end": 13764,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13756,
											"end": 13844,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13863,
											"end": 13867,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 13860,
											"end": 13861,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 13853,
											"end": 13868,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13887,
											"end": 13891,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 13884,
											"end": 13885,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13877,
											"end": 13892,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 13904,
											"end": 14006,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 13904,
											"end": 14006,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13945,
											"end": 13951,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13996,
											"end": 13998,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 13992,
											"end": 13999,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 13987,
											"end": 13989,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 13980,
											"end": 13985,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13976,
											"end": 13990,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13972,
											"end": 14000,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 13962,
											"end": 14000,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13962,
											"end": 14000,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13952,
											"end": 14006,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13952,
											"end": 14006,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13952,
											"end": 14006,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13952,
											"end": 14006,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 14012,
											"end": 14184,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 14012,
											"end": 14184,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14152,
											"end": 14176,
											"name": "PUSH",
											"source": 6,
											"value": "496E73756666696369656E7420616C6C6F77616E636500000000000000000000"
										},
										{
											"begin": 14148,
											"end": 14149,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14140,
											"end": 14146,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14136,
											"end": 14150,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14129,
											"end": 14177,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14118,
											"end": 14184,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14118,
											"end": 14184,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 14190,
											"end": 14360,
											"name": "tag",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 14190,
											"end": 14360,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14330,
											"end": 14352,
											"name": "PUSH",
											"source": 6,
											"value": "496E73756666696369656E742062616C616E6365000000000000000000000000"
										},
										{
											"begin": 14326,
											"end": 14327,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14318,
											"end": 14324,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14314,
											"end": 14328,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14307,
											"end": 14353,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14296,
											"end": 14360,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14296,
											"end": 14360,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 14366,
											"end": 14542,
											"name": "tag",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 14366,
											"end": 14542,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14506,
											"end": 14534,
											"name": "PUSH",
											"source": 6,
											"value": "5472616E736665722066726F6D207A65726F2061646472657373000000000000"
										},
										{
											"begin": 14502,
											"end": 14503,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14494,
											"end": 14500,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14490,
											"end": 14504,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14483,
											"end": 14535,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14472,
											"end": 14542,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14472,
											"end": 14542,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 14548,
											"end": 14718,
											"name": "tag",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 14548,
											"end": 14718,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14688,
											"end": 14710,
											"name": "PUSH",
											"source": 6,
											"value": "55534454207472616E73666572206661696C6564000000000000000000000000"
										},
										{
											"begin": 14684,
											"end": 14685,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14676,
											"end": 14682,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14672,
											"end": 14686,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14665,
											"end": 14711,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14654,
											"end": 14718,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14654,
											"end": 14718,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 14724,
											"end": 14898,
											"name": "tag",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 14724,
											"end": 14898,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14864,
											"end": 14890,
											"name": "PUSH",
											"source": 6,
											"value": "5472616E7366657220746F207A65726F20616464726573730000000000000000"
										},
										{
											"begin": 14860,
											"end": 14861,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14852,
											"end": 14858,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14848,
											"end": 14862,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14841,
											"end": 14891,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14830,
											"end": 14898,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14830,
											"end": 14898,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 14904,
											"end": 15026,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 14904,
											"end": 15026,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14977,
											"end": 15001,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "362"
										},
										{
											"begin": 14995,
											"end": 15000,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14977,
											"end": 15001,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 14977,
											"end": 15001,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 14977,
											"end": 15001,
											"name": "tag",
											"source": 6,
											"value": "362"
										},
										{
											"begin": 14977,
											"end": 15001,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14970,
											"end": 14975,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14967,
											"end": 15002,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 14957,
											"end": 14959,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "363"
										},
										{
											"begin": 14957,
											"end": 14959,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 15016,
											"end": 15017,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15013,
											"end": 15014,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 15006,
											"end": 15018,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 14957,
											"end": 14959,
											"name": "tag",
											"source": 6,
											"value": "363"
										},
										{
											"begin": 14957,
											"end": 14959,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14947,
											"end": 15026,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14947,
											"end": 15026,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 15032,
											"end": 15148,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 15032,
											"end": 15148,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15102,
											"end": 15123,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "365"
										},
										{
											"begin": 15117,
											"end": 15122,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15102,
											"end": 15123,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 15102,
											"end": 15123,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 15102,
											"end": 15123,
											"name": "tag",
											"source": 6,
											"value": "365"
										},
										{
											"begin": 15102,
											"end": 15123,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15095,
											"end": 15100,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15092,
											"end": 15124,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 15082,
											"end": 15084,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "366"
										},
										{
											"begin": 15082,
											"end": 15084,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 15138,
											"end": 15139,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15135,
											"end": 15136,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 15128,
											"end": 15140,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 15082,
											"end": 15084,
											"name": "tag",
											"source": 6,
											"value": "366"
										},
										{
											"begin": 15082,
											"end": 15084,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15072,
											"end": 15148,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15072,
											"end": 15148,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 15154,
											"end": 15276,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 15154,
											"end": 15276,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15227,
											"end": 15251,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "368"
										},
										{
											"begin": 15245,
											"end": 15250,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15227,
											"end": 15251,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 15227,
											"end": 15251,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 15227,
											"end": 15251,
											"name": "tag",
											"source": 6,
											"value": "368"
										},
										{
											"begin": 15227,
											"end": 15251,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15220,
											"end": 15225,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15217,
											"end": 15252,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 15207,
											"end": 15209,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "369"
										},
										{
											"begin": 15207,
											"end": 15209,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 15266,
											"end": 15267,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15263,
											"end": 15264,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 15256,
											"end": 15268,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 15207,
											"end": 15209,
											"name": "tag",
											"source": 6,
											"value": "369"
										},
										{
											"begin": 15207,
											"end": 15209,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15197,
											"end": 15276,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15197,
											"end": 15276,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"allowances(address,address)": "55b6ed5c",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"balances(address)": "27e235e3",
							"buyEvic(uint256)": "954724b4",
							"decimals()": "313ce567",
							"evicPrice()": "ef1f4b84",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"usdt()": "2f48ab7d",
							"withDrawEvic(uint256)": "a604f570"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdtAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_evicPrice\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensBought\",\"type\":\"uint256\"}],\"name\":\"BuyEvic\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"usdtReceived\",\"type\":\"uint256\"}],\"name\":\"WithDrawEvic\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"usdtAmount\",\"type\":\"uint256\"}],\"name\":\"buyEvic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"evicPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdt\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withDrawEvic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"evic/EVIC.sol\":\"EvicToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"evic/EVIC.sol\":{\"keccak256\":\"0x5347cf3403e5caf92aadf5e9c1ede38d3705412de08308c503d79cc43d8f727f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://44471504410465a8eb03fadf7e4b1cc6e4c4f3d232bed44da624ac085c09a7b5\",\"dweb:/ipfs/QmNbFoaj2kShP6Ws6cE9c3d7YmMZ9Py61KS4bj1c5s96x6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1051,
								"contract": "evic/EVIC.sol:EvicToken",
								"label": "usdt",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC20)77"
							},
							{
								"astId": 1054,
								"contract": "evic/EVIC.sol:EvicToken",
								"label": "name",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 1057,
								"contract": "evic/EVIC.sol:EvicToken",
								"label": "symbol",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 1060,
								"contract": "evic/EVIC.sol:EvicToken",
								"label": "decimals",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1062,
								"contract": "evic/EVIC.sol:EvicToken",
								"label": "totalSupply",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1064,
								"contract": "evic/EVIC.sol:EvicToken",
								"label": "evicPrice",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1066,
								"contract": "evic/EVIC.sol:EvicToken",
								"label": "owner",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 1070,
								"contract": "evic/EVIC.sol:EvicToken",
								"label": "balances",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1076,
								"contract": "evic/EVIC.sol:EvicToken",
								"label": "allowances",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)77": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2519",
				"formattedMessage": "Warning: This declaration shadows an existing declaration.\n  --> evic/EVIC.sol:89:24:\n   |\n89 |     function allowance(address owner, address spender) external view virtual returns (uint256) {\n   |                        ^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> evic/EVIC.sol:20:5:\n   |\n20 |     address public owner;\n   |     ^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "This declaration shadows an existing declaration.",
				"secondarySourceLocations": [
					{
						"end": 587,
						"file": "evic/EVIC.sol",
						"message": "The shadowed declaration is here:",
						"start": 567
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 3738,
					"file": "evic/EVIC.sol",
					"start": 3725
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "6321",
				"formattedMessage": "Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n   --> @openzeppelin/contracts/utils/Address.sol:200:30:\n    |\n200 |     ) internal view returns (bytes memory) {\n    |                              ^^^^^^^^^^^^\n\n",
				"message": "Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 7658,
					"file": "@openzeppelin/contracts/utils/Address.sol",
					"start": 7646
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "6321",
				"formattedMessage": "Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n   --> @openzeppelin/contracts/utils/Address.sol:223:30:\n    |\n223 |     ) internal pure returns (bytes memory) {\n    |                              ^^^^^^^^^^^^\n\n",
				"message": "Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 8473,
					"file": "@openzeppelin/contracts/utils/Address.sol",
					"start": 8461
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "212:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 11,
									"name": "Transfer",
									"nameLocation": "394:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "403:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "425:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:0"
									},
									"src": "388:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 20,
									"name": "Approval",
									"nameLocation": "625:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "634:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "657:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "682:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:0"
									},
									"src": "619:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1211:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1223:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1257:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:0"
									},
									"scope": 77,
									"src": "1193:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1557:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1572:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1612:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:0"
									},
									"scope": 77,
									"src": "1538:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2308:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:0"
									},
									"scope": 77,
									"src": "2274:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2677:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2699:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2719:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2758:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:0"
									},
									"scope": 77,
									"src": "2646:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "202:2564:0",
							"usedErrors": []
						}
					],
					"src": "106:2661:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							113
						]
					},
					"id": 114,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "114:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "139:480:1",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
							},
							"fullyImplemented": false,
							"id": 113,
							"linearizedBaseContracts": [
								113
							],
							"name": "IERC20Permit",
							"nameLocation": "630:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "649:792:1",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."
									},
									"functionSelector": "d505accf",
									"id": 98,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "1455:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1479:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1471:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1471:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1502:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1494:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1494:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1527:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1519:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1519:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1550:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1542:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1574:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1568:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 90,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1568:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1593:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1585:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 92,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1585:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1612:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "1604:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 94,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1604:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1461:158:1"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1628:0:1"
									},
									"scope": 113,
									"src": "1446:183:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "1635:294:1",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 106,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "1943:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1958:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "1950:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1950:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1949:15:1"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "1988:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1988:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1987:9:1"
									},
									"scope": 113,
									"src": "1934:63:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "2003:128:1",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 112,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "2198:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2214:2:1"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "2240:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 109,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2240:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2239:9:1"
									},
									"scope": 113,
									"src": "2189:60:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 114,
							"src": "620:1631:1",
							"usedErrors": []
						}
					],
					"src": "114:2138:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							724
						],
						"IERC20": [
							77
						],
						"IERC20Permit": [
							113
						],
						"SafeERC20": [
							394
						]
					},
					"id": 395,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 115,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 116,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 395,
							"sourceUnit": 78,
							"src": "140:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
							"file": "../extensions/draft-IERC20Permit.sol",
							"id": 117,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 395,
							"sourceUnit": 114,
							"src": "164:46:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 118,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 395,
							"sourceUnit": 725,
							"src": "211:36:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 119,
								"nodeType": "StructuredDocumentation",
								"src": "249:457:2",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 394,
							"linearizedBaseContracts": [
								394
							],
							"name": "SafeERC20",
							"nameLocation": "715:9:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 122,
									"libraryName": {
										"id": 120,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 724,
										"src": "737:7:2"
									},
									"nodeType": "UsingForDirective",
									"src": "731:26:2",
									"typeName": {
										"id": 121,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "749:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 144,
										"nodeType": "Block",
										"src": "865:103:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 133,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "895:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 136,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 125,
																			"src": "925:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 44,
																		"src": "925:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 138,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "925:23:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 139,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 127,
																	"src": "950:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 140,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 129,
																	"src": "954:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 134,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "902:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 135,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "902:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "902:58:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 132,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 393,
														"src": "875:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "875:86:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 143,
												"nodeType": "ExpressionStatement",
												"src": "875:86:2"
											}
										]
									},
									"id": 145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "772:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "801:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "794:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 124,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 123,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "794:6:2"
													},
													"referencedDeclaration": 77,
													"src": "794:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "824:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "816:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "844:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "836:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "836:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "784:71:2"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "865:0:2"
									},
									"scope": 394,
									"src": "763:205:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 170,
										"nodeType": "Block",
										"src": "1102:113:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 158,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 148,
															"src": "1132:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 161,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 148,
																			"src": "1162:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 76,
																		"src": "1162:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1162:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 164,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "1191:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 165,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 152,
																	"src": "1197:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 166,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 154,
																	"src": "1201:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 159,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1139:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 160,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1139:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1139:68:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 157,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 393,
														"src": "1112:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1112:96:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 169,
												"nodeType": "ExpressionStatement",
												"src": "1112:96:2"
											}
										]
									},
									"id": 171,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "983:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1016:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "1009:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 147,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 146,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "1009:6:2"
													},
													"referencedDeclaration": 77,
													"src": "1009:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1039:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "1031:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1031:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1061:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "1053:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1053:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1081:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "1073:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "999:93:2"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1102:0:2"
									},
									"scope": 394,
									"src": "974:241:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "1581:497:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 198,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 185,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 183,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 179,
																			"src": "1830:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 184,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1839:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1830:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 186,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1829:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 191,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1870:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$394",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$394",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 190,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1862:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 189,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1862:7:2",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 192,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1862:13:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 193,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 177,
																					"src": "1877:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 187,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 175,
																					"src": "1846:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$77",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 188,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 54,
																				"src": "1846:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 194,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1846:39:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 195,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1889:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1846:44:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 197,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1845:46:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1829:62:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 199,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1905:56:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 182,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1808:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1808:163:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 201,
												"nodeType": "ExpressionStatement",
												"src": "1808:163:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 203,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "2001:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 206,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 175,
																			"src": "2031:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 207,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 64,
																		"src": "2031:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 208,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2031:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 209,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 177,
																	"src": "2055:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 210,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 179,
																	"src": "2064:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 204,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2008:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 205,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2008:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2008:62:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 202,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 393,
														"src": "1981:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1981:90:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 213,
												"nodeType": "ExpressionStatement",
												"src": "1981:90:2"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1221:249:2",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1484:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1512:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1505:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 174,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 173,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "1505:6:2"
													},
													"referencedDeclaration": 77,
													"src": "1505:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1535:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1527:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1527:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1560:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1552:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1552:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:76:2"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1581:0:2"
									},
									"scope": 394,
									"src": "1475:603:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 250,
										"nodeType": "Block",
										"src": "2200:194:2",
										"statements": [
											{
												"assignments": [
													226
												],
												"declarations": [
													{
														"constant": false,
														"id": 226,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2218:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 250,
														"src": "2210:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 225,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2210:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 237,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 231,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2257:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$394",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$394",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2249:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 229,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2249:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 232,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2249:13:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 233,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "2264:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 227,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 218,
																"src": "2233:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$77",
																	"typeString": "contract IERC20"
																}
															},
															"id": 228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 54,
															"src": "2233:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 234,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2233:39:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 235,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 222,
														"src": "2275:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2233:47:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2210:70:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 239,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "2310:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 242,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 218,
																			"src": "2340:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 243,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 64,
																		"src": "2340:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 244,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2340:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 245,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 220,
																	"src": "2364:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 246,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 226,
																	"src": "2373:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 240,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2317:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 241,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2317:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2317:69:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 238,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 393,
														"src": "2290:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2290:97:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 249,
												"nodeType": "ExpressionStatement",
												"src": "2290:97:2"
											}
										]
									},
									"id": 251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2093:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2131:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "2124:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 217,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 216,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "2124:6:2"
													},
													"referencedDeclaration": 77,
													"src": "2124:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2154:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "2146:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2146:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2179:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "2171:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2171:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2114:76:2"
									},
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2200:0:2"
									},
									"scope": 394,
									"src": "2084:310:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 298,
										"nodeType": "Block",
										"src": "2516:370:2",
										"statements": [
											{
												"id": 297,
												"nodeType": "UncheckedBlock",
												"src": "2526:354:2",
												"statements": [
													{
														"assignments": [
															262
														],
														"declarations": [
															{
																"constant": false,
																"id": 262,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "2558:12:2",
																"nodeType": "VariableDeclaration",
																"scope": 297,
																"src": "2550:20:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 261,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2550:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 271,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 267,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2597:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$394",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$394",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 266,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2589:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 265,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2589:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 268,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2589:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 269,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 256,
																	"src": "2604:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 263,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "2573:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 264,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 54,
																"src": "2573:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 270,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2573:39:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2550:62:2"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 273,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 262,
																		"src": "2634:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 274,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 258,
																		"src": "2650:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2634:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2657:43:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 272,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2626:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2626:75:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 278,
														"nodeType": "ExpressionStatement",
														"src": "2626:75:2"
													},
													{
														"assignments": [
															280
														],
														"declarations": [
															{
																"constant": false,
																"id": 280,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "2723:12:2",
																"nodeType": "VariableDeclaration",
																"scope": 297,
																"src": "2715:20:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 279,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2715:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 284,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 281,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 262,
																"src": "2738:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 282,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 258,
																"src": "2753:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2738:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2715:43:2"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 286,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "2792:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 289,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 254,
																					"src": "2822:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$77",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 290,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 64,
																				"src": "2822:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 291,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2822:22:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 292,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 256,
																			"src": "2846:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 293,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 280,
																			"src": "2855:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 287,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2799:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 288,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2799:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 294,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:69:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 285,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 393,
																"src": "2772:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2772:97:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 296,
														"nodeType": "ExpressionStatement",
														"src": "2772:97:2"
													}
												]
											}
										]
									},
									"id": 299,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2409:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2447:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "2440:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 253,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 252,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "2440:6:2"
													},
													"referencedDeclaration": 77,
													"src": "2440:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2470:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "2462:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2462:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2495:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "2487:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:76:2"
									},
									"returnParameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2516:0:2"
									},
									"scope": 394,
									"src": "2400:486:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 354,
										"nodeType": "Block",
										"src": "3107:257:2",
										"statements": [
											{
												"assignments": [
													320
												],
												"declarations": [
													{
														"constant": false,
														"id": 320,
														"mutability": "mutable",
														"name": "nonceBefore",
														"nameLocation": "3125:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 354,
														"src": "3117:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 319,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3117:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 325,
												"initialValue": {
													"arguments": [
														{
															"id": 323,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "3152:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 321,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "3139:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$113",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 322,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 106,
														"src": "3139:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3139:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3117:41:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 329,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "3181:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 330,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 306,
															"src": "3188:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 331,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "3197:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 332,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 310,
															"src": "3204:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 333,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "3214:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 334,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 314,
															"src": "3217:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 335,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 316,
															"src": "3220:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 326,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "3168:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$113",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 328,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 98,
														"src": "3168:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3168:54:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 337,
												"nodeType": "ExpressionStatement",
												"src": "3168:54:2"
											},
											{
												"assignments": [
													339
												],
												"declarations": [
													{
														"constant": false,
														"id": 339,
														"mutability": "mutable",
														"name": "nonceAfter",
														"nameLocation": "3240:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 354,
														"src": "3232:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 338,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3232:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 344,
												"initialValue": {
													"arguments": [
														{
															"id": 342,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "3266:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 340,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "3253:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$113",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 106,
														"src": "3253:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3253:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3232:40:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 346,
																"name": "nonceAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 339,
																"src": "3290:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 349,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 347,
																	"name": "nonceBefore",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 320,
																	"src": "3304:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 348,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3318:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3304:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3290:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a207065726d697420646964206e6f742073756363656564",
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3321:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															},
															"value": "SafeERC20: permit did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															}
														],
														"id": 345,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3282:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3282:75:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 353,
												"nodeType": "ExpressionStatement",
												"src": "3282:75:2"
											}
										]
									},
									"id": 355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safePermit",
									"nameLocation": "2901:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2934:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "2921:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Permit_$113",
													"typeString": "contract IERC20Permit"
												},
												"typeName": {
													"id": 301,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 300,
														"name": "IERC20Permit",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 113,
														"src": "2921:12:2"
													},
													"referencedDeclaration": 113,
													"src": "2921:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Permit_$113",
														"typeString": "contract IERC20Permit"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2957:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "2949:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2949:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2980:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "2972:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2972:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3005:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "2997:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2997:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3028:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "3020:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3020:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3052:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "3046:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 311,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3046:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3071:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "3063:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 313,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3063:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3090:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "3082:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 315,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3082:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2911:186:2"
									},
									"returnParameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3107:0:2"
									},
									"scope": 394,
									"src": "2892:472:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 392,
										"nodeType": "Block",
										"src": "3817:636:2",
										"statements": [
											{
												"assignments": [
													365
												],
												"declarations": [
													{
														"constant": false,
														"id": 365,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4179:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 392,
														"src": "4166:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 364,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4166:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 374,
												"initialValue": {
													"arguments": [
														{
															"id": 371,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "4220:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 372,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4226:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 368,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 359,
																	"src": "4200:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 367,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4192:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 366,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4192:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4192:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 370,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 484,
														"src": "4192:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4192:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4166:95:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 375,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "4275:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 376,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4275:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 377,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4295:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4275:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 391,
												"nodeType": "IfStatement",
												"src": "4271:176:2",
												"trueBody": {
													"id": 390,
													"nodeType": "Block",
													"src": "4298:149:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 382,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 365,
																				"src": "4370:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 384,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4383:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 383,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "4383:4:2",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 385,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4382:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 380,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4359:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 381,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "4359:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 386,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4359:30:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4391:44:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 379,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4351:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 388,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4351:85:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 389,
															"nodeType": "ExpressionStatement",
															"src": "4351:85:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "3370:372:2",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 393,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3756:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3783:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "3776:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 358,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 357,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 77,
														"src": "3776:6:2"
													},
													"referencedDeclaration": 77,
													"src": "3776:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3803:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "3790:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 360,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3790:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3775:33:2"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3817:0:2"
									},
									"scope": 394,
									"src": "3747:706:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 395,
							"src": "707:3748:2",
							"usedErrors": []
						}
					],
					"src": "115:4341:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							724
						]
					},
					"id": 725,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 396,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 397,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:3",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 724,
							"linearizedBaseContracts": [
								724
							],
							"name": "Address",
							"nameLocation": "202:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 411,
										"nodeType": "Block",
										"src": "1241:254:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 405,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 400,
																"src": "1465:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 407,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 408,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 404,
												"id": 410,
												"nodeType": "Return",
												"src": "1458:30:3"
											}
										]
									},
									"documentation": {
										"id": 398,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:3",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "1195:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:3"
									},
									"returnParameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "1235:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 402,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:3"
									},
									"scope": 724,
									"src": "1175:320:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 445,
										"nodeType": "Block",
										"src": "2483:241:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 423,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$724",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$724",
																				"typeString": "library Address"
																			}
																		],
																		"id": 422,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 421,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 424,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 425,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 426,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "2526:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 428,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 420,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 430,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:3"
											},
											{
												"assignments": [
													432,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 432,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 445,
														"src": "2578:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 431,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 439,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 433,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 415,
																"src": "2596:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 436,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 435,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "2618:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 441,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 432,
															"src": "2647:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 442,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 440,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 444,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:3"
											}
										]
									},
									"documentation": {
										"id": 413,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:3",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 446,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "2431:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:3",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "2458:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:3"
									},
									"returnParameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:3"
									},
									"scope": 724,
									"src": "2412:312:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 463,
										"nodeType": "Block",
										"src": "3555:96:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 457,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 449,
															"src": "3594:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 458,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "3602:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 459,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3608:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3611:32:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 456,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															504,
															548
														],
														"referencedDeclaration": 548,
														"src": "3572:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:72:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 455,
												"id": 462,
												"nodeType": "Return",
												"src": "3565:79:3"
											}
										]
									},
									"documentation": {
										"id": 447,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:3",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 464,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "3488:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "3504:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 450,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:3"
									},
									"returnParameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "3541:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 453,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:3"
									},
									"scope": 724,
									"src": "3466:185:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 483,
										"nodeType": "Block",
										"src": "4020:76:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 477,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "4059:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 478,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "4067:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 479,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4073:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 480,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 471,
															"src": "4076:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 476,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															504,
															548
														],
														"referencedDeclaration": 548,
														"src": "4037:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4037:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 475,
												"id": 482,
												"nodeType": "Return",
												"src": "4030:59:3"
											}
										]
									},
									"documentation": {
										"id": 465,
										"nodeType": "StructuredDocumentation",
										"src": "3657:211:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 484,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3882:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3912:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "3904:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3904:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3941:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "3928:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 468,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3928:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3969:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "3955:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 470,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3955:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3894:93:3"
									},
									"returnParameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "4006:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 473,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4006:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4005:14:3"
									},
									"scope": 724,
									"src": "3873:223:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 503,
										"nodeType": "Block",
										"src": "4601:111:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 497,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "4640:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 498,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "4648:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 499,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 491,
															"src": "4654:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 500,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4661:43:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 496,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															504,
															548
														],
														"referencedDeclaration": 548,
														"src": "4618:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4618:87:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 495,
												"id": 502,
												"nodeType": "Return",
												"src": "4611:94:3"
											}
										]
									},
									"documentation": {
										"id": 485,
										"nodeType": "StructuredDocumentation",
										"src": "4102:351:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 504,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4467:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4506:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "4498:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4498:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4535:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "4522:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 488,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4522:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4557:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "4549:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4549:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4488:80:3"
									},
									"returnParameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "4587:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 493,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4587:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4586:14:3"
									},
									"scope": 724,
									"src": "4458:254:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 547,
										"nodeType": "Block",
										"src": "5139:267:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 521,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5165:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$724",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$724",
																				"typeString": "library Address"
																			}
																		],
																		"id": 520,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5157:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 519,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5157:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 522,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5157:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 523,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5157:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 524,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 511,
																"src": "5182:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5157:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 526,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5189:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 518,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5149:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5149:81:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 528,
												"nodeType": "ExpressionStatement",
												"src": "5149:81:3"
											},
											{
												"assignments": [
													530,
													532
												],
												"declarations": [
													{
														"constant": false,
														"id": 530,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5246:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 547,
														"src": "5241:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 529,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5241:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 532,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5268:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 547,
														"src": "5255:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 531,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5255:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 539,
												"initialValue": {
													"arguments": [
														{
															"id": 537,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 509,
															"src": "5308:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 533,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 507,
																"src": "5282:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5282:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 536,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 535,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 511,
																"src": "5301:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5282:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5282:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5240:73:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 541,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 507,
															"src": "5357:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 542,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 530,
															"src": "5365:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 543,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "5374:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 544,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "5386:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 540,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 679,
														"src": "5330:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5330:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 517,
												"id": 546,
												"nodeType": "Return",
												"src": "5323:76:3"
											}
										]
									},
									"documentation": {
										"id": 505,
										"nodeType": "StructuredDocumentation",
										"src": "4718:237:3",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 548,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4969:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5008:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "5000:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 506,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5037:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "5024:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 508,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5024:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5059:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "5051:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5051:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5088:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "5074:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 512,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5074:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4990:116:3"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "5125:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 515,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5125:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5124:14:3"
									},
									"scope": 724,
									"src": "4960:446:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 564,
										"nodeType": "Block",
										"src": "5683:97:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 559,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 551,
															"src": "5719:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 560,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 553,
															"src": "5727:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 561,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5733:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 558,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															565,
															594
														],
														"referencedDeclaration": 594,
														"src": "5700:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5700:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 557,
												"id": 563,
												"nodeType": "Return",
												"src": "5693:80:3"
											}
										]
									},
									"documentation": {
										"id": 549,
										"nodeType": "StructuredDocumentation",
										"src": "5412:166:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 565,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5592:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5619:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "5611:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5611:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5640:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "5627:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 552,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5627:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5610:35:3"
									},
									"returnParameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "5669:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 555,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5669:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5668:14:3"
									},
									"scope": 724,
									"src": "5583:197:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 593,
										"nodeType": "Block",
										"src": "6122:168:3",
										"statements": [
											{
												"assignments": [
													578,
													580
												],
												"declarations": [
													{
														"constant": false,
														"id": 578,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6138:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 593,
														"src": "6133:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 577,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6133:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 580,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6160:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 593,
														"src": "6147:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 579,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6147:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 585,
												"initialValue": {
													"arguments": [
														{
															"id": 583,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "6192:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 581,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "6174:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6174:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6174:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6132:65:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 587,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "6241:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 588,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "6249:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 589,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "6258:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 590,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "6270:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 586,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 679,
														"src": "6214:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6214:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 576,
												"id": 592,
												"nodeType": "Return",
												"src": "6207:76:3"
											}
										]
									},
									"documentation": {
										"id": 566,
										"nodeType": "StructuredDocumentation",
										"src": "5786:173:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5973:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6009:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "6001:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6001:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6038:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "6025:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 569,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6025:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6066:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "6052:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 571,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6052:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5991:93:3"
									},
									"returnParameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "6108:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 574,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6108:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6107:14:3"
									},
									"scope": 724,
									"src": "5964:326:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 610,
										"nodeType": "Block",
										"src": "6566:101:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 605,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 597,
															"src": "6604:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 606,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 599,
															"src": "6612:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 607,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6618:41:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 604,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															611,
															640
														],
														"referencedDeclaration": 640,
														"src": "6583:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6583:77:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 603,
												"id": 609,
												"nodeType": "Return",
												"src": "6576:84:3"
											}
										]
									},
									"documentation": {
										"id": 595,
										"nodeType": "StructuredDocumentation",
										"src": "6296:168:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6478:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6507:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "6499:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6499:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6528:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "6515:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 598,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6515:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6498:35:3"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "6552:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 601,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6552:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6551:14:3"
									},
									"scope": 724,
									"src": "6469:198:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 639,
										"nodeType": "Block",
										"src": "7008:170:3",
										"statements": [
											{
												"assignments": [
													624,
													626
												],
												"declarations": [
													{
														"constant": false,
														"id": 624,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7024:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 639,
														"src": "7019:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 623,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7019:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 626,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7046:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 639,
														"src": "7033:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 625,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7033:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 631,
												"initialValue": {
													"arguments": [
														{
															"id": 629,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "7080:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 627,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "7060:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 628,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7060:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7060:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7018:67:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 633,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "7129:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "7137:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 635,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "7146:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 636,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 618,
															"src": "7158:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 632,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 679,
														"src": "7102:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7102:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 622,
												"id": 638,
												"nodeType": "Return",
												"src": "7095:76:3"
											}
										]
									},
									"documentation": {
										"id": 612,
										"nodeType": "StructuredDocumentation",
										"src": "6673:175:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 640,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6862:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6900:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "6892:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6892:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6929:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "6916:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 615,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6916:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6957:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "6943:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 617,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6943:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6882:93:3"
									},
									"returnParameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "6994:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 620,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6994:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6993:14:3"
									},
									"scope": 724,
									"src": "6853:325:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 678,
										"nodeType": "Block",
										"src": "7660:434:3",
										"statements": [
											{
												"condition": {
													"id": 654,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 645,
													"src": "7674:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 676,
													"nodeType": "Block",
													"src": "8030:58:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 672,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 647,
																		"src": "8052:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 673,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 649,
																		"src": "8064:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 671,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 723,
																	"src": "8044:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 674,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8044:33:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 675,
															"nodeType": "ExpressionStatement",
															"src": "8044:33:3"
														}
													]
												},
												"id": 677,
												"nodeType": "IfStatement",
												"src": "7670:418:3",
												"trueBody": {
													"id": 670,
													"nodeType": "Block",
													"src": "7683:341:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 655,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 647,
																		"src": "7701:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 656,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7701:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 657,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7722:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7701:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 667,
															"nodeType": "IfStatement",
															"src": "7697:286:3",
															"trueBody": {
																"id": 666,
																"nodeType": "Block",
																"src": "7725:258:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 661,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 643,
																							"src": "7927:6:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 660,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 412,
																						"src": "7916:10:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 662,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7916:18:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 663,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7936:31:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 659,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "7908:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 664,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7908:60:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 665,
																		"nodeType": "ExpressionStatement",
																		"src": "7908:60:3"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 668,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 647,
																"src": "8003:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 653,
															"id": 669,
															"nodeType": "Return",
															"src": "7996:17:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "7184:277:3",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 679,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7475:26:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7519:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "7511:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7511:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7540:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "7535:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 644,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7535:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7570:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "7557:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 646,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7557:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7604:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "7590:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 648,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7590:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7501:121:3"
									},
									"returnParameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "7646:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 651,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7646:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7645:14:3"
									},
									"scope": 724,
									"src": "7466:628:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 702,
										"nodeType": "Block",
										"src": "8475:135:3",
										"statements": [
											{
												"condition": {
													"id": 691,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 682,
													"src": "8489:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 700,
													"nodeType": "Block",
													"src": "8546:58:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 696,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 684,
																		"src": "8568:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 697,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 686,
																		"src": "8580:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 695,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 723,
																	"src": "8560:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 698,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8560:33:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 699,
															"nodeType": "ExpressionStatement",
															"src": "8560:33:3"
														}
													]
												},
												"id": 701,
												"nodeType": "IfStatement",
												"src": "8485:119:3",
												"trueBody": {
													"id": 694,
													"nodeType": "Block",
													"src": "8498:42:3",
													"statements": [
														{
															"expression": {
																"id": 692,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 684,
																"src": "8519:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 690,
															"id": 693,
															"nodeType": "Return",
															"src": "8512:17:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 680,
										"nodeType": "StructuredDocumentation",
										"src": "8100:210:3",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 703,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8324:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8355:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "8350:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 681,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8350:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8385:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "8372:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 683,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8372:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8419:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "8405:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 685,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8405:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8340:97:3"
									},
									"returnParameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "8461:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 688,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8461:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8460:14:3"
									},
									"scope": 724,
									"src": "8315:295:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 722,
										"nodeType": "Block",
										"src": "8699:457:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 710,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "8775:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 711,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8775:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 712,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8795:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8775:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 720,
													"nodeType": "Block",
													"src": "9105:45:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 717,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 707,
																		"src": "9126:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 716,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9119:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 718,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9119:20:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 719,
															"nodeType": "ExpressionStatement",
															"src": "9119:20:3"
														}
													]
												},
												"id": 721,
												"nodeType": "IfStatement",
												"src": "8771:379:3",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "8798:301:3",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "8956:133:3",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8974:40:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9003:10:3"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "8997:5:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8997:17:3"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "8978:15:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9042:2:3",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9046:10:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9038:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9038:19:3"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9059:15:3"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9031:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9031:44:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9031:44:3"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "istanbul",
															"externalReferences": [
																{
																	"declaration": 705,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9003:10:3",
																	"valueSize": 1
																},
																{
																	"declaration": 705,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9046:10:3",
																	"valueSize": 1
																}
															],
															"id": 714,
															"nodeType": "InlineAssembly",
															"src": "8947:142:3"
														}
													]
												}
											}
										]
									},
									"id": 723,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8625:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8646:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "8633:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 704,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8633:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8672:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "8658:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 706,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8658:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8632:53:3"
									},
									"returnParameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8699:0:3"
									},
									"scope": 724,
									"src": "8616:540:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 725,
							"src": "194:8964:3",
							"usedErrors": []
						}
					],
					"src": "101:9058:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1036
						]
					},
					"id": 1037,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 726,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 727,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:4",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1036,
							"linearizedBaseContracts": [
								1036
							],
							"name": "SafeMath",
							"nameLocation": "490:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 758,
										"nodeType": "Block",
										"src": "717:140:4",
										"statements": [
											{
												"id": 757,
												"nodeType": "UncheckedBlock",
												"src": "727:124:4",
												"statements": [
													{
														"assignments": [
															740
														],
														"declarations": [
															{
																"constant": false,
																"id": 740,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 757,
																"src": "751:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 739,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 744,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 743,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 741,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 730,
																"src": "763:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 742,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 732,
																"src": "767:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 747,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 745,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 740,
																"src": "786:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 746,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 730,
																"src": "790:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 752,
														"nodeType": "IfStatement",
														"src": "782:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 748,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 749,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 750,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 738,
															"id": 751,
															"nodeType": "Return",
															"src": "793:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 753,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 754,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 740,
																	"src": "838:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 755,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 738,
														"id": 756,
														"nodeType": "Return",
														"src": "824:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 728,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:4",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 759,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "657:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "668:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 731,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:4"
									},
									"returnParameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "702:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 734,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 759,
												"src": "708:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:4"
									},
									"scope": 1036,
									"src": "641:216:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 786,
										"nodeType": "Block",
										"src": "1078:113:4",
										"statements": [
											{
												"id": 785,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 773,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 771,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 764,
																"src": "1116:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 772,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 762,
																"src": "1120:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 778,
														"nodeType": "IfStatement",
														"src": "1112:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 774,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 775,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 776,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 770,
															"id": 777,
															"nodeType": "Return",
															"src": "1123:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 779,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 782,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 780,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 762,
																		"src": "1168:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 781,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 764,
																		"src": "1172:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 783,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 770,
														"id": 784,
														"nodeType": "Return",
														"src": "1154:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 760,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:4",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 787,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "1018:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "1029:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:4"
									},
									"returnParameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "1063:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 766,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "1069:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:4"
									},
									"scope": 1036,
									"src": "1002:189:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 828,
										"nodeType": "Block",
										"src": "1415:417:4",
										"statements": [
											{
												"id": 827,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 801,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 799,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 790,
																"src": "1683:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 800,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 806,
														"nodeType": "IfStatement",
														"src": "1679:28:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 802,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 803,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 804,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 798,
															"id": 805,
															"nodeType": "Return",
															"src": "1691:16:4"
														}
													},
													{
														"assignments": [
															808
														],
														"declarations": [
															{
																"constant": false,
																"id": 808,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:4",
																"nodeType": "VariableDeclaration",
																"scope": 827,
																"src": "1721:9:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 807,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 812,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 811,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 809,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 790,
																"src": "1733:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 810,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 792,
																"src": "1737:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 817,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 815,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 813,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 808,
																	"src": "1756:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 814,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 790,
																	"src": "1760:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 816,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 792,
																"src": "1765:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 822,
														"nodeType": "IfStatement",
														"src": "1752:33:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 818,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 819,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 820,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 798,
															"id": 821,
															"nodeType": "Return",
															"src": "1768:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 823,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 824,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 808,
																	"src": "1813:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 825,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 798,
														"id": 826,
														"nodeType": "Return",
														"src": "1799:16:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 788,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:4",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 829,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "1355:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "1366:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:4"
									},
									"returnParameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "1400:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 794,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "1406:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:4"
									},
									"scope": 1036,
									"src": "1339:493:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 856,
										"nodeType": "Block",
										"src": "2057:114:4",
										"statements": [
											{
												"id": 855,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 843,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 841,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 834,
																"src": "2095:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 842,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 848,
														"nodeType": "IfStatement",
														"src": "2091:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 844,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 845,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 846,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 840,
															"id": 847,
															"nodeType": "Return",
															"src": "2103:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 849,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 852,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 850,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 832,
																		"src": "2148:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 851,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 834,
																		"src": "2152:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 853,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 840,
														"id": 854,
														"nodeType": "Return",
														"src": "2134:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 830,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:4",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 857,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "1997:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "2008:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:4"
									},
									"returnParameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "2042:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 836,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "2048:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:4"
									},
									"scope": 1036,
									"src": "1981:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 884,
										"nodeType": "Block",
										"src": "2406:114:4",
										"statements": [
											{
												"id": 883,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:4",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 871,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 869,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 862,
																"src": "2444:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 870,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 876,
														"nodeType": "IfStatement",
														"src": "2440:29:4",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 872,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 873,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 874,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 868,
															"id": 875,
															"nodeType": "Return",
															"src": "2452:17:4"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 877,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 880,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 878,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 860,
																		"src": "2497:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 879,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 862,
																		"src": "2501:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 881,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 868,
														"id": 882,
														"nodeType": "Return",
														"src": "2483:20:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 858,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 885,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "2346:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "2357:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 861,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:4"
									},
									"returnParameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "2391:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 864,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "2397:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 866,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:4"
									},
									"scope": 1036,
									"src": "2330:190:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 899,
										"nodeType": "Block",
										"src": "2822:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 895,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 888,
														"src": "2839:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 896,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 890,
														"src": "2843:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 894,
												"id": 898,
												"nodeType": "Return",
												"src": "2832:12:4"
											}
										]
									},
									"documentation": {
										"id": 886,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:4",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 900,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "2768:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 887,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "2779:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:4"
									},
									"returnParameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "2813:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:4"
									},
									"scope": 1036,
									"src": "2755:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "3189:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 910,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 903,
														"src": "3206:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 911,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 905,
														"src": "3210:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 909,
												"id": 913,
												"nodeType": "Return",
												"src": "3199:12:4"
											}
										]
									},
									"documentation": {
										"id": 901,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "3135:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 902,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "3146:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:4"
									},
									"returnParameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "3180:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:4"
									},
									"scope": 1036,
									"src": "3122:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 929,
										"nodeType": "Block",
										"src": "3532:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 925,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 918,
														"src": "3549:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 926,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 920,
														"src": "3553:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 924,
												"id": 928,
												"nodeType": "Return",
												"src": "3542:12:4"
											}
										]
									},
									"documentation": {
										"id": 916,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:4",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 930,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "3478:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 917,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "3489:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:4"
									},
									"returnParameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "3523:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:4"
									},
									"scope": 1036,
									"src": "3465:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 944,
										"nodeType": "Block",
										"src": "3917:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 940,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 933,
														"src": "3934:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 941,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 935,
														"src": "3938:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 939,
												"id": 943,
												"nodeType": "Return",
												"src": "3927:12:4"
											}
										]
									},
									"documentation": {
										"id": 931,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:4",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 945,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "3863:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 932,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "3874:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 934,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:4"
									},
									"returnParameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "3908:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 937,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:4"
									},
									"scope": 1036,
									"src": "3850:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 959,
										"nodeType": "Block",
										"src": "4466:29:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 955,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 948,
														"src": "4483:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 956,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "4487:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 954,
												"id": 958,
												"nodeType": "Return",
												"src": "4476:12:4"
											}
										]
									},
									"documentation": {
										"id": 946,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 960,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "4412:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "4423:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 949,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:4"
									},
									"returnParameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "4457:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 952,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:4"
									},
									"scope": 1036,
									"src": "4399:96:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 984,
										"nodeType": "Block",
										"src": "5084:106:4",
										"statements": [
											{
												"id": 983,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 975,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 973,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 965,
																		"src": "5126:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 974,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 963,
																		"src": "5131:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 976,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 967,
																	"src": "5134:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 972,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 977,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 978,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 981,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 979,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 963,
																"src": "5168:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 980,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 965,
																"src": "5172:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 971,
														"id": 982,
														"nodeType": "Return",
														"src": "5161:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 961,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 985,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "4981:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "5000:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "5019:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 966,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:4"
									},
									"returnParameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "5075:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 969,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:4"
									},
									"scope": 1036,
									"src": "4959:231:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1009,
										"nodeType": "Block",
										"src": "5799:105:4",
										"statements": [
											{
												"id": 1008,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1000,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 998,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 990,
																		"src": "5841:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 999,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1001,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 992,
																	"src": "5848:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 997,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1002,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1003,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1006,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1004,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 988,
																"src": "5882:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1005,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 990,
																"src": "5886:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 996,
														"id": 1007,
														"nodeType": "Return",
														"src": "5875:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 986,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:4",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1010,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "5696:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 987,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "5715:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 989,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "5734:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 991,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:4"
									},
									"returnParameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "5790:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 994,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:4"
									},
									"scope": 1036,
									"src": "5674:230:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1034,
										"nodeType": "Block",
										"src": "6675:105:4",
										"statements": [
											{
												"id": 1033,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:4",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1025,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1023,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1015,
																		"src": "6717:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1024,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1026,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1017,
																	"src": "6724:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1022,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1027,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1028,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:4"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1031,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1029,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1013,
																"src": "6758:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1030,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1015,
																"src": "6762:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1021,
														"id": 1032,
														"nodeType": "Return",
														"src": "6751:12:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1011,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1035,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "6572:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1012,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "6591:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1014,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "6610:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1016,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:4"
									},
									"returnParameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "6666:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1019,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:4"
									},
									"scope": 1036,
									"src": "6550:230:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1037,
							"src": "482:6300:4",
							"usedErrors": []
						}
					],
					"src": "107:6676:4"
				},
				"id": 4
			},
			"evic/EVIC.sol": {
				"ast": {
					"absolutePath": "evic/EVIC.sol",
					"exportedSymbols": {
						"Address": [
							724
						],
						"EvicToken": [
							1474
						],
						"IERC20": [
							77
						],
						"IERC20Permit": [
							113
						],
						"SafeERC20": [
							394
						],
						"SafeMath": [
							1036
						]
					},
					"id": 1475,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1038,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1039,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1475,
							"sourceUnit": 1037,
							"src": "58:57:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1040,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1475,
							"sourceUnit": 78,
							"src": "116:56:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1041,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1475,
							"sourceUnit": 395,
							"src": "173:65:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1474,
							"linearizedBaseContracts": [
								1474
							],
							"name": "EvicToken",
							"nameLocation": "249:9:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1044,
									"libraryName": {
										"id": 1042,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1036,
										"src": "271:8:5"
									},
									"nodeType": "UsingForDirective",
									"src": "265:27:5",
									"typeName": {
										"id": 1043,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "284:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 1048,
									"libraryName": {
										"id": 1045,
										"name": "SafeERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 394,
										"src": "303:9:5"
									},
									"nodeType": "UsingForDirective",
									"src": "297:27:5",
									"typeName": {
										"id": 1047,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1046,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "317:6:5"
										},
										"referencedDeclaration": 77,
										"src": "317:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "2f48ab7d",
									"id": 1051,
									"mutability": "mutable",
									"name": "usdt",
									"nameLocation": "343:4:5",
									"nodeType": "VariableDeclaration",
									"scope": 1474,
									"src": "329:18:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1050,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1049,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "329:6:5"
										},
										"referencedDeclaration": 77,
										"src": "329:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "06fdde03",
									"id": 1054,
									"mutability": "mutable",
									"name": "name",
									"nameLocation": "389:4:5",
									"nodeType": "VariableDeclaration",
									"scope": 1474,
									"src": "375:33:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1052,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "375:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "4556494320546f6b656e",
										"id": 1053,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "396:12:5",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_452fb55c0a5ac0a494fb133ef0d88748f6db4819b198b439bafeeae1de99d6a5",
											"typeString": "literal_string \"EVIC Token\""
										},
										"value": "EVIC Token"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "95d89b41",
									"id": 1057,
									"mutability": "mutable",
									"name": "symbol",
									"nameLocation": "428:6:5",
									"nodeType": "VariableDeclaration",
									"scope": 1474,
									"src": "414:29:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1055,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "414:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "45564943",
										"id": 1056,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "437:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_e6d7666829770f721e361adfdbaa549da5182e7ce133a1ca306ce86e565c008b",
											"typeString": "literal_string \"EVIC\""
										},
										"value": "EVIC"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "313ce567",
									"id": 1060,
									"mutability": "mutable",
									"name": "decimals",
									"nameLocation": "464:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 1474,
									"src": "449:28:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1058,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "449:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3138",
										"id": 1059,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "475:2:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "18160ddd",
									"id": 1062,
									"mutability": "mutable",
									"name": "totalSupply",
									"nameLocation": "498:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 1474,
									"src": "483:26:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1061,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "483:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ef1f4b84",
									"id": 1064,
									"mutability": "mutable",
									"name": "evicPrice",
									"nameLocation": "530:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 1474,
									"src": "515:24:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1063,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "515:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 1066,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "582:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 1474,
									"src": "567:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1065,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "567:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "27e235e3",
									"id": 1070,
									"mutability": "mutable",
									"name": "balances",
									"nameLocation": "629:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 1474,
									"src": "594:43:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1069,
										"keyType": {
											"id": 1067,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "602:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "594:27:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1068,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "613:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "55b6ed5c",
									"id": 1076,
									"mutability": "mutable",
									"name": "allowances",
									"nameLocation": "698:10:5",
									"nodeType": "VariableDeclaration",
									"scope": 1474,
									"src": "643:65:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 1075,
										"keyType": {
											"id": 1071,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "651:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "643:47:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 1074,
											"keyType": {
												"id": 1072,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "670:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "662:27:5",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 1073,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "681:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 1084,
									"name": "Transfer",
									"nameLocation": "721:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1078,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "746:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "730:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1077,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "730:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1080,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "768:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "752:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1079,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "752:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1082,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "780:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "772:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1081,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "772:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "729:57:5"
									},
									"src": "715:72:5"
								},
								{
									"anonymous": false,
									"id": 1092,
									"name": "Approval",
									"nameLocation": "798:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "823:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "807:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1085,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "807:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1088,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "846:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "830:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1087,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "830:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1090,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "863:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1092,
												"src": "855:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1089,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "855:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "806:63:5"
									},
									"src": "792:78:5"
								},
								{
									"anonymous": false,
									"id": 1100,
									"name": "BuyEvic",
									"nameLocation": "881:7:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1094,
												"indexed": true,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "905:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "889:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1093,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1096,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "920:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "912:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1095,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "912:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1098,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokensBought",
												"nameLocation": "936:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "928:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1097,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "928:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:61:5"
									},
									"src": "875:75:5"
								},
								{
									"anonymous": false,
									"id": 1108,
									"name": "WithDrawEvic",
									"nameLocation": "961:12:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1102,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "990:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "974:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "974:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1104,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1005:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "997:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "997:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1106,
												"indexed": false,
												"mutability": "mutable",
												"name": "usdtReceived",
												"nameLocation": "1021:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "1013:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1013:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "973:61:5"
									},
									"src": "955:80:5"
								},
								{
									"body": {
										"id": 1130,
										"nodeType": "Block",
										"src": "1096:104:5",
										"statements": [
											{
												"expression": {
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1115,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1066,
														"src": "1106:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1116,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1114:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1117,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1114:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1106:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1119,
												"nodeType": "ExpressionStatement",
												"src": "1106:18:5"
											},
											{
												"expression": {
													"id": 1124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1120,
														"name": "usdt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1051,
														"src": "1134:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1122,
																"name": "_usdtAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1110,
																"src": "1148:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1121,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "1141:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1123,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1141:20:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"src": "1134:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"id": 1125,
												"nodeType": "ExpressionStatement",
												"src": "1134:27:5"
											},
											{
												"expression": {
													"id": 1128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1126,
														"name": "evicPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1064,
														"src": "1171:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1127,
														"name": "_evicPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1112,
														"src": "1183:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1171:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1129,
												"nodeType": "ExpressionStatement",
												"src": "1171:22:5"
											}
										]
									},
									"id": 1131,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "_usdtAddress",
												"nameLocation": "1062:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "1054:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1054:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "_evicPrice",
												"nameLocation": "1084:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "1076:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1076:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1053:42:5"
									},
									"returnParameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1096:0:5"
									},
									"scope": 1474,
									"src": "1042:158:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1209,
										"nodeType": "Block",
										"src": "1252:527:5",
										"statements": [
											{
												"assignments": [
													1137
												],
												"declarations": [
													{
														"constant": false,
														"id": 1137,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "1270:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 1209,
														"src": "1262:14:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1136,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1262:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1142,
												"initialValue": {
													"arguments": [
														{
															"id": 1140,
															"name": "evicPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1064,
															"src": "1294:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1138,
															"name": "usdtAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1133,
															"src": "1279:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1139,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 930,
														"src": "1279:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1279:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1262:42:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1146,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1353:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1353:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1150,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1373:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_EvicToken_$1474",
																					"typeString": "contract EvicToken"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_EvicToken_$1474",
																					"typeString": "contract EvicToken"
																				}
																			],
																			"id": 1149,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1365:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1148,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1365:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1151,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1365:13:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1144,
																		"name": "usdt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1051,
																		"src": "1338:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1145,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "allowance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 54,
																	"src": "1338:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view external returns (uint256)"
																	}
																},
																"id": 1152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1338:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1153,
																"name": "usdtAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1133,
																"src": "1383:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1338:55:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7420616c6c6f77616e6365",
															"id": 1155,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1395:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc",
																"typeString": "literal_string \"Insufficient allowance\""
															},
															"value": "Insufficient allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc",
																"typeString": "literal_string \"Insufficient allowance\""
															}
														],
														"id": 1143,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1330:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1330:90:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1157,
												"nodeType": "ExpressionStatement",
												"src": "1330:90:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1161,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1456:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1162,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1456:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1165,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1476:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_EvicToken_$1474",
																				"typeString": "contract EvicToken"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_EvicToken_$1474",
																				"typeString": "contract EvicToken"
																			}
																		],
																		"id": 1164,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1468:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1163,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1468:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1166,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1468:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1167,
																	"name": "usdtAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1133,
																	"src": "1483:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1159,
																	"name": "usdt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1051,
																	"src": "1438:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1160,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 76,
																"src": "1438:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 1168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1438:56:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "55534454207472616e73666572206661696c6564",
															"id": 1169,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1496:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4",
																"typeString": "literal_string \"USDT transfer failed\""
															},
															"value": "USDT transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4",
																"typeString": "literal_string \"USDT transfer failed\""
															}
														],
														"id": 1158,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1430:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1430:89:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1171,
												"nodeType": "ExpressionStatement",
												"src": "1430:89:5"
											},
											{
												"expression": {
													"id": 1183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1172,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1070,
															"src": "1529:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1175,
														"indexExpression": {
															"expression": {
																"id": 1173,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1538:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1538:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1529:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1181,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1137,
																"src": "1577:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1176,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1070,
																	"src": "1552:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1179,
																"indexExpression": {
																	"expression": {
																		"id": 1177,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1561:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1178,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1561:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1552:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 900,
															"src": "1552:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1182,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1552:32:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1529:55:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1184,
												"nodeType": "ExpressionStatement",
												"src": "1529:55:5"
											},
											{
												"expression": {
													"id": 1190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1185,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1062,
														"src": "1610:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1188,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1137,
																"src": "1640:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1186,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1062,
																"src": "1624:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 900,
															"src": "1624:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1189,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1624:23:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1610:37:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1191,
												"nodeType": "ExpressionStatement",
												"src": "1610:37:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1695:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1194,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1687:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1193,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1687:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1196,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1687:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1197,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1699:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1198,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1699:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1199,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1137,
															"src": "1711:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1192,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1084,
														"src": "1678:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1678:40:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1201,
												"nodeType": "EmitStatement",
												"src": "1673:45:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1203,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1741:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1741:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1205,
															"name": "usdtAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1133,
															"src": "1753:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1206,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1137,
															"src": "1765:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1202,
														"name": "BuyEvic",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1100,
														"src": "1733:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1733:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1208,
												"nodeType": "EmitStatement",
												"src": "1728:44:5"
											}
										]
									},
									"functionSelector": "954724b4",
									"id": 1210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyEvic",
									"nameLocation": "1215:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "usdtAmount",
												"nameLocation": "1231:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "1223:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:20:5"
									},
									"returnParameters": {
										"id": 1135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1252:0:5"
									},
									"scope": 1474,
									"src": "1206:573:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1279,
										"nodeType": "Block",
										"src": "1832:454:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1216,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1070,
																	"src": "1850:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1219,
																"indexExpression": {
																	"expression": {
																		"id": 1217,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1859:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1218,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1859:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1850:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1220,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1212,
																"src": "1874:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1850:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 1222,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1882:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 1215,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1842:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1842:63:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1224,
												"nodeType": "ExpressionStatement",
												"src": "1842:63:5"
											},
											{
												"expression": {
													"id": 1236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1225,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1070,
															"src": "1915:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1228,
														"indexExpression": {
															"expression": {
																"id": 1226,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1924:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1924:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1915:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1234,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1212,
																"src": "1963:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1229,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1070,
																	"src": "1938:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1232,
																"indexExpression": {
																	"expression": {
																		"id": 1230,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1947:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1947:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1938:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 915,
															"src": "1938:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1235,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1938:32:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1915:55:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1237,
												"nodeType": "ExpressionStatement",
												"src": "1915:55:5"
											},
											{
												"expression": {
													"id": 1243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1238,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1062,
														"src": "1980:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1241,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1212,
																"src": "2010:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1239,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1062,
																"src": "1994:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1240,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 915,
															"src": "1994:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1242,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1994:23:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1980:37:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1244,
												"nodeType": "ExpressionStatement",
												"src": "1980:37:5"
											},
											{
												"assignments": [
													1246
												],
												"declarations": [
													{
														"constant": false,
														"id": 1246,
														"mutability": "mutable",
														"name": "usdtAmount",
														"nameLocation": "2035:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1279,
														"src": "2027:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1245,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2027:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1251,
												"initialValue": {
													"arguments": [
														{
															"id": 1249,
															"name": "evicPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1064,
															"src": "2059:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1247,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1212,
															"src": "2048:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1248,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 945,
														"src": "2048:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2048:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2027:42:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1255,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2117:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1256,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2117:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1257,
																	"name": "usdtAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1246,
																	"src": "2129:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1253,
																	"name": "usdt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1051,
																	"src": "2103:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1254,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 44,
																"src": "2103:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 1258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2103:37:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "55534454207472616e73666572206661696c6564",
															"id": 1259,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2142:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4",
																"typeString": "literal_string \"USDT transfer failed\""
															},
															"value": "USDT transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b3295075fa7fca4b40bbe643670df8daec732e3f637bee98813a2a9d48dabed4",
																"typeString": "literal_string \"USDT transfer failed\""
															}
														],
														"id": 1252,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2095:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2095:70:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1261,
												"nodeType": "ExpressionStatement",
												"src": "2095:70:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1263,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2189:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1264,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2189:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1267,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2209:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1266,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2201:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1265,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2201:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1268,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2201:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1269,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1212,
															"src": "2213:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1262,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1084,
														"src": "2180:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2180:40:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1271,
												"nodeType": "EmitStatement",
												"src": "2175:45:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1273,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2248:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2248:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1275,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1212,
															"src": "2260:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1276,
															"name": "usdtAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1246,
															"src": "2268:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1272,
														"name": "WithDrawEvic",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1108,
														"src": "2235:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2235:44:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1278,
												"nodeType": "EmitStatement",
												"src": "2230:49:5"
											}
										]
									},
									"functionSelector": "a604f570",
									"id": 1280,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withDrawEvic",
									"nameLocation": "1794:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1815:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "1807:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1807:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1806:16:5"
									},
									"returnParameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1832:0:5"
									},
									"scope": 1474,
									"src": "1785:501:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1307,
										"nodeType": "Block",
										"src": "2374:130:5",
										"statements": [
											{
												"expression": {
													"id": 1296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1289,
																"name": "allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1076,
																"src": "2384:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1293,
															"indexExpression": {
																"expression": {
																	"id": 1290,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2395:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1291,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2395:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2384:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1294,
														"indexExpression": {
															"id": 1292,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1282,
															"src": "2407:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2384:31:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1295,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1284,
														"src": "2418:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2384:40:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1297,
												"nodeType": "ExpressionStatement",
												"src": "2384:40:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1299,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2448:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2448:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1301,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1282,
															"src": "2460:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1302,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1284,
															"src": "2469:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1298,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1092,
														"src": "2439:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2439:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1304,
												"nodeType": "EmitStatement",
												"src": "2434:42:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1305,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2493:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1288,
												"id": 1306,
												"nodeType": "Return",
												"src": "2486:11:5"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 1308,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2301:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2317:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "2309:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2309:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2334:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "2326:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2308:33:5"
									},
									"returnParameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "2368:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1286,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2368:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2367:6:5"
									},
									"scope": 1474,
									"src": "2292:212:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1326,
										"nodeType": "Block",
										"src": "2595:78:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1318,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2615:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2615:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1320,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1310,
															"src": "2627:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1321,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1312,
															"src": "2638:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1317,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1445,
														"src": "2605:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2605:40:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1323,
												"nodeType": "ExpressionStatement",
												"src": "2605:40:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1324,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2662:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1316,
												"id": 1325,
												"nodeType": "Return",
												"src": "2655:11:5"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 1327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "2519:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2536:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "2528:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2528:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2555:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "2547:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2547:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2527:35:5"
									},
									"returnParameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "2589:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1314,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2589:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2588:6:5"
									},
									"scope": 1474,
									"src": "2510:163:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1375,
										"nodeType": "Block",
										"src": "2784:244:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1346,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1339,
																		"name": "allowances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1076,
																		"src": "2802:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 1341,
																	"indexExpression": {
																		"id": 1340,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1329,
																		"src": "2813:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2802:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1344,
																"indexExpression": {
																	"expression": {
																		"id": 1342,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2821:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2821:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2802:30:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1345,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1333,
																"src": "2836:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2802:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7420616c6c6f77616e6365",
															"id": 1347,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2844:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc",
																"typeString": "literal_string \"Insufficient allowance\""
															},
															"value": "Insufficient allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc",
																"typeString": "literal_string \"Insufficient allowance\""
															}
														],
														"id": 1338,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2794:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2794:75:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1349,
												"nodeType": "ExpressionStatement",
												"src": "2794:75:5"
											},
											{
												"expression": {
													"id": 1365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1350,
																"name": "allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1076,
																"src": "2879:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1354,
															"indexExpression": {
																"id": 1351,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1329,
																"src": "2890:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2879:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1355,
														"indexExpression": {
															"expression": {
																"id": 1352,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2898:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2898:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2879:30:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1363,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1333,
																"src": "2947:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1356,
																		"name": "allowances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1076,
																		"src": "2912:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 1358,
																	"indexExpression": {
																		"id": 1357,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1329,
																		"src": "2923:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2912:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1361,
																"indexExpression": {
																	"expression": {
																		"id": 1359,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2931:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1360,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2931:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2912:30:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 915,
															"src": "2912:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1364,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2912:42:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2879:75:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1366,
												"nodeType": "ExpressionStatement",
												"src": "2879:75:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1368,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1329,
															"src": "2974:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1369,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1331,
															"src": "2982:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1370,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1333,
															"src": "2993:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1367,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1445,
														"src": "2964:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2964:36:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1372,
												"nodeType": "ExpressionStatement",
												"src": "2964:36:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1373,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3017:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1337,
												"id": 1374,
												"nodeType": "Return",
												"src": "3010:11:5"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 1376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2688:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1329,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2709:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "2701:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2725:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "2717:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2717:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2744:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "2736:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2736:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2700:51:5"
									},
									"returnParameters": {
										"id": 1337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1336,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "2778:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1335,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2778:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2777:6:5"
									},
									"scope": 1474,
									"src": "2679:349:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1444,
										"nodeType": "Block",
										"src": "3121:457:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1386,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1378,
																"src": "3139:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1389,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3157:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3149:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1387,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3149:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1390,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3149:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3139:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e736665722066726f6d207a65726f2061646472657373",
															"id": 1392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3161:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9327589bf0ac3c8391456c2ba71427407eee4108207e593161489f5cc3bfd328",
																"typeString": "literal_string \"Transfer from zero address\""
															},
															"value": "Transfer from zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9327589bf0ac3c8391456c2ba71427407eee4108207e593161489f5cc3bfd328",
																"typeString": "literal_string \"Transfer from zero address\""
															}
														],
														"id": 1385,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3131:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3131:59:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1394,
												"nodeType": "ExpressionStatement",
												"src": "3131:59:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1401,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1396,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1380,
																"src": "3208:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1399,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3229:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1398,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3221:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1397,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3221:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1400,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3221:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3208:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657220746f207a65726f2061646472657373",
															"id": 1402,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3233:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e2dfeab02b222f051bcdc198fffb9c7808c9161f9ffd1d262daa2f4a220cf47b",
																"typeString": "literal_string \"Transfer to zero address\""
															},
															"value": "Transfer to zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e2dfeab02b222f051bcdc198fffb9c7808c9161f9ffd1d262daa2f4a220cf47b",
																"typeString": "literal_string \"Transfer to zero address\""
															}
														],
														"id": 1395,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3200:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3200:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1404,
												"nodeType": "ExpressionStatement",
												"src": "3200:60:5"
											},
											{
												"assignments": [
													1406
												],
												"declarations": [
													{
														"constant": false,
														"id": 1406,
														"mutability": "mutable",
														"name": "senderBalance",
														"nameLocation": "3278:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 1444,
														"src": "3270:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1405,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3270:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1410,
												"initialValue": {
													"baseExpression": {
														"id": 1407,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1070,
														"src": "3294:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1409,
													"indexExpression": {
														"id": 1408,
														"name": "sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1378,
														"src": "3303:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3294:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3270:40:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1412,
																"name": "senderBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1406,
																"src": "3328:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1413,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1382,
																"src": "3345:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3328:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 1415,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3353:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 1411,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3320:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3320:56:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1417,
												"nodeType": "ExpressionStatement",
												"src": "3320:56:5"
											},
											{
												"expression": {
													"id": 1425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1418,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1070,
															"src": "3386:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1420,
														"indexExpression": {
															"id": 1419,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1378,
															"src": "3395:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3386:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1423,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1382,
																"src": "3423:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1421,
																"name": "senderBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1406,
																"src": "3405:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 915,
															"src": "3405:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1424,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3405:25:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3386:44:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1426,
												"nodeType": "ExpressionStatement",
												"src": "3386:44:5"
											},
											{
												"expression": {
													"id": 1436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1427,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1070,
															"src": "3441:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1429,
														"indexExpression": {
															"id": 1428,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1380,
															"src": "3450:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3441:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1434,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1382,
																"src": "3487:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1430,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1070,
																	"src": "3463:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1432,
																"indexExpression": {
																	"id": 1431,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1380,
																	"src": "3472:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3463:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 900,
															"src": "3463:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1435,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3463:31:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3441:53:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1437,
												"nodeType": "ExpressionStatement",
												"src": "3441:53:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1439,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1378,
															"src": "3544:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1440,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1380,
															"src": "3552:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1441,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1382,
															"src": "3563:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1438,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1084,
														"src": "3535:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3535:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1443,
												"nodeType": "EmitStatement",
												"src": "3530:40:5"
											}
										]
									},
									"id": 1445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "3043:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3061:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "3053:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3053:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3077:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "3069:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3096:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "3088:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3088:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3052:51:5"
									},
									"returnParameters": {
										"id": 1384,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3121:0:5"
									},
									"scope": 1474,
									"src": "3034:544:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1456,
										"nodeType": "Block",
										"src": "3659:41:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1452,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1070,
														"src": "3676:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1454,
													"indexExpression": {
														"id": 1453,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1447,
														"src": "3685:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3676:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1451,
												"id": 1455,
												"nodeType": "Return",
												"src": "3669:24:5"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 1457,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3592:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1447,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3610:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "3602:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1446,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3602:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3601:17:5"
									},
									"returnParameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "3650:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3650:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3649:9:5"
									},
									"scope": 1474,
									"src": "3583:117:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1472,
										"nodeType": "Block",
										"src": "3797:50:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1466,
															"name": "allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1076,
															"src": "3814:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1468,
														"indexExpression": {
															"id": 1467,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1459,
															"src": "3825:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3814:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1470,
													"indexExpression": {
														"id": 1469,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1461,
														"src": "3832:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3814:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1465,
												"id": 1471,
												"nodeType": "Return",
												"src": "3807:33:5"
											}
										]
									},
									"functionSelector": "dd62ed3e",
									"id": 1473,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3715:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3733:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1473,
												"src": "3725:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3725:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1461,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3748:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1473,
												"src": "3740:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3740:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3724:32:5"
									},
									"returnParameters": {
										"id": 1465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1464,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1473,
												"src": "3788:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3788:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3787:9:5"
									},
									"scope": 1474,
									"src": "3706:141:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								}
							],
							"scope": 1475,
							"src": "240:3610:5",
							"usedErrors": []
						}
					],
					"src": "33:3817:5"
				},
				"id": 5
			}
		}
	}
}