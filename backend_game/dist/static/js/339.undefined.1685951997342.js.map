{"version":3,"file":"static/js/339.undefined.1685951997342.js","mappings":"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","sources":["webpack://knowledge/./src/components/register.vue","webpack://knowledge/./src/utils/helper.js","webpack://knowledge/./src/components/register.vue?e122"],"sourcesContent":["<template>\n  <div class=\"login-bg\">\n    <div class=\"logo\" style=\"position: relative; z-index: 9; padding-left: 20px; text-align: left\">\n      <img :src=\"require('../assets/img/logo.png')\" />\n      <span class=\"wtext-l\">Chess Of Stars</span>\n    </div>\n    <div class=\"login-box\" style=\"margin-top:10px\">\n      <h3 class=\"title-des wtext-xl\">Welcome !</h3>\n      <p class=\"text-muted\"><small>register your own account^^</small></p>\n      <el-form ref=\"formRef\" :rules=\"rules\" label-position=\"top\" label-width=\"100px\" :model=\"form\" style=\"padding-top: 40px\">\n        <el-form-item label=\"Email\" prop=\"email\">\n          <el-input v-model=\"form.email\" placeholder=\"enter your email\" clearable :readonly=\"btndisabled\" />\n        </el-form-item>\n        <el-form-item label=\"Verify code\" prop=\"code\">\n          <el-row :gutter=\"10\" style=\"width:100%\">\n            <el-col :span=\"18\">\n              <el-input v-model=\"form.code\" type=\"text\" placeholder=\"enter your verify code\" clearable />\n            </el-col>\n            <el-col :span=\"6\">\n              <el-button @click=\"getVerifyCode\" type=\"primary\" :disabled=\"btndisabled\" plain>{{!btndisabled?'send': ''}}\n                <count-down-time v-if=\"btndisabled\" :limit=\"time\" @change=\"()=>{btndisabled = false}\"></count-down-time>\n              </el-button>\n            </el-col>\n          </el-row>\n        </el-form-item>\n        <el-form-item label=\"Nick name\" prop=\"name\">\n          <el-input v-model=\"form.name\" placeholder=\"enter your nick name\" clearable />\n        </el-form-item>\n        <el-form-item label=\"Password\" prop=\"passwd\">\n          <el-input v-model=\"form.passwd\" type=\"password\" placeholder=\"enter your password\" show-password clearable />\n        </el-form-item>\n        <el-form-item label=\"Repeat password\" prop=\"rpassword\">\n          <el-input v-model=\"form.rpassword\" type=\"password\" placeholder=\"enter your password again\" show-password clearable />\n        </el-form-item>\n        <!--<el-form-item label=\"type\">\n          <el-select v-model=\"form.userType\" placeholder=\"select\" style=\"width: 100%\" clearable>\n            <el-option v-for=\"(item, index) in roleList\" :key=\"index\" :label=\"item.name\" :value=\"item.id\"></el-option>\n          </el-select>\n        </el-form-item>-->\n        <el-form-item>\n          <el-button type=\"primary\" class=\"w-100 shadow\" @click=\"doRegister()\">Sign Up</el-button>\n        </el-form-item>\n      </el-form>\n      <div style=\"margin-top: 60px; font-size: 14px\"><span class=\"text-muted\">Has account？</span><a href=\"/login\">Sign In</a></div>\n    </div>\n  </div>\n</template>\n<script setup>\nimport { ref, onMounted } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { useRouter } from \"vue-router\";\nimport { userApi } from \"@/api/request\";\nimport { AppHelper } from \"@/utils/helper\";\nimport { loadingHelper } from \"@/utils/loading\";\nimport { encryptAES, decryptAES } from \"@/utils/crypto\";\nimport { ElNotification, ElMessage } from \"element-plus\";\nimport CountDownTime from \"@/components/count-down-time.vue\"\nconst store = useStore();\nconst router = useRouter();\nconst roleList = ref([{ id: 0, name: 'channel leader' }, { id: 1, name: 'club boss' }, { id: 2, name: 'user' }]);//0-渠道商 1-俱乐部老板 2 普通用户\nconst formRef = ref(null);\nlet id = AppHelper.getURLParam('id');\nconst form = ref({\n  email: \"\",\n  name: \"\",\n  passwd: \"\",\n  userType: 2,\n  code: \"\",\n  rpassword: \"\",\n  inviterId: id?decryptAES(id):null,\n});\nconst rules = ref({});\nconst time = ref(0)\nconst btndisabled = ref(false)\nrules.value.email = [\n  { required: true, message: \"Email is required\", trigger: \"blur\" },\n  {\n    type: 'email',\n    message: 'Please input correct email address',\n    trigger: ['blur', 'change'],\n  },\n  {\n    validator: function (rule, value, callback) {\n      if (value) {\n        userApi.checkEmail(value).then(res => {\n          if (res.data) callback();\n          else callback(new Error(\"this email has been used,please use another one\"));\n        })\n      }\n    },\n    trigger: \"blur\",\n  },\n];\nrules.value.name = [\n  { required: true, message: \"Nick name is required\", trigger: \"blur\" },\n  { min: 2, max: 64, message: \"The length between 2 and 64 character\", trigger: \"blur\" },\n  {\n    required: true,\n    pattern: /^[a-zA-Z]{1}([a-zA-Z0-9]|[_]){1,64}$/,\n    message: \"Begin with a letter, and use letters, numbers and the underscore(_)\",\n    trigger: \"blur\",\n  },\n  {\n    validator: function (rule, value, callback) {\n      if (value) {\n        userApi.checkUser(value).then(res => {\n          if (res.code == 0 && !res.data) callback();\n          else callback(new Error(\"this nick name has been used,please use another one\"));\n        })\n      }\n    },\n    trigger: \"blur\",\n  },\n];\nrules.value.passwd = [\n  { required: true, message: \"Password is required\", trigger: \"blur\" },\n  { min: 8, max: 64, message: \"The length between 8 and 64 character\", trigger: \"blur\" },\n  {\n    required: true,\n    pattern: /^(?!^\\d+$)(?!^[a-z]+$)(?!^[A-Z]+$)(?!^[^a-z0-9]+$)(?!^[^A-Z0-9]+$)(?!^.*[\\u4E00-\\u9FA5].*$)^\\S*$/,\n    message: \"Contains at least two types of numbers, uppercase and lowercase letters, and special characters\",\n    trigger: \"blur\",\n  }\n];\nrules.value.code = [{ required: true, message: \"Verify code is required\", trigger: \"blur\" }];\nrules.value.rpassword = [\n  { required: true, message: \"password is required\", trigger: \"blur\" },\n  { min: 8, max: 64, message: \"The length between 8 and 64 character\", trigger: \"blur\" },\n  {\n    required: true,\n    pattern: /^(?!^\\d+$)(?!^[a-z]+$)(?!^[A-Z]+$)(?!^[^a-z0-9]+$)(?!^[^A-Z0-9]+$)(?!^.*[\\u4E00-\\u9FA5].*$)^\\S*$/,\n    message: \"Contains at least two types of numbers, uppercase and lowercase letters, and special characters\",\n    trigger: \"blur\",\n  },\n  {\n    validator: function (rule, value, callback) {\n      if (value != form.value.passwd) {\n        callback(new Error(\"The passwords are inconsistent, please re-enter \"));\n      } else {\n        //校验通过\n        callback();\n      }\n    },\n    trigger: \"blur\",\n  },\n];\nfunction getVerifyCode() {\n  formRef.value.validateField(['email'], (valid) => {\n    if (valid) {\n      loadingHelper.show()\n      userApi.code({ email: form.value.email }).then(res => {\n        if (res.code == 0) {\n          ElNotification({\n            type: \"success\",\n            message: \"send successfully!\",\n          });\n          btndisabled.value = true;\n          time.value = res.data;\n          loadingHelper.hide()\n        }\n      })\n    }\n  })\n}\nfunction doRegister() {\n  formRef.value.validate((valid) => {\n    if (valid) {\n      loadingHelper.show();\n      let data = {\n        email: form.value.email,\n        name: form.value.name,\n        passwd: encryptAES(form.value.passwd),\n        userType: form.value.userType,\n        code: form.value.code,\n        inviterId: form.value.inviterId\n      }\n      userApi.signup(data).then((res) => {\n        if (res.code == 0 && res.msg == \"success\") {\n          doLogin();\n        }\n        loadingHelper.hide();\n      });\n    }\n  });\n}\nfunction doLogin() {\n  loadingHelper.show();\n  let data = {\n    email: form.value.email,\n    passwd: form.value.passwd,\n  };\n  userApi.login(data).then((res) => {\n    if (res.code == 0 && res.msg == \"success\") {\n      store.commit(\"setUser\", { name: res.data.userName, account: res.data.walletAddress, id: res.data.userId });\n      store.commit(\"setRole\", res.data.userType);\n      store.commit(\"setToken\", res.data.token);\n      router.push({\n        path: \"/plat/dashboard\",\n      });\n    }\n    loadingHelper.hide();\n  });\n}\n</script>\n","export const AppHelper = {\n    getURLParam:(key)=>{\n        let curUrl = new URL(window.location)\n\t\tlet curUrlParams = curUrl.searchParams;\n\t\tlet value = curUrlParams.get(key);\n        return value;\n    }\n}\nexport const DateHelper = {\n    toString: (date, fmt) => {\n        if (!date) return \"\";\n        if (!fmt) fmt = \"yyyy-MM-dd hh:mm:ss\";\n        let d = new Date(date);\n        let o = {\n            \"M+\": d.getMonth() + 1, //月份\n            \"d+\": d.getDate(), //日\n            \"h+\": d.getHours(), //小时\n            \"m+\": d.getMinutes(), //分\n            \"s+\": d.getSeconds(), //秒\n            \"q+\": Math.floor((d.getMonth() + 3) / 3), //季度\n            S: d.getMilliseconds(), //毫秒\n        };\n        if (/(y+)/.test(fmt)) fmt = fmt.replace(RegExp.$1, (d.getFullYear() + \"\").substr(4 - RegExp.$1.length));\n        for (let k in o) if (new RegExp(\"(\" + k + \")\").test(fmt)) fmt = fmt.replace(RegExp.$1, RegExp.$1.length == 1 ? o[k] : (\"00\" + o[k]).substr((\"\" + o[k]).length));\n        return fmt;\n    },\n    getDay: (day) => {\n        let today = new Date();\n        let targetday_milliseconds = today.getTime() + 1000 * 60 * 60 * 24 * day;\n        today.setTime(targetday_milliseconds);\n        return today;\n    }\n}\nexport const StringHelper = {\n    isEmpty: (param) => {\n        if (!param) return true\n        else {\n            if (!typeof param == \"string\") param = param.toString();\n            return param.length\n        }\n    }\n}\nexport const ArrayHelper = {\n    isEmpty: (param) => {\n        if (param == null) return true;\n        else {\n            if (!param instanceof Array) throw \"error in type！\"\n            return param.length;\n        }\n    },\n    toObject: (arr) => {\n        if (!arr.length) return;\n        let obj = {};\n        arr.forEach((item) => {\n            obj[item.key] = item.value ? item.value : \"\";\n        });\n        return obj;\n    }\n}\nexport const ObjectHelper = {\n    isEmpty: (param) => {\n        if (param == null) return true;\n        else {\n            if (!Object.prototype.toString.call(param) == '[object Object]') throw \"error in type！\"\n            return Object.keys(param).length;\n        }\n    }\n}","import script from \"./register.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./register.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["store","useStore","router","useRouter","formRef","ref","id","name","AppHelper","form","email","passwd","userType","code","rpassword","inviterId","decryptAES","rules","time","btndisabled","getVerifyCode","value","validateField","valid","loadingHelper","userApi","then","res","ElNotification","type","message","data","doRegister","validate","encryptAES","msg","doLogin","commit","userName","account","walletAddress","userId","token","push","path","required","trigger","validator","rule","callback","Error","min","max","pattern","getURLParam","key","curUrl","URL","window","location","curUrlParams","searchParams","get","DateHelper","toString","date","fmt","d","Date","o","getMonth","getDate","getHours","getMinutes","getSeconds","Math","floor","S","getMilliseconds","test","replace","RegExp","$1","getFullYear","substr","length","k","getDay","day","today","targetday_milliseconds","getTime","setTime","__exports__"],"sourceRoot":""}