{"version":3,"file":"static/js/858.undefined.1685951997342.js","mappings":"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","sources":["webpack://knowledge/./src/views/user/nfts.vue","webpack://knowledge/./src/utils/helper.js","webpack://knowledge/./src/components/dynamic-table.vue","webpack://knowledge/./src/components/dynamic-table.vue?a5fc","webpack://knowledge/./src/components/page-title.vue","webpack://knowledge/./src/components/page-title.vue?372c","webpack://knowledge/./src/views/user/nfts.vue?caf5"],"sourcesContent":["<template>\n  <div>\n    <ul class=\"nav nav-pills nav-pills-warning nav-pills-icons justify-content-center\" role=\"tablist\">\n      <li class=\"nav-item\" @click=\"handleClick(0)\">\n        <a class=\"nav-link\" :class=\"activeName==0?' active':''\" href=\"javascript:void(0);\" role=\"tablist\">\n          <i class=\"fa fa-fire\"></i> Active\n        </a>\n      </li>\n      <li class=\"nav-item\" @click=\"handleClick(1)\">\n        <a class=\"nav-link\" :class=\"activeName==1?' active':''\" href=\"javascript:void(0);\" role=\"tablist\">\n          <i class=\"fa fa-clock-o\"></i> Using\n        </a>\n      </li>\n      <li class=\"nav-item\" @click=\"handleClick(2)\">\n        <a class=\"nav-link\" :class=\"activeName==2?' active':''\" href=\"javascript:void(0);\" role=\"tablist\">\n          <i class=\"fa fa-ban\"></i> Used\n        </a>\n      </li>\n      <li class=\"nav-item\" @click=\"handleClick('buy')\">\n        <a class=\"nav-link\" :class=\"activeName=='buy'?' active':''\" href=\"javascript:void(0);\" role=\"tablist\">\n          <i class=\"fa fa-gift\"></i> Buy\n        </a>\n      </li>\n    </ul>\n    <div class=\"card\">\n      <page-title :option=\"title\" v-if=\"activeName !=='buy'\"></page-title>\n      <div class=\"card-body\" v-if=\"activeName == 0\">\n        <dynamic-table :data=\"tableData\" :header=\"tableHeader\" :preNum=\"pageNum * pageSize - pageSize\" :operations=\"operations\" @commands=\"view\"></dynamic-table>\n        <el-pagination background layout=\"prev, pager, next\" :total=\"total\" v-model:current-page=\"pageNum\" @current-change=\"handlePageChange\" :page-size=\"pageSize\" />\n\n      </div>\n      <div class=\"card-body\" v-if=\"activeName == 1\">\n        <dynamic-table :data=\"tableData\" :header=\"tableHeader\" :preNum=\"pageNum * pageSize - pageSize\" :operations=\"operations1\" @commands=\"view\"></dynamic-table>\n        <el-pagination background layout=\"prev, pager, next\" :total=\"total\" v-model:current-page=\"pageNum\" @current-change=\"handlePageChange\" :page-size=\"pageSize\" />\n      </div>\n      <div class=\"card-body\" v-if=\"activeName == 2\">\n        <dynamic-table :data=\"tableData\" :header=\"tableHeader1\" :preNum=\"pageNum * pageSize - pageSize\" :operations=\"operations1\" @commands=\"view\"></dynamic-table>\n        <el-pagination background layout=\"prev, pager, next\" :total=\"total\" v-model:current-page=\"pageNum\" @current-change=\"handlePageChange\" :page-size=\"pageSize\" />\n      </div>\n    </div>\n    <template v-if=\"activeName =='buy'\">\n      <div class=\"card card-pricing card-raised\">\n        <div class=\"card-body\">\n          <h6 class=\"card-category\">Get a NFT in the blind box</h6>\n          <div class=\"card-icon icon-rose\">\n            <i class=\"fa fa-gift\"></i>\n          </div>\n          <h3 class=\"card-title\">20 USDT</h3>\n          <span style=\"text-decoration:line-through!important;\">99 USDT</span>\n          <p class=\"card-description\">\n            Each blind box contains a NFT, which may be one of the\n            <a target=\"_blank\" href=\"https://chessofstars.io/nftlist\">NFTs here</a>.\n          </p>\n          <button class=\"btn btn-rose btn-round\" @click=\"getCard()\">Try your luck</button>\n        </div>\n      </div>\n    </template>\n    <!--View NFT on Blockchain-->\n    <el-dialog v-model=\"visible\" title=\"View NFT on Blockchain\" width=\"800px\" @close=\"handleSaveParam()\" destroy-on-close>\n      <div class=\"card \">\n        <div class=\"card-header card-header-info card-header-icon\">\n          <div class=\"card-icon\">\n            <i class=\"fa fa-ticket\"></i>\n          </div>\n          <h4 class=\"card-title\">View NFT on Blockchain</h4>\n        </div>\n        <div class=\"card-body \">\n          <div class=\"row\">\n            <div class=\"col-md-4\">\n              <el-image :src=\"rowData.src\" style=\"width:200px\"></el-image>\n            </div>\n            <div class=\"col-md-8 ml-auto mr-auto\">\n              <el-row :gutter=\"10\" v-if=\"rowData.status == 0\">\n                <el-col :span=\"16\">use it for game?</el-col>\n                <el-col :span=\"8\" style=\"text-align: right;\">\n                  <el-button type=\"primary\" @click=\"isOnlyUpdateStatus?updataStatus(rowData):handleSaveParam(1)\" round>Yes</el-button>\n                </el-col>\n              </el-row>\n              <el-row :gutter=\"10\" v-if=\"rowData.status == 1\">\n                <el-col :span=\"16\"><el-tag type=\"success\">status:&nbsp;Using</el-tag></el-col>\n              </el-row>\n              <div class=\"table-responsive table-sales\">\n                <table class=\"table\">\n                  <tbody>\n                    <template v-for=\"(item,key) in rowData\">\n                      <tr v-if=\"key !='src'&&key !='status'\" :key=\"key\">\n                        <td style=\"text-transform: capitalize;\">{{ key.replace(/\\_/g,\" \")+\":\" }}</td>\n                        <td>{{ item }}</td>\n                      </tr>\n                    </template>\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </el-dialog>\n    <!--View NFT on Blockchain-->\n    <el-dialog v-model=\"visible1\" title=\"Get a NFT in the blind box\" width=\"400px\" destroy-on-close>\n      <el-row>\n        <el-col :span=\"4\">USDT</el-col>\n        <el-col :span=\"20\">\n          <el-input-number v-model.number=\"amount\" controls-position=\"right\" :step=\"20\" :min=\"20\" :max=\"100000\" placeholder=\"`set amount\" @change=\"translate('usdt')\" style=\"width:100%\" clearable></el-input-number>\n        </el-col>\n        <el-col :span=\"4\" style=\"margin-top:10px;\">NFT</el-col>\n        <el-col :span=\"20\" style=\"margin-top:10px;\">\n          <el-input-number v-model.number=\"amount1\" controls-position=\"right\" :step=\"1\" :min=\"1\" :max=\"100000\" placeholder=\"`set amount\" @change=\"translate('nft')\" style=\"width:100%\" clearable></el-input-number>\n        </el-col>\n        <el-col :span=\"24\" style=\"margin-top:15px\">\n          <el-button type=\"primary\" @click=\"nftApprove()\" style=\"width:100%\" :disabled=\"disabled\">\n            <el-tag size=\"small\">1</el-tag>&nbsp;Approve Spending\n          </el-button>\n        </el-col>\n        <el-col :span=\"24\" style=\"margin-top:15px;\">\n          <el-button type=\"success\" @click=\"nftSwap()\" style=\"width:100%\" :disabled=\"!disabled\">\n            <el-tag size=\"small\">2</el-tag>&nbsp;Buy\n          </el-button>\n        </el-col>\n      </el-row>\n    </el-dialog>\n  </div>\n</template>\n<script setup>\nimport { ref, onMounted, reactive } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { nftApi, userApi } from \"@/api/request\";\nimport { chainApi } from \"@/api/request\";\nimport blindBox from \"@/abi/blindBox.json\";\nimport busdToken from \"@/abi/busdtoken.json\";\nimport nftToken from \"@/abi/nft.json\";\nimport PageTitle from \"@/components/page-title.vue\";\nimport DynamicTable from \"@/components/dynamic-table.vue\";\nimport { loadingHelper } from \"@/utils/loading\";\nimport { DateHelper } from \"@/utils/helper\";\nimport { CONTRACTS, MetaMask, ASSETTYPE, TXTYPE, savaAfterTranscation } from \"@/utils/meta-mask\";\nimport { ElMessage, ElNotification } from \"element-plus\";\nconst store = useStore()\nconst TYPES = reactive({ buy: 0, used: 1, expire: 2 })\nlet activeName = ref(0);\nlet title = ref({ type: \"warning\", title: \"NFTs\", desc: \"All NFTs for points competitions which come from blind boxes\" })\nlet tableData = ref([])\nlet tableHeader = ref([\"id\", \"NFT_type\", \"blockchain\", \"minted_at\", \"game_chances\"])\nlet tableHeader1 = ref([\"id\", \"NFT_type\", \"blockchain\", \"minted_at\", \"run_out_time\"])\nlet operations = ref([{ id: 1, type: 'success', icon: \"fa fa-external-link\", name: \"View NFT on Blockchain\", event: 'view' },\n{ id: 2, type: 'primary', icon: \"fa fa-gamepad\", name: \"use it for game\", event: 'updataStatus' },])\nlet operations1 = ref([{ id: 1, type: 'success', icon: \"fa fa-external-link\", name: \"View NFT on Blockchain\", event: 'view' },])\nlet visible = ref(false);\nlet visible1 = ref(false);\nlet rowData = ref({});\nlet pageNum = ref(1); let total = ref(1);\nlet pageSize = ref(10);\nlet blockChain = ref('Binance Smart Chain')\nconst isOnlyUpdateStatus = ref(true);\nconst hasUpdated = ref(true);\nconst address = ref({\n  channelAddress: \"\",\n  clubAddress: \"\",\n  userAddress: \"\"\n})\nconst amount = ref(20);\nconst amount1 = ref(1);\nconst metaMask = new MetaMask();\nconst disabled = ref(false)\nconst nftParam = ref({})\nfunction view(data) {\n  if (data.command == \"view\") {\n    isOnlyUpdateStatus.value = true;\n    visible.value = true;\n    queryRow(data.data);\n  }\n  if(data.command == \"updataStatus\"){\n    updataStatus(data.data)\n  }\n}\nfunction query() {\n  let data = {\n    pageSize: pageSize.value,\n    pageNo: pageNum.value,\n    status: activeName.value,\n    userId: store.state.user.id\n  }\n  nftApi.list(data).then((res) => {\n    if (res.data.list) {\n      tableData.value = res.data.list.map(i => {\n        let item = {\n          id: i.id,\n          Token_ID: i.tokenId,\n          tx_id: i.txId,\n          NFT_type: i.nftType,\n          blockchain: i.blockChain,\n          minted_at: DateHelper.toString(i.mintedAt*1000),\n          run_out_time: DateHelper.toString(i.runOutTime*1000),\n          game_chances: i.gameChances,\n          src: `https://cosd1.s3.amazonaws.com/${i.nftType}.png`\n        }\n        return item\n      });\n      total.value = res.data.total;\n    }\n  })\n}\nfunction queryRow(data) {\n  let res = [data].map(i => {\n    return {\n      NFT_type: i.NFT_type,\n      game_chances: i.game_chances,\n      blockchain: i.blockchain,\n      Token_ID: i.Token_ID,\n      contract_address: CONTRACTS['blindbox'].address,\n      minted_at: i.minted_at,\n      src: i.src,\n      status: activeName.value\n    }\n  });\n  rowData.value = res[0];\n}\nfunction handleClick(tab) {\n  activeName.value = tab;\n  if (tab == 'buy') return\n  pageNum.value = 1;\n  query();\n}\nfunction handlePageChange(val) {\n  pageNum.value = val;\n  query();\n}\nfunction translate(type) {\n  let rate = 20;\n  if (type == 'usdt') {\n    amount1.value = parseInt(amount.value / rate);\n  } else if (type == 'nft') {\n    amount.value = amount1.value * rate;\n  }\n}\nfunction isEmpty() {\n  if (!amount.value) {\n    ElMessage.error(\"amount is required!\")\n  }\n  return amount.value ? false : true;\n}\n//随机获取\nfunction getCard() {\n  if (!metaMask.isAvailable()) return;\n  userApi.wallet(store.state.user.id).then(res => {\n    if (res.code == 0) {\n      address.value = res.data;\n      disabled.value = false;\n      visible1.value = true;\n    }\n  });\n}\nfunction nftApprove() {\n  if (!metaMask.isAvailable()) return;\n  if (isEmpty()) return;\n  let data = { from: store.state.metaMask.account, address: CONTRACTS['blindbox'].address, money: amount.value, abi: blindBox, club: address.value.clubAddress, channel: address.value.channelAddress }\n  loadingHelper.show()\n  metaMask.approveByContract({ ...data, abiApprove: busdToken, approveAddress: CONTRACTS[\"busd\"].address }).then(() => {\n    disabled.value = true;\n    loadingHelper.hide();\n  }).catch(err => {\n    loadingHelper.hide();\n  })\n}\nfunction nftSwap() {\n  if (!metaMask.isAvailable()) return;\n  if (isEmpty()) return;\n  let data = { from: store.state.metaMask.account, address: CONTRACTS['blindbox'].address, money: amount.value, abi: blindBox, club: address.value.clubAddress, channel: address.value.channelAddress }\n  loadingHelper.show()\n  metaMask.nftBlindBoxByContract(data).then((res) => {\n    visible1.value = false;\n    nftParam.value = {\n      \"txId\": res.transactionHash,\n      \"transType\": TXTYPE.blindbox,\n      \"fromUserId\": store.state.user.id,\n      \"fromAssetType\": ASSETTYPE.usdt,\n      \"fromAmount\": amount.value,\n      \"toUserId\": store.state.user.id,\n      \"toAssetType\": ASSETTYPE.nft,\n      \"toAmount\": amount1.value,\n      \"nftVo\": {\n        \"tokenId\": res.events.DrawCardEvent.returnValues.cardId,\n        \"attr1\": \"\",\n        \"attr2\": \"\"\n      },\n      \"blockNumber\": res.blockNumber\n    }\n    let tokenid = res.events.DrawCardEvent.returnValues.cardId;\n    nftInfo(tokenid)\n    loadingHelper.hide()\n  }).catch(err => {\n    console.log(err)\n    loadingHelper.hide();\n  })\n}\nfunction nftInfo(id) {\n  if (!metaMask.isAvailable()) return;\n  let param = {\n    abi: nftToken,\n    from: store.state.metaMask.account,\n    address: CONTRACTS['nft'].address,\n    tokenId: id\n  }\n  metaMask.getNFTInfoByContract(param).then(res => {\n    visible.value = true;\n    rowData.value.src = res.uri;\n    rowData.value.NFT_type = res.number;\n    rowData.value.game_chances = res.chances;\n    rowData.value.status = 0;\n    rowData.value.blockchain = blockChain.value;\n    rowData.value.Token_ID = nftParam.value.nftVo.tokenId;\n    rowData.value.contract_address = CONTRACTS['blindbox'].address;\n    nftParam.value.nftVo.attr1 = res.number\n    nftParam.value.nftVo.attr2 = res.chances\n    isOnlyUpdateStatus.value = false;\n    hasUpdated.value = false;\n  })\n}\nfunction handleSaveParam(value) {\n  if (!hasUpdated.value && !isOnlyUpdateStatus.value) {\n    if (value) nftParam.value.nftVo.status = value;\n    savaAfterTranscation(nftParam.value)\n    hasUpdated.value = true;\n    isOnlyUpdateStatus.value = true;\n    if (value) rowData.value.status = value;\n  }\n}\nfunction updataStatus(row) {\n  let data = {\n    \"tokenId\": row.Token_ID,\n    \"status\": 1\n  }\n  loadingHelper.show()\n  nftApi.status(data).then(res => {\n    if (res.code == 0) {\n      ElNotification({\n        type: \"success\",\n        message: \"use it successfully\"\n      })\n      rowData.value.status = 1\n      loadingHelper.hide()\n      query();\n    }\n  })\n}\nonMounted(() => {\n  query();\n})\n</script>","export const AppHelper = {\n    getURLParam:(key)=>{\n        let curUrl = new URL(window.location)\n\t\tlet curUrlParams = curUrl.searchParams;\n\t\tlet value = curUrlParams.get(key);\n        return value;\n    }\n}\nexport const DateHelper = {\n    toString: (date, fmt) => {\n        if (!date) return \"\";\n        if (!fmt) fmt = \"yyyy-MM-dd hh:mm:ss\";\n        let d = new Date(date);\n        let o = {\n            \"M+\": d.getMonth() + 1, //月份\n            \"d+\": d.getDate(), //日\n            \"h+\": d.getHours(), //小时\n            \"m+\": d.getMinutes(), //分\n            \"s+\": d.getSeconds(), //秒\n            \"q+\": Math.floor((d.getMonth() + 3) / 3), //季度\n            S: d.getMilliseconds(), //毫秒\n        };\n        if (/(y+)/.test(fmt)) fmt = fmt.replace(RegExp.$1, (d.getFullYear() + \"\").substr(4 - RegExp.$1.length));\n        for (let k in o) if (new RegExp(\"(\" + k + \")\").test(fmt)) fmt = fmt.replace(RegExp.$1, RegExp.$1.length == 1 ? o[k] : (\"00\" + o[k]).substr((\"\" + o[k]).length));\n        return fmt;\n    },\n    getDay: (day) => {\n        let today = new Date();\n        let targetday_milliseconds = today.getTime() + 1000 * 60 * 60 * 24 * day;\n        today.setTime(targetday_milliseconds);\n        return today;\n    }\n}\nexport const StringHelper = {\n    isEmpty: (param) => {\n        if (!param) return true\n        else {\n            if (!typeof param == \"string\") param = param.toString();\n            return param.length\n        }\n    }\n}\nexport const ArrayHelper = {\n    isEmpty: (param) => {\n        if (param == null) return true;\n        else {\n            if (!param instanceof Array) throw \"error in type！\"\n            return param.length;\n        }\n    },\n    toObject: (arr) => {\n        if (!arr.length) return;\n        let obj = {};\n        arr.forEach((item) => {\n            obj[item.key] = item.value ? item.value : \"\";\n        });\n        return obj;\n    }\n}\nexport const ObjectHelper = {\n    isEmpty: (param) => {\n        if (param == null) return true;\n        else {\n            if (!Object.prototype.toString.call(param) == '[object Object]') throw \"error in type！\"\n            return Object.keys(param).length;\n        }\n    }\n}","<template>\n  <el-table :data=\"tableData\" fit>\n    <el-table-column label=\"No.\" :width=\"50\">\n      <template #default=\"scope\">\n        {{ scope.$index + preNum+1 }}\n      </template>\n    </el-table-column>\n    <el-table-column v-for=\"(item, index) in tableHeader\" :key=\"index\" :label=\"item.value\" :prop=\"item.key\">\n    </el-table-column>\n    <el-table-column label=\"Operations\" width=\"120\" v-if=\"operationsData\">\n      <template #default=\"scope\">\n        <span v-for=\"item in operationsData\" :key=\"item.id\" style=\"padding-left:5px;padding-right:5px;\">\n          <el-tooltip :content=\"item.name\" placement=\"top\">\n            <el-button :type=\"item.type\" size=\"small\" @click=\"handleClick(item.event,scope.row,scope.$index)\" circle><i :class=\"item.icon\"></i></el-button>\n          </el-tooltip>\n        </span>\n      </template>\n    </el-table-column>\n    <template #empty>\n      <el-empty style=\"margin:0 auto\"></el-empty>\n    </template>\n  </el-table>\n</template>\n  \n<script setup>\nimport { ref, defineProps, defineEmits, watch } from \"vue\";\nlet tableHeader = ref([]);\nlet tableData = ref([]);\nlet operationsData = ref(null);\nlet emits = defineEmits(['commands']);\n// 表格展示数据\nconst props = defineProps({\n  data: {\n    type: Array,\n    default: () => []\n  },\n  header: {\n    type: Array,\n    default: () => []\n  },\n  operations: {\n    type: Array,\n    default: () => null\n  },\n  preNum: {\n    type: Number,\n    default: 0\n  }\n})\nwatch(() => props.data, (val) => {\n  tableData.value = val;\n}, { immediate: true })\nwatch(() => props.header, (val) => {\n  tableHeader.value = generateHeader(val);\n}, { immediate: true })\nwatch(() => props.operations, (val) => {\n  if(val) operationsData.value = val;\n  else operationsData.value = null\n}, { immediate: true })\nfunction generateHeader(data) {\n  const ret = [];\n  for (let key of data) {\n    if (key !== \"id\") {\n      const obj = {\n        key: key,\n        value: key.replace(/\\_/g, \" \"),\n      };\n      ret.push(obj);\n    }\n  }\n  return ret;\n}\nfunction handleClick(event, item) {\n  emits('commands', { command: event, data: item })\n}\n  </script>\n<style scoped>\n/deep/ .el-table {\n  min-height: 400px;\n}\n/deep/ .el-table__header {\n  text-transform: capitalize;\n}\n</style>\n  \n  ","import script from \"./dynamic-table.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./dynamic-table.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./dynamic-table.vue?vue&type=style&index=0&id=07c19c6d&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/liudongxue/Documents/brilliance/game/backend_game/backend_game/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-07c19c6d\"]])\n\nexport default __exports__","<template>\n  <!--Page Title-->\n  <div :class=\"`card-header card-header-text card-header-${title.type}`\">\n    <div class=\"card-text\" style=\"display:block\">\n      <h4 class=\"card-title\">{{ title.title }}</h4>\n      <p class=\"card-category\" v-if=\"title.desc\">{{ title.desc }}</p>\n    </div>\n  </div>\n  <!--Page Title-->\n</template>\n\n<script setup>\nimport { ref, defineProps, watch } from \"vue\"\nconst title = ref({})\nconst props = defineProps({ option: Object, default: () => { } })\nwatch(() => props.option, (val) => {\n  title.value = val\n}, { immediate: true })\n</script>","import script from \"./page-title.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./page-title.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./nfts.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./nfts.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["store","useStore","reactive","buy","used","expire","activeName","ref","title","type","desc","tableData","tableHeader","tableHeader1","operations","id","icon","name","event","operations1","visible","visible1","rowData","pageNum","total","pageSize","blockChain","isOnlyUpdateStatus","hasUpdated","address","channelAddress","clubAddress","userAddress","amount","amount1","metaMask","MetaMask","disabled","nftParam","view","data","command","value","queryRow","updataStatus","query","pageNo","status","userId","state","user","nftApi","then","res","list","map","i","item","Token_ID","tokenId","tx_id","txId","NFT_type","nftType","blockchain","minted_at","DateHelper","mintedAt","run_out_time","runOutTime","game_chances","gameChances","src","contract_address","CONTRACTS","handleClick","tab","handlePageChange","val","translate","rate","parseInt","isEmpty","ElMessage","getCard","isAvailable","userApi","code","nftApprove","from","account","money","abi","blindBox","club","channel","loadingHelper","approveByContract","abiApprove","busdToken","approveAddress","catch","err","nftSwap","nftBlindBoxByContract","transactionHash","TXTYPE","ASSETTYPE","events","DrawCardEvent","returnValues","cardId","blockNumber","tokenid","nftInfo","console","log","param","nftToken","getNFTInfoByContract","uri","number","chances","nftVo","attr1","attr2","handleSaveParam","savaAfterTranscation","row","ElNotification","message","onMounted","AppHelper","getURLParam","key","curUrl","URL","window","location","curUrlParams","searchParams","get","toString","date","fmt","d","Date","o","getMonth","getDate","getHours","getMinutes","getSeconds","Math","floor","S","getMilliseconds","test","replace","RegExp","$1","getFullYear","substr","length","k","getDay","day","today","targetday_milliseconds","getTime","setTime","operationsData","generateHeader","ret","obj","push","emits","watch","props","immediate","header","__exports__","option"],"sourceRoot":""}